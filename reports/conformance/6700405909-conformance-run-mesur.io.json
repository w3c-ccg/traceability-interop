{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "048fbf66-1948-491e-9ff4-83a3abf942fe",
        "name": "Clear Cache",
        "item": [
          {
            "id": "de92a950-680c-45c6-af69-10766aa613f1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a2cc9e7a-7389-44fd-87d6-3c1106acc0c9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e6c7e96c-6fd1-4743-8a96-5d7deecf5eed"
                }
              }
            ]
          },
          {
            "id": "5a447403-0a7d-46e6-ba7b-05e4dd843288",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d48dbfab-0f9b-4587-b41f-0c907b79384b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4f19443a-bd16-426b-92e2-ede3a6c91f0c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "08e52612-2c62-4303-a4d5-246bceb3ccf9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e7969487-36d3-4c26-94d0-e18221a1073a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b3a50f72-4910-4b7f-afa5-dd4a4cd50cce",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c610b1d5-b477-41bb-8ec8-a1fa5529902e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9182a6c8-81c2-41bf-ba72-620af4114565"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f74cca83-f5be-4e37-9b52-1a6ad88d67b3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0620ccc2-28e6-40b5-95bd-d39b427ee35a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8235627b-aeab-411b-835d-161482450d07",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c38a22eb-c1de-4fbb-be6f-406c4d00a0ba"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "829a14fe-5545-4a54-9143-f960761375f1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a8aad664-160e-420f-a361-c64791f4b057"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da2ac335-8804-4b36-b6f5-fd5e92eccf36",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4e273af-89bf-4329-b7a0-f60792a74a3f"
            }
          }
        ]
      },
      {
        "id": "fb401e19-ed64-411f-ad22-70d3cbf53589",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8f3b1257-ff07-490e-b6d0-43d809654b61",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b22eaf50-b75d-4b28-8774-03dd6bf9d8dc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2257bc32-246e-4a23-bb8d-78deecc90b6a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b6166b-542b-4d9d-8ce1-14774f46b56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28da5b44-7808-40ab-8d21-ed33157fb27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723e5ea8-615f-414b-bd9e-88b9c5b498b9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cf90b7-e175-4a71-ba35-fe4a7d51bd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29cfcd7d-50de-4cb3-8c88-a7740e07f18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd11f5e0-7847-4644-bb02-027bf1ecc0d3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0b1111-aafa-4453-a7b0-0b43b34ad3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "909ab217-0215-4879-91f8-394865812f04"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "020679dc-3a32-4cba-aa5e-7c918d186d58",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3bceb464-6a15-4b11-af65-1dd166fa1b11",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a57cc2-e7cc-4b92-9210-e0126e11f083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63ecc303-bbf4-4494-af06-de0a1db684df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b3da78-fdc4-42f4-8277-60b2c4237843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecbdbc2b-0b12-4699-b335-96ed2cf1b8fb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fc293a71-3e5b-442b-89cf-5a71745f1ba2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fcb842cf-1f10-4083-b24a-287af195d47d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8079a5f8-0e6d-4bb2-be32-49fecc1cce1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "096c6d9d-2b58-4d9e-a06c-a8f5225c91ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "377f6d71-61cf-48be-89a3-60244337d270",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "64ef42c1-0586-45c0-8119-bfe83ae9d983"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f3ac1013-def8-4859-95d9-39a94c05b5cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30e5be96-0b74-4aa8-be32-e624cfea13f6"
            }
          }
        ]
      },
      {
        "id": "9baf7523-f05c-46ba-ace4-bdf72dc32183",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4f319f93-b32e-4c0e-b9c4-c6931fe33ea4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d36bb22a-d030-477c-84b4-c75a724b3ecf",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e59b2241-e7e8-4163-a27a-36e4d80b91ac",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f987cc1-e56f-418f-8808-e948680dcca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df70928-5151-4076-9f81-6e433afb202e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fb42c3-5316-4003-b23d-db91fbc1248b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43b279c2-9163-4467-8422-e6f26500bd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f465f1-7f52-4c86-bb5b-4410be3c1d0e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e23b51-0adf-4e8e-85b1-9cdbc49d6fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a9cac5-1cc9-4c96-8264-5f8e743c8fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b402f3-1333-4ce9-9fbf-4b9049d261b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d731e834-8311-4c43-8871-073586a32cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e3e929-a44c-465f-9b8a-c881a4f4252a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc73895f-0d4e-44be-911f-6e083e21c404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c185e67f-2a46-4495-867d-cc8e5aa65245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7016e7c8-ba6d-4c50-954a-becc51823fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a159b64a-2285-4be5-8eba-e7ed2344dc01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1007a3-472f-4072-a6a2-10697d7db294",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eee705a-7de5-41c6-84cc-965f8360366c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24cf850a-9260-46fa-99ab-6d7ffd6e5b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7262fb5-5b67-4b54-8a5c-6d2f09ca56f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57d80f90-f08e-478c-952b-0ae8471b24e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd624df-a94f-4a58-a0ef-1c97d8d82c1d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5dcd5f2-2a83-4898-a140-57de0bfa6c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "100e55f8-bc66-46af-ab89-707b3586aee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9956d109-0767-4a05-81e1-622680bc4325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31b9822c-f879-4cc3-bb3c-cf1e64ed5eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8654cbc-53d3-4171-91de-29b1e5bf4419",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3179da23-fb58-41a8-b148-3b5b0432f0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f303fe-ddb9-44fd-8127-1e1833f8b3c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf6f014-b200-4796-9b2f-c35beab0450b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ddeb061-a5c0-47bb-914f-e6586394e659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdcbb90-0bf8-4577-9040-d23f6bb2e43b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded35743-69c2-4307-9378-b14aa0a390a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ffe8bb-e8c1-4060-a3f9-0607c23568f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c59b2b6-1115-49d1-9c56-bb3ac6868f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6393b211-7a7e-485e-b163-9169fe574519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccef44af-1874-45c8-8364-e14679eb5c26",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1c48c1-166f-428f-a50f-57a5337fcd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6797851-37b4-4565-8338-812ad944d924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a82b721-0689-46d7-89d8-450163196b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c53bfd30-d875-4e68-9a22-e33537a21493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d39c0ab-f84b-475a-9aac-0b765b458a5c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d06271-0af2-45b2-b1f9-f581340b96a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "968d49d6-0e65-4789-8cac-39a46b8ac2dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f840bdc-0fb5-44b9-beca-2e0c24859860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97ac98bd-aa1a-4500-9b14-976db8738eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5095f75-46d6-4a4a-8793-15d9c4347522",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3272f9e4-e883-4d05-8b20-02f1a02b5e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb5617b-cde7-4bbb-8c2c-99e2f25eb404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8370a5-8f9a-4c12-9971-3ce7a6adae49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0505fa5f-b788-4994-8de4-0ad544c8898d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb02d53-93c2-4f7d-bcb9-ba861485a34e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6fab3aa-bbe8-455d-99ba-919258033019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56ff4a4-2ae2-448b-b8d4-95e169df4583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37facd8-682f-44f4-8c1e-659252c06f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19245b02-0252-4be3-a0ce-89e980fa26ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f4a73a-c054-47b2-9ab9-b191543302fd",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ab5137-d8f4-4003-a29c-a894101ae5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f23c4384-e158-4eb9-bc99-51ad136f9944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e68d334-07cf-4004-9868-ba89a9a976f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d34705e-f2be-4d98-88c0-d5f52b5b9f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967cf8c0-5bc9-44f4-8c0d-7a54afd363d9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead6460f-0c80-41b7-b686-789651333acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc37fe4-8c66-4a9d-b479-49a2c7ba1b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6e6387-836a-4279-bcff-1e4d777bf576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f072d314-0eaa-4809-8a5a-72f2ff54f3e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccddd6ad-b22b-4167-8f54-0aae8c6109d6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749bd302-5fe0-497a-a638-eca8a08e5a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1401819a-b607-455b-a8ed-3b02959ca00b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405ad728-d8ff-4479-8dd6-60b58ca971f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "355827d8-d065-470e-8cb6-8e8679c8da21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb967436-3be8-4519-bf07-be90d3e3f4cb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c684cbd-bd51-4a8d-83cb-592d69efbbf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ece183-bdbb-437f-b03f-337e5d754561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffabba26-5c6b-4c46-b672-d1c16119ac3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae7edc69-8e0b-45c3-8749-e7b32d2b3313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acca75d8-21e2-4e36-9a13-495fac6cab5d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9513baa0-b1b3-49b9-af8a-518bbbddec30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d802d954-154b-4e95-ae82-ae001a68fec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cbcea3-a9a8-4bd0-85b5-179140af1f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98baa071-660b-4faf-b950-e5a47aae66a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc26909b-9e36-4897-87c4-de20238cdcfa",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2ba9cb-312c-4e30-8f08-da652af844f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c98259-71ee-4fa1-bc43-1dcd17e52c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda267e6-315c-4768-8505-30ea9be7cd79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d81410ad-55a8-46db-8f4e-3fc6a4625575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e64872-9af3-4cd5-a32b-757a22e76709",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78b46db-2f75-4b53-b89a-fe9a07909fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cec6cd8-0fb5-4817-bcd9-c92f1bbc314a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43764a7-89da-4f55-b894-0c8e4544a9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6285d475-e9f7-4d4f-9a07-ca5eb54a4a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b66e66-347e-4d92-847b-ba6f4c71372d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7387cc5a-5766-403a-a529-8b4e63d22a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ee9e12-c5c0-433b-980d-1eaf1bd6bc42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19b0b46-67f3-474d-bb72-e29ee42a54c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd6a0d64-c74d-40b8-9631-345b6cdbba23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afaf588-9145-4af0-83e0-3fa6a358a4ba",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c3e218-4939-455c-b865-574a655ead0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a1cf94-bef1-4734-9494-5379b643eb96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a8a9c9-6c06-49fc-9e96-d0eccae442a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed9b0ff-3378-4d85-95f1-14430da8987d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbaec9ff-3e1b-456c-8867-38e6f6864f4e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d095673-b9fb-427b-9570-a1cfd57f314f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab9926e-d9ef-42f1-b732-2a912bf514d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96dced63-3bac-432c-8dfc-1633638a0ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2ece17-e95c-4daa-bf5f-8c845fb1af81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ddb7ce1-6483-4024-972d-c6be551222cb",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98d158c-f37f-4504-b962-385907d118c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c71d94a-6f79-4033-a07b-a965b7caaed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da0de20-f5e0-4cac-9375-a0fa179548dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52c903d7-d98d-40a5-8e35-1464a9aad1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2115baad-c4f5-4085-8d33-fcdd7ced5ebd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03051e1b-68d5-488b-9ac4-33b583bfcf09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a96888-8bda-4796-89f2-6c2d4f35a0fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ec1517-d403-4d53-8699-93dbb3b1839d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3663d1e8-de04-433e-a893-8e58a244635a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84a115e-8c41-4012-b55f-3f70c2b73b7f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152bc865-106c-45fe-be7e-068a549a3425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11452f4-c0d7-4be0-bec0-5a1d05ea5a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e55dea1-2a86-4d92-8f04-0436a7234fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a68bda87-9f50-4607-a93f-9005fa35697c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9685137-a02d-46ea-9fa0-a74dd29465bb",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2dddf30-c872-45d7-90c1-87689b4ec5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d5f6cd-d7b6-41d2-8ee7-8b550b35d148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373181ff-0fcb-4c37-903c-46366dfa55a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3b61056-5bb2-4ff3-a132-6b1c4e6f03d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c842cf-10e5-48b8-b18d-d0bc58506bd1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8689ebb7-e639-44c9-aed6-98a822a6564c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc104dd-a088-484b-9121-4a7d8601a50b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e3129e-aed0-4376-a57d-95d3b9593f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6d6772-a88a-4979-840d-a557a89add34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66859de9-8051-4c0b-a755-ca8163f5866f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062b47d0-e4ea-4a9e-a23d-fc37823031c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461e38c7-f7d7-422f-b244-d3d2ffaade2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692e3414-6107-45d4-a0c1-6e049136e5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "14198fae-3926-41c7-a580-2e46b9dc385b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db645e48-2cce-46b8-8227-7321b7efd3f8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44eddee0-d996-4cbb-b172-9e5841d94d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a61e68-dd93-42e0-97ef-a111d09a7a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa791b87-29f1-4093-8eb7-c2640f230d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "047e32a8-ce9d-41b8-90b3-641696cae049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e7f684-7d1b-4ff3-b6c2-6ccf10c23a5a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff211c3-fac2-4e97-b71f-bff41f5884b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df968201-a488-44fd-84a0-3fedacd2899f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6083718f-337a-4883-bd78-ab005cddfa50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5ae1a1-d6cb-4adc-93bd-7233cae04095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d16487a-6f69-4ea8-b4e1-4d0a5e74543b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "245efa23-f6f3-4f8f-97ec-689ddf2dbd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f4628e-c45d-426a-8ca4-7b7e2e97f020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b658ae15-41fd-40e7-b20c-a26c97a4ecb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c4b2d4-8beb-4b27-ac35-b00d4c2dda1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46c55be-346d-477d-a9fa-d4bbc0c56af0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8f478c-a24b-49f0-989a-4cb038c6047f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "007daa23-9835-4788-9375-22dfb8f195e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3410f262-224c-467f-9aaa-484a5dfc6396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "21165015-d3aa-4f43-8e9e-6eba4ee76005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914b35f6-8cd4-41f4-aa5e-49257d5a48b3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7601dc-35c3-426a-83fc-aa8da9a071db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e50f9f9e-b038-4502-aad2-bc314423d544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6dffb0b-c438-4916-aede-f08662656d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cea19b76-eb39-4ff0-ba56-88963f401368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f032479c-6326-4b9f-8bf4-a3c66f5c7669",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20e2b96-0038-4250-ac09-70b72196e412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a5e65a-51e0-436c-bbd0-602765c1a884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75a7a8b-918c-464a-aa93-8d5b23823b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1032cbe5-b170-44c9-9163-ac90f7a63cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5d249c-689e-404f-a694-3cebb0293697",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c672f360-d861-4859-9102-5ba2f565e52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc82016-33bf-48c0-8bd7-438037c1ed9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615e016e-9557-4ac0-9c6e-b75c20200f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21aded13-d54b-47d8-8e2a-8a81aa9ebcb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789d112f-c5f1-4bd8-9389-1e98c233e1b2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7272cce5-6924-4f1e-9462-daff40fc938f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06462944-6a2d-4dab-a49c-b30befe429d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a823bf03-1821-4b91-8245-2b1f902f9980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "726d2c98-dd30-4d69-a145-feeaf4d0a2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a42a92b-7247-4daa-89d2-7ddf368b4054",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee59a57c-7fa6-425b-a83b-c6ff9f9e35b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0b9d8e9-f5fd-4ab6-9a41-27810d077461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e624922-1dc3-435d-90d6-5ec0bfb31c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "516fe967-d35e-4806-9f66-bd70b3da7faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2402a82-e678-4bf4-9075-e5fa62a76f9f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7ba91a-3284-465f-a9ce-0ff179fc9774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9cba2ad-08c3-42cd-8666-0649ba56932b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00787be-7cd5-4167-ab3e-6245b03bf009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5200023c-a369-4073-8e8c-0dbadaa37728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26933f7c-1611-4600-9fe1-eb01b4dac190",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2947e32-3263-4013-a8f3-90c28117887e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eef1f06-883b-4b48-b836-5c7cce1a3f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924df8aa-2eea-465e-8a3e-223e24389c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4b3e765-7bba-4cee-99e5-9fdf6b524b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4084315-e250-459e-bf51-7549f32393fe",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9570cc-0569-4647-9cda-7b80530e8760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e87b9d3-060d-4f35-b344-dea5943628c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d76f08-42fb-4847-a5a6-afe7134efe0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7bf59dc-6b7c-4a76-bbac-1b6a14b67230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54368358-edfb-43f6-a070-3dadaae6413a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2235e98e-75e2-46f1-a82a-7e11c5742079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8162a80a-87f8-40ed-adad-45284d341083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a027b1-b346-4650-8a86-57b6e1010e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc436751-bc88-4b6d-9252-9a761fba4b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5518947-adea-433e-884d-d11df02d6b83",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8463c5fe-fd85-486d-a3e1-a789da40da03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee38485-10a3-484b-97bc-d54d5e4fbd28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1901b037-7abd-4c0f-8581-929f0b22937d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "85467b6f-a384-47e0-bda2-429829c6b451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0687c4d6-b2a2-4d74-914e-ba4ca8a223c4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfe92ce-9e3d-4e3d-9fdb-44a24f6074f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd5e24f9-332b-444c-a145-081122516a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4010416-c61d-4cf6-ac1f-ebc0e2beca9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d8332270-6f42-430b-aca0-ec68c7c51171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5be936-0f5c-4abb-bb5e-ecd83a0b96e4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c840aea4-66f6-4944-88e7-fa74c9ee7b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f4e7ee-e9e7-44c7-a4c2-b34effb726b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bb6c4c-456a-4b46-a9b9-f57843376e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b19d080-cfb4-4217-bcf1-2b13297d53d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862e8fde-347a-454c-95a4-9bd09338ca4b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3cc139-b20b-4e8c-8e07-55e4305bfe00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8260f649-977f-47c7-adc4-83e8af46d287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4bebe0-ae2e-461d-9559-49931e378671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "77f24167-3350-4724-986c-9a5432078795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9e330b-24fb-4598-a7ce-d6ea77440e0c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c26bebe-9a9b-477c-b58b-b59accc8c974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b919a238-1d6f-4b0b-87af-9e01095b65e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8dc6198-0d0e-47bc-afe9-0c93a5bffb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "28562aa8-3529-48f1-ba8c-2bfffb496ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e331c7-725a-480b-9169-6e7f46323dd2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a7aa3c-a3b1-4e86-a052-e35b6f298fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e729fba-19d0-4b55-9148-053e514ac050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a3b61c-7fa5-4145-a858-d7eb995823ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee206ad7-1d1b-44ab-baaf-affde0669f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2a0217-4670-48fd-bd04-5e0688965c5a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04c3ecf-e7fa-4f47-ba8c-053a57843d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a8692c-4d80-47e9-bd2b-74f93d7a2023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cecee02-ff88-44a4-b6d5-ad7320330034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43255e4d-5406-4715-aa58-566d2751374a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ec6bb6-9e2a-4253-8569-99f553260f01",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e862c69f-6384-4e9a-bb07-ccfb7c6dc673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ede51bf-1637-4a18-ac8d-8689a7153db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d388944-45bd-48fb-b38c-fbadaf4f3389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a290362c-04b6-4308-9bc7-a22c652c7192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a16ba2f-6cad-4203-a195-4686c3c7527d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0ba722-6e29-4e79-9422-ae5a156f50fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "129721d0-0974-41f9-9741-de97930c65d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea37016b-bff7-4111-b818-9359086f58ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc981db-da02-44e5-b66a-46df3d2c2700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9938df3d-7a13-47d4-b6de-211d0b026936",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b55b579-dbf6-453d-a252-83fd8da95ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d4e42d-2719-4db9-ae0b-dbc076638c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf681b8-63e2-42e9-8257-e429e55bbef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6282171-0da2-4edc-8cf3-ecc1fa806278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb105844-c1c6-4b2e-a204-1b85f997dd5f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9966cb-399a-4753-b457-cd6b611d482c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b9df84-d6a5-4914-898a-ce41bd05e8e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2607f7-8877-4996-8ead-d1d16527a8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "26a65484-67b3-492c-9589-7dd2d5be4c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230f22aa-9ebb-4cbc-8559-f47029d08f45",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678e2375-47dd-448d-a75d-84741b0513a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e19e43-1ecd-46a5-b0e8-b74ce700edfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2edfab2-fc09-45f0-adfe-cca734a5bc8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "37d2e6c5-7320-4ee2-ae3f-1ca019ef2c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4bd99f-b1dc-4c35-a0fb-2811cd240d7f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d667cf9-d789-40d2-9f8b-43a2918ed51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4c4d6c-26a4-45f8-a0b3-fbf12f3b84d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21fcf19-295b-4b94-a4d4-b80d551f10b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "094a8990-cfa0-4c82-a85c-190149bebb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582b992a-94bf-462c-bb1c-f293846e2264",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362b5523-38df-48f9-a37c-53586e982ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102a163a-2da4-4ec0-b943-32be5a9ce882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70ebb0c-d25d-49ef-9708-7c7c3f9e569f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb93a82-7b77-4909-8887-19211671b831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33207a2-5e41-4512-a596-60785da9a084",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7de124e-d25d-4e5e-93a1-8ac10232b756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59521d6d-1756-4a74-bcfb-a8ea203080ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95188a1e-7f3c-42af-86c6-1c82b4014a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25fb4689-604b-4e71-9e8f-882b6aeaddbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f85a58e-d184-48b1-a6e3-811cbf323f8a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab7ac92-06f6-488d-891b-e18e11934dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd7f099-d73d-4692-b9f7-cf4dea716b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fc05d4-d642-4a8e-9c4e-3449d9715484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "37609529-93ff-4fe3-8593-ceaf6c54c64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33fb26b-2c5d-475c-b6bf-e472c73b4198",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb75abba-1408-4e2a-95c7-360f62b180c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b855199-3198-4639-ac9a-00901c15e6de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c08c2a0-fdf3-4afc-bf59-c450080c5fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "58ebc16b-ad56-4b54-9533-36b32fb2c1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93a3ef1-5968-4ce7-a0cb-a7a2fb4d1eef",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4873bf-b8af-44f5-979a-834a8f21c03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce2b0be-6466-40c5-a0b2-b6362f6ed909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbcc9e2-7d9a-428a-8218-1b0f5f44510d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c10333af-0ebe-4ccd-86e4-bb823143b6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8dc7bae-9714-4220-8f60-725ce1f04c22",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9174c7-6534-48c3-a904-f46475c0fb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded45b1f-f8c2-490a-9445-05e6b9d20cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8870b02-7f31-40cc-96d6-3d7ca49c2e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe09e1d-d4f3-4af5-9a24-ec747e35ee7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae1828e-9163-4d75-8bc7-d57f51b373cf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfca0832-d197-4a1f-9a76-20fa80d6e348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e349f7d-6996-44a4-81f8-80cb604a1c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fdde9bb-2b3f-4932-93c6-a4bf7a845659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ceccc8-5682-4c39-8b3c-deb798fbbf3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b4235c-d8bf-401d-8db2-db7b20bce785",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37473d5f-b88f-44c4-bc0d-156456b21da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881fa41b-db35-49f4-a90b-35a46f4927ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1500fc3e-2fd1-4e5a-9974-85a88ef13139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ceef470-496a-42b7-ace5-62c665587813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df966c08-7772-4190-9201-d5b489aaf8e4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee8ea2c-bfeb-49ea-8764-fa1022edbc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5876b0-f110-478c-a4bb-19a5e923800c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7fcc16-ca0e-45e6-9ee6-a16bf804a726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc896dce-37f0-434b-ab45-58bfed74ba50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6054f986-70f0-4c66-b9cd-f9dfbd4be80b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2226fc9-42da-4b41-b7f5-2ab2b4e90082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14090c7-0ef0-478b-bdc7-f682adc81056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c0f29e-b08f-46c9-b1f2-832300ad90ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1db0cfac-f70d-40e0-b130-68b91d8d91a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca56587-f150-4b43-97b6-106feebe27f0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f76181-0fd2-4881-b769-5ba8d1251b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86403e7c-c4e1-4c93-af8c-f22b623babb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3999789-33e2-4045-b1e4-dd1292d69d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78eb149f-75bc-4c6e-8874-10f893c0f226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028be640-78e5-45c7-a8da-8db7198090e9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdc97a2-978b-4021-8e2d-afea450fc8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a4210e-6f3c-4bb4-b041-b2d5f6cf0766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e716cd3-947c-443b-badd-b7e9aa67ce27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b100f50-1a08-4a10-83ce-6fac7bd450ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966cb289-5bee-45d5-95fc-1f411e569987",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2302f66d-af0e-4244-b33d-a04fb0f58a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02455426-41b5-493b-acea-5ef52b6b1f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81716a1-ac83-4ee9-87c8-3f4d06f336e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c3d112b-b449-486a-97c5-4985b9e18ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24d0b6a-936b-4957-b863-bb617d000e12",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74be6d0b-2020-4e0c-a1ca-71456d0bb0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd66e48-57ad-4c47-bf9d-e0e5f6cb47c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1247a4d3-79a4-45c9-bb95-d467ec174f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc5fa03-ee53-4141-b76d-c8558c14c6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c7c90d-e5ab-452f-8265-18126aef5bd3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c18d5b8-cc31-48e6-bc56-1ef28c39efa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b4909e-6414-4d7c-944d-ca5803c425fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ab6fa6-fa47-41a7-ad6b-8c77efa520f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3026516-55ce-4cd6-b7cd-aaec81714317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f8aec8-24f7-4c9f-8fb7-e9bd85688f74",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6b14f5-585d-4e31-972e-0d55801ccdcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc9a82e-54d4-4ffc-b8fb-77d950ada26d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c53bbf1-d585-4f78-aef1-bead627b20e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bde85d25-fb19-40ca-bbef-c6ea514d1249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19bf45a-7b4c-44ae-b66e-02dcccc873a6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4f11df-85ff-46d8-a09e-6068be18aef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc7bd2b2-2840-4351-aa28-68b543a5cc7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de554d68-4d81-4596-8c32-ca1f62452e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f76491af-d5d8-4c84-b7ec-afd0ec4ceecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543a6958-71f6-4beb-ae4b-bbf874618f64",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5de3ea-2bb7-4942-9d56-d454981aef9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d5fd233-6e48-45fb-a9d2-b7d48435b970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a1431a-2072-4380-9c12-ff00cb08780c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0afd615-b1f9-447e-88c9-2ad5583cf826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67200e83-d246-49ea-8cea-d8fa7b259cc5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65cf1203-e2d2-482b-abb0-2b73afcfd55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f648b0d-6086-4f84-8c6f-4c0ca128bb21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e70c804-7449-4d51-8832-6077d0a56092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dde2a1a2-60b9-466a-964d-d790860a7736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d0eeb7-99e8-4d4d-895a-f58a735c9852",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030541d7-2fbe-4ddc-85ed-c4d998fdcb1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438a58dd-95a0-4806-8cd1-02884f0ee431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa9b66c-fe07-4969-81fe-f99899b6db0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a250a2-0bd4-476a-a395-b18761b4c9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e80747-137e-4f7d-b514-ce1cd84b8ac5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bedc0cc4-c234-4008-b798-919a10727693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84930601-068e-48fb-98b2-878083eb09a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befdf894-aa18-4881-80f0-7ef692679a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59bc30f5-7951-430f-b0e5-c3d17e4af6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a1ef20-3a2f-4243-bed0-8c6ddbcb5c85",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0817b4-b8b9-4cdb-9a71-2af9c2cdf074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "130eeaae-5173-4437-9d97-fa910123bc73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e659edcf-a1d2-4084-aaff-82bfb4fb9081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2de24648-d410-4730-a3e8-ec757ff67c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194cf198-97ca-4755-abde-fa7a293d9369",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e78c4dc-258b-4fa0-b6d5-8eac6b85dac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6e866d-1823-4487-88ef-cf9118879e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac8bdd7-39c9-4574-a213-0e7cb181c7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "457bcd86-2844-42d1-b1ab-7e8810a36d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c709e2a4-49ba-4465-8686-dca6582c07f3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f0a787-fb2d-4969-bfe2-23c9102f172d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3eb3ca0-5447-4d03-bfd1-30b9bf00982a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f25106-17e9-4c57-98e0-8a4b847b79ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1abd824d-180f-4b1c-951e-66ba0cdedce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e105dbb6-8935-49e4-bcce-b6ba886efe24",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52437aa6-7152-4301-a5c6-15a3e483592c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a49cc8ae-822b-402f-9896-dd2c601f6178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56d378f-7c46-463a-b1c5-45dda54432c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f452ad9b-9c19-447b-b571-be8a453756c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab522f81-69e4-425f-baa9-0930e85992a2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2e0802-c3e4-46f3-9453-5a3700dc900e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988955b7-62b1-4c83-a756-b4c22e5eb116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd103f6f-4d8d-4f0d-b632-f73fac7537f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c6d8f2f-3ced-468b-aa2a-b26376536aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebffade-02f5-4a47-9585-9011497a6834",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67ea516-8083-4717-8224-da6ba1e74360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "002db0b9-2380-4079-8e10-f6e1bf0d2305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fc1602-ee53-44bf-9ba7-175f22920f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af1f3108-2c02-487a-9e90-b41189e6d7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33b731c-6a7c-4077-bb08-db8992d608ea",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf34cdad-e59a-4274-91b5-7b72eb9a35ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021c952d-c0b7-4c69-95e6-16d26a4dfb44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d38ecb-0112-469e-a870-4cc306724b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4220c12d-6a96-4df3-a976-363110a7c999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93422055-b07c-4178-8943-2ef7cbe64250",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e2e162-2ef1-45cd-9f4e-b0bcaa6d15fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3d47cd5-1bb5-431b-92b9-e07ecb1eb2c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa69dc2-274a-4d2b-ac41-8cb109e52109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3de91c86-4cfb-4209-8ac3-6bf0f94dd310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915b839a-e614-483e-b118-f333f4114204",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3a720e-b083-445b-b256-08229f16f6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6043cc-9c1a-43d9-a81f-fb5819ad68ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b36a8a1-9b4f-4951-b444-93177c6c2031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97f69739-5829-4470-8a79-fb162a3aa178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6feabb41-fdde-4eee-bb31-8f351cc64c5b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3ba975-ca66-4463-ad88-4a57fcf972a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d9ee8b1-2939-4489-bb38-dccbc56c2daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984a9779-3abd-40d1-b9bc-dfdb3c2a01ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1955425-5fdd-4674-95f7-a5aa168275d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac2795a-8996-43c9-b422-4aaab375aae4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0886df6d-5751-46f3-9442-846126ccfe95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6490d6-4558-4492-9db2-78245ed5f7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307d3691-2612-4881-a045-5aba10e6f2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6cdc1e3-5ad2-4426-8f8e-29397f221bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3351be-26c1-4fb9-a501-6fdc3a89bc1c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8c5e6d-915b-4aa7-b6c1-25a477deb243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0611f7a6-9491-4720-bdb9-eb7452a4ebde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c38c8df-fef7-4696-8a87-17addc94f5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "969e87a6-9e18-4e3e-b4af-8dd4a4563857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b859af3-316e-4988-8948-73e99a724b58",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d945d539-75a2-428f-88a1-a5673ed4055e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc128059-47b4-44b4-9371-e930cf4c057b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac118f9-b363-4535-8476-d27273f5920c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c228b794-3d78-4feb-af09-946b755686b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e085a4-4519-499e-91fa-5b2e6e5467bc",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab8c9bd-b7cf-4a8a-bc00-55969d39dc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb550346-ee7f-4850-9107-68ed4734b156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1edaba7-6fcb-416b-97e8-5e04d58f8cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb94d14b-b8b0-4f0d-9892-97703c76b5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a99deed-8576-40f8-b2e4-a5bfbdd0bb34",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9526da49-3697-4fa2-8668-ba8ec75b8b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b639dc4-f7c6-47a7-853e-8128a778878f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c3984f-5d1a-4d9e-9996-160fec2ff23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3190b46-610d-41dc-b030-74192be08b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870c9766-f1c5-41a4-9766-4536eae05b08",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682721d6-dcae-42bd-a3e4-5dbe75b21395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30db9aa7-ce9a-4f20-be37-e25805092116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a7381e-1e6f-48ed-ac82-cabdbeb4658b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "98fd2bf9-c570-4c14-aaa3-9ee8031d5787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f325d85f-e0d8-413b-89c8-f5959dea9b06",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e76ab6-c4dd-4472-bec9-d72ad60beda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e813d3e-29d3-49b8-b1d5-5ffa18a15c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d83c574-abd9-4c45-84dd-7aa843c08f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c878b961-9c04-42cb-ab8a-d5941cc8f7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2902274-c91e-4799-babd-9fe5b8a588ad",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a605c2c-2a64-4be3-9f5c-246b551761a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "05ed49dc-6432-47c5-af29-28b19d286916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183973cc-7bbf-464a-8f61-6902bf03cfb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "88b4cdcb-5d4a-4a82-88fd-42abbe3cb1ae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "20d0ffff-0eea-4c18-977e-d71e51d57fe8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d486e00b-72b4-4cc6-998f-7fd0980bfdee",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "953a5cae-c15f-43a4-b66d-89c640e173ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d149b8a1-c048-4368-a01e-07a4d353e02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478300c6-0adb-43db-aad1-96d88226ebcc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3890548f-40ed-4c11-89d4-bf39ae7ec482"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5750396b-2145-4c78-90a7-257f1056bf7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "364f029b-ad55-4870-9aad-94c010332951"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1fc35b5-bec9-4c4a-8331-6c9019371f57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "347603a8-f35b-4718-9d64-1e75131bf460"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "40356679-5610-4474-8a9a-a5bb98ea11bf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d13c02d1-45c2-436a-9409-226ddd313427"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "11309244-b4c2-411d-86fe-f934a538b615",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e5e635f0-0cc4-4cf4-bc9f-ffec4dd3ddaf"
                }
              }
            ]
          },
          {
            "id": "d52ab69d-6e92-4b21-af70-d34e5e3e1350",
            "name": "Positive Testing",
            "item": [
              {
                "id": "359122ce-d772-4759-ac40-1870f4b1c0d0",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "8fe29510-58cd-49c9-a7d0-c33f5ccb37f4",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d955b9eb-e890-4445-b5d9-9ddb64429e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0413deeb-5a76-40d1-9cfe-e8de26aa9b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56db456-60d2-4c23-b68c-13214a2181a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3984ef3-ed9f-4a23-b90f-363645d84a5a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5da39ae4-422b-4580-9c8f-e8b0ecbc1916",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71eb24c1-2bc3-4bf4-a1e5-51a1a6e335aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94740a80-ddb8-4431-b50c-31790faa8c2a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cadf26ad-07fb-44ae-bfe7-b0bc1eed8673",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3ca0b053-a292-42da-af87-4b523730abe9"
                    }
                  }
                ]
              },
              {
                "id": "0784b067-45b3-4ca8-a5aa-f861425b86c0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7167e419-c446-4198-bc63-a925f6b6c0ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "360a0407-84ac-4522-aa0f-ae6ab6c0d673"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "928a9209-ea42-465f-a805-83ff4a444d73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "94b40d4f-fb02-4579-a202-5f0b80a803e0"
                    }
                  }
                ]
              },
              {
                "id": "7bedac68-e46b-4680-b2c0-e889f22e68c6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1610fdce-8f88-432d-8f76-b5eb9e3c5fc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "421512b4-9e14-4c79-bfa9-1ccfbeca88bf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3eed78fa-2b37-447d-87dd-6a259e228a96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "30a6d30b-ea6b-4d8b-bdcf-93b8b7cef6e5"
                    }
                  }
                ]
              },
              {
                "id": "3f9f2414-7d82-4b77-ba4c-aadabac1cdd8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "590d5e03-3199-4973-8c41-59351d671cd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "404ca707-bbbf-4815-96c7-394ce3a20c03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e67b1471-b159-4a3e-a5c3-a0ee0ad1916e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "09b48efd-5b85-4931-bf42-39221d7a379b"
                    }
                  }
                ]
              },
              {
                "id": "ae055e0e-429e-4ef8-90c4-7bb38ad39f60",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e631e95-65b1-4876-a75d-5aa8651ad78b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f805fbd8-9fca-48fb-b04e-4c341db59035"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1eefb0bf-72e0-4f7e-a926-ff5947cd7062",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bfc9ac9b-93f1-46e9-8209-595c9f781301"
                    }
                  }
                ]
              },
              {
                "id": "6a4d6f52-fb0b-4b12-92dd-cd159d3709c5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46845292-d375-4aa6-b646-894e4b7328a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "946c1223-5cb9-430f-9a77-6e2a3d2abbc4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ce3b278-42ff-48a5-bd5d-07df352aa474",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0aed81eb-14a3-444c-90e9-66b431ccd8a0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a27f74f-fff1-4cb9-8ddd-a825483f1530",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5671fb43-415c-4312-ac13-d98ce50f2a16"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5cc0afd4-8132-449d-a61f-9aa876c92e4c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dfe1ceb4-207e-4a89-a236-d12235398041"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25372c70-3b5e-4608-8034-38b366c511cc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1cd5ceb7-1776-484d-b996-f99316923086"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e1f75b5-5df0-4767-9ea7-18d502bf4e6d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "717e0d97-e019-496a-8bd5-c93c75f37e9b"
            }
          }
        ]
      },
      {
        "id": "5a02ba61-2070-4594-acae-2e05e5932070",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a3e08d2c-bd39-4638-ab85-2437f797eab0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3732928d-0856-4ed6-b015-dcf26466cba5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2aa99d5f-1ff9-402d-bc1a-a1b6a3816de5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be182cc6-58ed-4244-ac66-b4099072534b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45633c3e-b7a7-4394-a1b8-edc5a295aa47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb63c4f8-434d-439a-a218-be873ef6eec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "80e00f2b-9e82-4807-bcf5-ca01c3148abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974dc4ac-491e-435e-b8b0-da8ff3993cfb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f4b163-e4d4-480f-a0ae-3b71a8d45b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df685fc0-16bc-4348-ad2e-1aab60f28d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006758e1-cdce-4cd8-8871-ab97addadc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e1cf67-77c8-4639-9ca8-dd27fd7d8df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e33421-04a8-44d1-b5e2-503e385a5bdb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07516609-16cf-4c57-a2fb-0c601a5eb741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3585657-0032-4d25-9834-da5d0f62db72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999fd7c3-6c42-4527-be8d-d588fe2a706b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb9bb91e-e439-4dd2-92dc-a5068ac3b088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857043fa-e23a-4088-8a6a-02c970336174",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "847daf21-92f2-477f-a9bc-3b259bbff5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec166d0-6033-438f-9eee-83027b918fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8b2661-ef19-4a18-b715-a9ab5a332935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a1c5f74-cbc9-4a4b-a3e9-1eb94f0ee5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ab2b33-ae52-46c1-972d-6ff63bdcc50a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a9de0c-857d-4cbe-ad62-e97db65140c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdcb2686-89a1-4833-82e6-b157c0314017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26a359e-948f-45b3-b182-b70a9f20c3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee98e45c-9396-42bc-91c2-55e8093538f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ffdd7fa-20b1-4535-862f-fd635418195a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf1c8f3-7a85-4c0b-bf4d-1a31faf44c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f42fda-f446-4cce-aa10-7a45a1ef1b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82c9d29-d9e6-48f2-8f67-e66f6736122c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c53158a-635c-43e6-a298-7697640ddd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0031af0-1c0a-4016-8b7d-fc4715a4670b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692e7475-ffc9-4a9d-8589-b2119a0d77b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac28621-64f5-4a68-b8bf-2efc734e8bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af9e5bd-647b-4d75-9629-83029c9fec76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "834e2f99-a78d-469b-8bb7-af39805a312b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e0e890-bd10-413e-9b57-c47b94eb6824",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9d7d26-e0ca-403d-9f20-53c4b330e560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "505607b7-7649-4706-8409-a6e3e3c038ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7c55a8-00a3-475f-9bcc-00bddd1c93c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8d4b1ca-1ea9-4f95-953a-156f13bf3f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11f72f7-fc9c-4f0f-b169-d2148ab0c7a6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d05588-d56d-425b-8fd4-f48c7c297e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62508e49-a410-4d11-9b34-3a46292df059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d642faf9-0b21-42fa-84c6-a0f148d7154c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78bfc828-8c55-4691-8e31-1ef3315f71bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35abdc4-9259-49c1-817f-f9862e3ac802",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfa3c14-65ec-4b44-a120-3caf19e9bfbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab849662-6408-4ba7-9f82-6be67aab0254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf37b9c5-79f2-4ae3-9f1d-33a50fae2b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd61cb0e-d059-47d2-b162-0d3e7c999428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9523c719-581c-40d5-a375-3b42eb1f7753",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d596ee7c-1e73-470b-97b2-69ac90e76a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84507fcd-c2f6-4d3f-9815-0404a66d7194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00051d71-ced2-4e35-9bd0-49279998ef08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3030e473-2b30-4f5c-90ba-48b3e549e13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0c08fb-6846-46e6-a5df-fde1d8d150f5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5357ddaf-d0a6-4470-9a8e-c704fdb29205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08e33826-4f95-4883-a24f-98ddce8bf81c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243a62b8-1894-45f2-b222-52c423f9c67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd6011f0-2fb0-42c2-93de-cc8f5d01109e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca85e1e-6eeb-4989-aba9-2978cf0c24b6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66a4915-c204-4b4d-9f6a-ed21337731bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b212f2ce-75a5-40cc-8ef6-3ecee93aa35c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307637b9-2ebc-428e-a391-7297905a9227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a97062f-5c04-482c-83f3-5f806c55ae73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a766596e-09e4-48a2-bd28-7a6f373e170b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a986068-ff72-4f2c-a40a-e7c6868e26d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f20849-516e-48c9-b1d4-18413ab25ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6520abd8-4f1e-4e50-9427-c3a36718dff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "00e48b3d-11cf-44d2-a256-4b5612ca0971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc79d5b-71f8-4b28-af05-c204392ebe28",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e91f3e-c7a6-405b-848f-4850f5f4dbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8963161-0b52-4bdd-93e7-78f2fba6b844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eface3a-c609-4c8f-844a-c8618b94907c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c37483-0f54-413f-a4b3-f2f0e6b77efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067f7a84-d88d-49c0-a3c2-346deecbd378",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c6a573-5a01-4d61-9563-38cf4c4d3cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83add73-389e-4fcd-b6bc-9ecafd13c205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ba7e96-f76e-42d5-85e8-fb9ce4ce6aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3613bc9-d0e7-473d-8443-52a162fd1425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f2a709-1e06-4e3b-b05f-8cbfe4b29525",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e226a81a-3ade-48ae-8052-4791219b9705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f08b31-e462-4c35-a443-7586d323fefe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047db5b4-e4fe-422d-84be-0176c9919efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "46f8920c-301a-42ca-8e12-09608a636426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7327f6-5bf4-4181-8ca7-d811ded155e9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f22f9e9-613f-4eea-9833-31ff7c3f00f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e7ca20-1d48-4299-a189-5a1bf48fdbba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdcfa3a9-6c1c-4b8c-b270-76d5b3d775e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecedf444-b90f-4381-9353-82d91b9bcb7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7c2fb5-b424-40df-8760-806fbfe9658c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb525c3-5b55-4a1a-af9a-eea1ce613d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946d0f99-5fe5-4aa9-8d1f-d08668ceb602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a6cd78-714e-4b78-9dbd-cdb69414ab74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d8dbe3d-1117-4145-9064-6f1e8040b316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879164c6-2603-444c-a680-07e093eb711a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20827ad8-e298-431b-a95b-21b76ed2efdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e7a2b1-3797-4d2c-9f97-7fe95d0c11cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b216d2d-0ec4-4242-8aad-7bedd0049fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "027b266f-abef-47c2-b747-dcd57d2fd201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fd95cc-04e6-45c4-9eaa-0b232a78e366",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ac3959-ead3-4dc2-92b9-dfbbbfa0d264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbdf0f4d-0ad3-459f-8b6b-eeb354971918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404c68c8-e2e5-4809-b8a1-c621a96f3a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c7f30d-15f8-4630-95a7-36b82025b8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2737868-8c60-4e47-8884-54cb7c69c541",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269395eb-e754-41fa-946b-7738b3b2066e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a3c19b-147a-4c3f-aff7-b1653ff4f14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcdeb59d-406f-4f06-9bac-cf8afe2839a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cca2aae-57a4-4ec2-94cd-028b968ce062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83df77a6-c499-4cc0-8328-4572cc40878e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ab0c4a-662e-4fd0-bc5c-18754871eb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37e8538-324f-4de1-a7d0-b59e810a27f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1ba388-6a9d-41c4-9ea8-06c9b21d2140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7bfc040-c6ad-4784-bd6e-a5de223dedff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02bc8436-906f-4099-a213-949680a009ca",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493005cd-1e50-4a59-aac5-1fa157e5a721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e6e3465-b83e-4b57-af2c-cfbe274a9923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9feb609-e090-4148-8883-84830a24d0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a37493f8-9d24-4228-a9ea-12dba393e10a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688337e6-403a-475d-a85d-ab094b7650ce",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb58073-e6ce-489b-ad71-b5c0da342d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4949bcd9-88e9-461b-8090-6e6fa2084e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d33ffa-e9d0-43b0-b517-94b9e7d12ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d5297b0-3c45-44c8-9d44-92c64a25d88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821ed062-0d30-4ba2-995a-806b7f46fc3d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764a2066-b7a1-4b14-8ab3-32a468b74390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a541065e-1b65-419d-8ac7-be72ac8c1c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93f6205-7669-47f4-8d02-0a5e516d2c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03ebf828-42a1-4687-8ad1-9d9114265976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50436d84-edf4-4e15-9c96-a8c2de1ecab3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c813c6-fee5-4a98-add9-c68b6309e490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8baa117-28c8-4219-810c-89db35b28023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e920f47-59cc-47be-9a33-54bb7749004e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aee7f890-cbab-4595-9124-7c03ea199717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684fa39d-21fc-4528-9496-670a8e733937",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1adb814-83ac-4323-8d9d-c3f1036b3e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc17527b-3d73-4306-b213-37cf0934b3ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eed99aa-25c1-487a-9e6c-197398232456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51a23e25-989c-46ac-9692-7857488bb92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683646b8-01ef-45a2-98b4-ab80d67ad63e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b90d14e-4acf-4c25-95e5-b1db023f26cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d426a5f-5501-4e53-9e35-01de5c3a36b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695d4222-a78a-43ad-ad61-fad31b9e9de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58a36053-4fc7-4582-aca8-32a92faac7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55012fc-3c78-4e73-af29-ae4d9aa18bc9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4800bd8-1f90-4018-91e4-36e8e234aa37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9bb623a-6ae4-47d5-8af4-5c5d8fa12020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c613dd04-334e-4105-8e0b-e0bf9fe6ecef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "934589a5-b884-4438-aeef-c00eacbbfe1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463b3ef5-27dd-4a95-8842-d0c057c8722d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ff9c03-bc48-4861-847b-9d3c1e732de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30c15327-5d20-412a-a744-5c359c88ff2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d55e729-c791-4ac3-add7-37f167f881fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddadbe72-5394-4271-92be-e7ca4ee47a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c5102f-c195-41cd-b7ef-6b9ba8db0b81",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3246991-58dd-49d0-a00b-22c869372e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec1dbf0-1a7d-404f-ac7f-e87b7fbed786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "decf4e1a-af7a-472e-8d24-934e4c8fcfab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a48f7aa5-9bcb-494a-a7f7-663f7346a6d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "51e167f8-0b33-4050-920e-6bc081f03850",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f425ceb-409b-4a08-b696-3d0c2fff2f7c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3c4f91-3789-44f7-8066-6b85027a0c4a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c193b3-c968-4bcf-a718-dccb97bdb268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3f6414-0ed6-46b5-b27d-714411f2e479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5683c4ec-5534-4a41-bfdc-8a63a3438b57"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59426093-6860-402a-8448-684c90c60452",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd1a425b-ae4b-4248-9541-d7737dcdc864"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e32dabc9-d680-4cfa-8cb4-830b6dfc139c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "804c3339-36ec-403a-a9f5-11d30f4b2fac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29b547eb-8120-4201-9b67-515070843260",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5b62657b-5e04-4636-95ae-723d45eaa028"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00eb670b-1f28-4cc2-87a9-e1d1d3589af2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "901618ea-ace6-4915-a88f-b71b935894b2"
            }
          }
        ]
      },
      {
        "id": "1fa53cb4-51fa-431c-a373-355f7e5e49d8",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "80b808db-55ea-4a31-88f6-0d732d406b16",
            "name": "Negative Testing",
            "item": [
              {
                "id": "135aea22-c435-4286-b276-c1559dc44026",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c788459b-ec27-4836-a81c-1d51178cb2b3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90483129-d54b-4a2d-a1a7-1a0edeadf22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "478a26c3-f49c-47dc-a8d5-35304408b866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f859ec-844c-4217-a2b6-339fc9b0e9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cebf0bc-9ce8-4b71-9e33-256c53878653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e16fd8-d6ec-4da3-966f-07df6f8f365d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93e97c6-eab2-4fdf-a3b1-dc15e34c78c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952f8c4f-c0e8-4711-8e73-858b3b447630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd85fdd-e4fd-4fbe-ac9d-a6369062e1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "98078b17-8042-4b20-bacd-3f9bb6feb3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f13ab1-f2e7-4cdf-9672-8388edeff0be",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c346ac-aa5f-4e5e-9b8c-e528ec92ee16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b66fb9-bb9f-4d87-9912-2151ca1b44c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436964ed-b8e0-41c8-87f1-c11cca5f5074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "310f0acd-00e1-4c77-8873-1020dcbfa50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b885b0b-b6de-42f2-9d83-49757bcb2291",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925ace53-fa73-4567-81c7-9f6af582a1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a209134-e228-41de-aeba-9d6de4cf5305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca3b61e-abb5-4cfa-9cb8-b9595b1aef6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b00bbea-e744-4197-a792-e62fcb4bb246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0fa197-6de0-4b16-8b9b-a6cb79381433",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c48a68-bfff-4903-bc09-97c377cd525b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade1b4e5-ec43-4993-b7d4-17f2ae5995ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f8ad6e-d6de-4c2e-b5e0-b486a85588de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5842cdd7-5511-4154-9b30-4bf6f6fa0533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da772b53-81c5-47ec-8593-f4a0ada0caf7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14478f3-d0df-4948-9c8e-c1c22571afff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83d5361f-c15e-4470-b650-c812ebc72244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46627e0c-3a34-448e-9487-9c15620a45c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b7f7c7d-f929-48c9-8f67-8d963beb5470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf5d3c2-7b57-4603-936f-90b8efdb09d8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be182ec3-e947-4627-af4c-b962618dd64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c17c2d-ca85-403e-9dbd-639f3f9990fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499ffee9-a9f3-4180-88e3-96f3f18f6c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a8c1d7d-4189-4db0-9c28-dc20a5b5556b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98cb5cc5-ab9e-47ce-90a7-7ae2a3fbc3db",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddf45cc-a174-4684-a976-faf001b71530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87edd528-9ba9-4cf7-9919-596b011850aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f2badb-3e44-4851-8da5-c853e525305b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4eda9c08-4ff7-4ca8-872c-3ffcf91325c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc8810d-8372-4ea6-8fbd-72036daaa8a7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6870aead-1d1d-4d01-be2f-a0d974733b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b5d968-b564-4d34-ba28-c5ed435d1b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c17119-2029-4697-aaf0-85a1bb235a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97af955b-fd07-48fc-8671-9356b163ac9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54046ff4-b13d-4208-9136-aa48250cf2a1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e31ae7-c3ff-480f-a060-1e377d7f60b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bf50324-f02d-4a86-9d32-7b022ef456e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab3aa5b-6564-48d8-9b5e-cbb44a271442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "508706a5-be07-4d97-a8f4-10a41c91e847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c796f630-87cd-46db-ae6c-f2b0d211e86c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8415bd34-39c0-41dc-88f3-082c00200f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f1f5b2-837d-4668-823c-e010fa7f5ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c137ec2-8af9-4e38-ba4d-abc788372e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "46497697-3d26-4161-ba31-2e9f20492b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd964f9b-5c5e-43d9-9372-80450ab3f9c9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5b03fd-3108-4d4a-8ce1-c113673082e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fabee020-0b36-4204-9fcc-8ea47dc812ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725ae414-1950-4888-b42a-f51cbf1bcb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "38dfd8e8-4802-41af-96dc-64549c70e1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36eb314-e5bd-44ee-9cd5-3a477cbc6fbf",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29bd0d37-272d-4320-b4bf-5a811c39b11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b9a4ac-b43f-42ad-bf0f-b15b9a471089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65a5323-a3ca-4a7b-931c-a888c72e069d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff9e7599-9cd8-4838-9503-378c79728a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506ed296-3cd3-474b-87c4-25307d6f0030",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b7ada1-adf3-4b53-b9bf-8dc09c978a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6ff04b-ea7a-4a46-b2c5-e7ee69131d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccfb0d63-ab66-4572-9be9-981eed468738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3e34660-6f39-4fce-a9d1-6fdcf807cc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f17770e-c3ad-4d27-b99b-3149a45df358",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27326b1b-c529-4766-9a3d-b16f604e896c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dde8a22-3d08-492a-a09c-1b0838c75ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1007792a-dac6-4763-9765-c7674b33fcbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d7a5a9-a676-40b3-8bf8-030e4c33ffee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff15681f-0df2-48b9-8585-797913008d38",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5796e579-bdaf-4f4c-b386-98955ac9c5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14bc2226-8020-4b40-a5b2-b17aa3eae159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f1a70e-6c36-41f7-9d60-5cbeec61f1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "26ed4f35-e16b-4c8c-a7bd-41bfbe7cf445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f56b0ba-0dd9-472f-88d9-742ae4b95535",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e52a84-b642-4d01-9034-b26866ebd931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efea7593-1c89-4df9-a560-f175a804db2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bc1501-e36d-4246-af88-77d2c4a5b476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd0258b-3fdb-4abd-bd20-8280dff191b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dae8d62-9a5c-4aea-95f5-cc9202ba6a20",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df974f2-5519-4935-9939-1b0f0994c6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9bbd3f2-08b3-4535-aef8-f712f3c4e4d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495cd9b6-b97e-42d8-8d18-bf38ee3221a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca3cbe19-d05d-45e5-b244-93ffe3d23827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c45809-4cad-48c9-ae5b-553ddc1a3b63",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b851cc48-ca24-49f6-a720-4b3635ad5e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3db38d1-91f7-48b7-8ac4-b670ac20b0a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ae127e-88e0-4f83-be03-9a67f0f7c60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70f649f2-3f3c-4d7e-8692-488a90bd5f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17a1ceb-b25d-45de-81ac-0692a24c07a8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f46efd4-4eee-4312-b67f-e3c03ba0f1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d72bb20-c783-4b34-b6b4-f6536e3376c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f37b3f9-d956-48bf-bb35-1b4171f13e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd6012e-e3a3-4aa4-b442-df886b21ef1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8aa2445-cb54-4583-9267-6c2ce3e4d693",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53050d2a-f35c-4ecb-917d-ab56f443d40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ead6d9-a13e-4ca1-bea7-1cb67afc878c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c21bff6-5af9-487b-aa7b-f962a5524382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba7330f2-ad8c-4b89-b960-bd4f40c69858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d9711a-a5dd-4cd6-9400-fbc56064b5b2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99081192-e0a7-4f40-a3ad-d1b33a294fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7082ee8c-cf28-41d5-9d2f-810e01e1fedd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5584d7-ce87-4825-b7f1-f82444e41fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "871466d6-c113-4f67-b28d-f47da7d2251d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a967ee78-8222-4f07-a21d-989f5da7d1e2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3823a89d-aa82-4591-a15c-1c8f0ffb9d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a53721-9fa1-41d7-9d20-008b83191c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b891424-d0a4-4ef1-a331-cd0078568268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8549c4e7-45d3-4cad-b6e6-34c633bc29e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0d5351-d93f-4148-9354-c01f6118cdcf",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06435215-947b-4eb2-89c4-6f4fee0b1120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87fa83b0-b84b-4919-b718-71a7f9e597f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3b4af4-0763-46a9-a0ed-bfa469ffa762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff5992cb-406c-4cbc-9118-8ae41ed57ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55f6290-44b5-4b88-b3e1-0149ffbde493",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab08c5c7-d0e0-49f1-8dfe-014454c7ae7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d186d680-fc3f-4651-b554-930721016a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cc2914-6cb4-4853-b17b-5c1bccfd2e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51d93096-4c4f-47d7-bdd6-b848dd68fbed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0637083-2248-4fa7-88d6-3e2ec549748d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba69e53-b4df-4906-addf-60e751d6ff84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "380ea184-68e5-40f2-a020-6e3494300326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7af8dc-32ff-42b1-be91-29be0e7d8a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "873494d9-4c61-404a-bd56-36d5c4792d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818ca991-db46-40ee-828f-856c5c11a587",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65028c89-780f-40a9-b3e9-f95b234d4986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db076bc7-9d4d-4632-b35a-b7cf7cd6c2bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e90c7d-934e-4015-996c-71cc58a94d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e807c5-de18-46c8-a547-54edeabae5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b0be98-6c22-43f9-a44a-595ca28c7d21",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c318d0d3-cb64-40bf-a83a-ba5ab2332a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2c38ca-afe1-498d-9b24-e7d8234af424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334bad09-8751-4f26-b8a3-b991e053cb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f844c3d0-252f-4d6c-9775-3f00a15ca955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660c1037-e0c3-46dd-bc44-b03bbb4dbe6d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08d0af5-cd8e-47b6-adb3-ee7844eda424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba29a69-0da7-41a2-a671-dde0930bd216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2fb6cc-42d8-477e-977c-731dc8822e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac289579-7ea3-4ad6-b558-7d034b51b306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5bb685-26cd-4341-b781-7fa949f151da",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf80410-8c0d-4a73-8b87-86d4f3e36285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9c4c22-1f45-42e8-acae-0ed01159948e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b668204-8420-45c5-8f67-33d9452ad67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba0eb823-94d7-4803-97f9-5061df708488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7c83ba-73d0-4b41-a30a-7ad1e2ffd952",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03bd202d-ed38-4ca9-85ef-a5432afc763c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85013a5-9fd0-4e42-8709-bfc1a0a0a42e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e538a6f-38ca-4880-a5e2-89c0abce0ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff994a74-5114-44b5-b499-bf7554bcfbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060fb53b-3bae-4272-a4d9-a36a9a45084e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47dad0d-5857-41ee-8a59-860d620f2a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7a07c6-ed98-4633-9998-c50668039aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96639f21-4a25-4139-8bb3-11ad6ddf610a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "039da828-a30b-430b-8c61-f3966ca5fe69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5c65c5-7b7b-4f9a-b4da-ad7e46ba4333",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ecab5c-c4b2-418a-92d4-c52a1caa76fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b734f1d7-e8de-4ae7-ab48-ffb84adc221e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cc5c58-0928-41f1-b758-7df5c1742f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "363a348c-5965-4f84-93d4-bca6442566e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76868e3-9e7d-4a5f-94d1-c85ec5da5964",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "424c6486-fcd7-430e-86c4-34ea24051107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2e3393-cb76-41ff-9800-1376382cc0c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a4ee8b-2ac6-4f98-aab5-7814e8a5b9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dba366a-56ed-46ad-9e7c-1dbe4ef504f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d734b62-8cfc-490c-a086-2d9f7fb113ce",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766e1d60-b20c-4df9-bf04-c06682ddf6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc1d8f73-c136-4cc6-9c43-f52de591766c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a155a8d-7a16-4640-866c-870fb9315bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d79a350c-8ac8-41ae-a4ca-3c0d8e1a767a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b31c9f6-72ed-425a-b7a2-3d8922cee1f7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1066b4-240d-42b3-bc26-ca2c0015d920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b861b0-7290-48ff-812c-814af05cddec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61720fc7-3598-46ea-8877-cd384f86ecab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f5d7dc6-6752-4d56-aff3-959b656799b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2342ef-7370-4ee4-96c3-590edc4feeaa",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7e577e-7319-42ee-b99d-70102256c422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae5037a-a9a8-4ec1-9a03-c306e5680574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c305d8-9d3e-4f4a-a6d8-11285f1bb8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79672718-1de4-47f9-8022-c27d24a1adc8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "468c42b1-3d51-473d-82e1-7211439f7085",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f6253def-8edf-45db-bf5e-9be9691c6d4d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc029b9-c6ed-4a16-b74b-5010d832d4e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4d7fe69f-c22b-436b-863d-0fe91b1d34a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62168485-c737-4768-8fde-c2a8491c08a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "547e9d0a-0a15-475d-b905-79ef790f3b6b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2f08c45-1d89-45bf-b0f6-e12f613eb5ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1151cde-d64e-4f20-8357-f11189d97a62"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b634aa1-4124-41fa-bbf5-f1b940347d6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb707571-c371-4d55-aff6-bacae746dfbe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96bc686d-91fb-493a-9817-d7d743111a07",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "82fb7d1a-dad5-4794-99b7-8eec7832827b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e5e568a-0a92-470f-98ef-be96ba948812",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "28682f4e-9deb-4347-9f67-ef7635507d5c"
            }
          }
        ]
      },
      {
        "id": "d16676ab-ff8b-4fbc-ae94-400f1c6d1383",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9c2fd1fe-0a42-420c-a02d-f4ac0b43b197",
            "name": "Negative Testing",
            "item": [
              {
                "id": "942c321a-f443-4961-b8a8-0e0ca35b932a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "89b669a8-214d-4958-b356-469e7bac3845",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020def0d-f1fe-445b-9325-ac8e6f277a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce0c55e-9d1f-4a28-8ca0-ef6912879fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c16e64-7283-47e3-ad0d-f679b802a240",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb41783f-40af-4130-ab3f-088290e807dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd10a3e1-6ba5-47c6-88b2-4004a4e95b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9ef89b-a495-45d9-8466-3adaa88726bd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42251e9-2061-4e5d-a194-5ae5593aadca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e382ad60-0bbb-4cf9-8671-ff45323b68ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e229df-2825-4513-a904-b83a23ef60e9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c58f8d0-923f-4a83-9c6f-66108bc54ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b4aae2-f00f-417d-8d35-17453e6e8a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8a4e13-c7ff-4083-9c50-22b5041df249",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c234bc48-b231-4136-8421-078a0c4514e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10eb5b3-cd77-4b91-8c9b-2d9166f5a8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490844af-e70b-4ad0-a4d4-4045a57d9e72",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7651831b-f6d6-47d6-989c-c90d2348bfb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9951921-598b-4874-a309-1d871cc9cb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0072fc-23af-4b60-8857-26ac5913e0c0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2491aec-1931-48f5-9d82-f0a3daa2b69a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc93157-8bfa-4947-9fda-fcb4b30a1b9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2150df18-4143-4365-a01a-416b406c6e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf3b397-6c3a-4c07-9a8a-466c8fd34282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796f287c-83f0-408c-8496-2a9dee32158e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c507ba4-ac2a-4962-8054-d49f7b69c43d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "439cae17-1617-4e57-bd33-4e68f82961f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a42c526-c75a-45f6-9dfa-8f50376a5680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd8cbb0-b8e5-4c40-9e8f-c4f475606ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29e4009-cb05-4355-a828-d5074b824566",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f45a276-e6b0-4982-b196-6ba604a17cb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49e0c32a-390e-42a1-8c6a-1fb432813e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56175a63-b182-413d-a95b-f5ed22126d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e315e3e6-b372-4c02-ac40-05c84f4e1c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c9e597-6f99-4333-b948-470ff6532b58",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c106f4-7ef9-4f4a-8180-f208cd3163a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "443232d9-2523-4265-ae0f-d67118a20aad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01dfc758-adb1-4dab-b696-533d4349f9fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c03a3e69-9630-4daa-983b-3eddd3614021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e0e62d-8e15-4ec1-aedb-4ea6248211fd",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31d859c-225c-4a9d-ae90-1c81ad99b4d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e37055-7cf5-453d-8741-3bb9c3a3b057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23aa958a-4812-47f4-8d1f-5426da4baad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24230ecb-bda9-4820-8a79-4708dd76b9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94c09e4-be75-4c04-82d5-a0440529fe1d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb62797-7d27-4dde-80c9-7324d307a2db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ec5ba4-eae5-49f2-a393-e6568038feb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5d8ad0-24fb-4ec5-afc5-2889a6e9e254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1655252-1ce1-45b8-841a-ef270f30a940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5dcbd71-2378-46bb-9264-9047bb9368e1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90cfcc5-918c-4e72-8043-97c1d96c14ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a7b3fee-4dee-4daa-a14e-2addadc7e3c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7d4f44-f88f-4c7b-9a9f-b8cd77d5de2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4b83b5-d017-426f-b774-eb254939c53b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5028cb7f-428f-4418-aba1-b0c9396ffeac",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3aa55c-7416-46cb-a995-a70ee8778c38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceb14c4d-fc20-4c42-b023-c4be1c57b88e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1aedade-1db8-4c98-92c4-ce8ecebbc103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09725e37-9ae9-4a32-ad54-1360e21dc6e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c7fefa-0990-4c08-996d-2ad8a8ecebc9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb49aa4-4505-4266-b137-bbd533c0b785",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc6b2747-a79d-4116-bbaa-b8bd9a75d256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc239f4-2556-4114-b1f5-9629d17b00cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf4e62c1-5b75-4b2c-80b6-02474ec91300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5545f04a-962e-45a9-aca9-b8aafd0f680d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a217086d-066d-416a-b627-a4efaea45667",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02ae1817-93db-401e-8481-8fb2c967d0c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3789218-ca4a-462e-9c61-37fd1141ca1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241487dd-0867-411b-bfac-aced83d973c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e640d95-ad28-46ef-8ba8-7c7cc83b1f5d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed90974-ac5d-48bf-8ab7-de2697ec0ebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e222e7a3-1ddb-4388-9755-156e4216f05e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e36c0a6-7916-45e5-a78c-1b7e6245036d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703bc4ca-57f4-437a-aaf7-68183ab248a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621e2cc4-95da-46ad-960e-0599343aec1f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45abbccb-a785-48bf-bc5e-2edfa99782aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fbb31d5-bfa7-410a-bc98-6a06d39e530e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfeff13-5ab1-4bc2-a42f-c0bd7d31b95e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50270265-bfb9-486d-8c3c-327559bee270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08683daf-c841-4d31-abd3-0b4bc56d474b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b43d5f-81db-4ffa-8e04-f1d016dbe543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2d7241-5e56-440d-ae6d-2e9cafe49e73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a735d2-68fd-445b-825e-2f3da72aace9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bbfcdec-2349-4abc-8bbb-9b7c6d1a27f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5014ba01-3283-4e03-b6af-c945faf58821",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c50dde-e919-4c18-8a4c-ce893df9df74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8451200-574f-4673-a2cf-bccfe969c59b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd04666-bdd8-435d-8712-5b0be12d6ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccafbe1f-8aa0-4094-b29e-bdc7db7c8b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca46774-4c3f-4f51-81bf-ea631a4d49ad",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f87609-d2df-46ee-9d78-6a33a23ced0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d84d81-8502-4867-90bf-8550e6835089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d6a847-fe83-441f-9d31-73b2b035cb38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4316c6e2-1fa4-4f78-a6ee-64f7de1955a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99503fe3-0eb9-406c-981e-b7161f96bece",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746a54a6-6f57-4cea-80f4-0381f2c5a90b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "493b6b20-69c3-49a3-9af6-e5a27eee0708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e634f9-a816-4c2a-ae0d-a331a5a2a6c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656519e6-ed10-4db2-afef-1d8e9a9f7dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75a0fad-d89d-446e-87af-3b98801789b0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7768477-dbfa-47d7-a2a8-40697727c086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75fe0d0e-224f-410d-a4c6-b909bcdbb1ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a6dfbd-7bd2-4a1f-a826-4c56d70264e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7cfc9c-acb1-4518-b6df-dce8cae6e3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e97930-a26f-4f3d-83ce-ffda8210c189",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf529b0-0d4e-4ae3-ae0f-42267aad4cdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0da59186-61d7-4796-a0ad-fde2bc53c161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49490475-9e33-4e5a-8228-284d904c6f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1274b2cd-1969-4097-bc19-4226d663a1b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4289873-700d-4fa5-9be1-c6a8c42e762f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce18775e-33cf-40a3-a01d-da57b673186e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c40e3617-e733-4e6e-b288-129971ed84e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f25939c-fce3-463d-a38b-f77bbde0d010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a481c8-fabd-4528-895d-12bda0fa3d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4609ef2-240b-4ae9-bdf8-c69faee38d80",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ec08b4-8a1c-4f5f-8750-c2a5122cdd2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24eedec3-3759-4e19-bf1f-45bd6792e8c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "832fb192-3f48-4e29-8642-d88c2ab51eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "864b358a-c2f9-4cb0-a3e7-32d15e6cd7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb7eb02-0e62-4e45-8735-3fcacc952675",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c407e83e-6e7a-48cf-9491-e8af3d077554",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fecf7f49-4e0a-476d-a2c2-2fc262bbd124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac2b156-b00c-4798-b976-811df4880afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22d0b78-6d0e-411a-873b-7c84c8d220e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f11c0c-e8dd-4d6b-8997-fb198783d2a1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427fc2e4-e788-4ad7-8ade-a2fbafcaf789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea1f3c3-52a4-4b71-84da-ddf03ffb43be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "550c61f3-a06b-4916-bc7a-20756bcc71b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d855a0-a5e3-4668-8da4-37ef6b000373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d375195-6b5f-433a-9233-bcb0f463cd0d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860bcd5c-01bc-4ae8-b223-dbdee06ac4c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50192f2f-2752-4dc8-8859-4f9b543e98fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45534846-a1fc-45a5-9836-e80ef684c68f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2153e86-a6aa-41a7-8321-273e8fec49fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed93bd4a-9f75-48cf-b938-84ab10ffc603",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f5ca3a-6ac5-4e71-bf69-b70e3e40e7bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9848fa1-5b2c-45a7-90ac-e1b326677bf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0edaed2-cad7-497a-8be5-3224d21fe0e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97424a62-7131-47d2-99c9-9c1af64bc59f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78dff16c-6c22-4297-8bc9-c75aebea3f7d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca455865-7c10-4516-bae4-db2b68c0dc2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f62cb69d-6d9d-461d-acc0-6fc27b9b00f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfe0f62-e94c-416b-90d7-746bab6c46d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e722385-d2b2-450a-a163-e8c8ae1b8263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cefe1626-2bb9-419e-a859-1eb31ca40abe",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ee9d19-dd0c-45cd-90a8-ca5263ad75d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "823b4e45-d70a-47a7-918d-f0843e01343f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e5fbf3-f4ef-4dfb-aaba-b8aa8fadaaf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "398a628a-fe4e-4121-88dc-f791324e12a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af71ee1-b5fd-40ae-a700-666c9c6bf007",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800951fc-b138-47c6-ac9d-a23757ef6213",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da19fb82-4824-4d78-ae64-30efa01a5267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b218156-cd0a-4c09-98bb-9d16989b2b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe09055-76c8-4cee-8abc-4c61cdd68f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83513f8-e3ba-4116-b5f6-617f992f0eec",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbdb500-4c6e-4b33-a238-f2059afd5c82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12b385c1-93da-453c-bbfa-70c658f833a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31eee06a-3a94-4de7-b7df-be0c8340fd68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df45f01-cfe7-4875-be01-7026f878bc7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6401995c-adfe-4e0a-9773-25c761b9b1bb",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8d29d8-decb-4edf-8c7d-7662cc45151d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f34cdf-6f83-4123-a3d3-78be5b517946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0c9b87-409c-4e19-8f5f-ef844d7c8ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501e50cc-c25c-48d9-b2d0-faf5bd8b2d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e8cf47-7520-4a35-8523-c06a93294ecf",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec60e019-cb4d-4381-a29d-2f4cf9a8f078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6787673d-bb44-4dc0-b8c5-61d00cfc655e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "573e3396-a31a-4325-8100-b8575e5e96da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4e9b4b-2f58-43a5-8032-4ba47faf7295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc16b9eb-46cc-4fd2-8c2f-686f37265158",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee38c0b-f696-4e49-9724-fdcbc18a2c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931c2cf8-5957-4539-b7b7-26dbf78ef4e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a94128-664a-4304-bd20-7ec5d71323b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51fb8da4-fcaf-4b72-99e3-c1882f5e2926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334b0f38-3f77-4849-9fe0-bf3769df7999",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fabfda-1088-43c3-914e-02c392b9079c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8c8eb8-abd3-49e5-a364-3707af2b4c01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6045f7-c096-4f6d-9f9a-bfd0ba803242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "509739b7-0719-404c-9e5d-5353c1822ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e688e19a-ea50-4a37-902c-6ce1ac497626",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82832643-b58e-46b4-92fc-24989e41eeaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1066398b-b5a2-40f1-928a-dac5cb810c11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4593ed3b-03a4-4aee-b341-2526474b1266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d334ced-5233-448c-9d7e-4be5643bdcc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae3f79d-5da8-48c4-afd8-d6f25bb20819",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a8a281-2a76-4a67-ae53-bd4daa4eefad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a8d4af-bdb2-416a-bb7f-b805cbe72fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b3eafb-bb1e-467d-ba9a-e52db6518c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeae7cfe-ffd6-4c58-b483-129825e1ca1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0e4269-f022-492b-a07b-249bb89f88bd",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7244b1-1e81-47ff-bc38-eb2ac92090ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c14f45b-cf48-417f-9488-c69161de142e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8363bb8c-729e-4564-859e-4a1fd5bf17af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc5f9bb6-2399-445c-9b8e-f7f2e2deb0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a18ac7-8f09-4c15-8884-0e2460a4d8e5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127c1f8b-e901-4d23-9779-f77f73cb604d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f57ef5b2-a617-446a-984c-b22146327256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5833eb3-7ecb-4a33-98ad-532f6b8f3336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1f510e-91e9-4e63-ac24-d64245a2c3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6672c6-de4e-48e5-b8d1-81ea654896e0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b984d4-39eb-4b25-af0e-0536466d2686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6edc656b-9ee0-4ddf-8a69-3afd769ec9d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f750bc43-9df3-4183-ad7f-d47855fb6ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e7d5f18-0d96-4e51-a955-abc535bec95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da9a2ef-65b5-4bc8-a2e6-f56598574009",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc7aac4-0928-4b6d-bc7c-4109461927b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46486cbc-7eed-4683-ae36-48f4430568d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5795d17b-eb05-4201-a588-a6f7436c5c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca0e058f-bcd2-40ae-b18d-5f77e988da4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a90668-47a7-4350-ad9c-7178b69fd906",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069e8510-f869-4e80-a350-7cc26f571009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200ebb49-f414-4891-8154-1dbdc79d741b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64676e1-f9cf-46d2-935a-e6ed34c4d064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69a2535c-4bd8-4434-b795-847dd2fc66fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d890b1e-5f76-43c0-a1bd-35eeb533e4a8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e84a77-d28c-48e5-988e-b188f804a72d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2dbceb3-069e-4d44-ad03-8adfbb8446d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e76c955-6f92-430d-b66a-8e6b92e3f655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63951d62-7fc9-464a-a417-ca3525779d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc8b3a3-6122-468f-8c93-008237f8740c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c36d08-a85c-43ac-ac5c-b9fc93beecb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e33f2eaf-80b4-46ad-8d58-832785b856b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "215134bf-be14-4583-a1ed-472558a11356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69fe1ed6-7283-4ed4-aa17-a5fe10839f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b02515-220c-47eb-8f43-716a0396ca86",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8885b7ec-be25-4c8a-a25a-ae231fc3333e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47bbbb65-6727-48d9-926a-dcd8d802d325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "933e82a7-64b9-4165-94ca-bbd5f592f3ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52dade2c-582d-41fb-8d75-e1709574b2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4082ecfe-7e01-42c8-b9d7-06d0a263ff67",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34c7a9f-e983-492c-b3b5-200572ccb0ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a6583ae-5f36-4cc4-9b61-0520a1705940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ead748-aaad-43e9-9fbb-c9cb4ac572ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b59ee08f-5be9-4098-b462-1dca02594308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b3ee9e-345a-4945-9c34-7c8e50e4fe29",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c26922-62ea-4ea8-89f0-7e78a273af8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a9e3a6-ba06-4893-96cd-1f3e29e7942d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0888bf9c-8279-405f-9a8b-b7d71bb8c85e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f5b963c-0e7c-475c-bdab-717b52ec4268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ae19e0-9346-4ca8-a0ed-c2fdbaa2b039",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd0b782-d7e6-4125-a81a-9c278e006fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c24e7c-a151-4982-9ea6-a86f5a5ebc3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfda0212-ef8a-4746-bb94-d83015550d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5223ab87-7c18-4199-9933-d75ed1dcac56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1584620b-9910-41b3-a8bf-9d95936570ba",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4b2597-1041-46f6-9efd-c13b07ef99ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63658f97-c6e3-4dae-a680-0497f2d2b03a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50aee750-18b0-42fc-9abb-9f3b239a8195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de89aec9-78a0-495f-9105-8bc10e679f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cde809-ca38-4074-a2ef-6eab7d23a1e1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03dae5a5-a122-4856-8b85-a5ed26396991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f1cb5d5-1450-448d-89d7-766f20984161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e37793-c0fd-461a-a659-52b59fec98fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c506ab-4581-48f7-a48e-55c9f2152c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee92ae00-537f-454a-af9e-e50fed5fc5d9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca617fb-c698-41bc-b6d3-2817ee94d1a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de044aa2-a1cd-43ef-b51a-1b509bbfa813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ceab5e6-65ba-4bfa-b70c-9aba68f1dd28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe649746-c62d-426d-9f49-ad82ae7e7cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f12bd53-3cd3-4b67-9d74-9f4b72a4e83f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c606120-b1e8-4b2b-b134-73954ceb464a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "676e7974-c1c3-403e-b48a-920c7008ed9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca985d9-2893-4dc6-996f-ea21956b2c0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b78e9b-e0bf-4985-9489-c5862bb098d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac816861-56c2-448b-bb73-c4afa806e233",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd28e81-1216-4e23-9bdd-6e61754f107f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d07e62bc-9909-4bfe-8b69-23b791d64719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b669623f-c54a-4f0e-aa9e-41c4eb1d3eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e6cd0f-6711-4445-9d6a-2beeab533e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520f7cfc-562c-400a-b9f9-81ed0bec0660",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd80e74-08d4-4c09-bc46-6cd25685a3c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8615a29e-342f-4548-9d48-2b2fdbe296b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be8f6c3-06ff-4978-a442-48ccdfdc370a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98f71ef-b29a-44e8-b93a-82c56372704c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead2ae40-f28d-4f97-bc3e-cc3d4b44d711",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664b4710-e0b5-4671-87b6-75547f9046f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd8a402d-2e09-4b3e-b7f9-b21f95c1cfb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b818739-b79f-4034-ae4f-1b646b932566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22dcdc3e-b9dd-4e86-9699-856e0e1bf7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d9661d-29ac-4320-ad69-2f4bc3adae86",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc26be91-2383-4a1e-bb27-7c13126b6107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b000a44-6042-40c0-baf1-c7e2ca0e2695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68097eab-c225-4d6f-9d6f-279b492bd8ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8942e06-5e9a-427b-be5b-200d9aa2ecce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9477fe39-154d-44fe-b4ff-1c7ecd23e735",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e607a3f7-2158-4a64-83d7-9095b4290ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "314fd597-4f6d-4140-bb67-fe10aaaa8786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "525cb48e-d769-4178-a7bc-6075ffd4c532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912841ad-271b-4d6b-8477-a809391b7b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7dc51f-fd84-4fb0-a3d3-b62e84da5af4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08fa7bd-6e92-4730-b492-17f33d4cc2b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d35fd55-9ae6-437a-b8bb-df225b4191b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ad69b3-6bd9-4330-84d8-9074395c8e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b544f8cd-8bae-4b4f-98c9-c539ae734744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec69265b-a65b-487b-aa50-0f85af3b3693",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a658b03b-51de-4761-8401-4ae4b0dd7360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0eeb05a-ceee-416d-ba5e-f601eaa2b01c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3274a6cc-9721-4a6a-8fd3-68f84a8cede1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403a925f-222b-47b7-a31f-9e13d5f39a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74552ee-67b4-44dd-b4a4-2323db79cefa",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7353df27-d004-48a7-bdee-1781b57789d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b2ecaa-83a0-44c3-b2b8-38ffb6436374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da97ecd-e30d-4f3d-93de-61a84fd75b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab2fce59-0502-43ce-9f08-bb1c0493a7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078a2786-3f06-4328-8a02-9581e3aaf9ab",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7187cd2-26a9-4cdc-a378-0c2d53ab9026",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3555d0c-4a1c-4c15-8f85-ad6acaef6618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644336e2-710e-47af-8e90-ab7c21526cc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c49787b-ee1f-4c2d-b458-ac7d6da461b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181e3ee1-3b8c-41ff-824a-8a3604ca8a05",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82500ecc-50d4-4a8a-a68d-3eff3d82351d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e43462f5-3688-49d0-ae87-363bcc7ba298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6404a2-b11d-4888-866d-302ff5149124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b07c10d5-f8e4-4f9a-8b85-83d6215ade33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d965eb63-4a85-4d0b-94d7-d1273c42c062",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab007118-cfcf-4394-9eb4-408aaa527cc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "927ed2ad-8133-4f77-bd5d-b8e3ff08ed79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32a0deb-74a9-4f6c-96c7-03ed89ceae07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf1c981-c22b-48fa-b280-cdb2cd9537ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a740bbf-f855-45bb-9449-74e117b80831",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aeecde8-885f-4096-8cc0-bf707303bc96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "921bddd4-fd33-4275-9d4c-c7f59803acaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb331b6-0db6-4858-9f0d-d86096b27142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bfe7012-f418-4f3a-b972-95ee482feda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e6702c-068c-436a-9631-00c6af6585b2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919f43a3-eff9-4392-838b-5e2c7df97c88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11ef39c0-b5ec-4bb2-8237-967ef766258e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5642988-a402-4249-87df-a7b5ab5ad113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60dc7635-0e07-4dd5-b76b-a75ff1dafce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370a9a43-1315-468d-b8b3-625f358b8ffc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd340ada-7fca-46d2-b951-741d85bae088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95c5b41a-dcf9-45ae-985f-0372ce769a34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "807cacf4-3fa8-495f-8f7e-d389ccea546d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63186cd6-6df4-4328-8b0c-517833c86827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8caaf1e5-9e63-4368-8ede-2c7666009899",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acda77ea-f307-4bde-b743-515591a82d38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c139256-6cb2-40d5-b03e-b1159e12b273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96838d83-15af-4b43-8cde-80cfc44fdc52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "859cefb6-9a7d-4975-b867-001a6ce9b409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bfa0b5-cb8e-46ce-983c-bbb579263638",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affa408a-8546-4cfe-87b5-f07caad0baa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7c1b289-7996-417f-828b-3e822fd37037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1a18ac-e532-4dbe-af7c-49ce4a97c771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b2769f-b5dc-4450-b0c7-158373c6ddce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce962e2a-452b-41e9-ad24-61713e71dfaa",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdaba727-a393-47f9-81b4-72af62d58164",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "663767db-7e6c-4224-994f-1b03c4801555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31581a9b-92a2-42c2-80bf-a8c5d64075ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c63b82-4d35-4b81-84f0-104bb97fdfe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3becf3f-594a-46d9-9140-b5cd2b1d6051",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6220584-782b-49fd-b46b-cff8836f0be8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "209977c2-b6e2-43d6-b59c-ca31934a3624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "227a2dd7-a5c0-425a-9608-2771795bd8cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3fe4d32-a194-423c-895c-ee2545613a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bce60e0-2e03-4da1-80dc-47d22f26a1f3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f2de06-8f58-463f-b570-929a419fa490",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7df8bd2-91ff-46ea-8ce3-d684282652f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f44b7e5-64e2-479f-89cb-ba2c83639084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8506c198-8b16-485a-986b-5f1c6da5abb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5843cd0-5907-4da3-991b-e538e16e1e8d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59acfc3e-40b1-487c-a21c-de40fc9cd9d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bf6860d-7961-4b37-a6fc-26fc02921452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a55a634-e27d-4553-b987-fc669ba561e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953d2930-a9be-44de-9db8-8384adce9f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e65398b-b314-4742-bdbc-94f315647ed7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fe752c-5bf6-4512-849e-6f0669c6c276",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa9500e8-ba56-402c-8208-123316089d66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6786b357-93a2-419a-825e-73af13cffaeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d82fbcd2-b4a6-4086-b626-dcdb9ffb1f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29038e4-ee7e-4b21-9347-129e11597e45",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fbee71-0bb4-46b5-a972-b5d824d8a31e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e590e8a-ecfb-4e9a-b9b0-dfe638962d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07931532-794f-4977-8f93-93e6041e2001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f2bc7a3-de9d-49d1-9d03-ba9cf021e439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06dfa443-dcbf-4fee-a457-0a092ca22598",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de908de9-4d55-419e-8792-e9969147371c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c9e13ef-1cc3-493d-94c7-cca94d0859d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0308d2ca-d6dd-4026-90db-e868eca057df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3b1673-b574-4991-8813-58cf840f5436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8898155-4e74-4cec-a3ca-fdee3e0882d4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5fc00e-b3e8-4449-9c56-d42644413c68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bad88e14-6240-4120-a351-e67a74f8fd24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bd0e10-4505-4d82-a342-8ff6b9f57728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac1e15b-5c50-48ff-bd17-b2cfec1f01ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe04866a-4d42-4ee5-8d00-c999f334a960",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c354803-7e17-4317-a203-8611e8035dfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8714b9c4-7b52-48b7-b82f-eecd531579fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c81431-addb-4fbf-8351-a491867fb325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7024e579-7545-4b17-a695-0cab4425c23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf60274-3c2f-40de-b5dc-158b814b6912",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec7e39b-c53e-4ea2-a947-c5bac886b1fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a7ed1db-6fb2-4522-a0b3-7ee919a6209b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "669a968f-8150-4a2e-8850-97d2d0e27f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31598af1-d3a6-4a40-8808-ea5a1e50de49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5abcd9-ebac-4fff-bd38-b680d21e261a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f147413d-8f0a-4bd1-9832-e898c867ab0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aa7854f-0285-484f-a569-db8156eee60b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "715921d1-d8dc-4cc6-970c-168f7ed64ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b8c2c2-6a7e-4df0-8ea8-0a4234b42de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4392ba43-0091-4e00-85b3-f7703b1fcbf6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3922be-d6c6-4c4f-b8b4-3ec76f7b4acb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aea3b1f4-36cb-4bc0-bdd0-33a80be883c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ace8f5d-b942-431d-901b-782d40d16f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205cf791-c2a2-4f11-80fc-fdb3dcf5d4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32bb940-7b08-442d-afa9-3ef7ebb7e4e1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935a1585-fea0-46e2-9edd-ef08487419bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2144dfcd-6114-490d-8ead-fae552cadc26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bc9c7c-8930-4ccc-a321-5eb4171c81be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78985d2c-63bb-40bf-93d4-b7ab11530284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4895484-acd3-419e-9de1-95215de11c98",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8b19cc-0c0e-42d5-8504-7837d09dd804",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c79d787e-0039-4e06-ad63-ed18d6650dd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba01fff5-3d3a-4a03-a20a-5f6266aa55eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd7a515-c1a7-4104-a954-bb3a2d3a0c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e229cad-2386-4934-bdb8-a13d1c37a659",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43a1fff-5f97-44e2-b821-8b5124193f75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad44d2fd-7e28-433f-8832-cb1abe2e0378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "279526fe-664c-41ca-b67c-ad12753f3994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a10fe2c1-cfe1-4cea-b56d-7d947551e7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d81756-f2d6-464e-acd0-73fccc670698",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569496c3-0486-4781-b28f-b73e4dfe1ac5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e36c1d38-afb4-4dbc-9e55-d41ab5d2bccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3162d9d3-e7e7-42b1-a77f-d46d62351cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e6fe64-95a1-4d2a-819c-ffaeb723f583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a04b05-52ad-49bf-8f68-63eae7aa5dbe",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0214f428-ecac-446c-89c9-64587abce206",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e275ba21-a2be-4762-86bb-e3ddf6c34ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "510d5637-733f-4c00-be1b-f3c3f6ca28ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee77a3e-ded3-4549-93fb-47a7c7d6f52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3e4e1c-a52e-4d79-8a03-dc449670c7ed",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f220e6a9-ce10-4cf4-bfe8-bc26aad0125c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdf4e4fe-89af-4a88-b560-8533494f3082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef17b40a-6f50-4e7c-92ee-238cdb3969bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f184483-1ab0-4036-ac80-df3ba9115da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc95ab59-77e4-4f88-ad33-1b6c23c911fa",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edcbc49-88d4-45af-a6e8-136b50eabd90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79e98f70-5ca9-4185-973b-291975ab6233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "872f03ca-0d0e-438f-b02f-285d789772c7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d621ace9-8f5f-44f2-a0ec-26ee913196d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7254375b-ec20-47c6-82b6-5baec6f12c5c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4694b0f-d29d-4e2b-be40-e45a4f1105e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6df63b9-ff56-47a9-ac50-bc8d9a06a171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4435c0c7-0fba-4c08-a028-506371d8f10a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e20fa1-767b-47aa-84f6-2abddb9f6d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb787f66-14fb-40cf-a3b4-64f583037e0c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9852b5-9674-43a8-a658-6de5a99289d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "401c7ac7-ceb1-4bcc-9387-5d82ff2b1807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13dd615c-9813-48b5-98e8-610abb3ef115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceadb918-21be-44d3-b0a4-8b6154e53a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b8d1d3-2bec-446c-8fe8-9672d6614bc3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf58a6b-b738-46b5-8834-bf7382eece98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "337199fb-23ff-410c-bf87-7a17c20595e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8ec37d-6199-4b45-ade4-72d176add26e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebfd379a-8e5c-4e7d-8710-91a9653dfa01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101e14f2-c791-4790-afab-541953ccb530",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c61841-d01e-4106-ab9f-29ee224ad733",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "063b68ac-4e10-40b1-b10b-9eb71584e23e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91931bf2-fb6c-447a-8684-f7a2651ada4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "156d7f75-1f20-4da7-b1ee-00019c66e7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2f6f5c-f4f9-4c0a-a331-e63de7e7df99",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b0f15e-134f-4189-8c4e-45f05f0e2e5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec491be6-58c8-40c1-9917-5f456121c2c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f86f29-d4bd-4ce3-ab7b-ae2d47db623d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b95fe4e1-3ab8-4fe4-9b49-2c27d85b1952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b1e548-42b6-4a6a-bdd9-8b67ed21e18c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afa1205-39aa-45de-8a26-27127952b64c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "940bc786-939f-4d9d-b0e1-779456367848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ba3199-7065-4bb4-a084-27b5b0a38d04",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c5cd7d-9ab7-48fd-a893-05ec3e7d1b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf7ec2f-182f-4c13-8f06-8c9bb2793217",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64d3ed2-93c6-4ed9-827a-a59576c5e16e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7431a07b-5370-4b68-9d32-a2582ff952c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e92850a-2c8d-43f0-893e-e213db56302c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b034f97c-f30a-439f-ad06-c05f341c8f7d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a93bfce-bb6c-4fe9-8dbf-f2f22a308b0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3255764b-4a63-41a2-a95e-1b2b4597d859"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e3a6175-8a28-4804-bdc8-d3b77d3c3bd1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ea3878f-f523-4092-ae87-1822cfcac2f5"
                    }
                  }
                ]
              },
              {
                "id": "bbabea64-5ab6-4f86-912d-c6307b7aa3fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef7344ff-f21c-4e92-bd9a-070b73dba258",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba71843-8fd4-4568-906c-748782314cb2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "81a5403c-26ea-4524-8a27-b01b8ab29686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d1c21e-2692-4e78-a4bc-0912fc6ab27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e624a00-2e01-49ed-a238-c11ac0096438"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32f4f96c-b51a-447e-ba83-93c14b67ea8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5563b7f-a17a-4077-8f59-23a6b65441cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b60de00-9744-41b3-87f6-95c733eb17f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d9e571e-a6fe-4542-a5ba-07283cfb97b1"
                    }
                  }
                ]
              },
              {
                "id": "9e88fd4a-67a1-46c8-a431-831073ed6edf",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d191fcd3-fa72-49f7-9c9f-6c732b667669",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee3a847-c204-4d0a-818b-dc34794cd9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "21e38588-bfba-4430-951f-7361eeb259af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b5e927-4982-4184-abad-c3ddd9afcd40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6103d10-b2e6-49af-9685-85212ace2500"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ca78fdc6-ee9c-47c2-ba01-4923b3a74631",
            "name": "Positive Testing",
            "item": [
              {
                "id": "89827c66-dde7-4064-bb4b-845c3ddce062",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a706d9e0-1bad-429f-a546-85e3b2f08f44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6f96bcea-cec7-4e60-b6fb-1403d7b8f1b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d52b8d4e-637b-441a-9043-dc5fcd444c8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22023992-ef8a-482d-8dd6-8a2f99a89803"
                    }
                  }
                ]
              },
              {
                "id": "9c034903-ddb3-4732-9238-fe19cf74ee91",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b398e5d7-9008-47cf-9425-01d8dd4e31a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "154d70e7-fea7-48f1-8066-53c3a3909d95"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f871ab3d-33da-4c3c-b985-2c5688209161",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d555d421-ff9c-49e1-a5c8-e4ec84158385"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6010f35-50ab-48b9-a174-a47399f63e92",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "77143216-8628-494a-a78d-44828a28d54d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd05b2b3-c841-4c46-9d4c-972f8bc9d9f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b0c9fc6-793c-4eed-99b0-b339b640b6cc"
            }
          }
        ]
      },
      {
        "id": "8ce39308-dd41-477a-9943-f1ffbb438682",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3f611683-4900-4b85-a482-03eea2234839",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74068140-0ef1-47a3-ba07-608d2682ec85",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3b6bfd2e-692e-40ff-9338-b7d320272529",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27002ec8-4516-469e-8eef-4e1e158b39e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9dcc47ad-5620-49a7-be02-7ac99ef4d05a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7daa4f-a5c9-406e-a8a2-5187950670a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b1419f2-8f1d-45cb-a8c1-7af3d741e696"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0b18a81-3275-4c5b-907c-8515d3279c19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a114265-90bc-4fb1-b3c8-2f1d1b40b7cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b927380-1ed4-4a32-be68-ad77a122bb20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "042ac6cc-aab7-4a3a-8cef-5bd89579f2cf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "736664ee-6424-4de2-b5f0-2f97bcd372aa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ef79530d-d50f-4572-85a5-7eee17c14162"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9426436e-c896-4e73-9491-770e0be05264",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1af4538-aa6d-406b-91d8-3fe74a458002"
            }
          }
        ]
      },
      {
        "id": "658d83df-8363-4242-b984-6b64be327bec",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5be8f761-e363-4ac1-8f6a-f6bac03603f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1cd74a8e-0ee9-4ba8-bb24-55a9f86744e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2cb0e553-04b1-42f1-99c6-285f1f83e431",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3fa138-f691-4c09-91c2-39e68fdaea47",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04e0db64-67cf-45dc-83e5-e09a80b9c36e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b80fdfc-9b27-46ba-8a0d-7dcdc3a98b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c274ca65-f8f3-4226-8e45-fb89930d8416"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2f7ef2e-6414-4b32-b8c4-1b27f7c2866c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f29f723-83bd-4ae9-953f-a4f7027f8aff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "edb3f902-6d6c-44eb-8d18-eeeaac920f0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4646e396-a18a-469e-b459-1301aad49fd8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "baebeae9-51bb-49d2-b4e7-af1595d10e68",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3d4ff7e4-5b57-45f1-900b-612e048961fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab4a55e1-8ab8-499e-81a8-ef7ca299d6fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ef60122-c584-4b32-9c97-b7883bb72bd3"
            }
          }
        ]
      },
      {
        "id": "4d02e67c-959c-4d21-bebf-0ef4d61160ba",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0fc4d5d5-c41e-49aa-81dd-af5309711162",
            "name": "Negative Testing",
            "item": [
              {
                "id": "07aabc4b-29bb-4013-914a-c57d3d4da923",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1d72a05-171c-4c49-a05e-712969debaaf",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4931938e-56d9-4524-8c30-3a8f172d478d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27f66440-48aa-43fe-9305-08c4acc99ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdfff4b-63f5-4f8c-a4e5-4c406c75ea69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "711699af-63db-4bc3-919b-da86f646a738"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49448d2c-b1aa-4cec-a530-daaadebda3a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18f44690-0c16-44e3-bd77-ddd31b1f8ef5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f58e357-83ca-4c85-a076-5cd9c856e5c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64a5a951-2e12-48e5-8c92-cb17744aea2f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1ab9dac-5827-4de2-ad43-68dc122a0b6f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "105d9343-50d5-4561-8d06-4f9bd93c8937"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d86d2c89-413e-4e23-a3e4-64a97c77eea2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "88b7ec57-edff-4b55-839c-466145d98c1d"
            }
          }
        ]
      },
      {
        "id": "15fc49f6-6278-48e2-b147-b7728b248e86",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef853c43-2b26-4cbd-ae8b-170ff9174ad6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32e1ab4c-f04e-4a93-a062-6824feb5d5de",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "aaca4bdd-9f3a-4a62-a2a9-b2c60737a576",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3cf0fc5b-ba55-4d2c-b51d-3210ec081244",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d26597e-5194-479a-8c28-a6002ac0784b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.094736842105268,
      "responseMin": 3,
      "responseMax": 246,
      "responseSd": 17.480258750469915,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698712439668,
      "completed": 1698712453439
    },
    "executions": [
      {
        "id": "de92a950-680c-45c6-af69-10766aa613f1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "dbb3adb6-1535-43e4-bec2-a1dcb404b9a6",
          "httpRequestId": "c5e23dc6-6944-4532-95d1-71c42ff0ce49"
        },
        "item": {
          "id": "de92a950-680c-45c6-af69-10766aa613f1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d4749734-5405-41c9-a2b7-8a1ba42cd51e",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "5a447403-0a7d-46e6-ba7b-05e4dd843288",
        "cursor": {
          "ref": "9054e59c-ba03-406a-963e-eee7519ebe1c",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b34a02f8-4ffa-488f-b79d-b60644745bf7"
        },
        "item": {
          "id": "5a447403-0a7d-46e6-ba7b-05e4dd843288",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a4ddafcf-b4a2-4804-8b53-6811782d28bd",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "b3a50f72-4910-4b7f-afa5-dd4a4cd50cce",
        "cursor": {
          "ref": "dc92136d-ab77-46e0-a00a-b8ec4f944fd8",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "10d497e4-c5d2-4327-9b1e-01490ff490a8"
        },
        "item": {
          "id": "b3a50f72-4910-4b7f-afa5-dd4a4cd50cce",
          "name": "did_json"
        },
        "response": {
          "id": "1ab63777-9e4c-4dc5-b85a-ba12e37cc7eb",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2257bc32-246e-4a23-bb8d-78deecc90b6a",
        "cursor": {
          "ref": "7ce29717-a1ce-4313-bcef-5feea146ecf6",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8855e933-216b-41f5-955f-2e8c423996b5"
        },
        "item": {
          "id": "2257bc32-246e-4a23-bb8d-78deecc90b6a",
          "name": "did:invalid"
        },
        "response": {
          "id": "4d1bde41-fb0a-4ac2-8638-11f9da828ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2257bc32-246e-4a23-bb8d-78deecc90b6a",
        "cursor": {
          "ref": "7ce29717-a1ce-4313-bcef-5feea146ecf6",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8855e933-216b-41f5-955f-2e8c423996b5"
        },
        "item": {
          "id": "2257bc32-246e-4a23-bb8d-78deecc90b6a",
          "name": "did:invalid"
        },
        "response": {
          "id": "4d1bde41-fb0a-4ac2-8638-11f9da828ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723e5ea8-615f-414b-bd9e-88b9c5b498b9",
        "cursor": {
          "ref": "95427fb2-424f-4e84-9519-ebad78d3ac6f",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d0bbff18-3450-4d38-9af2-061002acdeb4"
        },
        "item": {
          "id": "723e5ea8-615f-414b-bd9e-88b9c5b498b9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f93c81cc-0a58-410a-9e3c-7e198e5bf99f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 104,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd11f5e0-7847-4644-bb02-027bf1ecc0d3",
        "cursor": {
          "ref": "eb492616-958d-4cad-9cba-df45bc18ac85",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "31304512-8b7f-4933-9f27-a2ea797c4b39"
        },
        "item": {
          "id": "dd11f5e0-7847-4644-bb02-027bf1ecc0d3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1eb4bf28-ee0c-40ac-9bbb-adfeeee371d5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bceb464-6a15-4b11-af65-1dd166fa1b11",
        "cursor": {
          "ref": "2f21c55e-aed1-4ed5-97e7-bb38a0c3873d",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "03879b13-5250-4f86-94be-e05dda12d56a"
        },
        "item": {
          "id": "3bceb464-6a15-4b11-af65-1dd166fa1b11",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ae3728ab-0550-452b-968b-14665e641b33",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb842cf-1f10-4083-b24a-287af195d47d",
        "cursor": {
          "ref": "533ffdf0-3a41-4ae1-877e-9476da7dbf07",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9e1733fc-9ddc-49b3-8e35-075e77396d74"
        },
        "item": {
          "id": "fcb842cf-1f10-4083-b24a-287af195d47d",
          "name": "identifiers"
        },
        "response": {
          "id": "1620eeba-050c-4802-b190-f2b5a84e3155",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59b2241-e7e8-4163-a27a-36e4d80b91ac",
        "cursor": {
          "ref": "b8c59cac-3725-4ec2-80d5-d0761851dbc1",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "856390e7-4bf4-4c11-9912-b88af8a0c1a1"
        },
        "item": {
          "id": "e59b2241-e7e8-4163-a27a-36e4d80b91ac",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8fa40a51-405b-4efe-9878-f56f84a9ba5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f465f1-7f52-4c86-bb5b-4410be3c1d0e",
        "cursor": {
          "ref": "b9e58bc7-0286-485b-a658-7fe1385d5426",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bae17863-b9d4-4b0e-aa5c-0ee2e2bc2c0b"
        },
        "item": {
          "id": "88f465f1-7f52-4c86-bb5b-4410be3c1d0e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6c9113fa-4d0b-4733-88d8-6a7be3689784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e3e929-a44c-465f-9b8a-c881a4f4252a",
        "cursor": {
          "ref": "a430a818-eb9b-4da2-8e89-96b4a898c060",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6e2b92ba-a331-4631-b075-225068596d04"
        },
        "item": {
          "id": "59e3e929-a44c-465f-9b8a-c881a4f4252a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f1898c98-0d18-4900-80fd-8b36ca8bdcf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1007a3-472f-4072-a6a2-10697d7db294",
        "cursor": {
          "ref": "8aa07e53-7929-458c-a39e-4c44cc952c99",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b81ea70b-dc90-49aa-8ccd-46833eee72ad"
        },
        "item": {
          "id": "bb1007a3-472f-4072-a6a2-10697d7db294",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8ed7d53a-76f8-4fba-b3a8-41a11a6db921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd624df-a94f-4a58-a0ef-1c97d8d82c1d",
        "cursor": {
          "ref": "6f31dbd8-6ca5-4abc-b9b1-bf636a6b18fc",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "912a96b6-16d2-484b-95be-531226c460d6"
        },
        "item": {
          "id": "acd624df-a94f-4a58-a0ef-1c97d8d82c1d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "35e6a6c5-945e-425c-88a4-ec7cd4248341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8654cbc-53d3-4171-91de-29b1e5bf4419",
        "cursor": {
          "ref": "c8aa3e71-8804-4cc5-984c-5fed3563f3b7",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3bf1276e-2bc9-44ae-9981-7dc39c2732c7"
        },
        "item": {
          "id": "b8654cbc-53d3-4171-91de-29b1e5bf4419",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "650ca1a8-fe47-4075-b074-f1c503dcf37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdcbb90-0bf8-4577-9040-d23f6bb2e43b",
        "cursor": {
          "ref": "bd571f0a-4359-46a1-9028-f8813634b8c1",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1598bd28-bc21-4ee4-966c-11e2e20d3e79"
        },
        "item": {
          "id": "dbdcbb90-0bf8-4577-9040-d23f6bb2e43b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9bace668-3e76-4847-ab0a-88b04b88e451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccef44af-1874-45c8-8364-e14679eb5c26",
        "cursor": {
          "ref": "042361ad-1d9b-4077-88fa-3d19bc1f66e0",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "123024eb-a6ce-456c-8471-48c381669b4c"
        },
        "item": {
          "id": "ccef44af-1874-45c8-8364-e14679eb5c26",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5dbd900a-52a0-44f8-a009-4f04895f4a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d39c0ab-f84b-475a-9aac-0b765b458a5c",
        "cursor": {
          "ref": "7fd8cf1b-648d-45ec-900b-13483601a3ce",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ace9c3ac-2996-4d52-8983-f9820412ca72"
        },
        "item": {
          "id": "7d39c0ab-f84b-475a-9aac-0b765b458a5c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8caec110-668f-4c04-ad1a-c16fca7935f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5095f75-46d6-4a4a-8793-15d9c4347522",
        "cursor": {
          "ref": "aa4b011a-93cb-4d63-8a52-e3e4680f7b6a",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b7ce45e4-2daf-44fc-b08d-257f6a45515a"
        },
        "item": {
          "id": "e5095f75-46d6-4a4a-8793-15d9c4347522",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "96197fb2-3107-4814-ad97-98c83983e80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb02d53-93c2-4f7d-bcb9-ba861485a34e",
        "cursor": {
          "ref": "4fd46155-5fff-43d1-b304-2df83e03859d",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "18e78a8f-0364-468f-88d9-0456aa6b1891"
        },
        "item": {
          "id": "7fb02d53-93c2-4f7d-bcb9-ba861485a34e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ab55affe-e923-4968-940d-98d50227dcb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f4a73a-c054-47b2-9ab9-b191543302fd",
        "cursor": {
          "ref": "f242050e-f276-4da9-a3a3-289eaade34c5",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5de60a47-5f0b-4d9c-a348-4bb4af355fdb"
        },
        "item": {
          "id": "f9f4a73a-c054-47b2-9ab9-b191543302fd",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "50e1e650-440d-471f-8690-72e0f1b1b92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967cf8c0-5bc9-44f4-8c0d-7a54afd363d9",
        "cursor": {
          "ref": "e0118296-6016-4b11-a024-978ca0536a4d",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b63dea9d-bcab-4171-b740-cdce22ecc955"
        },
        "item": {
          "id": "967cf8c0-5bc9-44f4-8c0d-7a54afd363d9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a23fa991-7196-45b9-a618-c25a134bf3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccddd6ad-b22b-4167-8f54-0aae8c6109d6",
        "cursor": {
          "ref": "d76a008b-2e6e-44fc-9545-a10521c5a50f",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "13e24bce-76fe-4651-90b9-e146ee4ff014"
        },
        "item": {
          "id": "ccddd6ad-b22b-4167-8f54-0aae8c6109d6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7a74d299-72a1-40a7-95df-589a1c5634ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb967436-3be8-4519-bf07-be90d3e3f4cb",
        "cursor": {
          "ref": "1bb0ddbd-c315-4124-ac71-a61fef4fa5fa",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "68794e98-440c-46f8-9b64-3014aa6b6d90"
        },
        "item": {
          "id": "eb967436-3be8-4519-bf07-be90d3e3f4cb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b6738dcb-f9a0-42df-8778-9592d684f786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acca75d8-21e2-4e36-9a13-495fac6cab5d",
        "cursor": {
          "ref": "141ff861-1d65-4d5e-ac1d-f3c6cf9ca283",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6a15fde8-9968-453a-8bb1-487cf32b6594"
        },
        "item": {
          "id": "acca75d8-21e2-4e36-9a13-495fac6cab5d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2cca1ea9-784b-43de-b974-f742ff5dbe8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc26909b-9e36-4897-87c4-de20238cdcfa",
        "cursor": {
          "ref": "3b34b975-b8fd-43c3-ae77-148644bde14e",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a4541d3c-0ca0-45a9-b1d5-e3f7f07b4f84"
        },
        "item": {
          "id": "dc26909b-9e36-4897-87c4-de20238cdcfa",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8f3e9c9e-b29f-4d09-a43b-94f00da07411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e64872-9af3-4cd5-a32b-757a22e76709",
        "cursor": {
          "ref": "1079a7ce-42a6-40a7-99cb-dcb3778d6f30",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7d758d78-cd5a-4dd5-ae21-2da3c47fc1bf"
        },
        "item": {
          "id": "43e64872-9af3-4cd5-a32b-757a22e76709",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "547a7a94-b761-4956-9e6f-5708127ad404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b66e66-347e-4d92-847b-ba6f4c71372d",
        "cursor": {
          "ref": "3927cc0b-f680-4085-b046-10bd24cad752",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "be1779fb-08ec-46a8-b8c5-b378cb178bf3"
        },
        "item": {
          "id": "14b66e66-347e-4d92-847b-ba6f4c71372d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a1c6828e-da17-4962-b879-5285ea42fec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afaf588-9145-4af0-83e0-3fa6a358a4ba",
        "cursor": {
          "ref": "95980337-0aa0-4abb-9ef4-301c26007411",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9ee0b00a-ca8e-411e-a008-0b3b71a9f7ae"
        },
        "item": {
          "id": "7afaf588-9145-4af0-83e0-3fa6a358a4ba",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fefb1661-1089-42b2-bba6-7133483aeff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbaec9ff-3e1b-456c-8867-38e6f6864f4e",
        "cursor": {
          "ref": "b207c925-f1fc-49e6-8b49-9cbb05586524",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6e96ca34-4b02-4146-a17b-d315da14393c"
        },
        "item": {
          "id": "fbaec9ff-3e1b-456c-8867-38e6f6864f4e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7926fb6f-4690-496c-835e-096901503a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddb7ce1-6483-4024-972d-c6be551222cb",
        "cursor": {
          "ref": "cfcf392a-bbc0-4a3d-9acb-ca5fd59ebf5b",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e148ccb7-2b81-494e-a503-8c956f7cf8a6"
        },
        "item": {
          "id": "9ddb7ce1-6483-4024-972d-c6be551222cb",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f0484e61-11f6-453f-83d1-b01d4df090ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2115baad-c4f5-4085-8d33-fcdd7ced5ebd",
        "cursor": {
          "ref": "3a8f2397-e14f-4d30-9778-ca8b47cba6dc",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "90fdb8b0-4637-49e0-a7a6-e5489cc35c14"
        },
        "item": {
          "id": "2115baad-c4f5-4085-8d33-fcdd7ced5ebd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c1a021d6-10a7-4220-9941-16517b0c1614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84a115e-8c41-4012-b55f-3f70c2b73b7f",
        "cursor": {
          "ref": "68004dd7-2aa3-4266-938f-d296f4f024da",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b2d6b280-51f2-43ad-94f3-7ced3d4f95df"
        },
        "item": {
          "id": "f84a115e-8c41-4012-b55f-3f70c2b73b7f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6519c9dc-9f11-4339-b064-3725929083b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9685137-a02d-46ea-9fa0-a74dd29465bb",
        "cursor": {
          "ref": "e3c47d35-1d34-4329-9f6f-b4195f234c90",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c59fea1c-6462-41a2-b39e-4479341658b7"
        },
        "item": {
          "id": "b9685137-a02d-46ea-9fa0-a74dd29465bb",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f7a6668f-11ac-4a3b-8000-a6fadeb79055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c842cf-10e5-48b8-b18d-d0bc58506bd1",
        "cursor": {
          "ref": "e4de7826-255d-43d3-8de5-2b1f4cd5d58d",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1040d3aa-8aa2-40c9-9c90-496a9a246d4c"
        },
        "item": {
          "id": "44c842cf-10e5-48b8-b18d-d0bc58506bd1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2f9673fc-bb87-4668-ba9a-082be0239a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66859de9-8051-4c0b-a755-ca8163f5866f",
        "cursor": {
          "ref": "91878da2-cea1-4b0c-a1a9-3f88d6c6fe9b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3d11c217-328c-4269-9717-0e139d876fe4"
        },
        "item": {
          "id": "66859de9-8051-4c0b-a755-ca8163f5866f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "592d8c61-75a2-49c5-b833-d25b656776fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db645e48-2cce-46b8-8227-7321b7efd3f8",
        "cursor": {
          "ref": "9cfdc7d9-4091-4f3f-8f66-18b0a063ba2f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "20915242-279b-4284-98d3-9ddf715ad233"
        },
        "item": {
          "id": "db645e48-2cce-46b8-8227-7321b7efd3f8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6e9227f6-5950-4ea8-bdf5-6c01657722cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e7f684-7d1b-4ff3-b6c2-6ccf10c23a5a",
        "cursor": {
          "ref": "ccd0dcb7-d326-4004-ae8d-d6a5ecedb169",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ea0f12cc-12e4-496f-b59f-8b5bb601968a"
        },
        "item": {
          "id": "26e7f684-7d1b-4ff3-b6c2-6ccf10c23a5a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8ca11d27-73db-4183-9bf4-fbd006652325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d16487a-6f69-4ea8-b4e1-4d0a5e74543b",
        "cursor": {
          "ref": "2758dcea-aee7-445f-8bcb-32aaa79a3f7c",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d14deeb6-20be-427b-9861-cda465811bc5"
        },
        "item": {
          "id": "2d16487a-6f69-4ea8-b4e1-4d0a5e74543b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2e33db5a-4df2-48b5-b292-b34b7e2aa65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46c55be-346d-477d-a9fa-d4bbc0c56af0",
        "cursor": {
          "ref": "bff8162c-fc77-4e9b-9d8f-d30eddfa868c",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5e07ae35-6e61-44e4-abdd-5bf6147522e9"
        },
        "item": {
          "id": "c46c55be-346d-477d-a9fa-d4bbc0c56af0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c12fa6ad-69b4-40bb-b94f-792987e3bff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914b35f6-8cd4-41f4-aa5e-49257d5a48b3",
        "cursor": {
          "ref": "2a6ac945-bd74-48fc-8f42-dfe44edd5902",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e3d1c460-62b7-4736-a90e-892a2822f9af"
        },
        "item": {
          "id": "914b35f6-8cd4-41f4-aa5e-49257d5a48b3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cf1a75be-19b0-474c-883d-cc6d578ec105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f032479c-6326-4b9f-8bf4-a3c66f5c7669",
        "cursor": {
          "ref": "87e006ca-4498-4371-a54c-c653b818f754",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9b18a265-88e1-4c5f-b797-5cde25d07d4a"
        },
        "item": {
          "id": "f032479c-6326-4b9f-8bf4-a3c66f5c7669",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ca34e34e-e603-4427-b9ee-19418ab50a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5d249c-689e-404f-a694-3cebb0293697",
        "cursor": {
          "ref": "cee8ab0d-1e76-4bf8-93f7-41a7edf8c798",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2fe21dd1-d48f-4230-8e98-fdcffc2fc9cd"
        },
        "item": {
          "id": "ae5d249c-689e-404f-a694-3cebb0293697",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f8af908d-dd06-43b5-9540-8c37458d9642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789d112f-c5f1-4bd8-9389-1e98c233e1b2",
        "cursor": {
          "ref": "9f16fc0a-854f-45df-99e6-b9cf8225b4bc",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6e86aea7-7f8c-4d8b-8e64-15dc76b8a9a7"
        },
        "item": {
          "id": "789d112f-c5f1-4bd8-9389-1e98c233e1b2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "73daac07-215a-45ba-a247-1b99272b2bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a42a92b-7247-4daa-89d2-7ddf368b4054",
        "cursor": {
          "ref": "631dbd47-94fb-42f2-8ae9-1ead97d4d84f",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0c64d0b0-3550-4aa3-a92a-ebe1e703f958"
        },
        "item": {
          "id": "0a42a92b-7247-4daa-89d2-7ddf368b4054",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "429c96cf-12be-4014-b839-39034f1aab3d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 27,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2402a82-e678-4bf4-9075-e5fa62a76f9f",
        "cursor": {
          "ref": "a73c6251-eb23-4d57-bd7f-ea2053b1f040",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "46b247f2-8b7b-45b7-b151-8796717785fb"
        },
        "item": {
          "id": "d2402a82-e678-4bf4-9075-e5fa62a76f9f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fd4212b1-b0f5-45da-98c9-db91f52131a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26933f7c-1611-4600-9fe1-eb01b4dac190",
        "cursor": {
          "ref": "b862840a-eed2-4380-939e-6248f30a3418",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "eda13bbd-cced-4d35-80a1-46bc95eb3ddf"
        },
        "item": {
          "id": "26933f7c-1611-4600-9fe1-eb01b4dac190",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "788b8156-451b-4d50-bd39-081eac57303d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4084315-e250-459e-bf51-7549f32393fe",
        "cursor": {
          "ref": "261a2296-4f97-4659-a1d1-f4d7dd09daf8",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "790b207b-c776-4cee-a6ac-059dfe742ea4"
        },
        "item": {
          "id": "a4084315-e250-459e-bf51-7549f32393fe",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "22df0f96-89da-4175-b515-fa8728787144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54368358-edfb-43f6-a070-3dadaae6413a",
        "cursor": {
          "ref": "0e6739f2-092b-4b7c-9223-3b95dac0ef55",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "03bf6679-b94c-4fa8-954d-31d6cbfc661d"
        },
        "item": {
          "id": "54368358-edfb-43f6-a070-3dadaae6413a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ce5243f8-9a3c-429c-b36c-6e05af325c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5518947-adea-433e-884d-d11df02d6b83",
        "cursor": {
          "ref": "a70635e4-a955-4f78-9293-d5673988db1e",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9dc73537-3675-4724-892b-f77b5b5d0be6"
        },
        "item": {
          "id": "a5518947-adea-433e-884d-d11df02d6b83",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1a4f12e6-d57a-4476-a94c-7f29361fefe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0687c4d6-b2a2-4d74-914e-ba4ca8a223c4",
        "cursor": {
          "ref": "8ac254d9-41d7-4292-9c55-c8c6183b722c",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b520dd27-646b-4ce0-94d6-1e39e81c59dd"
        },
        "item": {
          "id": "0687c4d6-b2a2-4d74-914e-ba4ca8a223c4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2e42a51d-e52e-4701-af35-0be6856e91d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5be936-0f5c-4abb-bb5e-ecd83a0b96e4",
        "cursor": {
          "ref": "0453e9d6-e41e-4844-885d-1c320111ba28",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e8da8a71-d629-49db-b798-486db8bdced5"
        },
        "item": {
          "id": "db5be936-0f5c-4abb-bb5e-ecd83a0b96e4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "03370ca5-9961-4bba-928a-24f8494a1baa",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 22,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862e8fde-347a-454c-95a4-9bd09338ca4b",
        "cursor": {
          "ref": "50c327f2-3179-4cce-a2a5-11f9fa388d95",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f8cdaf53-63be-469c-8c25-d5db1b8033e9"
        },
        "item": {
          "id": "862e8fde-347a-454c-95a4-9bd09338ca4b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "54bec7be-07b2-4ed6-8a51-98a971fb3392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9e330b-24fb-4598-a7ce-d6ea77440e0c",
        "cursor": {
          "ref": "f4a2325a-a873-4214-b281-62ea9a84c126",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e7c455f0-df8b-49c2-9189-3fb030890737"
        },
        "item": {
          "id": "bb9e330b-24fb-4598-a7ce-d6ea77440e0c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8639e86d-a9ed-4039-bc4f-249f39b27622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e331c7-725a-480b-9169-6e7f46323dd2",
        "cursor": {
          "ref": "bbec1ca7-9f99-41a3-8342-6c1472b6a5c6",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bd89b09a-ce5e-4023-99fe-9f37ef4bf891"
        },
        "item": {
          "id": "85e331c7-725a-480b-9169-6e7f46323dd2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "89f863ee-f0c8-4596-9661-de020272aa62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2a0217-4670-48fd-bd04-5e0688965c5a",
        "cursor": {
          "ref": "d95bf0df-566d-440a-9e8c-20402f2c4c05",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f42f38b0-36a3-49f4-9fe2-c5543cfdd03e"
        },
        "item": {
          "id": "5e2a0217-4670-48fd-bd04-5e0688965c5a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c0ce70c4-59d3-491e-a65e-e188169ae1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ec6bb6-9e2a-4253-8569-99f553260f01",
        "cursor": {
          "ref": "5850a69b-eb70-4463-9cf5-5fa2f4057132",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2e01c0ba-228e-48f2-bed1-b24a259f1572"
        },
        "item": {
          "id": "03ec6bb6-9e2a-4253-8569-99f553260f01",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "47ae1533-81dd-4ee2-97f0-33e8db0a19d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a16ba2f-6cad-4203-a195-4686c3c7527d",
        "cursor": {
          "ref": "a35c0bdd-a39d-48d2-84eb-e1a85830246a",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d51ec8e0-228b-4995-98e8-7be801f44e33"
        },
        "item": {
          "id": "6a16ba2f-6cad-4203-a195-4686c3c7527d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "48200860-b62f-413e-a27a-955a1b878333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9938df3d-7a13-47d4-b6de-211d0b026936",
        "cursor": {
          "ref": "2dc75eba-c3eb-4c51-a46b-a5d708126ed3",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6ef8d86d-98cf-42bf-8f2b-a1ca1e5aa0b0"
        },
        "item": {
          "id": "9938df3d-7a13-47d4-b6de-211d0b026936",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "58541b04-b4ef-44b9-a37d-dff377c0234a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb105844-c1c6-4b2e-a204-1b85f997dd5f",
        "cursor": {
          "ref": "b181f5f6-0e27-4ead-af65-9b1b03c5d6d1",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "31c70e23-01e0-4c48-ac2d-2c6ad1acb025"
        },
        "item": {
          "id": "bb105844-c1c6-4b2e-a204-1b85f997dd5f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6b1eaaa6-e935-4a0a-b35e-ef3bf9d5eeea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230f22aa-9ebb-4cbc-8559-f47029d08f45",
        "cursor": {
          "ref": "21f25715-6737-493a-b32f-66006fd0d158",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cda9c3fb-9794-411a-abe8-e0c65d69949a"
        },
        "item": {
          "id": "230f22aa-9ebb-4cbc-8559-f47029d08f45",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "383fc0bc-8d44-492d-a4a7-c7a8d1149393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4bd99f-b1dc-4c35-a0fb-2811cd240d7f",
        "cursor": {
          "ref": "dfdc2318-fdf4-46b7-be97-e0dd0fe25934",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0d14016c-bdbd-419e-bce6-59f99b4ae2d0"
        },
        "item": {
          "id": "5a4bd99f-b1dc-4c35-a0fb-2811cd240d7f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ff12965e-c7b9-40ae-99c2-1424cd263dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582b992a-94bf-462c-bb1c-f293846e2264",
        "cursor": {
          "ref": "2c630407-1615-4132-9a54-0215af631f8b",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a4c305f0-d91e-4ae5-8e71-547259e4a743"
        },
        "item": {
          "id": "582b992a-94bf-462c-bb1c-f293846e2264",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "290b649f-c3ce-47a5-a13e-a7f6aed14eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33207a2-5e41-4512-a596-60785da9a084",
        "cursor": {
          "ref": "5fbc562a-e385-45d0-ad6f-6a58731f7ff4",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5b75ea87-5d38-4f4c-aff7-d73faec40689"
        },
        "item": {
          "id": "a33207a2-5e41-4512-a596-60785da9a084",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5c5e31f5-ec77-4828-9518-f58cab1a9e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f85a58e-d184-48b1-a6e3-811cbf323f8a",
        "cursor": {
          "ref": "dad9b9c5-c686-4389-bb84-d7afe990b4ac",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f792a311-6cd2-4378-aded-53c1bb3c291f"
        },
        "item": {
          "id": "7f85a58e-d184-48b1-a6e3-811cbf323f8a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "db18561e-dad4-44c2-8a5d-97dae0a0e0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33fb26b-2c5d-475c-b6bf-e472c73b4198",
        "cursor": {
          "ref": "9b8bd856-9d52-47f5-a4e6-87158cf96c7e",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cb3f9a6f-96ca-4a12-895c-0c1fc3fd397a"
        },
        "item": {
          "id": "b33fb26b-2c5d-475c-b6bf-e472c73b4198",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f5865a02-e2b5-4ce5-99bc-61cc2462c074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93a3ef1-5968-4ce7-a0cb-a7a2fb4d1eef",
        "cursor": {
          "ref": "200aaf79-87ad-4e4b-8fd0-f125793f2b62",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "69a68220-5c91-4a84-9e7b-299aed1cad3b"
        },
        "item": {
          "id": "f93a3ef1-5968-4ce7-a0cb-a7a2fb4d1eef",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6ae89a0c-0e54-41b8-8038-8f48c27d0fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8dc7bae-9714-4220-8f60-725ce1f04c22",
        "cursor": {
          "ref": "81b47da0-afa2-40c6-8878-3604af74499d",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3505b658-b15c-4434-abec-f582bcba140e"
        },
        "item": {
          "id": "c8dc7bae-9714-4220-8f60-725ce1f04c22",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1d7af8cd-2d35-4ac3-8632-0a4ee01bc4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae1828e-9163-4d75-8bc7-d57f51b373cf",
        "cursor": {
          "ref": "0a923f42-a8b6-4b67-b742-74e9bb5ddad7",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bedbb18d-e59b-40a5-a6a7-e6daa3468dd3"
        },
        "item": {
          "id": "eae1828e-9163-4d75-8bc7-d57f51b373cf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "99ef381f-0121-43f5-aad3-852a86a2de41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b4235c-d8bf-401d-8db2-db7b20bce785",
        "cursor": {
          "ref": "7dcdf201-d861-491b-9457-8d883c070d4b",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7ec39f2f-05fc-472c-804c-83e5fcc70076"
        },
        "item": {
          "id": "f6b4235c-d8bf-401d-8db2-db7b20bce785",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "20233ad5-c98a-4522-9103-bdafaf02573c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df966c08-7772-4190-9201-d5b489aaf8e4",
        "cursor": {
          "ref": "d5f6c991-216f-49c0-89e2-3938e5dba4f6",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0688575c-eb44-4413-8cf0-8c4c4417547d"
        },
        "item": {
          "id": "df966c08-7772-4190-9201-d5b489aaf8e4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "beef1237-f4e0-49af-b3e8-c6ed0a6eead8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6054f986-70f0-4c66-b9cd-f9dfbd4be80b",
        "cursor": {
          "ref": "0286ec5d-42ad-4fc2-bd67-7d7ab7ed24e7",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c39d65dc-03c5-493e-844b-236f1035b367"
        },
        "item": {
          "id": "6054f986-70f0-4c66-b9cd-f9dfbd4be80b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f6c8ffcb-3d05-4e59-b33b-e06bfc3d9261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca56587-f150-4b43-97b6-106feebe27f0",
        "cursor": {
          "ref": "cdc4af0a-9c94-460b-a8b3-d2204c7cca3d",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "aaa55b42-4fab-462e-8ac6-c0e670ab54b9"
        },
        "item": {
          "id": "6ca56587-f150-4b43-97b6-106feebe27f0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "be121377-1061-4163-a5cf-6002348bfb26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028be640-78e5-45c7-a8da-8db7198090e9",
        "cursor": {
          "ref": "6d9c6fd8-cf24-4c8d-a33d-dd3a1c4767bb",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0a321ce4-ef1b-43f2-a5bd-19f30ada696c"
        },
        "item": {
          "id": "028be640-78e5-45c7-a8da-8db7198090e9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ccee82c1-5c86-417f-98ef-4ad2d6ba92f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966cb289-5bee-45d5-95fc-1f411e569987",
        "cursor": {
          "ref": "1ce8967e-d1e4-4bea-a6f8-64a95a494b95",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "049251e0-a7ac-45f5-b0e2-4ffdbe2bc7c3"
        },
        "item": {
          "id": "966cb289-5bee-45d5-95fc-1f411e569987",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ab04271f-ea75-4cf9-8cc3-6bae629a8e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24d0b6a-936b-4957-b863-bb617d000e12",
        "cursor": {
          "ref": "bb54db2e-f8a6-4090-ac6c-39ad3f7e677d",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1327caf8-065a-4503-b930-6dec45f46f48"
        },
        "item": {
          "id": "b24d0b6a-936b-4957-b863-bb617d000e12",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0190eb5e-02a7-47e0-97bf-19a84992b8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c7c90d-e5ab-452f-8265-18126aef5bd3",
        "cursor": {
          "ref": "2c8101e5-0991-4990-9a20-b00222e86902",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b1ed18f5-0caf-4614-b4d3-10f627f85362"
        },
        "item": {
          "id": "23c7c90d-e5ab-452f-8265-18126aef5bd3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5b96e609-05c0-4f81-aa46-8e375210c2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f8aec8-24f7-4c9f-8fb7-e9bd85688f74",
        "cursor": {
          "ref": "b833febf-fb76-443a-9018-bc7069834b27",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2226b654-1ae5-47ac-a5a1-0c6834e166f4"
        },
        "item": {
          "id": "64f8aec8-24f7-4c9f-8fb7-e9bd85688f74",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a849039b-0c4c-4661-87cb-a94ca380e547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19bf45a-7b4c-44ae-b66e-02dcccc873a6",
        "cursor": {
          "ref": "cd8ff292-2b4f-430b-8743-7b30e6a81735",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1a6c503d-cdef-4e70-a985-1881f868e47b"
        },
        "item": {
          "id": "c19bf45a-7b4c-44ae-b66e-02dcccc873a6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1bd7c3aa-6610-4dc1-a330-bd0f07cdf836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543a6958-71f6-4beb-ae4b-bbf874618f64",
        "cursor": {
          "ref": "afc6e645-be47-491c-8886-0096be2d1fc5",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "59398135-5b92-4ebe-98f8-3ef3eaa523c9"
        },
        "item": {
          "id": "543a6958-71f6-4beb-ae4b-bbf874618f64",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "45cf8c00-093a-4df2-9acf-56506281748e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67200e83-d246-49ea-8cea-d8fa7b259cc5",
        "cursor": {
          "ref": "e991e1f9-36e4-4aa2-aa81-0b3b27b031b0",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e8c8026b-4beb-4b57-a69d-36598f5314d8"
        },
        "item": {
          "id": "67200e83-d246-49ea-8cea-d8fa7b259cc5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d291218c-aad5-4aac-b682-4e65b354f24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d0eeb7-99e8-4d4d-895a-f58a735c9852",
        "cursor": {
          "ref": "3401b523-9627-4ce4-900c-944063427c6f",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f9d37b40-e615-4fc0-af7f-4039f429e80d"
        },
        "item": {
          "id": "c6d0eeb7-99e8-4d4d-895a-f58a735c9852",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d7203257-f6fb-4452-974e-8e08f68da63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e80747-137e-4f7d-b514-ce1cd84b8ac5",
        "cursor": {
          "ref": "8b138021-df5c-49af-af70-07c66eab6120",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "fd91df4f-be56-4ae4-b587-e14a6f989bbd"
        },
        "item": {
          "id": "73e80747-137e-4f7d-b514-ce1cd84b8ac5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "669966bb-5d8f-446c-ba07-d824c5d9545d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a1ef20-3a2f-4243-bed0-8c6ddbcb5c85",
        "cursor": {
          "ref": "4cbb90c3-bf13-4f7f-b70a-251e7bff944e",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a6acd635-ced9-4975-a059-a7df85044cd1"
        },
        "item": {
          "id": "c7a1ef20-3a2f-4243-bed0-8c6ddbcb5c85",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4acdeba2-7ea4-4d05-ac34-0a2d9a9c8061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194cf198-97ca-4755-abde-fa7a293d9369",
        "cursor": {
          "ref": "0cb06ff2-af16-4e7a-bcd9-9d2dde5daa48",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0145d13a-5851-486b-8d0f-91f3ec93f42b"
        },
        "item": {
          "id": "194cf198-97ca-4755-abde-fa7a293d9369",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a4cab371-d984-4cb0-ac99-30ad9529f7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c709e2a4-49ba-4465-8686-dca6582c07f3",
        "cursor": {
          "ref": "5987411c-d700-4a8e-9a27-182a27782afc",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7bc1dd21-ddff-42d5-aeb1-44b6431f1003"
        },
        "item": {
          "id": "c709e2a4-49ba-4465-8686-dca6582c07f3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "84096a23-e069-4fc8-b4b7-ad8d4c46021a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e105dbb6-8935-49e4-bcce-b6ba886efe24",
        "cursor": {
          "ref": "b83721ce-da80-4217-9b53-e7a5a8b1e677",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7d60cecf-b617-4eac-9c2a-9d904e4ad791"
        },
        "item": {
          "id": "e105dbb6-8935-49e4-bcce-b6ba886efe24",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "08b5d4f0-11f9-47d0-9951-0d294d0f310b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab522f81-69e4-425f-baa9-0930e85992a2",
        "cursor": {
          "ref": "6edbe738-3cc9-4586-acac-01ccd1fce3c5",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "66df5002-e95b-4c68-910c-6c8e959e4ff1"
        },
        "item": {
          "id": "ab522f81-69e4-425f-baa9-0930e85992a2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fedae691-bea3-41cf-ae94-ebc1298f6e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebffade-02f5-4a47-9585-9011497a6834",
        "cursor": {
          "ref": "08b6516a-7a34-4510-ac0c-8c9c8ca43ff1",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "602ca20c-7180-439a-934b-434018afd6cc"
        },
        "item": {
          "id": "bebffade-02f5-4a47-9585-9011497a6834",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b4b98a0c-99b2-41ef-8823-35cfc613b97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33b731c-6a7c-4077-bb08-db8992d608ea",
        "cursor": {
          "ref": "e47f7188-02e1-4f75-85ed-5ff6c67e0ee0",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "32c51d77-6611-4c7f-a802-b1423bb105a6"
        },
        "item": {
          "id": "c33b731c-6a7c-4077-bb08-db8992d608ea",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4ba3f71e-5dda-4297-acdb-2d741330daf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93422055-b07c-4178-8943-2ef7cbe64250",
        "cursor": {
          "ref": "30446130-2206-4c73-9c3d-95d21c5381d0",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d972028f-b44a-4c2c-b245-c9acd76c6ceb"
        },
        "item": {
          "id": "93422055-b07c-4178-8943-2ef7cbe64250",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0d4f2630-618d-4c31-8f46-d6199e4b83c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915b839a-e614-483e-b118-f333f4114204",
        "cursor": {
          "ref": "7f1b0330-62e6-461d-bd81-f98c8303abbe",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "53532e67-0fe4-4343-97f6-075506bd1294"
        },
        "item": {
          "id": "915b839a-e614-483e-b118-f333f4114204",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b87cd43d-830d-4265-b8fa-e7d92c4d06df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6feabb41-fdde-4eee-bb31-8f351cc64c5b",
        "cursor": {
          "ref": "5d86d200-639b-48da-acda-c97565349cbc",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e7e36a74-3516-45fc-af88-b8e5fa3073c1"
        },
        "item": {
          "id": "6feabb41-fdde-4eee-bb31-8f351cc64c5b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d01dfb49-4b3b-453c-ab28-9371c67f5493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac2795a-8996-43c9-b422-4aaab375aae4",
        "cursor": {
          "ref": "d3019d9d-8e64-4b55-8afc-a6d37cfe9461",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f560d68c-c372-4db6-bbb3-d2ad0a53c417"
        },
        "item": {
          "id": "bac2795a-8996-43c9-b422-4aaab375aae4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "40363f0f-bd4d-4a0e-a7ac-fd76fc673fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3351be-26c1-4fb9-a501-6fdc3a89bc1c",
        "cursor": {
          "ref": "67a7e555-4a18-4bb9-b88e-5b83990525aa",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "147828b0-37ad-4b8c-b35e-b3d1cc901343"
        },
        "item": {
          "id": "ed3351be-26c1-4fb9-a501-6fdc3a89bc1c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "09b4083d-3515-4de7-b3e0-c71b5e15832e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b859af3-316e-4988-8948-73e99a724b58",
        "cursor": {
          "ref": "8bcb9b11-d2b1-4b4c-9bd5-20e05bd9e4a6",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "584b51b8-c527-4f96-9a8d-321a6f3b3185"
        },
        "item": {
          "id": "6b859af3-316e-4988-8948-73e99a724b58",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "78a5f8b9-353f-4e1d-8f3f-899f0c7aff59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e085a4-4519-499e-91fa-5b2e6e5467bc",
        "cursor": {
          "ref": "9ffcdeb6-f4f1-44a0-9d32-c858d5df4541",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fa65d7b6-c991-4a68-bcd8-2eede4be063e"
        },
        "item": {
          "id": "b4e085a4-4519-499e-91fa-5b2e6e5467bc",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "59e5e3d0-0dbf-469d-a08b-f26ccda57c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a99deed-8576-40f8-b2e4-a5bfbdd0bb34",
        "cursor": {
          "ref": "f5f510f6-d6a6-49ee-a794-fa31dc0886c7",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "710bada3-1984-44a5-9a5d-cfc9bc24d917"
        },
        "item": {
          "id": "2a99deed-8576-40f8-b2e4-a5bfbdd0bb34",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2d384e56-8035-440b-8122-2239b9403008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870c9766-f1c5-41a4-9766-4536eae05b08",
        "cursor": {
          "ref": "57e9eac4-8220-4174-9fc9-797abf5d103e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c5987698-ae2c-4e9e-96e7-abe6cdc24b69"
        },
        "item": {
          "id": "870c9766-f1c5-41a4-9766-4536eae05b08",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a7d8f2c4-4b5d-48ed-bc66-4bd747503bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f325d85f-e0d8-413b-89c8-f5959dea9b06",
        "cursor": {
          "ref": "413edea5-ca71-4686-9aaa-cdfdd82f2514",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7857a641-4793-49ac-abe3-368c899f5590"
        },
        "item": {
          "id": "f325d85f-e0d8-413b-89c8-f5959dea9b06",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7f42751c-7c2c-4821-8e6e-af92a355cbbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2902274-c91e-4799-babd-9fe5b8a588ad",
        "cursor": {
          "ref": "c8c1962b-0559-4a17-a2de-380ae318f36d",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "20ce6887-4772-4df1-8bd7-b0f8188905e1"
        },
        "item": {
          "id": "d2902274-c91e-4799-babd-9fe5b8a588ad",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "16832356-e365-4003-b223-17ccc8e2b6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d486e00b-72b4-4cc6-998f-7fd0980bfdee",
        "cursor": {
          "ref": "cbb47785-a054-48df-918f-f97888bdb89a",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "aaf0e33f-6273-4efd-8efe-e7d3f3d32673"
        },
        "item": {
          "id": "d486e00b-72b4-4cc6-998f-7fd0980bfdee",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "559fbabb-8462-4f45-92b2-f4674e35023e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe29510-58cd-49c9-a7d0-c33f5ccb37f4",
        "cursor": {
          "ref": "9611d65e-ffe9-41ff-b589-4692de9a3381",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c14a1d5e-99b1-431d-b77d-e95b58eaa695"
        },
        "item": {
          "id": "8fe29510-58cd-49c9-a7d0-c33f5ccb37f4",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "956ca14f-5f28-4123-9780-a912642bed40",
          "status": "Created",
          "code": 201,
          "responseTime": 38,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da39ae4-422b-4580-9c8f-e8b0ecbc1916",
        "cursor": {
          "ref": "b07ddbb8-21de-4083-89ec-7def9142c987",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9062b846-2f1c-4609-adc2-6a7b5d66d74e"
        },
        "item": {
          "id": "5da39ae4-422b-4580-9c8f-e8b0ecbc1916",
          "name": "credentials_issue"
        },
        "response": {
          "id": "20123165-5e3b-48dd-94b9-ad791287d3a8",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "0784b067-45b3-4ca8-a5aa-f861425b86c0",
        "cursor": {
          "ref": "0afa6fb7-1ff2-4a1e-9b22-c2a141bb62d6",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "25a496b9-365e-4346-89c1-d7084a8906d9"
        },
        "item": {
          "id": "0784b067-45b3-4ca8-a5aa-f861425b86c0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "67826b18-7064-4edd-b527-1c872cf5ae37",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bedac68-e46b-4680-b2c0-e889f22e68c6",
        "cursor": {
          "ref": "d37d1239-2a2a-4673-be04-dba303796948",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a1403e1a-0c7c-4660-8e94-1516e84aa8c5"
        },
        "item": {
          "id": "7bedac68-e46b-4680-b2c0-e889f22e68c6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1a940f6c-bf93-4d41-8a8f-e4cd48faff26",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9f2414-7d82-4b77-ba4c-aadabac1cdd8",
        "cursor": {
          "ref": "ad53794d-7eed-4c46-95ef-e4165656fa5b",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "df88e8d6-d7e2-436a-a5b2-0eb0609d1e69"
        },
        "item": {
          "id": "3f9f2414-7d82-4b77-ba4c-aadabac1cdd8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cd8caed6-092a-4ab0-a6d3-b27292403b51",
          "status": "Created",
          "code": 201,
          "responseTime": 39,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae055e0e-429e-4ef8-90c4-7bb38ad39f60",
        "cursor": {
          "ref": "eb822bb4-6bd2-449c-bad3-ba1bbaac005e",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "13829a2e-bbb0-4b55-9c44-284c355c29ba"
        },
        "item": {
          "id": "ae055e0e-429e-4ef8-90c4-7bb38ad39f60",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8d1732f2-089e-456e-964b-1e320312ee56",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4d6f52-fb0b-4b12-92dd-cd159d3709c5",
        "cursor": {
          "ref": "3cb68bf5-5594-40b1-95bc-d240424486ed",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d23899a1-eced-4bd1-88b4-2a735b74d37f"
        },
        "item": {
          "id": "6a4d6f52-fb0b-4b12-92dd-cd159d3709c5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "967ad2d0-4293-49a2-9607-361d1e990a99",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa99d5f-1ff9-402d-bc1a-a1b6a3816de5",
        "cursor": {
          "ref": "053166cb-dc05-4789-aaf9-f661b26ede71",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b57682cd-9a34-4c7f-846e-28db8233aeec"
        },
        "item": {
          "id": "2aa99d5f-1ff9-402d-bc1a-a1b6a3816de5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "aeeaa53c-7b53-4e3c-b6d9-06acc19e7e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974dc4ac-491e-435e-b8b0-da8ff3993cfb",
        "cursor": {
          "ref": "8385c16a-5ec8-4110-acb9-d9a49fcdbe55",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2bc8d4c1-fa1d-49c4-9893-e735fbb13f62"
        },
        "item": {
          "id": "974dc4ac-491e-435e-b8b0-da8ff3993cfb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "13c083ab-9434-43b7-ae88-4c958938fba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e33421-04a8-44d1-b5e2-503e385a5bdb",
        "cursor": {
          "ref": "ae438950-e3d7-4c99-a00c-6e3ee5b50049",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5890e645-579a-4cfb-8216-3650d7df363f"
        },
        "item": {
          "id": "10e33421-04a8-44d1-b5e2-503e385a5bdb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ddeac9dc-f83c-4b4d-bc20-68dd4fd05105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857043fa-e23a-4088-8a6a-02c970336174",
        "cursor": {
          "ref": "ecf716c9-794c-45fb-9efe-68d8b9695c6f",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a15bbf6c-5280-4009-9e44-19c3a4aca79a"
        },
        "item": {
          "id": "857043fa-e23a-4088-8a6a-02c970336174",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9f0b1825-f302-4184-ba22-a1a4c8512676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ab2b33-ae52-46c1-972d-6ff63bdcc50a",
        "cursor": {
          "ref": "8c026af0-bd15-4449-9186-6a5e7db482fa",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f37bb46b-bcb8-403a-aae3-d99c8fdac56b"
        },
        "item": {
          "id": "63ab2b33-ae52-46c1-972d-6ff63bdcc50a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a66f1f06-4fbe-4e56-8a64-b0d9182cefe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ffdd7fa-20b1-4535-862f-fd635418195a",
        "cursor": {
          "ref": "db056032-2d4c-46e9-be4b-0cc366df7a09",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4e7e9ac3-2a8d-444c-96b7-584d86c04b82"
        },
        "item": {
          "id": "0ffdd7fa-20b1-4535-862f-fd635418195a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c873b603-c96d-46cd-9bf3-794fa48ccb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0031af0-1c0a-4016-8b7d-fc4715a4670b",
        "cursor": {
          "ref": "2491b9b8-c8ee-4144-b243-c6f266483c8d",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "fb7d468c-c4f2-466b-9319-75e9a0580393"
        },
        "item": {
          "id": "a0031af0-1c0a-4016-8b7d-fc4715a4670b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "89383dfd-a21f-4a53-9411-4e69af2cc233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e0e890-bd10-413e-9b57-c47b94eb6824",
        "cursor": {
          "ref": "5f53bd55-e39c-4c95-b9e0-3ece6fe31375",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "28819835-a73e-42ec-9ac8-f61ca24108a5"
        },
        "item": {
          "id": "52e0e890-bd10-413e-9b57-c47b94eb6824",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "074c2cb7-8594-4fae-ba8c-16b51f0822d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11f72f7-fc9c-4f0f-b169-d2148ab0c7a6",
        "cursor": {
          "ref": "e45d5c55-5691-48c6-9cfa-9e2f05432256",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5569bc86-dd4d-43ff-8da3-b7f981ccdfd8"
        },
        "item": {
          "id": "c11f72f7-fc9c-4f0f-b169-d2148ab0c7a6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "44693315-171c-422d-a931-d61246b70eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35abdc4-9259-49c1-817f-f9862e3ac802",
        "cursor": {
          "ref": "901031fa-785f-4a9b-bd1b-69b600e849c3",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bd7efe83-4292-4854-96a6-099f9d991cc4"
        },
        "item": {
          "id": "e35abdc4-9259-49c1-817f-f9862e3ac802",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "97437cd2-cf15-497c-885b-bdfbe1674ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9523c719-581c-40d5-a375-3b42eb1f7753",
        "cursor": {
          "ref": "8d6da6e7-4d03-4cb8-8b18-9e4a23d57e3d",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "85f474a6-ce51-4dac-abd1-f1edc5671e7e"
        },
        "item": {
          "id": "9523c719-581c-40d5-a375-3b42eb1f7753",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1d6b6007-c82b-4223-a6a5-945ba0b385c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0c08fb-6846-46e6-a5df-fde1d8d150f5",
        "cursor": {
          "ref": "509b1f50-42aa-42df-b127-086a59c280fb",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3f6dbef5-c1b1-4688-8018-e5842851b15a"
        },
        "item": {
          "id": "eb0c08fb-6846-46e6-a5df-fde1d8d150f5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "16dab9d8-ef95-427f-9054-d937a6af1f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca85e1e-6eeb-4989-aba9-2978cf0c24b6",
        "cursor": {
          "ref": "a3ee5ce0-acab-43cf-b23c-200a0b835f4b",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9083e6e0-dd94-468b-9169-9c5ba360531e"
        },
        "item": {
          "id": "9ca85e1e-6eeb-4989-aba9-2978cf0c24b6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5bd50005-89e6-4639-8ece-46593e6a7adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a766596e-09e4-48a2-bd28-7a6f373e170b",
        "cursor": {
          "ref": "aed14a1d-4dc6-484c-b53d-a68f4cdc1194",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "875611df-59bb-4d2e-963a-f5dc70230a7a"
        },
        "item": {
          "id": "a766596e-09e4-48a2-bd28-7a6f373e170b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ec7d537e-c7cc-45fd-8f3d-020c08d2ff91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc79d5b-71f8-4b28-af05-c204392ebe28",
        "cursor": {
          "ref": "87580a26-48bf-47ef-9260-8fb87f4dfb9c",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "efef0262-f650-4257-b0f8-f11daca08dac"
        },
        "item": {
          "id": "adc79d5b-71f8-4b28-af05-c204392ebe28",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "358360f6-9c40-47e6-b435-b3fa19a259d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067f7a84-d88d-49c0-a3c2-346deecbd378",
        "cursor": {
          "ref": "1a623b87-8692-46f8-b884-e82a8e234caf",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "af3077b6-98d6-4ecb-8686-0e0752de8ba0"
        },
        "item": {
          "id": "067f7a84-d88d-49c0-a3c2-346deecbd378",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "339b82a6-51a9-4225-8584-06a31eb727bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f2a709-1e06-4e3b-b05f-8cbfe4b29525",
        "cursor": {
          "ref": "618b76bf-3777-47b2-863c-e34920d2fc29",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "46903742-0099-46b9-b799-a434436552f0"
        },
        "item": {
          "id": "96f2a709-1e06-4e3b-b05f-8cbfe4b29525",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cfb6d83b-376b-4ef7-8fca-67e61e27a9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7327f6-5bf4-4181-8ca7-d811ded155e9",
        "cursor": {
          "ref": "c6775fab-5f80-4291-bd7e-fbc64bcaa039",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "65d01a57-722f-475e-a52f-7db1c53b44f4"
        },
        "item": {
          "id": "db7327f6-5bf4-4181-8ca7-d811ded155e9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "940fcbef-408d-4f84-9d2b-50fc9da5d67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7c2fb5-b424-40df-8760-806fbfe9658c",
        "cursor": {
          "ref": "97da67e8-4bc9-4033-9141-df676ebcad55",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f880b948-ab1b-46ff-8c66-cee0813405ea"
        },
        "item": {
          "id": "1d7c2fb5-b424-40df-8760-806fbfe9658c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3686ceab-ede1-4874-86ef-d33c2e45bd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879164c6-2603-444c-a680-07e093eb711a",
        "cursor": {
          "ref": "1e6384c9-d9ef-4b90-8c92-af51ee311a36",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e915a096-f78e-4260-b8f0-8eeb666ad313"
        },
        "item": {
          "id": "879164c6-2603-444c-a680-07e093eb711a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "acf0fc0e-d488-419a-9a02-d1a4b5bf607b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fd95cc-04e6-45c4-9eaa-0b232a78e366",
        "cursor": {
          "ref": "19e6d667-cb78-4dba-8b79-d66902b3ca7c",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c549d528-3f0b-4b35-8469-8325df1c8067"
        },
        "item": {
          "id": "37fd95cc-04e6-45c4-9eaa-0b232a78e366",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "95a82a71-54b9-4b56-b224-68684baba0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2737868-8c60-4e47-8884-54cb7c69c541",
        "cursor": {
          "ref": "c02953a6-c78a-4ab6-82d4-93c98f41639e",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b79060f2-a25e-42f2-988b-022dd5a29080"
        },
        "item": {
          "id": "c2737868-8c60-4e47-8884-54cb7c69c541",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "597947e2-c848-4270-89bb-e6b625c1a5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83df77a6-c499-4cc0-8328-4572cc40878e",
        "cursor": {
          "ref": "f4382810-1bd9-4cc9-8ef6-9f229dcf17e3",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "69415ad2-7f02-4643-9a2d-e9c80b41fb33"
        },
        "item": {
          "id": "83df77a6-c499-4cc0-8328-4572cc40878e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8e1173b7-bc23-4141-9a94-dbedb833b625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bc8436-906f-4099-a213-949680a009ca",
        "cursor": {
          "ref": "044405a3-9582-4517-a42d-1f177bc384a5",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c82ee864-e356-4110-b2aa-8c80758c9166"
        },
        "item": {
          "id": "02bc8436-906f-4099-a213-949680a009ca",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8781d46d-9805-4d1d-8de5-91102c98983e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688337e6-403a-475d-a85d-ab094b7650ce",
        "cursor": {
          "ref": "18500237-ee68-4cec-92a5-f6703006dd1f",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "aadb1921-a9f2-4df6-a712-690fe32c3e36"
        },
        "item": {
          "id": "688337e6-403a-475d-a85d-ab094b7650ce",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e5f88422-620d-496f-87ca-5aa8aad39c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821ed062-0d30-4ba2-995a-806b7f46fc3d",
        "cursor": {
          "ref": "7c4f62af-3952-46e6-802e-bce9d9c2f0dc",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "32be0095-ae4f-4c02-b321-f899f9700abd"
        },
        "item": {
          "id": "821ed062-0d30-4ba2-995a-806b7f46fc3d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "28242d94-886b-4190-b034-a204aceedd38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50436d84-edf4-4e15-9c96-a8c2de1ecab3",
        "cursor": {
          "ref": "f329c18e-9b23-4965-9a6d-968df9d18384",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f38f277a-6f96-4842-8876-b69d2074ea39"
        },
        "item": {
          "id": "50436d84-edf4-4e15-9c96-a8c2de1ecab3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "49c5f6a7-c09e-4ef1-84f8-653bd83a674a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684fa39d-21fc-4528-9496-670a8e733937",
        "cursor": {
          "ref": "7cf0e392-181a-453c-b319-df1a0ec80227",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "63f5da6c-2ee1-4141-9950-f6998e8173a7"
        },
        "item": {
          "id": "684fa39d-21fc-4528-9496-670a8e733937",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ec6447bb-7b5a-4a37-a30b-b3cad059d416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683646b8-01ef-45a2-98b4-ab80d67ad63e",
        "cursor": {
          "ref": "ec688eca-0c38-46f0-9dc2-a42ba8c2f7d3",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d16522fc-561d-450c-91d7-e01262837494"
        },
        "item": {
          "id": "683646b8-01ef-45a2-98b4-ab80d67ad63e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "dbe9d84c-217d-46b7-93d9-4bd2e8be32ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55012fc-3c78-4e73-af29-ae4d9aa18bc9",
        "cursor": {
          "ref": "a9c6da24-f6bc-4de6-8266-73f7362656ad",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "36861468-c20c-4df7-90b3-798bae88e7fd"
        },
        "item": {
          "id": "f55012fc-3c78-4e73-af29-ae4d9aa18bc9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "02334a1a-586c-40ce-bd24-eecb314adc43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463b3ef5-27dd-4a95-8842-d0c057c8722d",
        "cursor": {
          "ref": "d59f52a0-48db-4906-b80b-c6232f8f4a86",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2c465a7c-e2c7-46a1-80cb-7c79d1c2d712"
        },
        "item": {
          "id": "463b3ef5-27dd-4a95-8842-d0c057c8722d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f1617b97-63ce-4126-8f5f-b1422c8d4667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c5102f-c195-41cd-b7ef-6b9ba8db0b81",
        "cursor": {
          "ref": "08ec7c36-938b-495b-9cfb-64c0698782e8",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1fc00f33-41b6-48ea-aa76-a7ea9fe9710a"
        },
        "item": {
          "id": "45c5102f-c195-41cd-b7ef-6b9ba8db0b81",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "97212b17-d52c-40a9-bf97-17805ffb8cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f425ceb-409b-4a08-b696-3d0c2fff2f7c",
        "cursor": {
          "ref": "fa3561af-5442-4d95-b126-77deaa34a1d6",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ffc3a822-f0e7-4314-a904-c74bfebe4eea"
        },
        "item": {
          "id": "4f425ceb-409b-4a08-b696-3d0c2fff2f7c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9fe79196-539a-41af-944c-1268c7371500",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c788459b-ec27-4836-a81c-1d51178cb2b3",
        "cursor": {
          "ref": "b32c40e8-94f2-4d83-928f-eebb9322789a",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "243b08ca-0aa3-4a62-99e7-902526759928"
        },
        "item": {
          "id": "c788459b-ec27-4836-a81c-1d51178cb2b3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "72a0ce85-f27e-41c7-aaaa-e91a9a67d67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e16fd8-d6ec-4da3-966f-07df6f8f365d",
        "cursor": {
          "ref": "50b82c1c-487f-4e01-9636-2f456ed83e9b",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "315fdd38-517e-41ca-97f0-f07059033260"
        },
        "item": {
          "id": "f1e16fd8-d6ec-4da3-966f-07df6f8f365d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3667cd8a-f44a-49a8-80ce-1239aa0ff0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f13ab1-f2e7-4cdf-9672-8388edeff0be",
        "cursor": {
          "ref": "d25c0a86-9bf8-4cd0-ab12-7ba6ad6b5126",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8090c5f8-2527-4182-8814-3ab7eb8b50fa"
        },
        "item": {
          "id": "89f13ab1-f2e7-4cdf-9672-8388edeff0be",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a966e8ef-6aec-4705-a6d7-feb689aeccf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b885b0b-b6de-42f2-9d83-49757bcb2291",
        "cursor": {
          "ref": "a76cbf08-02ff-4200-95ca-5428db36a461",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4d8de5c6-129d-4e0e-aef6-20c9a8328caf"
        },
        "item": {
          "id": "0b885b0b-b6de-42f2-9d83-49757bcb2291",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d23b88dc-d9f6-4e49-860b-21f5310a92ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0fa197-6de0-4b16-8b9b-a6cb79381433",
        "cursor": {
          "ref": "557a987e-719b-42a5-b23d-d7ca4f209381",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c610dcf0-d75b-4920-947b-8e5beba396d4"
        },
        "item": {
          "id": "ee0fa197-6de0-4b16-8b9b-a6cb79381433",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e661a4ee-b2db-4149-9b49-b94f38c5cfa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da772b53-81c5-47ec-8593-f4a0ada0caf7",
        "cursor": {
          "ref": "33931c84-4a57-4d53-b482-c217bddb47c1",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "57c15f45-c393-433a-8db1-57ac3dc5ab9b"
        },
        "item": {
          "id": "da772b53-81c5-47ec-8593-f4a0ada0caf7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "821713d2-6c4a-4b3e-8b53-c824a5cd8b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf5d3c2-7b57-4603-936f-90b8efdb09d8",
        "cursor": {
          "ref": "652ae6b3-92ac-41e3-ba32-3cce4f1c34f3",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1135d26c-4b31-43c8-8388-2dd99a2b4c89"
        },
        "item": {
          "id": "bbf5d3c2-7b57-4603-936f-90b8efdb09d8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4399ea05-f257-4520-94fc-1eb1a9eea74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98cb5cc5-ab9e-47ce-90a7-7ae2a3fbc3db",
        "cursor": {
          "ref": "e5ccac26-9d27-4001-8c15-3bd849876721",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9bf85ba6-1621-4330-be76-dc88d389ecfd"
        },
        "item": {
          "id": "98cb5cc5-ab9e-47ce-90a7-7ae2a3fbc3db",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7bd95372-6ef2-4d14-a1d6-e2cee922e9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc8810d-8372-4ea6-8fbd-72036daaa8a7",
        "cursor": {
          "ref": "aeb7c5ec-a07a-445f-99ac-90a98911c571",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "86a2c419-c1c8-446f-b8fd-6b7e37ae8635"
        },
        "item": {
          "id": "0cc8810d-8372-4ea6-8fbd-72036daaa8a7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e69b5482-ba1b-4619-b279-595550e221c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54046ff4-b13d-4208-9136-aa48250cf2a1",
        "cursor": {
          "ref": "059a7aec-c6f3-4a37-81e3-75dfbfc95cd4",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c598cf2e-64dc-40d2-bb3d-9eae0e6d501e"
        },
        "item": {
          "id": "54046ff4-b13d-4208-9136-aa48250cf2a1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "95a63384-84d5-4274-abdd-cb12f9554ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c796f630-87cd-46db-ae6c-f2b0d211e86c",
        "cursor": {
          "ref": "c5ca1cad-dcff-4fb7-be1c-d2103a65da36",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "447ea164-8837-4182-9e60-0126680dc20b"
        },
        "item": {
          "id": "c796f630-87cd-46db-ae6c-f2b0d211e86c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "65690493-4b6e-4413-9331-aba74c856c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd964f9b-5c5e-43d9-9372-80450ab3f9c9",
        "cursor": {
          "ref": "4cfde6a7-2efc-404c-bd8a-6da0ae5a500b",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "756ce310-130c-4cf3-81de-8623d35ff4fd"
        },
        "item": {
          "id": "bd964f9b-5c5e-43d9-9372-80450ab3f9c9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "52962198-bc20-4ca9-8f03-2652617c3b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36eb314-e5bd-44ee-9cd5-3a477cbc6fbf",
        "cursor": {
          "ref": "f96f9a03-6d58-4220-b0ed-c8001a940ab4",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "39459397-6adc-4e6b-b6f4-bff3fe569fb8"
        },
        "item": {
          "id": "f36eb314-e5bd-44ee-9cd5-3a477cbc6fbf",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d7573f66-a966-43db-9b1f-b2f7ebe08b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506ed296-3cd3-474b-87c4-25307d6f0030",
        "cursor": {
          "ref": "758b5059-939c-4ec4-9f32-15280e19daec",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "afa30a3e-c6a4-47a4-882f-54d998976f30"
        },
        "item": {
          "id": "506ed296-3cd3-474b-87c4-25307d6f0030",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d1080e63-056b-42dd-a6af-faa95ce667c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f17770e-c3ad-4d27-b99b-3149a45df358",
        "cursor": {
          "ref": "747be498-cf79-4dc0-ba5c-f8923c013211",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "730e2a17-122a-4f81-bf6b-75d34a9ec039"
        },
        "item": {
          "id": "4f17770e-c3ad-4d27-b99b-3149a45df358",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d7cf2d10-5540-4e06-b234-f1649278f9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff15681f-0df2-48b9-8585-797913008d38",
        "cursor": {
          "ref": "3107c27a-ac60-4823-a563-8a27a6592bdb",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0beab98d-8535-4bd8-b547-4e8ad3f04929"
        },
        "item": {
          "id": "ff15681f-0df2-48b9-8585-797913008d38",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0a769309-912c-4dcb-acbf-1dc581eaf407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f56b0ba-0dd9-472f-88d9-742ae4b95535",
        "cursor": {
          "ref": "64400675-d64b-43c4-922d-24ba562cfe70",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4f9b4ef3-2579-49e3-8b53-fb7889a2bb07"
        },
        "item": {
          "id": "8f56b0ba-0dd9-472f-88d9-742ae4b95535",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "18f61471-1fde-4428-8338-981f97dea53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dae8d62-9a5c-4aea-95f5-cc9202ba6a20",
        "cursor": {
          "ref": "e266097a-7510-4bd3-8299-1be0416bf2b2",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ab8c182c-de74-4286-a258-e961faee23fe"
        },
        "item": {
          "id": "5dae8d62-9a5c-4aea-95f5-cc9202ba6a20",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "102db80d-eef7-4c65-ac08-e3fc3052b30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c45809-4cad-48c9-ae5b-553ddc1a3b63",
        "cursor": {
          "ref": "24842732-e186-499d-a710-82511c61dca2",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "96a821d2-7f64-4df1-8c57-b9cf431955af"
        },
        "item": {
          "id": "d6c45809-4cad-48c9-ae5b-553ddc1a3b63",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f0022d81-8a93-483d-87c6-cde7c551ab23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17a1ceb-b25d-45de-81ac-0692a24c07a8",
        "cursor": {
          "ref": "870947f7-b98a-4215-817b-17912cdd9273",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "633d1480-a4b4-44ba-8be9-2f90e98efabd"
        },
        "item": {
          "id": "d17a1ceb-b25d-45de-81ac-0692a24c07a8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2745f7e4-4645-4e5d-8f76-4379a0358ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8aa2445-cb54-4583-9267-6c2ce3e4d693",
        "cursor": {
          "ref": "65a6649c-5f7c-44de-b56f-ca8697918d89",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6a31300d-a15c-4664-a51f-6a17cca7208b"
        },
        "item": {
          "id": "f8aa2445-cb54-4583-9267-6c2ce3e4d693",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6c25f9ba-c93f-4abf-8977-198a0720d736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d9711a-a5dd-4cd6-9400-fbc56064b5b2",
        "cursor": {
          "ref": "5f11f9eb-d085-492f-8be6-a01f63901a18",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "71eaeca7-f2d3-4cd9-92cc-40adaf71d927"
        },
        "item": {
          "id": "56d9711a-a5dd-4cd6-9400-fbc56064b5b2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "41ae0b92-fbce-4981-a1ab-ec5ea9f70d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a967ee78-8222-4f07-a21d-989f5da7d1e2",
        "cursor": {
          "ref": "b236f3a3-d288-4a6c-863c-33b037f9b4cb",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4fb14e4a-7754-4e86-b3dc-3b4070848511"
        },
        "item": {
          "id": "a967ee78-8222-4f07-a21d-989f5da7d1e2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "22ebb5a8-2db4-414f-8fd2-1fe7c49d63c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0d5351-d93f-4148-9354-c01f6118cdcf",
        "cursor": {
          "ref": "21351b0c-5c3a-4e9e-8762-3e41e8933545",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "586ac06e-08fb-4325-bcee-347fef5cc802"
        },
        "item": {
          "id": "0e0d5351-d93f-4148-9354-c01f6118cdcf",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7f04af62-27f7-4f8f-9a79-a3227c976de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55f6290-44b5-4b88-b3e1-0149ffbde493",
        "cursor": {
          "ref": "78b19281-290c-49c2-94c2-59604ef39168",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "cca9ce3c-3d32-4a9c-aff2-aece32d2d351"
        },
        "item": {
          "id": "a55f6290-44b5-4b88-b3e1-0149ffbde493",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d4d72a88-53c3-4bc8-b57c-e376f63b5887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0637083-2248-4fa7-88d6-3e2ec549748d",
        "cursor": {
          "ref": "76289c80-9e2d-4492-86c1-3b67917556fa",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d7cd16f3-bc4e-441c-8673-afe5708c18c8"
        },
        "item": {
          "id": "c0637083-2248-4fa7-88d6-3e2ec549748d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "10a28901-5af3-4b13-9d8e-a37a83ff5174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818ca991-db46-40ee-828f-856c5c11a587",
        "cursor": {
          "ref": "d8c7551f-0765-4199-9741-3d7adb780697",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d12ecf01-cfd3-4260-af53-d42ac2101322"
        },
        "item": {
          "id": "818ca991-db46-40ee-828f-856c5c11a587",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f4989f4c-d70a-425a-9b48-09513e7e5a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b0be98-6c22-43f9-a44a-595ca28c7d21",
        "cursor": {
          "ref": "98a19ce8-8bea-49c5-8df7-e158f73c86ae",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f1158636-48f0-454e-a06f-da848f831c51"
        },
        "item": {
          "id": "67b0be98-6c22-43f9-a44a-595ca28c7d21",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "513ca05c-8c8c-4b6d-9726-70345740e9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660c1037-e0c3-46dd-bc44-b03bbb4dbe6d",
        "cursor": {
          "ref": "9c758f31-df82-436c-9f40-dfabdd3cef43",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ce4199d0-1bec-4682-9f23-f88e405de565"
        },
        "item": {
          "id": "660c1037-e0c3-46dd-bc44-b03bbb4dbe6d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8ce44308-237b-40e6-b9e5-88e3024b63d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5bb685-26cd-4341-b781-7fa949f151da",
        "cursor": {
          "ref": "696e38de-066a-4c81-a9e7-c0a7c2b02410",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ffa7e022-53dd-4627-9218-2ac1220823f8"
        },
        "item": {
          "id": "5a5bb685-26cd-4341-b781-7fa949f151da",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f881a8ec-b37f-49fe-b552-4e70ffbc16b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7c83ba-73d0-4b41-a30a-7ad1e2ffd952",
        "cursor": {
          "ref": "8d07af84-fbcf-47d6-a08b-6e2d8c601b73",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6f4c805d-7e52-4a54-bf85-ce1f08009b45"
        },
        "item": {
          "id": "3f7c83ba-73d0-4b41-a30a-7ad1e2ffd952",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b716a629-a6b3-4393-91fc-36d67af21cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060fb53b-3bae-4272-a4d9-a36a9a45084e",
        "cursor": {
          "ref": "426787ba-c234-41f5-8c33-713d3a79b70d",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "747fed8c-6fe2-4237-a843-e6d9ee7ae872"
        },
        "item": {
          "id": "060fb53b-3bae-4272-a4d9-a36a9a45084e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2ab00cac-3806-43fc-86ab-57275ec5cdf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5c65c5-7b7b-4f9a-b4da-ad7e46ba4333",
        "cursor": {
          "ref": "5bc016c7-ed61-4117-b39d-dd1ce9d9c91c",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5336d7ba-878f-4a91-b1a9-ef907f6153f8"
        },
        "item": {
          "id": "5e5c65c5-7b7b-4f9a-b4da-ad7e46ba4333",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "80a3ba78-8819-4dca-9c90-64a1498e9818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76868e3-9e7d-4a5f-94d1-c85ec5da5964",
        "cursor": {
          "ref": "c122dfb3-6171-4182-8f13-3e428066f266",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "94f8d8c2-1bac-444c-a3e7-8f09f59317a1"
        },
        "item": {
          "id": "b76868e3-9e7d-4a5f-94d1-c85ec5da5964",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4c94f56d-427d-4f6b-a0d2-572fe6dadaf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d734b62-8cfc-490c-a086-2d9f7fb113ce",
        "cursor": {
          "ref": "4465d42a-79ff-4f62-8c66-50d53bcc6689",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b1d6aeed-3616-4ba3-9cab-deeed7642a51"
        },
        "item": {
          "id": "2d734b62-8cfc-490c-a086-2d9f7fb113ce",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "53da5341-fda4-4d38-8317-82da57747270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b31c9f6-72ed-425a-b7a2-3d8922cee1f7",
        "cursor": {
          "ref": "cd3b690c-0d4b-4dcc-a51d-c09552b1d0fd",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9f4f48c8-8b25-4a62-b0a5-112cc78676a6"
        },
        "item": {
          "id": "5b31c9f6-72ed-425a-b7a2-3d8922cee1f7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d6181c81-9576-453b-91b4-822599b50109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2342ef-7370-4ee4-96c3-590edc4feeaa",
        "cursor": {
          "ref": "5b3aec02-0d5c-45e9-a761-a4ab1e427624",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b1536dc7-18a4-454b-8e7d-0e831e0f83f7"
        },
        "item": {
          "id": "ff2342ef-7370-4ee4-96c3-590edc4feeaa",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1dea709f-2642-4d59-85fd-5876932842f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6253def-8edf-45db-bf5e-9be9691c6d4d",
        "cursor": {
          "ref": "1bfd504c-b50e-4c53-80b7-f004117b8951",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ae1af684-cc7d-4909-ab68-042b0941ef92"
        },
        "item": {
          "id": "f6253def-8edf-45db-bf5e-9be9691c6d4d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0cd361c0-3c1b-4aba-9ba0-5efb557e293d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b669a8-214d-4958-b356-469e7bac3845",
        "cursor": {
          "ref": "3b69a3b3-e681-4cce-adb8-db3983227834",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fd23eced-ab4e-4011-a5b9-5706988ec39b"
        },
        "item": {
          "id": "89b669a8-214d-4958-b356-469e7bac3845",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "26b80f42-5163-4c18-b980-72928fb41e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c16e64-7283-47e3-ad0d-f679b802a240",
        "cursor": {
          "ref": "1043743e-a8ff-4a58-95ad-b25dbaa8a46a",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8f0360e0-9e43-4dff-9050-47cab3f66a42"
        },
        "item": {
          "id": "05c16e64-7283-47e3-ad0d-f679b802a240",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ef9366a1-d580-4513-8cc7-3eb4e9d719f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9ef89b-a495-45d9-8466-3adaa88726bd",
        "cursor": {
          "ref": "82b351bb-d0f1-4034-ab9c-86a95c73371d",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fe8c9aa4-3f72-4514-9147-4883be08a332"
        },
        "item": {
          "id": "da9ef89b-a495-45d9-8466-3adaa88726bd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d44d3d0b-197d-45a2-bc56-88fe0443088e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e229df-2825-4513-a904-b83a23ef60e9",
        "cursor": {
          "ref": "564b0f9c-b541-4394-b408-1f54660f6968",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "32d973b3-e8eb-405e-a516-edbe030ac1b1"
        },
        "item": {
          "id": "25e229df-2825-4513-a904-b83a23ef60e9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c62c1329-23cc-4be3-9b87-80ffb3d11890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8a4e13-c7ff-4083-9c50-22b5041df249",
        "cursor": {
          "ref": "980df64f-0897-41ca-b919-9821203af0ab",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "da7e8abc-4fcf-44cc-a116-beee6699e305"
        },
        "item": {
          "id": "ef8a4e13-c7ff-4083-9c50-22b5041df249",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0509ab3f-25cf-48fc-86cf-bb677a916d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490844af-e70b-4ad0-a4d4-4045a57d9e72",
        "cursor": {
          "ref": "78e93cbb-4919-4d68-8088-6aa1489b02f3",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1bf4254b-5e17-486c-a888-fe2aa47368b9"
        },
        "item": {
          "id": "490844af-e70b-4ad0-a4d4-4045a57d9e72",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "89e075a6-d55f-4d0c-a8b8-64fdfc29310b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0072fc-23af-4b60-8857-26ac5913e0c0",
        "cursor": {
          "ref": "f7d76719-0c28-45cd-9b0b-8f595b692112",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "baaf6937-96e7-474a-be62-52338b17841a"
        },
        "item": {
          "id": "ff0072fc-23af-4b60-8857-26ac5913e0c0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "318a8f54-9b6d-48f1-acfd-b0af6a8fa5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796f287c-83f0-408c-8496-2a9dee32158e",
        "cursor": {
          "ref": "3d8e61f2-1123-4357-8f67-1c983151e880",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ecc08fc6-4da8-463c-bc4e-265bb3c5e72b"
        },
        "item": {
          "id": "796f287c-83f0-408c-8496-2a9dee32158e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "620b2586-7d7b-41b8-90d2-a153a640ad87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29e4009-cb05-4355-a828-d5074b824566",
        "cursor": {
          "ref": "75798166-41d7-4d96-b047-d0ad39cdc09b",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fc53eae3-2799-4de4-b4c6-76fcadc1eb70"
        },
        "item": {
          "id": "b29e4009-cb05-4355-a828-d5074b824566",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "84448290-5399-4ae2-b162-c3278a1c89e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c9e597-6f99-4333-b948-470ff6532b58",
        "cursor": {
          "ref": "b2239f77-57f7-47a7-a688-673bf1c235be",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "782f6282-7cd0-45ec-81de-f2e371a62c85"
        },
        "item": {
          "id": "74c9e597-6f99-4333-b948-470ff6532b58",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3f269cc0-4ae9-4620-a437-3d448ba2a56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e0e62d-8e15-4ec1-aedb-4ea6248211fd",
        "cursor": {
          "ref": "47a1ff8d-6b21-4b8d-939b-8b0e22d0dac5",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e79c6daa-d6b3-4b98-b1d5-e50be4fdc086"
        },
        "item": {
          "id": "42e0e62d-8e15-4ec1-aedb-4ea6248211fd",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c3cc4b93-2470-438a-a911-709c52f4c98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94c09e4-be75-4c04-82d5-a0440529fe1d",
        "cursor": {
          "ref": "7c2caeb0-1fad-4ae9-816e-7af6fe271fc6",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "02ed4ede-a1c5-4058-b912-41346660a52a"
        },
        "item": {
          "id": "d94c09e4-be75-4c04-82d5-a0440529fe1d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "71577cdb-e61b-49ab-8bb9-ee64ef86f795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5dcbd71-2378-46bb-9264-9047bb9368e1",
        "cursor": {
          "ref": "4d66505d-6311-4688-b212-b085059f7c4d",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5f0730f1-aa6a-4472-9081-4ee32dbeb799"
        },
        "item": {
          "id": "b5dcbd71-2378-46bb-9264-9047bb9368e1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "903e19dd-3a2f-480e-937a-8d219b7c5b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5028cb7f-428f-4418-aba1-b0c9396ffeac",
        "cursor": {
          "ref": "3a5c3fec-0e7e-4190-ba35-91de38476b98",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "95461e66-1275-473c-bdab-1ed80a6439f2"
        },
        "item": {
          "id": "5028cb7f-428f-4418-aba1-b0c9396ffeac",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c94e1ac2-8fb9-4b38-abeb-1871ed02d657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c7fefa-0990-4c08-996d-2ad8a8ecebc9",
        "cursor": {
          "ref": "cc634fee-8d4a-402c-b8e1-71f912432ffc",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cb5dcf4a-fca9-4c30-b3e6-c2d6b3081156"
        },
        "item": {
          "id": "62c7fefa-0990-4c08-996d-2ad8a8ecebc9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ac296f04-90c0-41f4-a968-b8d156214cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5545f04a-962e-45a9-aca9-b8aafd0f680d",
        "cursor": {
          "ref": "4a4b3918-34ce-425c-8069-0b8345591542",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5d96cbe4-4e24-4e44-a738-1052b9157477"
        },
        "item": {
          "id": "5545f04a-962e-45a9-aca9-b8aafd0f680d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "08fa3855-f7e9-4e7a-8718-8b0fa6ebecc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e640d95-ad28-46ef-8ba8-7c7cc83b1f5d",
        "cursor": {
          "ref": "be384bf4-3b79-4220-b716-a28bc7a3f4f6",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "94fa35cc-38ff-46d2-b62a-9921b45badd2"
        },
        "item": {
          "id": "4e640d95-ad28-46ef-8ba8-7c7cc83b1f5d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "019018d5-e99a-4741-8bc5-106180f3cfbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621e2cc4-95da-46ad-960e-0599343aec1f",
        "cursor": {
          "ref": "1fa11ec5-bf24-43f7-8c77-da66b0be8ba9",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f1b1217c-9751-47a9-b184-42c3115657c4"
        },
        "item": {
          "id": "621e2cc4-95da-46ad-960e-0599343aec1f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "eb179894-3adb-4393-bc38-83d7ec13c448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08683daf-c841-4d31-abd3-0b4bc56d474b",
        "cursor": {
          "ref": "26d20fcb-99e1-4a35-a0f9-a2beb499c37f",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "dda4faa5-20d2-43d0-bff7-1a3a8db23b7c"
        },
        "item": {
          "id": "08683daf-c841-4d31-abd3-0b4bc56d474b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "548f9d64-45df-400b-a773-a94ee87d5b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5014ba01-3283-4e03-b6af-c945faf58821",
        "cursor": {
          "ref": "54483ab0-2594-4e42-b201-d665d2fe9f3f",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fa260488-c36c-47f8-a2f0-953413ab0153"
        },
        "item": {
          "id": "5014ba01-3283-4e03-b6af-c945faf58821",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9b6fa3f3-93ec-450c-902c-9156d1ce4cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca46774-4c3f-4f51-81bf-ea631a4d49ad",
        "cursor": {
          "ref": "6c9b42fd-c9ee-4b3b-9943-df5c1c367be9",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c9396bec-76df-477e-a694-2b81beafd638"
        },
        "item": {
          "id": "6ca46774-4c3f-4f51-81bf-ea631a4d49ad",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2976778d-e67d-4082-9a8a-f85f2c79e843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99503fe3-0eb9-406c-981e-b7161f96bece",
        "cursor": {
          "ref": "c1cbe9ce-2e30-4940-947d-9e4f1bd17f78",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "df0139e2-b15b-47d4-b360-2c05d0442ae6"
        },
        "item": {
          "id": "99503fe3-0eb9-406c-981e-b7161f96bece",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ac41debd-adc3-4820-8182-4c6ffbacdd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75a0fad-d89d-446e-87af-3b98801789b0",
        "cursor": {
          "ref": "629609b2-3a4b-496d-9adb-d21c08ed2c0f",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "63f9df2a-a250-4fbb-b8f8-74eb7a7c0109"
        },
        "item": {
          "id": "f75a0fad-d89d-446e-87af-3b98801789b0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2b1fd733-e30d-4dca-b91f-55411515594e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e97930-a26f-4f3d-83ce-ffda8210c189",
        "cursor": {
          "ref": "1be681ff-ceab-494f-b16c-894e15d55703",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "624c4ebc-c126-4ce0-9c33-46c705799095"
        },
        "item": {
          "id": "34e97930-a26f-4f3d-83ce-ffda8210c189",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1c3dcac2-e5c2-4ee4-90c8-4bae237edc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4289873-700d-4fa5-9be1-c6a8c42e762f",
        "cursor": {
          "ref": "ce45974f-2c23-448b-811b-10216e907f51",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8373685c-bbd7-490b-b8d1-763e45ec9ce5"
        },
        "item": {
          "id": "b4289873-700d-4fa5-9be1-c6a8c42e762f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "94e67c9d-fbc9-4f12-93a3-b69ca093aadd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4609ef2-240b-4ae9-bdf8-c69faee38d80",
        "cursor": {
          "ref": "9ddd3d58-0d49-4ea3-8c42-68a13096efff",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "668c1a11-8f0a-4d68-a537-8e897634aed6"
        },
        "item": {
          "id": "e4609ef2-240b-4ae9-bdf8-c69faee38d80",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a9daefbb-d1c6-471e-95ff-63cadb646c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb7eb02-0e62-4e45-8735-3fcacc952675",
        "cursor": {
          "ref": "695a3bef-6705-485c-86c4-c7276b0538a5",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "820271ee-68aa-49be-b542-3c113682c233"
        },
        "item": {
          "id": "4fb7eb02-0e62-4e45-8735-3fcacc952675",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "acb0aa62-8a02-48eb-a6b1-4e7f18e2f59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f11c0c-e8dd-4d6b-8997-fb198783d2a1",
        "cursor": {
          "ref": "d05fbdf9-1acd-4333-ab1f-d44a50a9dece",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "252126ff-5c29-49ce-9385-39b6e3bb794a"
        },
        "item": {
          "id": "e5f11c0c-e8dd-4d6b-8997-fb198783d2a1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e5a541b3-061f-45d3-9aae-75e1b591ff6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d375195-6b5f-433a-9233-bcb0f463cd0d",
        "cursor": {
          "ref": "058cfdbd-7e7a-4efe-9b48-1f580a30a208",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c8697edb-5fea-46a9-8351-4d2045d9435b"
        },
        "item": {
          "id": "0d375195-6b5f-433a-9233-bcb0f463cd0d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "299a4915-9e4c-4b68-bab3-5ce736f91e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed93bd4a-9f75-48cf-b938-84ab10ffc603",
        "cursor": {
          "ref": "ae63e68c-4ec9-4ceb-bf2e-5ff1fe608e47",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1d404d3d-932d-429e-a5b4-07be66912e79"
        },
        "item": {
          "id": "ed93bd4a-9f75-48cf-b938-84ab10ffc603",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8835a63e-2067-4a1e-a589-21ad3c43e9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78dff16c-6c22-4297-8bc9-c75aebea3f7d",
        "cursor": {
          "ref": "96c548c3-4fbf-40c6-b8b8-95e33bb8cb20",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "719ec532-5759-4beb-aefd-29cd0e6fd26c"
        },
        "item": {
          "id": "78dff16c-6c22-4297-8bc9-c75aebea3f7d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ea4de731-c179-43ee-9c1f-259c284319df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cefe1626-2bb9-419e-a859-1eb31ca40abe",
        "cursor": {
          "ref": "e8902b48-f85e-4558-9a72-68e3d5b6dfa8",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c8f48f3e-bd51-49be-ab10-97b2d4a11d5c"
        },
        "item": {
          "id": "cefe1626-2bb9-419e-a859-1eb31ca40abe",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "40a33037-6032-49cb-96c6-1355e61c5259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af71ee1-b5fd-40ae-a700-666c9c6bf007",
        "cursor": {
          "ref": "0b420393-06cf-4fae-b44c-e0c9d385092e",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "54269b91-8b80-4f5b-bee4-89d4b7daecc5"
        },
        "item": {
          "id": "3af71ee1-b5fd-40ae-a700-666c9c6bf007",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "70ee86b6-6c7a-4de2-b5f4-d6bf4999ff80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83513f8-e3ba-4116-b5f6-617f992f0eec",
        "cursor": {
          "ref": "f25386bd-74db-434b-bba9-d8f3ca139294",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e5d24ae3-e24a-456a-b0d6-1d1de37a5845"
        },
        "item": {
          "id": "f83513f8-e3ba-4116-b5f6-617f992f0eec",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "bd1cfeff-c3d1-4f96-917e-ba294927ca2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6401995c-adfe-4e0a-9773-25c761b9b1bb",
        "cursor": {
          "ref": "64cb4bf7-3dbc-49ee-a467-737d4fcbb775",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ae4c1041-1aeb-494a-95fe-e4fa135e4ef1"
        },
        "item": {
          "id": "6401995c-adfe-4e0a-9773-25c761b9b1bb",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "758f2e41-59bc-41e7-8807-b9793dd6f07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e8cf47-7520-4a35-8523-c06a93294ecf",
        "cursor": {
          "ref": "7e5e8ac2-47e1-4f4d-ab8c-12378fa35324",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b5a0fda4-3323-447c-806d-786cf3de00f3"
        },
        "item": {
          "id": "68e8cf47-7520-4a35-8523-c06a93294ecf",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4f78a13e-f029-45fa-912e-58d9a77b441f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc16b9eb-46cc-4fd2-8c2f-686f37265158",
        "cursor": {
          "ref": "75cdc023-8b54-4792-9441-2c8fd86fb87d",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d2df1036-b785-404e-858f-b5f3ecd3876b"
        },
        "item": {
          "id": "bc16b9eb-46cc-4fd2-8c2f-686f37265158",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4bb86634-bc2c-4494-9e39-b1fef1ccba50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334b0f38-3f77-4849-9fe0-bf3769df7999",
        "cursor": {
          "ref": "9d6a1938-9bad-4c16-9c60-0ba234a869d6",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "bfafd7aa-1f36-40b8-9c71-7d8d4203f2bd"
        },
        "item": {
          "id": "334b0f38-3f77-4849-9fe0-bf3769df7999",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9637246f-ca3f-43b9-9393-dc9bb4c0be68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e688e19a-ea50-4a37-902c-6ce1ac497626",
        "cursor": {
          "ref": "feddabc0-ef0a-433c-807e-0e1a52e40a86",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "220fb9bc-57ed-46a0-a2ee-eda8741d7dd0"
        },
        "item": {
          "id": "e688e19a-ea50-4a37-902c-6ce1ac497626",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ae6895db-230e-48fe-92e9-4c7b81f2fa4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae3f79d-5da8-48c4-afd8-d6f25bb20819",
        "cursor": {
          "ref": "ec83c8fb-44a0-4823-889b-5fc759f71665",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "64a5b621-d09a-4746-9053-ec89b46010db"
        },
        "item": {
          "id": "fae3f79d-5da8-48c4-afd8-d6f25bb20819",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "17c6b828-20f4-4c6c-bba4-3ae328ddfeaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0e4269-f022-492b-a07b-249bb89f88bd",
        "cursor": {
          "ref": "32d0b257-eef0-4e87-b3f6-fe70b2183454",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cc98c962-b63e-48c0-ab9a-ee0276937320"
        },
        "item": {
          "id": "3f0e4269-f022-492b-a07b-249bb89f88bd",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "31f2c4d5-10be-4bd4-9b5f-3a82b3772d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a18ac7-8f09-4c15-8884-0e2460a4d8e5",
        "cursor": {
          "ref": "b69da958-2ebe-4b5d-a45f-320da4a49a7d",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6b56e9f0-bb18-40e6-b77e-592be323ef6f"
        },
        "item": {
          "id": "24a18ac7-8f09-4c15-8884-0e2460a4d8e5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "98586be4-1fc8-49fb-ba33-fbca22fdd6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6672c6-de4e-48e5-b8d1-81ea654896e0",
        "cursor": {
          "ref": "888d03ea-ce99-4b58-9679-8adff5c80963",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "17ae4d37-3bfa-489d-a71e-d09e4bd48c03"
        },
        "item": {
          "id": "9d6672c6-de4e-48e5-b8d1-81ea654896e0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "496c9222-8111-4615-8c37-36bf0a954093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da9a2ef-65b5-4bc8-a2e6-f56598574009",
        "cursor": {
          "ref": "1f001b75-410b-4a32-a219-1ae5e31b7ca4",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f745fc49-bfb3-417b-abf4-f63003c27d39"
        },
        "item": {
          "id": "0da9a2ef-65b5-4bc8-a2e6-f56598574009",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b5d70528-4b1c-4c6c-b794-3480ae0fe9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a90668-47a7-4350-ad9c-7178b69fd906",
        "cursor": {
          "ref": "4e83d455-67a3-4395-9836-8ba02e494ce2",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3dda3dd4-e296-4b0e-adc6-dcabe3b20795"
        },
        "item": {
          "id": "02a90668-47a7-4350-ad9c-7178b69fd906",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f468791e-5905-43e0-ad34-4ddacca3721e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d890b1e-5f76-43c0-a1bd-35eeb533e4a8",
        "cursor": {
          "ref": "66662e65-174d-48de-a8fe-80cd7f0122f3",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "894b72a0-dfaf-4a9c-9655-5b7ea71cf580"
        },
        "item": {
          "id": "4d890b1e-5f76-43c0-a1bd-35eeb533e4a8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4bbd98f8-db18-4c3a-a58a-1713cd8c7de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc8b3a3-6122-468f-8c93-008237f8740c",
        "cursor": {
          "ref": "e4696883-1d21-48c0-a26a-1390362cec97",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "56968db8-4e66-436d-8328-4eaaf1c31432"
        },
        "item": {
          "id": "adc8b3a3-6122-468f-8c93-008237f8740c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b03adbd8-3556-4d01-a81e-6cd5081cda3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b02515-220c-47eb-8f43-716a0396ca86",
        "cursor": {
          "ref": "2b65f513-9942-462b-b40a-9722eea415c5",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9a7d3af0-a6d1-460e-9c1c-aaaf4913f832"
        },
        "item": {
          "id": "c1b02515-220c-47eb-8f43-716a0396ca86",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9a2aa440-83b6-4d30-9d31-aa81b99b9020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4082ecfe-7e01-42c8-b9d7-06d0a263ff67",
        "cursor": {
          "ref": "d2eca2ef-fbdf-4a22-8056-02f85b27f105",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "554b0229-7bc0-4422-95e7-ff8c0bca8150"
        },
        "item": {
          "id": "4082ecfe-7e01-42c8-b9d7-06d0a263ff67",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "547ee2b0-bcfd-4b44-8b7c-780d16d7f3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b3ee9e-345a-4945-9c34-7c8e50e4fe29",
        "cursor": {
          "ref": "8fb5e4a0-1982-4d07-81fd-770f88033894",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e7092808-1eac-45c0-bcc0-78854eee8f45"
        },
        "item": {
          "id": "63b3ee9e-345a-4945-9c34-7c8e50e4fe29",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1c36aeb1-2a93-4a43-96c9-1fd838de38f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ae19e0-9346-4ca8-a0ed-c2fdbaa2b039",
        "cursor": {
          "ref": "4f49ccdb-5b2d-4834-80e1-87581a336aed",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3223b9d1-aec1-4a8e-88db-fdf7c86e4e31"
        },
        "item": {
          "id": "b7ae19e0-9346-4ca8-a0ed-c2fdbaa2b039",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a7ada7a4-bf02-4515-9e55-7e61a8d374ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1584620b-9910-41b3-a8bf-9d95936570ba",
        "cursor": {
          "ref": "2adb938b-f882-4686-9da9-432185dceedf",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0e4a3a10-f3c3-4bf4-93a6-ae97bcecf224"
        },
        "item": {
          "id": "1584620b-9910-41b3-a8bf-9d95936570ba",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5bc0538e-3238-4ceb-a493-2dfd95bf97a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cde809-ca38-4074-a2ef-6eab7d23a1e1",
        "cursor": {
          "ref": "679ad7d3-e594-432d-a36c-5675e2f7b92c",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7d229249-f53e-4efb-9e01-2abf82048fbc"
        },
        "item": {
          "id": "65cde809-ca38-4074-a2ef-6eab7d23a1e1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "751f270c-9b4a-4ab6-aca2-24d4a012f707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee92ae00-537f-454a-af9e-e50fed5fc5d9",
        "cursor": {
          "ref": "b9d8186d-0eb3-43ba-8860-4a00e74db911",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e468a610-5553-41bc-b021-498fd0ba69ac"
        },
        "item": {
          "id": "ee92ae00-537f-454a-af9e-e50fed5fc5d9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a30060f3-6968-4cdf-b29c-870e22d9348d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f12bd53-3cd3-4b67-9d74-9f4b72a4e83f",
        "cursor": {
          "ref": "2bcd803c-3104-40b1-a103-d6c3e65686bc",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "535d226e-294a-438f-bf84-a540a166e786"
        },
        "item": {
          "id": "2f12bd53-3cd3-4b67-9d74-9f4b72a4e83f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1ae35b0c-e088-4d93-aaf7-75253906a330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac816861-56c2-448b-bb73-c4afa806e233",
        "cursor": {
          "ref": "952e105b-4af8-4ca1-8809-eef9450dac59",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e77528a2-57e1-428e-9770-36b77ed7a3f0"
        },
        "item": {
          "id": "ac816861-56c2-448b-bb73-c4afa806e233",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "471283f8-106c-4010-ae13-73a8ea54a1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520f7cfc-562c-400a-b9f9-81ed0bec0660",
        "cursor": {
          "ref": "36bf56e4-328c-483a-8027-6917990e24cc",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "aa3f2acd-5007-44a1-a9a0-a5485366b77b"
        },
        "item": {
          "id": "520f7cfc-562c-400a-b9f9-81ed0bec0660",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "df765931-7690-4194-8e17-94ce8c458535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead2ae40-f28d-4f97-bc3e-cc3d4b44d711",
        "cursor": {
          "ref": "52d7d274-c190-4c6c-bc01-04c550ae641f",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a05c21fd-2030-4be7-aa3b-de7150971028"
        },
        "item": {
          "id": "ead2ae40-f28d-4f97-bc3e-cc3d4b44d711",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "99959164-4ee0-4304-a9b9-b2adc425cf6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d9661d-29ac-4320-ad69-2f4bc3adae86",
        "cursor": {
          "ref": "2912e08a-57a0-4541-942e-f5853ae9be23",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c1f8813c-2883-4e73-a4ea-b54835295943"
        },
        "item": {
          "id": "21d9661d-29ac-4320-ad69-2f4bc3adae86",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e45fb770-c308-46f4-b04f-a6b20d3753b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9477fe39-154d-44fe-b4ff-1c7ecd23e735",
        "cursor": {
          "ref": "24296aec-56c6-4f70-85bd-4a7a4830a70f",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4141ae31-dc03-409a-97c9-c6d5d85c69fe"
        },
        "item": {
          "id": "9477fe39-154d-44fe-b4ff-1c7ecd23e735",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7294b947-199c-4d62-bd19-5e51b2a5d270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7dc51f-fd84-4fb0-a3d3-b62e84da5af4",
        "cursor": {
          "ref": "b8b84375-4d3d-474e-873f-e13154320a6c",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "56096c38-4834-48b2-afd7-56b951e12b9f"
        },
        "item": {
          "id": "7f7dc51f-fd84-4fb0-a3d3-b62e84da5af4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "69f24a44-4a75-47a0-9738-233e487e8965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec69265b-a65b-487b-aa50-0f85af3b3693",
        "cursor": {
          "ref": "e7564d59-d6f9-48ae-b86f-67ea687db7b1",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "64a806ae-c724-4e2e-936a-5e6bf0dfb8fb"
        },
        "item": {
          "id": "ec69265b-a65b-487b-aa50-0f85af3b3693",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "cb0c1e2c-a92a-44fa-afd1-afe110f25342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74552ee-67b4-44dd-b4a4-2323db79cefa",
        "cursor": {
          "ref": "03b0129a-afde-4e78-870f-d9fa333b1ba0",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d995ad14-6c03-4434-bf73-67ef6f7858c3"
        },
        "item": {
          "id": "c74552ee-67b4-44dd-b4a4-2323db79cefa",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6f0e49a3-809a-4997-a5b3-fbcc3074e2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078a2786-3f06-4328-8a02-9581e3aaf9ab",
        "cursor": {
          "ref": "9e563420-4190-4349-ad1a-c0742701e982",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "dc3b5199-f411-4abd-a046-4f38abb515ce"
        },
        "item": {
          "id": "078a2786-3f06-4328-8a02-9581e3aaf9ab",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "40c93e3d-b5b8-483c-bc64-48a58e2a1fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181e3ee1-3b8c-41ff-824a-8a3604ca8a05",
        "cursor": {
          "ref": "5ea6b764-538e-4c10-9ba3-b7aa6a2972d7",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bdd38e20-61ee-4d8b-8514-da851215c052"
        },
        "item": {
          "id": "181e3ee1-3b8c-41ff-824a-8a3604ca8a05",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9084d1d2-ede4-4fc0-a034-bb5165d7bb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d965eb63-4a85-4d0b-94d7-d1273c42c062",
        "cursor": {
          "ref": "34607ffe-3756-4d72-993a-d2c7a3d1a999",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "36ae4f0f-d6aa-4ced-b3c2-563750ac2b83"
        },
        "item": {
          "id": "d965eb63-4a85-4d0b-94d7-d1273c42c062",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ba319602-0970-4027-98b6-413a9863f9ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a740bbf-f855-45bb-9449-74e117b80831",
        "cursor": {
          "ref": "79927ce9-8898-4d5f-848b-d7951feca405",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "042ee8c0-f683-425b-9f53-10697d7ff43b"
        },
        "item": {
          "id": "7a740bbf-f855-45bb-9449-74e117b80831",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "992de1c4-f9dc-4780-8dd2-d72397890dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e6702c-068c-436a-9631-00c6af6585b2",
        "cursor": {
          "ref": "2d3cda58-644d-4ccd-ba25-8ada1fc80566",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b768aff6-1ed8-423e-a02c-7d9e12990cc9"
        },
        "item": {
          "id": "37e6702c-068c-436a-9631-00c6af6585b2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2b1164fe-ba14-4923-bb0c-4435fe87ea67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370a9a43-1315-468d-b8b3-625f358b8ffc",
        "cursor": {
          "ref": "91433766-8af5-4196-87df-fc4c19ebf48c",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "98be5d31-4eaa-4d12-9b47-96a0d6af5a54"
        },
        "item": {
          "id": "370a9a43-1315-468d-b8b3-625f358b8ffc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d5b7b512-0d04-492c-965c-ffe860a757b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8caaf1e5-9e63-4368-8ede-2c7666009899",
        "cursor": {
          "ref": "dfda3a14-6912-4c3f-9535-1cfb42390541",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8f4ac80f-b423-4494-bafc-374b461fc9fb"
        },
        "item": {
          "id": "8caaf1e5-9e63-4368-8ede-2c7666009899",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b4d2a02e-6706-45df-a391-960fd7287d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bfa0b5-cb8e-46ce-983c-bbb579263638",
        "cursor": {
          "ref": "5c2a438f-fff5-4151-b267-72273a076264",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "403b8598-49f9-4717-97c2-08ce48cd2d84"
        },
        "item": {
          "id": "e9bfa0b5-cb8e-46ce-983c-bbb579263638",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "96cdbae1-7bec-4515-991f-5dae28d204ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce962e2a-452b-41e9-ad24-61713e71dfaa",
        "cursor": {
          "ref": "f0267fa6-164e-41b3-bb54-fe516da7872a",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "fa9609cc-2170-4016-9301-8ee61ca026b6"
        },
        "item": {
          "id": "ce962e2a-452b-41e9-ad24-61713e71dfaa",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6d0fdd98-d2df-4195-9d3d-b0e61c2d2904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3becf3f-594a-46d9-9140-b5cd2b1d6051",
        "cursor": {
          "ref": "69776f3a-6dc9-4282-acd3-c8de93c9b8a4",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b50f5e5a-6485-4c21-b4f7-b31a71e06bae"
        },
        "item": {
          "id": "a3becf3f-594a-46d9-9140-b5cd2b1d6051",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "921bb38e-8fba-42d0-893b-1d2c08e5e22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bce60e0-2e03-4da1-80dc-47d22f26a1f3",
        "cursor": {
          "ref": "8d8b1664-be4e-4dd6-8d60-a77bbd26043b",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ed959c75-9bb3-4687-91f4-f2a957f9eaf4"
        },
        "item": {
          "id": "9bce60e0-2e03-4da1-80dc-47d22f26a1f3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "be65bb87-15bb-4214-a168-55a97454141d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5843cd0-5907-4da3-991b-e538e16e1e8d",
        "cursor": {
          "ref": "df3a377a-5e54-48b7-8a75-fd96fd7d36fe",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6b85a321-233c-4f90-bab7-5a80c045c9e5"
        },
        "item": {
          "id": "c5843cd0-5907-4da3-991b-e538e16e1e8d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "dad0268d-0c91-4244-a8cc-7b9dad9d74e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e65398b-b314-4742-bdbc-94f315647ed7",
        "cursor": {
          "ref": "75199e26-051a-4bae-9243-44fa3601e53b",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "3f9e1c93-a2ab-4511-b19a-5fbb62ce2a27"
        },
        "item": {
          "id": "0e65398b-b314-4742-bdbc-94f315647ed7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "45d2a65a-cd47-4ec7-ae21-6d71183d0d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29038e4-ee7e-4b21-9347-129e11597e45",
        "cursor": {
          "ref": "8a3ca7e7-0946-462d-8a3c-ad0036835140",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "162adc39-002c-4823-b45a-8fae359268bd"
        },
        "item": {
          "id": "f29038e4-ee7e-4b21-9347-129e11597e45",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "815cd62d-9131-4c26-ad77-4eb6d27a2570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06dfa443-dcbf-4fee-a457-0a092ca22598",
        "cursor": {
          "ref": "636b24e2-721c-4d93-9b59-444df48c6f74",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8efa89a4-97b0-4fcb-8a5a-a42a9979b889"
        },
        "item": {
          "id": "06dfa443-dcbf-4fee-a457-0a092ca22598",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d0db64f2-d839-474a-9a13-da7bb5125e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8898155-4e74-4cec-a3ca-fdee3e0882d4",
        "cursor": {
          "ref": "3b329d48-f78a-474a-b1ca-9f5af7479ffa",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "dda6d495-8782-4ae4-869c-a7d5b539cf0b"
        },
        "item": {
          "id": "d8898155-4e74-4cec-a3ca-fdee3e0882d4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7147aac1-1de5-4498-ace2-6961f3136f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe04866a-4d42-4ee5-8d00-c999f334a960",
        "cursor": {
          "ref": "c94e4b50-3a42-4f1e-a0d0-6e433552eeec",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b8f34f2b-fc7e-4bd9-a29e-31bfeead320f"
        },
        "item": {
          "id": "fe04866a-4d42-4ee5-8d00-c999f334a960",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8eec8224-11b3-4c2b-8cee-d15d4ac71758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf60274-3c2f-40de-b5dc-158b814b6912",
        "cursor": {
          "ref": "674d4db4-f9bc-4d3e-8635-506229b8fffd",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "f7259575-f623-42de-9e52-4ef16429595c"
        },
        "item": {
          "id": "faf60274-3c2f-40de-b5dc-158b814b6912",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f5755d55-709e-4653-a69c-6ec3ff947ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5abcd9-ebac-4fff-bd38-b680d21e261a",
        "cursor": {
          "ref": "a744b22e-e44d-4ccc-9657-09aecc16234a",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a6d76c8e-633e-44f7-9ddc-7780fe27d760"
        },
        "item": {
          "id": "4c5abcd9-ebac-4fff-bd38-b680d21e261a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ad26d740-7328-4be3-ade1-cc1dd4cf3c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4392ba43-0091-4e00-85b3-f7703b1fcbf6",
        "cursor": {
          "ref": "9350fe39-6dc8-4e43-ae68-d4199e8c30d9",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "aec8ebec-f9a3-439f-97e6-2f9c4eb201ac"
        },
        "item": {
          "id": "4392ba43-0091-4e00-85b3-f7703b1fcbf6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7e95d2ff-b4e5-4b38-8c67-63c57a3cc25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32bb940-7b08-442d-afa9-3ef7ebb7e4e1",
        "cursor": {
          "ref": "4deb3d8e-6426-450c-b39e-c1aa84440ea1",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6ce57608-8661-4fc1-8075-86428954719c"
        },
        "item": {
          "id": "b32bb940-7b08-442d-afa9-3ef7ebb7e4e1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "71895a5c-f8c4-4102-bbd6-a6c1397edf90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4895484-acd3-419e-9de1-95215de11c98",
        "cursor": {
          "ref": "18a1afa5-4f70-473f-a785-c59b8203e65b",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "8167ae4c-12f1-466d-a74f-86fe0a80ffea"
        },
        "item": {
          "id": "c4895484-acd3-419e-9de1-95215de11c98",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "751f555c-0702-4166-a182-b3db74857c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e229cad-2386-4934-bdb8-a13d1c37a659",
        "cursor": {
          "ref": "9f0a9965-a272-4dba-b131-c26e797f30bc",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "06193faf-bf5b-498f-8ee5-c3d5b01796eb"
        },
        "item": {
          "id": "5e229cad-2386-4934-bdb8-a13d1c37a659",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1c0bc379-fc46-4d27-8d82-b6a99189de62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d81756-f2d6-464e-acd0-73fccc670698",
        "cursor": {
          "ref": "8575e0c5-b10e-4242-9096-87c2266ae7fa",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "c9d272ca-df0e-43e4-8924-c0472fba869a"
        },
        "item": {
          "id": "19d81756-f2d6-464e-acd0-73fccc670698",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bb2b78fc-e481-4875-8c15-87b99ebe5ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a04b05-52ad-49bf-8f68-63eae7aa5dbe",
        "cursor": {
          "ref": "386b86fc-367a-4abe-955b-8e67c8c53640",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b4090f49-9553-40ee-b704-8dbc8c4604e4"
        },
        "item": {
          "id": "c6a04b05-52ad-49bf-8f68-63eae7aa5dbe",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "02a7e68f-ac26-4806-b5b4-72dfe770af21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3e4e1c-a52e-4d79-8a03-dc449670c7ed",
        "cursor": {
          "ref": "83d61464-f953-4e7e-9d73-d2f606bca579",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a31f30d6-8cf9-4d8a-9f4f-7d4d531d0775"
        },
        "item": {
          "id": "0e3e4e1c-a52e-4d79-8a03-dc449670c7ed",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "899764ea-021a-4d72-91b4-21fe32ba4fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc95ab59-77e4-4f88-ad33-1b6c23c911fa",
        "cursor": {
          "ref": "3c7a5107-d61f-485d-bb51-4546dd3f6f67",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "604bbd48-f8c6-47d1-be31-876e302c63be"
        },
        "item": {
          "id": "bc95ab59-77e4-4f88-ad33-1b6c23c911fa",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "be7641e9-043a-4722-9ed9-5e486dd03b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7254375b-ec20-47c6-82b6-5baec6f12c5c",
        "cursor": {
          "ref": "2ec16ca2-6744-448e-baf1-70ceaccde61d",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "23cee218-aad5-4e75-bf96-08f8ed9f9321"
        },
        "item": {
          "id": "7254375b-ec20-47c6-82b6-5baec6f12c5c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ff810b70-9b2b-4881-acfe-0fece3be63aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb787f66-14fb-40cf-a3b4-64f583037e0c",
        "cursor": {
          "ref": "3f46a766-0dc8-4631-9658-682655697425",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a5609d29-acbe-422a-8f7a-e3ee21e40ada"
        },
        "item": {
          "id": "bb787f66-14fb-40cf-a3b4-64f583037e0c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2d3594ca-ccaf-4c3a-8b8d-bbbea499a517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b8d1d3-2bec-446c-8fe8-9672d6614bc3",
        "cursor": {
          "ref": "9a6fa0f0-7fe6-48a7-8414-46509781de55",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "fb1f00f6-18a2-4928-a91b-9ff36f61812f"
        },
        "item": {
          "id": "83b8d1d3-2bec-446c-8fe8-9672d6614bc3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d6672e33-93c3-44c0-b9c9-4fd828d7e1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101e14f2-c791-4790-afab-541953ccb530",
        "cursor": {
          "ref": "05ba575d-0788-4933-bc6a-87d12944905f",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "0c83d0f0-367f-4e34-ad9d-d36819292bb8"
        },
        "item": {
          "id": "101e14f2-c791-4790-afab-541953ccb530",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3334455d-4363-4fa9-9a12-093af96626ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2f6f5c-f4f9-4c0a-a331-e63de7e7df99",
        "cursor": {
          "ref": "72773de4-9a23-4e60-b1af-36b15b06dceb",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8e99a46a-9255-48f9-981e-f2a583645445"
        },
        "item": {
          "id": "bf2f6f5c-f4f9-4c0a-a331-e63de7e7df99",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e83e1d83-4b96-403f-a2af-2fa13c75c56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b1e548-42b6-4a6a-bdd9-8b67ed21e18c",
        "cursor": {
          "ref": "0f66962b-3bc9-44c4-aed8-e04d6ed51f2d",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "27bc7cd7-932d-43c6-9289-b453ccfb9cd7"
        },
        "item": {
          "id": "e1b1e548-42b6-4a6a-bdd9-8b67ed21e18c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "04732e01-ec23-486d-84bb-4ce877cc40e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf7ec2f-182f-4c13-8f06-8c9bb2793217",
        "cursor": {
          "ref": "c7b53816-85ec-4764-b76a-ce0774e0e2de",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "bf676be5-1d5b-449e-8d9b-10cd862b1e9a"
        },
        "item": {
          "id": "cdf7ec2f-182f-4c13-8f06-8c9bb2793217",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "dcdea303-7db7-4f79-be5a-bdd3702ac47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7344ff-f21c-4e92-bd9a-070b73dba258",
        "cursor": {
          "ref": "3cb41b8d-43ad-4bcb-b581-d95b61f4a402",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "b2a95f36-2fe8-4703-bbfb-5484bb0de112"
        },
        "item": {
          "id": "ef7344ff-f21c-4e92-bd9a-070b73dba258",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e6374f72-4ecb-42ae-a38b-cc7c64059252",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d191fcd3-fa72-49f7-9c9f-6c732b667669",
        "cursor": {
          "ref": "0bc818b1-3cc4-4f91-8052-f1598fba6f30",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "68d86ec1-602b-46d2-9538-336bf2408b74"
        },
        "item": {
          "id": "d191fcd3-fa72-49f7-9c9f-6c732b667669",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c56e3b8c-8b8c-4a79-ad4e-a5289963e3c8",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "89827c66-dde7-4064-bb4b-845c3ddce062",
        "cursor": {
          "ref": "74088f99-a894-4f72-8002-ba87b03ccad0",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "1125f770-4203-43ab-b883-bea322af23a6"
        },
        "item": {
          "id": "89827c66-dde7-4064-bb4b-845c3ddce062",
          "name": "credentials_verify"
        },
        "response": {
          "id": "505b1400-ffea-429a-a515-7a1735bd1ac9",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c034903-ddb3-4732-9238-fe19cf74ee91",
        "cursor": {
          "ref": "c214445c-4ce4-4052-b245-6a5a4a2a769c",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "403220c5-6d6d-4dee-a74e-a833cd82bda4"
        },
        "item": {
          "id": "9c034903-ddb3-4732-9238-fe19cf74ee91",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "da59d719-c0e7-4f0e-8d21-196e5a98006d",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6bfd2e-692e-40ff-9338-b7d320272529",
        "cursor": {
          "ref": "0d751a00-ebcb-4a5e-8bb2-fa9a48f72ca4",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a42ceeda-bc46-4302-8add-6c703f93252d"
        },
        "item": {
          "id": "3b6bfd2e-692e-40ff-9338-b7d320272529",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "de8ba39b-2178-4c2f-8a34-6e383d95ee10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6bfd2e-692e-40ff-9338-b7d320272529",
        "cursor": {
          "ref": "0d751a00-ebcb-4a5e-8bb2-fa9a48f72ca4",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a42ceeda-bc46-4302-8add-6c703f93252d"
        },
        "item": {
          "id": "3b6bfd2e-692e-40ff-9338-b7d320272529",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "de8ba39b-2178-4c2f-8a34-6e383d95ee10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb0e553-04b1-42f1-99c6-285f1f83e431",
        "cursor": {
          "ref": "775f0263-9b32-40a9-8351-c8c3723ecc06",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "5aa63c0d-f664-4e65-a2de-fd4a90685fda"
        },
        "item": {
          "id": "2cb0e553-04b1-42f1-99c6-285f1f83e431",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6d060592-40ce-46ea-8a48-b0a2b6f9bf92",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d72a05-171c-4c49-a05e-712969debaaf",
        "cursor": {
          "ref": "ab2cad21-1600-41c5-a14b-d0afe224fbe6",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "3fba199f-89e8-4328-852b-81c84ac84775"
        },
        "item": {
          "id": "c1d72a05-171c-4c49-a05e-712969debaaf",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "950b4dc5-1636-4926-a357-8b4a333f6cf6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}