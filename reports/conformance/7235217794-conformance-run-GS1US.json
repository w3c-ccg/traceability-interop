{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b5547eee-df90-4f7b-980b-8ff540d28796",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3ffc5ed1-fc71-4580-bc7d-f72525808ef5",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bbb53925-d474-46fe-be76-82a3808ca2f5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "11a6bbad-797b-4416-a52b-a656247741a7"
                }
              }
            ]
          },
          {
            "id": "89b9dfa2-0fad-4b40-9c7b-2d01c7ce2c8f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "15e0388c-3c07-40a0-a0d7-2fa813efc865",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2cc647fa-fd22-494d-aaca-14675f11657a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "78a242ff-3943-49f3-b5f1-08ae6b8f0b32",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5e5169cb-afee-49a1-b8fd-b2b929396bb0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e9f7066d-d54b-44ef-8c2c-b1b22bd2e53d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9215e62-9a68-41db-9b40-1a5a16e2882d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b978f5fa-0c8a-4b4a-b633-1e0dcf56ec48"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0c0afbf5-12e6-40ec-9529-6feb089add37",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "48e3afac-ca89-4744-a0fb-55bbb0df1ddb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b42010f4-2d5d-4ac9-8fb4-9e1caef3f36a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "23ecebbe-1567-4682-805a-eb4255437cab"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92782698-5f08-415b-b02b-c8e65008675a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "341d7f07-3f02-4790-9e9f-d10e705c2498"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41c03c50-f382-4b52-9815-8acc92d7f421",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa821550-c04e-447f-840f-79b97afab614"
            }
          }
        ]
      },
      {
        "id": "ed27e5b6-cf8e-477a-8e6b-e998f67cac62",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "47d20688-2d35-4681-9c31-87339e77e210",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0793a54f-6e3a-4c7a-a808-25219118fc1c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a9759d01-ebf1-4fe8-9dd5-b26686d5805e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9881d6fa-6828-4018-b3bc-3a47cc37b9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9deb24f0-2ac4-4d87-8700-ae25511daf47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b764b5a-69e5-4cab-b933-6f72e8802e17",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7adab20f-65b2-4f20-94c2-b14847b73aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1e2f602-7bbd-42d9-b78a-1889aab99560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3a9b5d-7f57-452f-910b-6d1d1fe10575",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad09ddbb-cd32-4d6b-9d8a-43adb28f9ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97a89bf8-95a8-4fa8-aeb9-0df452d51733"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "40a73b6f-6dbe-434f-8805-1ac0f76b539c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e1b58c96-4706-40b7-a749-bbd7b8ddeb45",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc299df-b2d3-483d-b341-127d85b90a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d30e9d1-f68f-4579-8ce9-d1c2fc219842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d24213-4f5b-4f6b-a21d-78f6f307e005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f5f5e4-6aa3-4be1-9ca2-66d8a7d46969"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1b60d990-55d6-4f91-acb1-9461954b9550",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ac52cedb-31e5-49ef-b024-4260a64db819",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0352597-eb3f-4377-8383-962b88bea525",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c1c7e149-371f-44e5-abba-b85d6f270ce1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7652a8bb-8c33-4b74-8b91-4aaee84c035c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "97e38225-e69d-4aa5-a1bd-4661f5bfbdec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6fc0dcd6-b9d0-4b5d-9f03-bf0b93b19509",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e334132a-613a-40f2-98ac-d150ee1adac4"
            }
          }
        ]
      },
      {
        "id": "05eaa0ab-2f10-4e0c-b4aa-9d8bbe80305e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "09457b8f-28c3-4186-bb46-f363d59216f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cf452427-bbff-473c-9b3e-e25642458887",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "60f9a986-671e-4012-9ed5-1f39014e65ca",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39056532-c5d7-4279-8870-36eff21eb4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b19636b-2b2f-44d0-86ff-7da5cb0d0f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d238647-7a46-4534-838e-2158762a9fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cc89bbb-b091-4efc-bce4-17b9724bea0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28213d05-9e96-4d6c-9c1c-e403e609d80b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141eb930-3f76-4121-9153-70d44c0e1165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0094125b-01d9-4ace-9e3a-59c7a9e9fd4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6225a8c1-2b47-4fda-8727-0a75fe6e333e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3141137b-7771-43d9-a815-63f326e13e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6b47c4-302e-4c2e-afbf-124e39ccd29f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c65786-c067-446d-bf96-13f8fba6b898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2467d90-42d7-416b-bc59-f00e40198536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19593e0-0998-4732-9d07-d050963be100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6a7a024-4492-4bee-b700-22da3a250160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71150290-df7c-4c97-aa8f-5ffee69784d8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfce64f0-3f55-4495-a577-bc5eb9257a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f95855-6ac9-4c65-9b4b-74249c9c9df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1328b43-584a-41ee-a1ef-12f092bf379c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fce3158d-aa0c-49e1-b97e-4dd2efba6aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a9a211-3838-4839-9d88-e0ecf68d07a0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3d747b-c848-4290-a8f7-cbaa25ade736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7902bc-878c-4f77-985b-6455f317b0ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04d8144-46da-4138-8b3d-d81dcf24b5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da64e7d6-ffdf-4223-bb21-0e173686ad7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4572e8a6-7c9b-4e63-8d25-721230db567a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a89115-c5fa-48d4-ae93-c071e99a5f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "095ffd8c-c5c8-4071-90ab-383fa49a3ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb58787-8d29-494a-8abb-615f0a750ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6702125a-8995-4862-b135-2e1d7bd31d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e319d69e-3d02-48e3-b8e4-b8f9477ccc1e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0edf4ab9-c69c-4144-aa69-bcbbe859a735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0181b5a-3046-4b63-8f21-bd3e7d1001bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586796ed-eedd-4fe2-9592-e502c2ceecea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05772983-743d-4526-948e-d12b03c2d47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006976a5-8bb0-4f1d-9069-43c214724d3b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc7ee80-45c4-4276-b8ac-aac7460a5ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28185ebd-21fe-415c-941a-fdd89ce57fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc8347a-9507-4a3b-9975-3dca49085687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87ce4cfa-3df4-4a7f-8c76-7b22790ce626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d565528-369b-4a2c-9e88-03e53a20d73e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c6469b-fc4f-4690-8bc5-f45cdaf2da70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e00c70bf-3f72-4017-98aa-4c65d523e8d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3af850-1136-4748-a752-edd67b2fabe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf42ffdb-6ba7-4133-a61b-6e0c34e71f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aab7454-2598-4858-9fc2-3867f6cd91c5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208165d7-028e-4271-9c0b-6aabda400775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a4524a-c86e-4c83-ad21-40f7e215407e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89df9661-e3b5-4719-9e96-8623a84105d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69e50e8a-c4d3-413f-9338-ceb5bd198927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4639ce95-5a12-4647-aa5f-ddca01d2e445",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "477b7e51-ae21-426b-a21a-3927f8fbb594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870fa413-ff4f-4aa4-9a3a-d9d08abf2d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22c5b18-be3e-4a17-befc-48116c254bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24c973b1-b022-4b7f-8554-a80f8c6444b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4289f902-b4be-4b6a-958d-3d0d88346a3c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68d38f6-c2d6-431d-a19f-6db45fd6d6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f07c852-8677-4c86-826f-0d15dfb37b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da333951-4901-4407-be17-19729b4d7b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "314fc1f9-b4e4-4a46-af10-be4026b21f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52294ff0-0105-4eff-b48c-033e1f57aa02",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdca5261-7f0d-45b5-9d71-ce437e3f4369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "195c7fdc-664c-4c3c-b9f9-14c80bc12fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b733c1f6-0c69-4509-b230-72b20b0d9312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35e58fc8-f65a-4af5-b4e1-602012f9b3ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f3fbdb-ad2e-4cdf-9d26-ea39cc59e8ba",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1725b0-6de3-4bb3-a284-40db49a7254a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39413e43-0392-4b07-8ae3-deddf3a86fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d22ac7d-1043-4c0c-a563-45ec825054da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1635c51c-de63-4742-8c77-0f1d01cd4580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e7fad9-9890-4434-8ea2-bcc1a60e5568",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e87169-68ef-458e-b2be-531cb22d4b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fefc506-848e-4f5c-b181-e0bcb07a3345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d4706a-75b8-4e76-80b5-6d20bb3b3fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8180b77-f319-4ac4-9bf0-be36f899e6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f341e20-6849-4842-ab78-7aa526cce262",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6c83e4-abbf-4e0b-9bae-46a392fe9741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc16e9b-7fc7-4e4b-9e03-e38168d15fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccfff99c-3af1-48b0-99fa-1577791d3a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29f97bcf-127b-4989-a14a-1531d52803de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4e1535-2033-4cd5-bb4d-604771b2ba75",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97aabd19-bf16-4273-b6d6-e756dde61b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bca9b8b-0032-4025-ab4b-b80934f88e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301188b0-072b-4bc9-9c73-a1525e4fe2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e1809cc-ee66-4a34-ab18-61627e684a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9cbdf8-0e05-409f-a98e-7ed5c0a8721a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4154d0e2-eac4-497d-87b7-35e5c81cc554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96c8b9d-32d5-45a8-bd73-faa899f0790d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b35c4a4-1801-4982-9e10-e3e9b2112bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "32b2dec4-57e7-4945-bb9b-72e627d13407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5076438-8258-4558-ac24-0b26e68323db",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91215a57-ca09-4da0-947f-eae910dd4fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ebe8255-53ff-40ef-9255-3f6a4d50ea61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18176334-86a4-4844-8cec-402670feec08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc309331-29e5-4690-8291-72cff326c4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2caea6e4-1264-4324-8a36-11fc07f6a896",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05c0e6c-2d87-4736-8ad8-b74417943878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e0136a-dab4-4df7-a7c9-c98a4d894189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f179cd-5871-495f-aee2-371360742242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07790cff-6910-4bf3-8bae-5a017b4ce469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e079cbf8-2cad-4910-a06b-ec31e132adb7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0e8c81-bd5f-4328-b34b-f093b414e2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2663b14-59c6-4db0-ad81-5b8875bda19b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf8ac38-c930-4658-85a2-cd0a2b9a603d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10231aa3-c8b0-4485-bca4-90fa7fe7eb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b77e5a-602a-431b-9700-edbf22afd8e9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3d134b-37f1-40a3-9cdc-b044949e5b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f73d8e6e-e131-4f0c-a2d6-0e483ad12526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab6c6f3-3d22-40b8-8cf8-a0581e1c153a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea41d184-f77c-4b36-98a2-e66ee87908e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb163fec-7d67-4959-92b3-dd2bc62febce",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd90aaf-5278-41fd-91bc-f97a8a538e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "700e6474-363c-406a-a41d-d6acfe13efe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3cf82f-5a34-413b-b117-9130686c283d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "215fd002-dbd9-48d6-8775-d65867401cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2beae7bb-1abf-4b84-9432-e409305b58ad",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab62e0e6-b965-4726-b210-157e7a8aa1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d75ba03-d799-4923-81a2-49228fd3054c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd69931-f22c-45de-8406-6ac5ced6f84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "65a6ecd7-c39a-4fb2-ab24-9c9653730919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0d0b41-e0ea-42ff-af26-373d8bed6696",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86898f08-4de2-43c8-bf10-233cbce4fed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "998a197c-d615-471c-ba15-1f4d74656d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7b17d5-15e6-4a33-a8bc-dfdb45d82242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e0ca77-d3c8-4ba6-add3-23bdbd247d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880897fe-853c-48e4-bad3-4446f0adab2d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0351f47-7b3f-4e09-8ec1-7a46b4f0740c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "652e72a0-5eb3-421f-bc4c-ba7f134be974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32137879-d6f5-45fd-b734-4fa16cf5ec19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f365f333-2618-40c8-95d1-d8ed2c95196f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e885385-cd74-4ce5-8ca7-331dc9691a48",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "025ba095-bcc2-49da-8d31-7397340d81d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff4032b-d836-429a-9c47-a2b150c10139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6f5469-ad01-4cc6-8eb0-c57e55166897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1829896-bc59-4775-a6d3-235e1b7eded8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9bceca0-9e9a-4296-872f-ca936c9aded4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ff8bea-b50c-4a08-83ba-cb255ac625e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca2dfb1-b444-4226-8541-79db40ddfca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a4c683-6466-48a5-8ca9-dee10e8b289b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a47eaa91-e01a-4624-b7a5-3fc8ca4d22de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14dc0eb-1a08-4524-80a0-2340eb5016a2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ee79f7-6267-4a45-ad94-2e5d74baa5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d84527-1bb3-4a1b-858c-0d8b993f083e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2e2672-47b6-49c9-86e0-d82e48ea9552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d59a2808-a48b-4c37-ab72-7adf8069437a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d67f02-c87f-4382-8904-30f5f5f63042",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8953d9f2-4028-4654-a78c-159e3250160e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81abaacf-7fa9-4300-b2c2-dfa7d85f6799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38293735-4b8c-4e77-b53d-d61fdfd46923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "84a7ab6d-64d0-4c5c-82c4-b6ac652d1a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e5129c-6a97-4211-a29d-ab8196d5c6c4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e014ba4d-03d3-472d-ae11-10ac3a78882d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e37f2fa-443f-4a06-8b51-e205f0323ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e90e7a-69f7-4019-9aef-9bc4bed48e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "69a5f00f-15ff-467c-b2de-17ca3068b7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558f8220-edee-45d3-9799-65212de39135",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c10870-c7d1-4bb6-9d88-f07490308946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7727cc91-d6fe-4437-8016-c7f0668cd912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463aa413-98cc-46de-821d-5304da735402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd87f29d-02ba-4832-a2bb-c1d791b54ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd4b3c6-00fe-40c5-ab20-779f9362578b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14055848-8e6c-4bd0-b65d-ea801977e097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf3726b-0683-4cf8-8c0b-0755caf1407a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d821ab32-cc6d-45d5-af65-4efcc7f1804b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1360e13e-951c-4540-8a74-19238978c1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3771f4-ddf4-42e2-bca9-36673272760b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b5dd96-0539-4760-9eaf-f52bca2e1fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c255d166-bf43-4667-a36f-baa7b63464c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb099e1-b243-47b1-aad4-085d4b78f8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34f054d2-10ff-4b98-a12f-5c5d5f6371e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a255426-8f8d-45c8-b6fe-b46c5ac0e41b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b64680-dbbb-4d4b-a9cb-79e4e04f50a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e698b85-441c-4f81-93dc-674c78412620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582912d2-5bf4-490f-a45f-6385745eb199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e17410-97d0-41ae-8c43-424b54b7b1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2974cc-e78b-4234-b631-8db5ef858515",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee4f4bd-b536-4d41-90ca-e4e795f6f4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69adad4a-b022-40d7-808c-6bd31d8324b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfaca91-746f-41ee-bdbc-284935eeb806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e5b2284-20ff-40a6-81a1-aebbd28b1f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b461a20-4031-4bba-b474-33c97564c7b9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5551f530-5170-41a0-b6dc-612ecff7a62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8f17e0-49af-45f7-84d2-bbbf1d39fda8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621f7224-0909-4163-9fc4-ed3c3f7ec36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c03de123-36c3-49a7-832e-aeeee6def95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04eda113-ef90-4cd6-a421-d2acd9fb33a0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f3085a-834e-4522-a802-cb06574c506a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2046646-c672-48b1-8347-e65f822a249a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c29360-f6b7-44c4-a037-472145838896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ebf4825-4439-4813-8263-df5f031c79e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a540c61e-648e-45b9-85dc-b428b8247ddb",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce00207d-0c69-40a7-8e5c-522158d7e64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f59587-985d-42e0-97de-cbd03b4f0414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa478bf-82e6-4d39-a7ee-218fa3bf80df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e042eec-65ad-464a-a295-21564d34be38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575dde96-2b1d-4e71-b4ae-8413be5606e8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29ebb8e-54c3-40bf-8249-21ff3d4c1e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0445e6-e400-40dc-929f-4fd16f916a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af63d8f-8459-4fc2-8fea-eba4703eecf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d447b0d-aacc-48d0-a8a5-79c6c14d46e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aafc3a7-bfea-427b-b84a-c5a2d38df4aa",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f455be-4a14-4d96-b02f-3a8fc6d2da21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09baa7f6-2d6e-4563-89ba-95c8a52d5d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11840c16-2b75-45de-bb30-b90aadcf8ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec49ef00-ee7d-43ed-9b62-8ecd4826a9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ccff1c-7989-4a23-bdfa-e56abac6d8ba",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1659c99-366f-4240-9b3c-f3fa49b54932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f705252-411b-4933-973e-72070f18e369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b2ce65-3e30-4999-b01e-a7eac5a7ff1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "87d20d10-2378-45b8-8b71-c5f25f427d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e4c71f-a0e3-4173-bce5-24d76ed29361",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc872c3-cd6f-46b7-a534-920580c41830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15bf757-6944-4e73-be9b-514b1c22a5bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933a4073-e58f-421e-87a4-07acfd795e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f961973-3844-470b-9e5a-fe63deefd9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a209499-a15b-4dfc-bc51-4f78ae3eb430",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8483d69a-b9f2-4ab9-a1cf-ce6ff361c06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6c9770-ee20-45a8-870e-bf7cead57294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee19836-21d0-4271-b095-1fed5bc0c34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8befe1-1819-477f-aad8-b8270808e775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367437cd-774e-4184-9e76-10509b6438f6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362749b5-06a4-44dc-bbed-01ef55ab485f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e166bb1d-1054-45a4-b9f7-c0d1f791e10e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0287ef-45c2-4648-82fa-dca3f43b8851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "304bf9fa-4413-4d08-b722-e605c63310ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b220c9d-af47-418c-83d9-9c7804bb5bd6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2b9474-1e14-4415-b4ce-8004847217ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e9e4b1-9a7d-4887-9999-9f5e621809a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e21b8c0-f007-44c5-ac53-1cf4a11346f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20ba2f80-7b91-48f7-9f52-875fb3c1e208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84525a3b-69b7-4fae-8910-7d004d2bd4b0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906ae18c-832c-4979-ad7f-f48af6f3e22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee050cd-d2de-44e7-b2eb-51ad9733bb6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b76cefb-823f-47ba-81d0-9db1679ca775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45b2944d-c042-462d-8e8d-b8156a779d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b346b4-bf01-436d-9da8-a3fac576fea3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f8ee90-624d-4bc4-9082-885037035311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4be2e99-24c8-40d6-9e37-d57a8a1c3896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813f9194-89d9-4ad2-ac88-454943a4ce9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb025bc-0b48-4296-9706-afec2c3e26d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1a4759-0383-49d9-8e36-4437d121cea5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c9534d-d723-47db-ba6a-1135fa701f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9271e142-8ef0-4280-be21-225280eddfa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c329c0e-afea-4633-8072-8c816b8d772c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc0866d-4040-4f9f-be41-7d067a3b9950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24a591c-a904-495b-909f-e3f9c49969cf",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b6b018-8b0b-4487-9133-50836d1fcf7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01456be0-a9ef-4aa5-a601-253375d71fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7f09fa-9301-4f2b-bec5-b1571e48148d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f06208d-26ee-4409-888a-78e2894b9f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd47629-630a-498a-9ca9-8c04cd3894a7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070eb920-2285-432c-b44c-f5dbe66fe2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "685218d2-4e0a-494d-aa20-c410b5e49cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f9b9f6-7b47-46e8-a5d4-7e60a2c53c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "92350539-4566-4de0-98f8-f02de68691b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af43aea5-537d-4a9c-8272-c98827e8c032",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abf558b-3bae-4295-a2f3-27faed94487a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc5b7e4-8407-405a-ab1c-8d073ede620f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91725b87-d71b-4c51-aeef-6628d4b968be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "99e0354a-1ff3-44c5-bafb-44e1659caa97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbb77ed-6a88-4197-85ba-44f78e3e11d3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3629be-f30e-4764-a7ab-535cb95b9d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b99ee61b-c2e1-4eac-aeb2-d7fd167b1ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e64d358-ddba-41f5-8768-2283d42def0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d02e4e5-edc2-4d56-adac-8166f13d1fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd6b259-2fe4-4133-81ad-c1febe35acbd",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc18afa-74ce-4f4f-a855-b994594167d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3debf0f2-a5fa-4538-90a9-c3eebb695803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e8ae6d-06e8-4065-a619-95f4d7f07bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74f67065-2b56-490e-928c-97b7d17c5971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deeadbdf-7031-433f-ad9d-1862339bc516",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d27b55-34d0-4682-b0de-7a48859c78ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f56e31c-5890-4af7-b55a-98453172943e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79034c4a-c858-4f94-9a21-aa9d56a82eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08d1b150-52e7-4ae5-9f18-473a8cc612ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00342e26-7bb6-482b-bb0b-32df906ba8c7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35752f6f-71a0-49f0-ba84-0c9e51813910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cbe7ce1-93bd-4b9d-9f18-e2a18d97eb9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca7c83a-2e39-4193-a3cc-1dfc64f71439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ef58e7-9d4f-45e0-bd26-eb24106964f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5335807f-ff8f-4818-a5ca-318dc6c0bda5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d3074f-0d50-4323-a802-0195e5f6dd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d010587b-63ac-4463-b267-1fb7d5466e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de741ad-cc75-4de6-a0e1-b9de500498e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b0c0c2b-5d10-4eb0-9818-0b7a05d70a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565481de-d00a-4619-b72a-8eac8faaba37",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85d4200-9b46-486e-b0fa-abc7fd15913f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e0317d-864b-49eb-b0af-ab9066711735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd89aee-0ff6-45a6-af46-838e8731e5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "378021f2-4cd3-431b-bc0d-d6f75d3c84a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddfdcb4-d099-4365-8a21-4a698f709d1a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e2d87e-211c-45e5-99bc-511b3d7f3bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e68597fa-6acf-474e-a0fe-9c3826312321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d932e193-6ef6-49bd-85b1-1616eabc672b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d24ec3e9-acfc-4d8f-872c-5f64a9b3ce60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41b4a71-383d-47e3-9612-17ee8ba6697c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84914933-5004-4c65-be76-bb3ec096fcdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a3e1c86-31e1-4330-9c3a-b36a362d3d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307f6411-ca18-4ba2-b060-092a10d619a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "254de56b-d339-42ab-bd1d-ab197d3d527e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c9f418-fc4a-44cf-a790-9fba436295fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150e5a3a-e41e-4197-93de-6432d720eb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c9899fd-49a2-4df5-95fb-c85571defb56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdd8960-ada2-441e-b29c-d0903071e52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa674c57-2f2b-4bdf-94e0-d01e488e9178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acf47e8-3053-4767-88d8-548de8e4fdfa",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60b93bd-1dbd-42ca-a989-a45214f6b81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994355b9-7b76-410e-95a1-0e309cfd9f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52540a4c-9df9-48d5-922c-031ae44722f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d43cc4b-ef6e-448d-9043-19cc64feb5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12da39f5-5f95-450c-a48d-e0265ef78ad4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b419d5c2-318c-47fb-a3ad-54852d00df73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ebd3128-3c27-4798-bc3d-8e283dd0472e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abd1ae9-3d24-48fa-8358-0b37b04b530d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a54252c-64fd-40fb-8f49-bcee76c1c737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09df980-b192-428c-801a-bccf98532aee",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce4a5d8-53dc-4bb2-a1d9-838d264c5d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc75e88-fa3c-4b0d-b306-74055773e9fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d9633b-0810-41ee-93a9-0938dfbd25b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fdfe8ad-5e9b-473d-a459-d6de62b58b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c647fe57-9e70-4898-97e9-cf3d39f45fff",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa09b7c-777f-40a5-8bb3-875a650f4221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e0c486c-06f2-4065-a217-79a4035b6ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934e88df-4bed-46d3-b43c-19ffd0c063af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce06ebe-4974-49dc-a5e0-0c5cfc269fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a2d655-8187-4c49-9391-90448e224991",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add40fd1-f804-4565-b7cc-0f4adc10fde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84fdf9c4-eb46-4e13-9d94-fd3ac2c9b0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e84063-52e8-417a-8e10-9d32ff7044cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "22d09006-7e10-4d33-a57b-daecee5fd851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080d27b6-505f-4358-8a95-d60c2350af8e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6792d96b-801a-4ac9-92d0-b117895cdfed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30835c1e-377c-4359-b577-f82d609e1370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444f7f7d-e025-4d49-8560-1ef3ba8db45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d601a526-9c03-42b4-b660-8a2a7a8068d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77353048-da8c-45ee-a247-f9a51079baf0",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52235eb-c5fe-4adf-a3b2-91d551196ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf826186-16d2-4dba-87b5-39c9778e65b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031efcb2-66f9-465b-8087-eacfca6f5c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "49b4d581-4fd8-4399-ad29-60dc1eed8c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f24397-2141-4376-b354-4c1cf8945056",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8ff1bd-d1d7-4335-b84d-e5df5b4602d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66b448bc-83f3-416f-924f-f7876ad21e6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079f0e1e-3482-4c50-ac74-2f3496a11767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b26632db-9938-4a26-8004-353ef8804fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c232ab3-35f3-4b14-8536-ab97311425ef",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d75dc30-40a4-4383-b9e8-4ce222a0980d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de155be6-abaf-4bf4-aa72-f52034967688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5409d8f-b5c7-40a0-8f16-d4d4811b2038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28be4338-0776-4f45-8540-b854563e6c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ad40cc-e604-4650-8b27-246ebd75c9aa",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b8d208-5695-4f83-9363-b698a61c81c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb24c2a-e64f-4d27-a329-d1539d8f08df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d1937f-0e6f-4f8a-98f0-05c878f20b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c363c3a7-350c-4d34-8816-b1c9d615a117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179b37dd-be4a-4365-beec-6a21d41ea5f5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26269751-83d9-44a4-b627-ec2bc958e31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634ec642-e9d8-40fc-80b5-b6d6f6aa3b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9187783-91dc-4fdf-9ff2-12625c441488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9281de23-1e63-4521-b5b7-6dfae8002ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6a3c8d-64bf-4615-8c48-268c6fdcc11c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224e1d66-946f-49da-b232-2aa9348ad56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00adb097-c576-4409-a2cb-080427e2611e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356c1916-df19-4e6c-970f-bc571ca48f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4b4b4c-d5c9-456b-a59c-be0337f533a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27eb743-e7cd-48a5-9152-f28b716b3e2b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a217ad-90af-4e48-989f-1c363b7ba08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e94b49-07a2-4e70-8c92-f9bb0631f320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd2e8bf-0685-4326-b0a4-c1dba81e063d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d122475-1260-4314-bb44-ff218d0e5dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53321c41-716d-440b-981c-fe7baf17b643",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece8b142-e7ad-48d6-9a5f-c0eff676a86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff15871-8bfb-4465-b6fa-f520960d6445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c785a1ef-7f1a-4956-b0e5-816003cb9ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "39999625-9d43-4f52-8c58-2359f0bb419d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04524b7c-7a8d-46ff-a8b6-bb5825753c45",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2010fc03-5be2-4b6c-8734-4db41dfcbb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a164857b-c81f-49c0-ac27-53ec15dde9e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fddeca-e7d5-4c8b-b2b6-7f884503225b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04f722df-de55-4640-bcba-19f0fc2a7f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd9cc2d-9e39-434e-ae0f-79c87bf9d409",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a9b95a-68b0-4285-b72b-c172aaaabcad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a57307d2-3a91-4014-9646-cb493ea4e2ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3bb54b-44a9-46b4-9b8a-3820f0e6643a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae4b4442-efc0-4621-b552-7a88bda9c91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39c7fcf-189f-4545-9767-26a720ee544e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e68359-5c82-4935-a3fe-1e86799a8e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f2f403-a4e2-4809-a1ba-64533866d4b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14c854b-4fba-48ed-b0f9-bf669cba3283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "900ce6e1-3bcc-4012-984c-60bbeeeb0e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f903377-9a26-479c-9b22-b910747ac295",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5297e999-fc24-4c5c-a1d7-4b3c2a3a1b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0cb0dce-3bde-4333-8314-b8adf3d53fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129d1acc-e596-4b11-ad56-cad136cab240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b232e4-32fc-4a91-ad08-4e8084eba612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e4b6ee-143b-4883-952e-b77538784d60",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd6b40d-eeda-4765-b8ca-bcc6639c284a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d41c1c-2ab1-4b05-895e-efc4e72c5636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a62f7a-1f44-45ee-93c4-594629b1b231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "57a6785e-5931-45dd-a0e1-c862585e6389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7b738b-03dc-4cf7-aad9-23daf7e02903",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05864c1-bb2f-4bc8-8337-4449478b7555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90505055-8aa3-46aa-b3b6-0602e520a1f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0beee5ea-22c5-46d1-bdee-8a77508abdbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "85494483-dfc4-4267-880d-28aad63b22e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5bad6e-1f6a-4ff8-ad11-ca9c91cd549c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ddc5dc-fe33-408c-9a2b-c183d5da068b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de42debc-0320-4af7-a8c7-2e2c05983e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250a6f07-2cf3-4bbb-812b-f4a77fa55ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33c10a80-1e28-44da-a41d-711f26e4cd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d42ab20-3e8e-4fc1-bb4e-b96bd777d70e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73030dd5-b2bd-4db5-8a97-87a14dcf36b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3029771-af95-4756-bebe-8022794318ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdddc078-99f8-4564-95d1-ab2f08b58641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84b60d33-d2e5-4856-81b6-834ab13d12a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718eef74-c511-47da-b917-d9d32d171a60",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1d0bd4-13e1-4184-ab37-9d08ab6b3b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c50fae-e82d-4318-890e-98bcf272970e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a731372-aed1-4ac4-8dad-1a74b11c2125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb1b3fa-6c4b-4984-8ca8-ce0746916c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb2a814-30cc-49e4-875f-c34ac3f83deb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f345061-5d29-43d3-b590-70ebc7376463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8efbb15f-51fb-4ad4-8f44-13eec63ed5bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f26252b-0131-4bc0-99f8-b3a6929f9b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94099cc7-4658-4024-8bd4-cd28801c283d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1f69f4-1bb5-45c9-a198-f516fe976c17",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63892f24-1e44-4f48-ba40-3da15cf18ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "650df6e4-bfd9-4491-b339-08537fda33c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13bb8cc-bc44-46f7-9c6f-1cfa84bb748f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "771d190b-4833-4080-bac7-1bd33b925d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dae0e5-c23c-4960-a59a-d0bca37bc40b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9866a55-2927-458b-96c2-0a504932532f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5127a08-9a5d-471d-964f-3e75bcac745c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa033302-8751-404f-bcec-dac4679fe33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "899fce47-db1d-4f70-9b03-2cd3664790d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cadcf74e-a6ad-44b8-afec-3747f9e120cd",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfab95c6-c0e8-4394-919e-4361124e3f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0043e8db-f14c-4a82-a3ad-d905c3e96878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798e65d2-636d-47f4-b664-7739fb04811b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "25fe76bc-46a8-45f1-ac70-a33d5240fd6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a388b6e0-d128-478e-955f-a78c714ead1a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794d57de-d744-4318-a945-773587342c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81874267-4731-469a-8d1c-be4550caa47f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d48a70-7b1a-42e1-b50a-ccfe8f8e96ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7579fa-237c-4ca1-bcc4-6c562b0614e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9005bfd-6231-4a49-bb69-ab8ed26bf049",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aed24be-22d8-4fa7-8cf5-73bb24565e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce1f21fa-04b5-4fda-bb07-3c03515afd40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951f0a53-01a3-4d9e-aa22-eda8ec56ac59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc84898-1e9e-435e-97f3-44e429b6d18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87917666-a90d-4912-ab78-292352b3099a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17502f0f-3e17-497a-9428-6cf1c7bd1029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0617342-ca5f-4972-8cfa-b8baef7af612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7402915c-cffd-47a1-ae4c-d138f6987f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a28615-18b9-4e23-a42c-8c9ddf2d0c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0052e6-1b9b-44da-95bd-e10e58c4de16",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31f5ae7-01bd-443f-ac1c-6c503972c6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4ae31a15-12f3-4b75-8c68-77b606db4973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b545080d-fc08-4258-8e56-fab43c3cb2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0de11686-0cfe-493b-9c92-7e7e4d8c321d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "895e4c29-b149-4005-8aff-dd794db35cfd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8f2bece3-aef8-4ef7-b6ab-c72066770eb4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6c0a94-5995-48cc-8b3a-977eed4fe3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb492f6e-151f-4359-ba9a-647f070aa500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181a9c67-b99c-4ae8-8974-1eb0ed1703b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3513e195-05ad-44ce-8a00-878e23851e05"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b7e6d59-07e7-4835-942c-3a30f598bd41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9bb9408-ab41-435d-8b39-2d9111ef2749"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "271aed58-3db2-4a73-831d-837051388618",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc6e19c8-8e0e-407a-bb77-3f11d96ac2fa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3268a9a3-9fe1-4ad2-ba22-77e0fa57529a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a93b3741-1938-4e72-8271-69af7c4621f3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "19831911-d7e8-426d-ba63-e7572f192211",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8f964143-245e-4156-81a4-03b8593cc94a"
                }
              }
            ]
          },
          {
            "id": "506d32ff-3c71-4f3f-b1f0-200969cb597d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8bfc736c-a5ee-49bb-b9d0-706965a888f5",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e808368f-4ea0-4257-ba5e-00b0b9906c40",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72f3c65-2e07-4c0f-b7a3-34bda5661442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e8b219d7-877e-4cf4-8dd8-dad02635e7d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377f0fd2-84bd-41e1-b963-91aa531246b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da171b23-0a88-4b74-9805-8feb31b03de3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ce02d97d-8a4f-439a-9cff-b57753750904",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7be9589-002f-43e7-a631-bc6644716321",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed0080f7-0327-497c-9a73-d5b73c5ef728"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b95ddcbc-12ea-4326-825e-056bbec7bf34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "04c23fec-95cf-45ee-bcaf-3891870c00c4"
                    }
                  }
                ]
              },
              {
                "id": "e31f2883-1784-4185-bd22-a5268c837748",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c035b96-6e8d-4455-954e-5fb21f3d457d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd976a0f-d719-4ce1-9548-2b9d2fad101b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f9ea2be-f6af-412a-b8fc-7da0da6c6621",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d316e443-867d-43d7-b637-df7ee3e2429d"
                    }
                  }
                ]
              },
              {
                "id": "54de4e91-8fcd-42b8-9439-57acda6b52e4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f6d25ab-6453-4982-b401-8a6204c2fde1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "02bd4222-c648-4346-ac33-75f5bba65e96"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b482ec90-eda5-41a6-a43a-cad63d37d662",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3214d3f9-7fa0-4653-bcdd-c797e4d199d4"
                    }
                  }
                ]
              },
              {
                "id": "d95d67b7-6b86-4931-9297-aa490321df4c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e78b0d9-5da7-46c0-9033-8f80ddfe4e36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "220b44e1-8e98-443a-aebd-6cad44d03934"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b09bd6e3-30f3-4c62-89b3-daf04a851f02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e0554690-4e47-40b6-9a38-88a82646cb7a"
                    }
                  }
                ]
              },
              {
                "id": "6ed5b2b1-0bdf-4c9a-ab4a-475939eab4cb",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5521bbc-8bcb-4a23-8161-cda91e9b2dc8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9bfccd92-bc92-46d7-96ee-2f5eb1bdb8a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09e3553f-6e6e-4b34-96aa-b73a15cc6486",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "69b3e02b-f998-4afc-824e-e81d2a60c0dc"
                    }
                  }
                ]
              },
              {
                "id": "50c129fa-08d4-4eac-9ccc-3f3c235ef41d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd9654f5-895a-4678-904a-86eae8680507",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "452b1643-e2a5-4a01-b967-2e74066d6d11"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55a90152-8bc9-4aa3-a63d-68ecfa69cca7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dcd3480b-126b-4844-bb52-0de8fd25d4f3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "204c8502-3b9f-482e-9c55-dc8ee16a6ca4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b469c27f-25b4-48f0-a1a9-d66aaabf5bde"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0632c3e3-95d6-467b-83bf-63d9b19f44aa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "165dedb3-20cb-43f3-a7d7-3dfb0a76a6c0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1708b35e-dd6e-4eb7-af61-14aa6bc9eb0c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "42e65a03-3c72-4f2c-9a82-33a39130a966"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "201e26a1-e507-4593-88d6-b404c82da7ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6a2553b-3692-42fd-ae3d-b037a530ea3b"
            }
          }
        ]
      },
      {
        "id": "ddbb0a5c-e697-465d-83e8-bd0ef21df794",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cb0e7ac6-9dd1-43c3-a9e6-5160f8ed43d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e0e3384-7718-476e-bac5-d08703f260b9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d6d7ac6c-4801-4eb6-a753-26cb7be928fe",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5312fc-7ea5-4f2f-8756-afa7a76ef789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "872af525-52d4-41d5-b456-150050229fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd23fbb-d7a2-426e-b255-d73869fec9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9eb3426-7820-492b-bba3-de1cb56b37e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44abfd7-9511-496b-825c-0b87725f2262",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb727e4-a05d-4a9a-abe3-99bb2885a0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "279a1a8e-bd9f-4256-8bb7-8a9c8636329d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e390666-4492-4677-b85c-186afd293b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc1e431-46f3-41bf-9aee-4cf3109be40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e66e6b8-2189-4710-9301-a113c1a3db05",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f47fe2f-c9c4-4a98-b1c8-15bd95cf38db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0aeaa0c-a475-4ee4-9298-d371d0dc58d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a1108d-29b9-4cb4-a751-0946f13a2d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c371a5-a35a-4bc0-acbf-bd58190c0ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d26f1e-5b37-4112-968a-d4a6f9706d02",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c39b0c-7fc8-402e-882b-e5e809d70481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e9c337-292f-4c38-bedc-31bc3a9edee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543bb8c4-a590-462e-b316-e9e768c174cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d87512b-bf10-4010-b5f7-d0c7c7f7aab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52464037-8abf-4c0b-ac4b-34211518e044",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71bc371-f203-4026-bcb4-1fe3d2bda139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161c5731-a374-4f84-9d4f-dafc1162ca89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed212b56-1374-4f5a-9478-9964bd7c9db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c397f82-1732-484a-b22f-966f38ff56d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07d4842-80eb-418f-9883-abefc7ec2818",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b508ee3-f898-473b-9d98-d3166bad05d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db2ae13-dbc3-46b7-a4c3-2cf6592ef403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a207e2-6d20-49a8-bc84-21a20333b2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "43feb998-ce23-4d50-a82c-46fc518fdb25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911fe129-b6d7-4462-b13e-1d02634a2112",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a11698-e1df-4064-8424-eef58bba960d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6327393c-7d29-4127-a00f-1d72cd19f1bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb554c1-cfa8-4603-919c-950fb23bc8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4a29852-4cb2-43ff-a82c-b22835afde16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af07220-7231-4d1e-93ce-88cffffef113",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fd0c62-6020-4991-ab80-0524edd08d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d520d23-1e80-4c38-8d35-16dd3e36e867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06123591-2dab-4353-b643-5127975f360e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccdeacf5-454d-4574-ac04-b4b34cbfba4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec102d32-ddd6-47bb-a119-ada760cd1fea",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0a5e16-932e-4b9c-b2b2-015f91b04778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856c5599-b623-4fd5-85e4-c0fe19cae0d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3c1c96-dcbf-4243-8178-1294f42e70a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "105b8c3a-981d-4a17-9a8d-c4db490389c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf7e215-760e-4fbc-b0f5-4c90406eb2a7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d27d2e-64b6-48c2-9b6f-77c3271f8c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677c1deb-b560-4241-931b-7230e1fd6b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd027ca-aa09-4508-9c54-cfb796ac1633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce8e0b57-f729-437c-9460-e859bb1b0d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd46a8b8-9e8c-4a24-8155-4834d0fe7978",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ba3a29-0148-4c69-9b4a-a79c51bd721b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62945e9f-b616-44c0-90c9-f0409f960fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f450eae-f065-489f-86be-6aace696197c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4aab6a64-f6c1-4193-9bbe-76342eb54090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce949e6-e829-4351-ac90-86b61cb744de",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73ff041-24e5-4078-a794-48adc2b56759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b6bc3fd-d0df-4503-aa0f-0fc9cdbfa8c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00704c91-745f-45d1-8428-589112d343aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e4d754b8-da0c-48a1-b204-ad5eb2d5c286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285758f0-cc8b-4bb4-b1e7-fe3c91a5ee22",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "731fd361-1c97-4300-9915-32e2ecc48673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d863e3b-c57f-40b6-9dec-a6d9d2ffc11f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50124a75-9e19-495e-aed0-ad11e00df574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a67f1656-6217-4729-92fc-426901f4942a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e071daf-50ce-41f1-8f84-97c5ff91af39",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55c77d2-771a-42a4-87e9-7e4fc2ae14c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb031a6c-c29d-4f20-b650-5291c4db0b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c359db3e-5b11-4b84-8ae4-9cd8d586fcf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c497b17-4c43-4d31-95b4-0c43e3b34caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe7b066-bc1e-4c2e-94b2-5458961bb6bd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb56b58-24b3-489b-bb19-4f0174fb1d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffef8896-9eac-4301-afa3-14ae4c6d1f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8dc24a-eae2-4c9c-9553-b13786946be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2780d0f4-e67f-4e8d-9edb-2722752e3321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83e3497-5d2f-406c-983c-0fc17bf67cb6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c288ce3c-f3b4-4763-b4f3-d513fc0eb272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c0e3b6-0f93-4f68-be7f-8288367b0d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3fb07b-1363-4a2b-8bdd-f2953f760618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "691ae088-8811-4a13-a613-2800a3c110f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd6e8ba-d62b-4a3e-88b4-d12613ba117b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f0f1cf-2876-4844-a6f3-d2bb45e4bb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc54560f-9d02-48a9-91e8-9511f729a578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eaeded6-db1a-4a12-906a-a6905308488a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5567d036-804a-4cde-9c6a-bed7f3a541b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b1fe23-651c-40ca-af7f-ec4565c0c9fa",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe1cc32-8adf-4091-9f0e-f267ae9fb23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c11f93-fe48-4fac-8032-2b9feed0a9ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07667201-a849-4b87-8906-df3b12aadfd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "943a5a28-644a-44af-a83f-f076ee704b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b38373-69f3-44e0-8f76-9e61721ad0f4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2fa9ed3-12b3-41e1-8dfc-98ec28accc31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd37b460-82f4-4695-90b9-5b17579294cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e23ad1d-b239-4cd1-b9db-85093dd0f9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42b52e0f-2d70-4316-a4a6-caaa201eeab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf15ac52-c84b-40d8-9242-3c23d3c27080",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77dcb8cd-dcb4-437f-a919-9326371ecdbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe112f7-b044-419a-bb3a-a31d3fd13382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5094c915-1ad8-4c9a-97fe-d7e5d4cb39de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e1d7cb-b215-4ae8-bbca-a1734c8371f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfc9763-69a2-4a49-bb35-c364df124a0f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964399bc-9a46-4496-8f9c-b8e8c0588093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7d8388-edcc-4f85-afa9-0cb01b425ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e75618d-2d7f-479b-a104-d1a4656d7331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37852083-7e6d-445c-9252-7ffd7371f429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f33271-27e8-4fae-b16a-edd4e5d63dd2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "993febd6-a27f-4cdb-8615-837e784604dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b1b060-529f-4e9f-9ea6-a78b25d7caa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944dc7d7-31b8-4d40-a70b-d41d8fc20bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27b05efb-cd76-4f4b-8140-30f12d76fd79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f902ec1-9290-4063-abfc-ab1b7699a6c7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1906c0-dd53-4021-ab64-356c56f47c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb693ca0-96c7-47df-acba-8bb9401e203d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221e6748-ccd1-4895-90b1-d0f4fab07029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abcea451-fa39-43af-947a-19ad22be2ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16db95b9-8fdb-4745-ac1e-6d7b7cfbb5e8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf5f8af-a218-46a8-9ae6-70ec858725b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a2a2d5-c269-4d0e-beac-2c19e8834891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5d7872-fc80-44ba-8422-ef876823045c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49c1df01-3eb6-46d8-998c-69496a42e289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f02770-fd20-4603-af05-1f1371a01a99",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e059664-a2de-43d6-9c3d-bbcff924fb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7497b02d-6924-4322-bcf2-f18f32600493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413edff3-d6eb-46a0-85a9-59db3a0bad8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09f53d87-a0ad-4f8c-9400-e6516ea28127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e76b72-df5d-44ae-9a77-d98c5e5be1f3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "046ba487-f308-4d11-9727-56f7699d83a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b08d729-f2e9-4c85-afee-f87a08de2d47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40956a18-a588-4600-b2f9-48ef593e11d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40b90c1a-5bd7-4625-983f-58d4b507fd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbea72fb-e9a0-4ed4-b3ec-a32e3bad861d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d057ca7-21ca-4037-ac88-c62744eb78c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8c887b-3cc9-4558-9ef1-eae4ff1b58cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4be9df3-ff7d-4979-ad1c-09bb3d45fdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c7ff5a2-bad8-4a6e-8f63-708618e08421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f3d155-2c4a-4981-95f4-9c3179149eee",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74edf7b-72a1-48e7-b15c-5ee3dc59179e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b79c0a7-4221-4a43-8cab-27d8054b40c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af93b57-beb6-43ba-bd51-5a949ac619e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "435662a7-224d-4344-8ff4-0557fcb62a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5fcb20e-a412-44db-ab7c-3f3306176830",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba64dacc-83fc-4f3f-95c8-b8635d0d7378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "562cc906-2278-4531-8b82-777e16942eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8715b4cf-8a99-4b7a-ace5-8e24e5b24ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d36d02ba-98c9-4d53-b0d9-00a2639c1bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30128a2-5613-4c14-a5c2-b184602e62d8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb28205-60f3-4436-b1e6-fb53cc643c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "200a7beb-dc89-4544-94b8-da87a4f53e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4725deb8-2ea5-4f1f-a8c5-683e1ad3922e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f388e922-63bd-41f5-ab6b-c7bbc29a79bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76cfba6c-a7ae-407c-95f2-a4ed80f85e13",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bb6f91-2063-4b68-9c6c-ff6032dc924b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f98694-0d94-4797-a037-8d1bbdf882c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6aac305-7822-4d84-8118-3127e5260c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41e6cbce-d9ed-45f1-8a21-1ff712617cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5660c97-4d56-424b-99ff-76c0755e09c9",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2c8dfd-d5c6-4334-87b9-8e2d8139a1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82a59cc-f89d-4324-a69b-018230be88c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5f04d0-fdc7-4f83-82eb-e0a5dc72da13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0223e98b-a335-489b-a5b7-73072960ce29"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "db812888-a565-4f1a-8e7e-3f277696f63b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c68c2e5-0440-4522-8da9-117ee326a844",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8a0d79-e01b-420d-b2ec-e081131a8a05",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "54a5611b-5b4b-448d-8130-3eaf7cc2fa73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e1211b-4ed4-4cd4-8f2a-0298f4a6c075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2dfc15e8-0680-4e22-934a-a6f63b90d23d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c26dbcd-9960-40f1-9f68-89e8d3c616d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95cf860b-49b9-4cab-af61-e89c0ea4234b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0852d18-127e-40a6-b7d8-2d6435ba686a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "804065d8-d5c9-49f5-b2de-e86febc0d412"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a60ea90e-aff8-498c-9dca-58944e05466b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7f6be28e-0e4f-4425-9393-055cc20cf57c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c983348d-3497-4fb6-afaf-e8eb79b0a681",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bda0b249-e235-492f-8bea-f4a5302ac758"
            }
          }
        ]
      },
      {
        "id": "560c5128-85a3-448a-98c5-44a4378eff4a",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f7fed6ea-ece6-4786-add4-ca7be915d351",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a77cbfcd-d9ba-4b23-8c15-6db538cda1df",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5b667188-74e3-465a-94e2-d36747f77679",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2487e5e-f29a-4f8a-b7bd-489c914f86ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8c405d-98ed-4f35-ba13-5f4d3f7196cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1f24cd-240f-4d83-ae7f-926cd26b6a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d73547cc-dd34-4e79-9a7f-fcd3f8775f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae52d423-9877-46c6-9d67-fad62d1db9e3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68225fc7-963a-45b3-92a2-75a54e95f6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb8d848-cbfe-44dc-8a96-49be82e9e26b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8d1694-3068-4477-b601-dc7c664c4703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a57f7d74-b5da-4be7-99b8-90921fb51146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b4d23a-e265-4a80-bca1-e5c402bcca2a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "187d54eb-ea1f-418c-9a42-75c9e4665a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74607ccd-841d-40ec-b4f6-c89f668aa604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17f5318-e7f1-4bc7-b6fb-1a7f86692015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed151c12-52a3-4abd-aecb-9dffab1ca75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98699e0-4a38-410a-89f6-93757e883929",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b807c163-6375-4d40-8d3a-ec8f5b1d7a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63cf864e-9b4f-4f6f-8885-8580b099d484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858ab93f-2b65-43d9-993f-a02d401a6ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49c05610-7e07-4924-b315-e33571bcd787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ffccf7-afa8-4e4a-8b4c-fe008c612adc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "284b1220-f85f-4ed5-af01-dc90995dd082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c1e0c70-9e54-457e-94a1-efce05c60f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f2ec23-244e-49a4-a138-ba71040a0c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e0b385-6596-4910-8332-08c32ca33699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55660dc-35ec-47dc-bde8-3c0a940a9cb1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d99be3-1c20-4a84-a793-14d1bca9a553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0adcfaba-481d-48f9-891d-98220fedfc56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae915e3-dee8-4612-838c-0519443aef9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f9d74f-7be4-476f-b7a5-055b8d102947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b555f2e0-a986-424e-b64a-5862ea003a8c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "567fde28-5ecd-4c49-832f-e6f17634f629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162af32e-a884-4e04-b4e8-e25bb33af755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2f4a43-e64a-4c57-a8ed-517c739450c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "abed121b-2c8c-4842-a13c-7549e51c7c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe386c76-9cfd-4ee8-8dfb-4d770d0a5fc4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5619bfd7-9b4b-4f89-9aca-f8eff36d7e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033444ab-ed5a-41a6-a638-10f5e62e8c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135d8d6d-5353-4bb0-92f5-e63e9900d963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9459864-f93a-42e9-8bb0-ff677dba6e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d32851-9ec5-412a-9f83-606a1ef5c22a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a87118-7bda-41ea-85a2-03734ca3715b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae4dc454-7f9f-440b-82d7-ba6698e9e073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553f9cb0-771f-44ed-bf6c-3ff2bf2997c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "334152b6-1ce7-40aa-9354-ca1aeab57f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c906fe-b428-4b6b-9b6a-129e826e192c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86dee5b3-ed39-44d1-9c66-07f5453abcc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d03806c-e844-413b-8543-3441ce6b91cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a747ffe6-3798-48c3-8351-e4369248641b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a900a54-9f07-4dca-bd4e-236cb01f7231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17abb59f-e262-4fba-8e2e-c636eed1a1e0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d96883-bcbe-4caa-88cc-61c420298284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aa82ff5-b0fe-4d97-9664-c45b49b3e00a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50718780-ae04-41aa-9c94-fae2f69b3947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ca3bf5-3335-4efb-a105-4be40b814de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad64d55-87cf-4e5f-8ee9-03f3ec30e455",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d834bf8-28eb-4f53-a0d9-ef6e8fe698d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26867c8-56b9-4508-870a-4fd3fc0333db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e110d2a-1f78-4ca1-aeca-ed98936f10bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a97be9-2dcb-4a3c-97db-5d9a9dd43b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1bfe70-3334-4d34-bba1-82b8a8d271d1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c8906f-4778-4ca3-bd30-527fd65cb62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f60949b-22b4-492a-bcd5-698084ecefb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136a1550-00ec-4f1e-9f7e-247c069dff1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa68772-528a-4d37-b15a-73eeea057ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1ac0b7-1ec0-4e22-ad17-ef8a55590f53",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e67f4d8-7cc2-48c1-842a-85f8c7aedf5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71490828-0bbe-46e2-806a-e7bd62abcff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbc39c5-5286-439c-8eb7-856f5ee042fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e982184-9024-4138-a45a-1443bef9c681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2361a2-f6a2-4184-b11d-f54efa3cfaee",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac898422-be76-49e0-b34b-b2bcff1699c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e16a64f-22c2-458c-8ebf-b238b65d9798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ad242d-4b7b-42ab-959a-c4990f25a507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd419905-0492-4756-95f4-eeebf5ffcd5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af0d9811-956e-4701-8767-68a635df4d4a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2599246f-2ce6-47f4-bb85-7fe08c1609f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34532b5a-c30a-4f48-9d22-57f7a0bc0076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200bd4b4-0647-47bb-8cb8-363571843e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "de79c3f7-54af-45fd-8af3-e8207cb70503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c012c8fe-8f39-422f-8d13-1a0d8205dfc2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5548b78-04ad-4031-9d7f-702680cabcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67beec9a-2b51-4029-8c87-2483f5107b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda8ae21-e6af-44f6-b4eb-796ad5daae59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6279b3e6-de37-4ba7-b3de-690c438924b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc3674c-a658-4788-9d5d-26f229225238",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3a1329-6b80-4155-b49a-cec5f89fa6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fed23def-8570-446c-a5ff-82f27a2ecc1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7204aec8-830b-4f3c-89aa-370fcd53787c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "79cb3fe2-ecb6-45b4-b5db-8c8780a6205a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb8b9aa-d336-4602-84a6-4dfa20266d7a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abb95eb-2cb7-40b2-87f5-7bfdaa1a580c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e081cf-d2d7-4903-9a7e-e75c7f018a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7f10dd-1683-49fb-91df-8f2bca7e1dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaca63fb-f47b-4a12-a480-19d7957b16f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff360ca-12a2-482e-9680-37796e321763",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0c9f12-50d6-4507-9417-349971aa1ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d1d8b62-8b9b-4b56-9bf4-67f039ce84fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be43f15-a0e5-4da9-ba8b-c4fa86bd6455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18e250ae-ed91-45db-b5c1-dc54d1f1d5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f0aec3-19d1-4fb8-99ed-9fac1d0fae8a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1777cf8-fdf7-4e4f-b82b-cd03fb8e0d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35709e35-7510-4d41-97c4-3b772b3923e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3dbd809-de7e-4807-8cc9-ecda5791592f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae2689a-345a-4fa8-a3c4-ee1570a6746e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043f7d2a-e9a4-4b00-a076-efc8302ceae1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfac98cb-1da6-4511-a8eb-384982d09143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1929dbe4-f03d-4991-abc2-033aa23de543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a92fffa-23d8-4dcf-9f31-5609cf70a176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9059106-4be3-44d6-9dae-ba009a02231f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c708c9bf-b3ea-4754-aba6-c8d847c3f5b2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5c13e1-2e92-4f4c-8f14-3e71e7184189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e4c10f7-ea53-4174-b362-8c2eed2b5533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd940e6-c4c9-4e84-ba44-9984f3ea3dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72e0d6e0-bbf1-475e-a7b9-704ed5aa2257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078a3ad0-4dee-4d52-b2f1-62f64e12dc55",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "478eef62-051f-4fe9-9100-951d8e934c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06dee813-5a5b-4730-95e0-5ef56c28142f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70dcb472-5d05-441c-a382-f019362206de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbd0fdf-3898-4234-87fa-8fa84a4c66b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd70476c-fbd2-4560-8dd9-482f703dc625",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbe5943-9ddc-4c72-9960-fee51e8fb6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490cb82d-8dd1-43c0-8539-a4e184586b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8265d6-1578-4e93-ba2f-62594628ec69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38631929-3bbb-45c1-8adf-93b6c33f7c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240cecd8-0d2c-4131-bb72-754e634ba547",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1218397-b0cb-40db-97ee-da055e5148a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f82e0a-327e-4ab0-a243-2be27a57ba76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068b8b06-4631-4972-bb52-54a948eace75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8abd482b-c49d-485c-9db6-d91cf327b4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bdb90b8-d15a-4dfc-9660-1321d0dfc26e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0344acfc-8c15-4518-8e1e-226c65ae5a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a30ce87-fdcb-4bd7-8243-64e4b71da4a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd9532a-31ec-474c-956f-0614284940f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c79d906-9875-4b74-ab5d-adaa2072b5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ba4240-0006-482d-bd3c-1a0265507a51",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a777259-3a62-42e3-a71e-cd9f025f3f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a5ffdeb-520f-44b9-96f9-7d9535d02fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f8dc94-0231-4d49-9d81-7885bee3931a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ce9e0f-3304-4108-b89c-568a0925713f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8ece9d-cabc-46e7-b268-38efd0107bd7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ce24cd-07fd-42e5-999f-3d6aeeeab6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79725181-5e31-419b-bd9d-70bdcba8b84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12415373-ef2d-470d-8f92-1bd48935e51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba1972e8-458b-40e4-b1f3-256a81903c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d36542-6ae2-44ec-a7a7-ac0f1ae32712",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1238a35c-79b0-4fc9-9dc5-5e69d207d049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26a9a1c-08f8-4830-8686-b4e1ad1b9193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727bb831-2845-4ab5-b534-80f1d1fce5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88fb6ad5-6e34-450c-ab6e-e5542c7ded61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39715be-cb67-450a-8ffe-757639bd34ce",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa778dd-918f-4bdc-9821-5e5f9b52a437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbbdc8ca-0b36-488f-8621-e42dda0f7261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22afaa18-8173-4bdf-aae6-756f84b1fef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d61bf72-1f1c-41b4-b49f-bbbc77c3d136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503418a2-3438-4b93-b9da-5f1b6ed309b3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90802c54-8502-471b-83be-ca6f19171c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b92b86-80d9-487f-8e6a-56ca6378d02b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde9afd8-82cc-461f-919b-a72fc194b766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d65e9992-8584-4d02-bfa3-681ba28257b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70404a4a-31cf-464b-b86c-e6b5f8b96754",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f88e866-e0f9-4ed3-ab78-15842d8ef41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2637dd14-090f-4b03-bc8b-259690f09f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7078e6-19a7-4bfe-873c-4f0bbf120192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ffb08c1-b343-4b79-8b8e-4f2fff08e808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b67daa-9a73-47cb-b0b3-523de6b96208",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c622b1bd-0305-45d6-97f0-b0ef29042ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3bee21c-8281-427c-b218-5b0afccde9c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2822a243-63cd-40af-ab45-9f8a24706e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "182f3419-4df3-4505-b36d-8c1782b534c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7296f09-2e0a-473e-ac17-39caf5be6305",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "228dbd0f-a1eb-41a5-aaf6-a219a28ae6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "862bb46a-81f6-4360-8c7b-9136b8cd54cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464ab2bb-7f3c-48b2-812b-95bbc8f94f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "227c623c-8f0b-4ba6-9b19-2b3cb2d9da2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e058d20-6314-4c37-a852-fe610e2ec6ff",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f5b31f-d9bd-4f28-b917-35c8a6b270cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e769d7f-cd01-44fd-a200-dafc80456a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57679c56-6375-4521-9924-19b302482fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b53a7737-d106-4392-9ddb-bd48e81e50bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acf3365-a803-4756-a952-563a70c8bbee",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73480844-9aa4-4ddc-8575-b6a0d54cf453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76551105-55b2-45d1-84d9-6b841c13baef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de71832a-d018-4d06-b60a-79d021bb23d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96f405fe-50e7-40bf-8541-59aa7b39d063"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "305541a9-d049-4e52-a574-f237e1b7a581",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1eb08b15-d040-4341-9efd-c055840954d2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689e00a8-5c8c-408d-89c0-d3841106af63",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9f48c1c5-91e8-44a9-b3c4-2883b11881bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7c165b-6570-48e9-b49a-ab1aed29ae9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "872f03ce-0b7e-4c44-8dad-b1c7593bdae4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6085e9a1-d688-491a-8b86-69b192969dbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1996fb1d-868b-4c2e-a293-cb53cb30ebbd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0b27dfc-2cd3-4776-9ce2-a705bb60964d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aea2cc6b-c557-41a8-ac50-e16410786ec9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bb10beef-2619-499f-94b9-ac109f9fa879",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eb05b8ae-afba-4d90-b29a-fff864b24fa0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8cd86424-ded9-4f75-859c-a78f2a004b6f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f45a08c-bbda-48f3-8de4-f83db1d78dea"
            }
          }
        ]
      },
      {
        "id": "62b6103e-7188-433b-9922-23f47772b1fd",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2dd8a366-a683-47a4-aa2b-cb24b30748ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "42176a95-c5f1-4442-b25f-a77e59b1d0ca",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9bd72816-7540-48d9-aa55-4d2f3c1da00c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f614c97-13fb-46cc-8677-24cf98105581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4289f1-5d04-4bdf-b928-eea461708858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873a8d36-0709-4f3c-9eb0-9725713de6a1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22c3512-fa68-4808-adb9-20a4f5043d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "045e3d20-fc28-4659-b0bf-fa52e04e1510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c03e6be-9d9f-4566-a377-78d5e755e984",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "554d90cb-25ac-4d5b-acf7-22792a136fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c4ec47-fa57-4483-83b3-8270f65e6682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b79659-1195-4356-be40-3f87fa135f79",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f40d95e-dba1-4946-85bc-883b5f5845ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea38249-c86d-46c1-ac33-e6202f6209e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182d8c25-b0ee-4e93-88aa-0ee5020fea12",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee922e5f-3e59-4f11-b6b8-cb6276e4b0aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc73d48-6e77-4910-8695-79eda4cc1405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e79e3f0-2df9-4019-9b7e-8fea2a3d0922",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "077a0bf1-b363-4505-afbf-3df7dca920bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baaf8e46-7d10-4b82-8ad5-75364034189c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc5f657-0485-40ce-83b6-7634453fb63b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9886d7d-728c-46bd-b565-bd1bfdc6320e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69900804-5eeb-4ae2-9fd1-a057a6a08570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbb9214-558d-4d64-be83-3d6c6eec7f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "243f2289-6e33-421d-86ef-657540e4f1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c798b7f6-a4b3-4251-9d65-545f602d6a98",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fba2ad0-1583-493e-a5a6-c56274409ae8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d3a1ef4-93d9-4639-a74e-517ef4a25ac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "557f9334-7e5d-432c-923b-a86c23415ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de6e7de6-8d3d-4572-9542-ae5e8fcc4ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a59e3f-82fb-40fb-af73-936c92872de8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04d06b4-8344-4e20-a115-9715529816d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb34d5c3-b61b-48b1-8741-0e55af9bc345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "302a9695-1d2b-4ad9-89f5-a72d511d741c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05604cb3-4f35-478d-b92d-e865fbb7999a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ba2536-000e-4f01-957b-bda0df5887dc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8b1b11-2b0d-43c2-973d-00399c41dc09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81c2d265-ebdb-4c4c-a9cd-d052bf4817e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c1df81-dbac-4bcb-9468-1800ae0e5adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a33b441-a6c9-4539-8de4-62bad326149b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9ad7a8-e66e-423d-8434-5f8d86d513ad",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de708e90-3f74-48ed-8e1b-a6c4c58977c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038c3dbd-fe09-4370-ae9c-10f8ebcca53b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7052ce13-7863-4782-849c-7aba8d553137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652387c6-a85b-4093-9a1b-de3b020a805f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f81079b-a530-47db-9234-c15e8b73b69d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e29d92-4cab-491f-8630-632a64328bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1cbc32b-27e7-428a-8c6c-65bb01f2fdf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e9d317-0edf-4ea8-b5fd-48a6bd3aa4fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0742f3b-1e3a-47ee-be99-2fc1b72bc7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b807242-efd7-40ff-bf81-2abea50d0198",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf24a846-e9b5-4d95-ad83-af8e2d31f776",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7222299-37aa-4151-b95a-7c5c7ad13be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d436dd5f-2f5a-4dc2-90b9-6b84ce5aa3f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "367e6f59-c1ab-4810-91d2-7643221222b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884952e5-d049-4ca7-8034-35fed12e113c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824def87-b2db-499d-871a-8175d994994f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6282df8-21fd-45e6-bd19-9c679fe172b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2238f2-8128-4a07-8b80-79cbb5415239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a11046-4e9f-4ef5-b211-876bb3093ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71e8206-d6ce-43a5-9d05-9e14764bd98f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae98fc00-532f-47eb-9532-b20a4731b39d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "011f05d1-a63c-444d-a98c-90d2f98c0929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe51cc44-5861-43a4-bc82-496dedc55e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b1f509-270b-43d9-ac94-fcef9bf92d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc142df9-2578-4b48-afe6-ce3d58301ba2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f4930a-11f8-4893-88e8-f4605c81d708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61f410ef-4c09-4f7f-9bce-bad53e4e57a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d2b094-e848-4a7a-b24a-23b024341c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dff2cd2-555b-42c2-896b-5cc6d10186d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c475dc08-ddc6-4c8c-b994-eb8c8bbef5f9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc421a8e-a870-4ce6-a456-d3a929e89553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c49e42d9-234b-4ba4-b231-c41fd26cc84c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bc84fe-3170-456d-8e43-9c96aa0d8062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44416a83-d41f-4463-9873-a8387eea3289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c318b2ef-feb5-4fc1-9f13-63f9ed4de52b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ae739d-7c1e-450a-9e18-6ecabccb0c82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4edd759b-e680-4394-8269-972636b739d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "937fec40-10c6-40cb-9568-77c3b023acb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28bec5ff-ba15-4256-8f09-3c28e1792786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d58baec-f81b-4cdc-8f3c-6ac30b36e425",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ff2ae4-a5b2-47e2-a8fc-e7772018b81b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b278fb-15b0-46fb-9451-7378d5e4a1a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebe80e0-e704-47c7-a78a-6d3ab000145d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86fd0d7d-a8c7-4808-835f-42ba44aaed43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8085e02e-f06e-4a60-9f59-b3f3c26f95be",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b222c15-3e3c-4998-be2f-8bbf8275ea43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dbebd65-f70a-4ec1-af4e-5c6f5d13c207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45290254-4879-434d-8865-4d64b0589024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576e6ff1-196c-479b-858f-82947d5813b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8037d2b-8f27-4e24-8577-19423fd5168b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2e6b8d-a180-47c6-8d30-34905b42748e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075bae21-506e-4877-8a1c-ee9fc737a8f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54766e0-2e9e-4297-844d-4a42b5736e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "effe8ab5-93e0-43b5-b746-338634aa3924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbd8d98-57c2-4afc-9f68-c64b7949cf59",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c060b4-f2ed-482d-817d-46b91a10a8cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21cdccaf-e925-499f-8d0a-85a00052fdb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c22cf5c-04f4-402d-a1e0-270d2d588046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2658cf4b-2279-42d8-bbd7-1a3c867ba434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c3a9d6-f5aa-4234-9164-879325d1dd0d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e8d3e9-f9db-4f3c-984b-8e25b4a5dcdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18c20e2-bed3-4f8d-b67e-29a7470a2e1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69564470-b83a-403f-8efb-b09dd994f9e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a02b827-6129-4c63-91c7-1e8b7553ae7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042078ed-4dc1-483d-b8b2-e08c57895bdd",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17abe890-123a-485c-b3e9-98db95a79bcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7545e43-6999-4878-bb93-20db08a1d70b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17993ae0-9929-413e-9f86-4fbb3f23d2d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "752dc0dc-03f5-46a2-98b7-04bc2ba46670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb085772-b4fa-4f3d-9eb1-df623ba1b20b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1167f869-5dec-47e9-8caa-d9c043a7a979",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd07e4d8-dea2-4b81-80a1-a89adc60a393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2f3b9d-5dc8-47d7-bdef-6e5432868d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb6f077-d6b8-487c-a936-b0e1f6b2e66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb08f1a-accb-49ac-ae31-a472504ec09e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61375f08-82f9-4d52-889e-76292f5bb551",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4b10317-87bc-4c75-81ee-919bbb3fdec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b765ed6a-734f-444f-afc8-181364a3bf09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f0c28a8-6661-4023-8848-f161ed5cae7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b7da61-c78b-44bf-9c78-42d6ec7cb461",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82a2c42-0f32-4ec2-8414-ab80c46fb2b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "411c35b9-5774-406b-8ca7-ce4752d18f2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "101d4193-56af-4a72-949d-8b264a62c0f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77615244-c110-4518-bd9a-a75fcb326c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4796e4-4b07-4d6c-add9-1b089692bfa2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82aa3cc3-f461-4703-b9e3-758af87bbd23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3b6571-3609-4909-ac9c-f1bbf4a9cc4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "233dfb3a-d9b4-4da7-8720-80e8d44e390c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6942415-4c63-473a-86cf-42a448451070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a13e59-a65b-41b6-a7a4-d0ebc1279161",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b7fe1c-2ef4-4cee-a199-fec2c210cbe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66837330-117a-49cc-839b-f71937b88b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f28341-95ec-41ea-9a25-79bc0bc09b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ae1261-df1f-42a5-96ec-24ce9dcd51cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c4d4d6-3a23-450b-afb2-9a484b5d03dc",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db197e1e-1a64-46a0-9d14-a4b9a81622a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "458a0d9d-73c5-4102-9538-3887bbd6236e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "697fb787-8eb4-4509-ade7-c11b2ffccd0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f2c02f-c4fd-444b-b90b-04c32bb25cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab87ced4-a148-4eef-978a-2dc793a348e5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ef4021-bc39-4b32-bbd4-93b04adfd3ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6a965ec-acb8-4074-aa53-f89a6081053e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6319e73b-c40d-4b67-8b34-67595263348c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d17a9588-f358-4dcc-a37c-af80823f4857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da1eb18-9d3f-4be8-8c96-d8eb1d5908b7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39eca3e6-f1bf-4324-af60-ad57e4b0f768",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97c4cbce-f0e6-4ee0-9c5d-e3becd947946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "377608cb-f49b-4de9-bc05-d7c07f6939de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b1fab3-a534-4c0d-9674-680f036c0c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327056b2-f76d-4bde-a78e-fe3e371f7ad6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0194be40-ec2a-4b2b-ad1d-2dad2aa53b44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88c47b2a-4aa0-453b-aa0f-9f925843ed3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae42bc3-7025-4bfc-a619-fd9db076d266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c29ec167-57b2-4f46-943c-7d54033a0312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530cf742-ed6c-4146-9649-709828af1752",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c75742-a6e2-4571-8956-00c18006b13c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0efce36-ebdd-4bba-bf50-a8f6e4590274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8c94f2-4c37-4ab6-83f7-e76386b1542f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb69e4c-2bcc-487e-9ad8-87d9eabed151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee8b442-f03e-4628-8369-5b625506b264",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c925e3-e423-4cb6-bbcc-439b7dbd5e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb876a3c-2c78-4c90-ac41-b05dc99eca1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc09998-6c8d-4d50-ae4a-e18054cf4a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b70915fe-35dd-40b1-b687-f5b9fbbabca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c641e0-9420-4617-a318-8543fd7845aa",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2877f043-2f6a-410a-bd6c-b021cd1f1962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49cf0155-b74c-4c6f-9c93-0ef75b600b61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3f54a0-7518-4b98-b603-e69bbb3573f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e741ac-cef3-46d8-84ec-57e9e0ec8453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e073a255-617d-4f8c-821c-afb22d0972f1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287fa69b-503d-431c-b06d-f2fc825a2930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba65258-ffb5-4c0b-82b7-a9ecb27b74f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eda49d4-e593-44ca-a09a-09ae860e7a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4f03e9b-60f6-44f3-b78f-e47b0d33d370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24071626-5739-438d-93a8-5c1d7ea04f3f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56248ed0-cbe2-41ef-8ed4-1cd4fb4551c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35211ce3-316e-4dd0-a834-bac8b2a85b0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ce5810-4b9d-4a4c-a503-77f6e85c5fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2b5ce8-69aa-4fc5-b5c3-df08c20a1f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea9ec83-107c-4002-9920-02adc945cb9e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8574c733-cf67-494d-be21-98120483b3e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9751c0ad-05a5-47ae-880c-fb8893856baa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36cfcd0-06e2-4b74-9666-0e73950a1c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "523436d5-9356-4e75-b273-f23b92ed551a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb9191d-3ccb-4af6-839c-6e0d1807de86",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acdaa790-a788-4d14-9a7e-fa3e385328b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b2e47a8-bc3b-4681-9a0f-53d2a37cc213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9246ea-1b96-4e6b-9dbd-61a79cc3d4f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a56c36-b400-4b28-b678-92d25ae91802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e09d92b-01cc-4de4-9712-65f62cf7b2ba",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b233544-3268-4a63-a410-68ba55f2d81b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a7ae16-655a-4979-8a8b-b135dfc58862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5405d191-c236-43d6-b743-914a766b36ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83086426-1c18-47c2-a7e4-85ba1594131e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838f7f36-dfa0-4929-8744-3bc80b7011e7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478c7d7a-4e5d-44b3-8ef2-fea4c22e77cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc3dff5c-9993-4ea2-a0d5-48eb95888163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb582e55-c94c-4ec8-b180-0360667c2488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d550ac8-2712-4c0e-8111-9d252eaa5e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32c8c1e-ac1a-4eff-9a59-11c19ab8adec",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98227e8-2df6-489b-9029-29cd36fc4f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9063353-50f7-45f2-bd06-b1581cb60608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abde1bc7-ac76-4a33-ae71-a03dd1493a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0b864f9-e345-4fde-95b0-8128c1ceaa9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010d0df5-d634-4f68-a28e-7e80c1003889",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8343cfb-4383-4fc6-a068-1f01574dade8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9721ac4-c1bb-4f65-97e1-9a6865f77891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb03e11-b849-4333-b6a0-3bc5f1fb9a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f514a3c6-08d7-4e60-8c76-c0fe9cddbd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb83aa49-fe1e-4194-ae5e-215f0acb54fd",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58ea674-e75c-42c1-8653-dc3a697ae73d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb671f6-4f09-40f9-bd3c-d387b181c19c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "820a1036-5c58-455d-a65c-bbb1fa1e2297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "279d63bc-8adf-4314-9b18-31f20675980c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40b6bfe-f34e-4b9f-a1ca-4dc26c4876a3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e7d9d6-dfa6-4c9e-87ec-1294d50f22da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76fd594-29e5-4856-9ce2-b30f28398bec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ae3904-96ed-41ed-9293-bf44919cdffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2a91229-b538-4d18-927a-07a8bc4b93aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208bd5d1-4a43-4eae-ab65-3b7057b3ad7d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88b26ab-bced-4db0-8aa8-56359696adc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee37762-9f18-4b5d-9f81-329d0a4d403b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "919f63c1-60ed-45b4-b1b7-d95478d8bad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a05481f-f5db-4dc9-a2a2-59cdc0bf8c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6dad5ae-55c3-4ef2-9d20-c74e4fa19bfb",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffdecb0-d25a-456c-b21f-1bb24e3fe5eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c748c8-00cf-44da-96e8-8809499af08f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e073fad4-216a-4f51-adca-a6929cc0bbf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55757f5-c5cb-493c-9d40-ee94521f8863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc76d54d-9c86-4956-a299-26909c8563e1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022e9dca-24d8-49dc-8ffb-57135c86b991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a7e15f9-2acc-459a-99ea-a843ac317da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21867b64-7969-4ae8-ae2a-c611ea233442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec36c7fa-d15d-40b1-82f0-648395aaf567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d4ffd1-8aae-46f7-93a4-8107828046b9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1190b91e-a70c-4649-8d7a-2944701cdc5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6bab9bd-3a72-472b-86e1-626fc6518f1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5050e399-6607-4fbf-b83d-b4c3a2c22697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a0882e7-76ab-406d-a71c-e68172988176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cb9eed-53b3-4507-a553-f88ed0fef8af",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc4bcec-30c0-4312-8b27-b3676a2e0546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b8d0eb-4b48-431e-8612-57ece048c326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b689ceb6-b8de-4431-8725-ec327fc72291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5418f7-07a4-48c4-8ac5-9c285f3fa485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc7ce2c-7b57-4c89-a93b-19cffee9f452",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc91987a-5488-452f-8463-919d6d776cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "309525b4-880c-4579-a9fd-e28f31a6ae8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b06264b-375a-4191-a7ac-aa13d87b7fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebcbc0af-9546-487d-be94-a3b686696ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7626c7c-c1b5-4fb5-906c-843327cad8e1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5896f3f-a67d-4dc4-8603-c517751ab7cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92be1aa-0ace-4ffb-859e-05126f80d1ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81a4f19-66a6-490f-837b-70c5571fdb69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1352f014-9423-43b9-a05a-553333dde637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12015e31-cc2d-44f8-a4de-a1ab62a0bb98",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76bdd865-c3da-44f3-aa6f-a7f69e8aab1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db12109-59cc-4cc7-a7f8-89900981b8fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb54a5f7-5ae8-4daa-a472-ad1192c73a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb44a583-ce19-4990-a407-03fe7d99bf01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a089c30f-0f9d-4795-ba8b-a7266c9af5e0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01104941-61c4-43e6-ae0f-f04b0b2e6a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b09fd06-640b-47c2-b8a0-7a389654a7e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c7498e-d0c8-4fcf-bff1-4d579f3b45ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4f6b91-5b42-422d-90c3-27c996430c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb566fb2-2a7a-4255-90a5-9dfd3d3412f0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ad56fe-12f0-4747-94ab-5d1681d26bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccde338e-b52c-4b0e-a17e-004344541072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f75161-a2bb-4621-bea5-d6f29142293a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e37c34ad-6b23-46de-b073-6c1d89c283b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45d6f3d-0af7-4746-8025-2aeb9c5b1474",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4fb2a18-006e-4adc-ad10-6bc1ecea2369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ef721f-05bb-4eec-942e-ef599e392b58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2995c83b-2662-412d-9761-d4b6438ef4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb03127-79dd-41d2-a292-6008a741d2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e27f6d-eeca-42fe-8f23-c0ac5ad15577",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95e3f90-1143-4eba-ba47-963b77f4ceca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d524c9-a132-410a-92e3-02c027c995ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de964885-fc57-4588-9143-a68c591db578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f200b503-a131-41a2-8ded-a07f62e27fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478199ec-a2c4-4902-945f-4abef8a2b7fe",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbb5807-65b3-4301-b82f-765f9e15af58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "518f1825-4cef-4883-ba6b-82f96777f5d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01387d62-40d1-4682-8274-0c18ffca9350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d56b5d33-c1b9-4d76-8f82-c7b55a2b9467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1adae038-f655-498f-9ba0-584306151234",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df6e9e3-0b75-42c0-acf9-0a905cba6b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa4df5f6-e8af-4111-8315-365ffdfac823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc2c738-2bca-4e11-9a7b-ad2632dd3d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1909c7aa-0e5a-4100-b563-fd7aff6566fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a091727-e9d8-4ac4-a36d-5625ab02f513",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa57fb03-b81e-4b59-b4ec-55e9fe12603b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de28e931-a142-4d45-ab7e-a9a0340780bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cdbc24c-6580-49d3-8246-d0ed05c952f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6529e3e-64ab-45d9-a42a-d4bb871ceae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219a577c-bbe9-4a62-8cfe-b30655516d7f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b02392-3b49-4c6a-bc6b-8d3f62c6202b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63bc4fd2-49fd-4bc4-847b-6c6bf29cafb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "310af12f-53ff-4f6b-a957-914d89baae24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478fc4e4-d4de-4e30-a23f-70efedf7edc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d228c40-1f41-4b67-adb9-400e029a2759",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3344b6-99f4-41c6-bda5-4aef8cce1e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7fc02c2-7f99-4662-871a-7cb3fc868064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bf9025-858e-4bb6-8da8-ba12159182a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f2ea94-112a-46a1-8ee6-9b83ee76ac20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fe19e4-863e-49ab-b526-70dbcc4dde02",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dacfba77-1ccc-417b-8f08-8740cbc9f8dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e02dd8c-1c18-4d5c-99ac-57550d65005a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48402ca3-c6ed-4f9f-a599-dc1b81a3223b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251a517a-4fc3-4ae5-a805-128cf0074ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84703746-ad0b-44cd-b65a-eb74c46411c5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f041b8-abbd-4b73-97b6-845ba3271c30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f7ef0cc-1443-47bb-82e8-1effc068c230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21eb51f4-a231-4241-9d4a-a128b189c132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c951c8a5-eccd-4db8-8e67-7550d90a209c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625329cf-6ed9-48be-998c-adaa2170e53a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35793b46-7925-4a1e-8e4d-a0aec5ee2487",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af03563b-7d60-49ee-92f3-6efa5d37b19f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd22bba-67e4-41f6-8459-6fda37df9709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea06886d-46eb-4050-abe4-d58eaab881ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da27977b-924f-4987-a9ac-6b01d236047d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c1313f-8f18-4611-a0df-78d00cc6556a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0adec57c-ef57-44d7-be0b-d1291387e324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7a67d8-841e-44e3-a0d8-aeddaad0286a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4f8b659-c320-46b5-bd47-caace5fd5ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb9ddb6-9016-4437-8ce6-1f9f77affae2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0953c5-7742-49ac-a8ca-14e9000ed8b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d33e361-e03f-4539-a1df-be29361c03b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95698940-2429-48f2-8bd0-5aea0072118f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ba9dd8f-3004-4ae4-bfb4-3e400e50d073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f58add-ad42-4a37-9fb4-5c0df89b2312",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b098b104-6c78-4b35-a1ad-899e6b230027",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "554af8a9-3a76-4a3e-9309-1c96f3db77bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd64b5f4-fcef-426b-be27-cf1f9d5f5653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b04da0e8-026c-4378-97f8-750ce5abcf4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d81307-bc22-4c2f-9622-8f23f83b477b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f440dcf-b1a1-4b65-9c19-58554e5f2800",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae7c512a-6cf1-42ea-8677-6084908c08ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa71db5c-f7f4-45b3-8d20-66bd718866b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53232142-b40b-4a1c-8b7c-6f8bbbd005dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4d39d4-d5c7-440c-9c92-39b945416c81",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542ae32a-471f-46eb-8c06-8aee26fa89d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24450d30-59db-4df3-92b6-4fa175c8a5a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d453e850-d022-4bd0-a7e1-81aaf127a064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b6d4ce-66ea-43cf-bcf3-0a7b15bfc43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969b1ecd-ba03-4e1c-a5fd-0955dd394675",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee212a21-dacf-4b7d-8e17-0b24757ef1fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7be207d5-9e72-4d62-badb-28d3fa761bdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ea2346-1e54-4001-8f57-9a251b76ab94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d27e34f6-dbed-4ddc-8bd2-e286854a246f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4029fcee-363f-4a45-a672-4c5e1f8921db",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29461158-5d38-4a4e-bee2-6441d0c99590",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6471c1fe-b941-4dd9-a2c2-3f5d1b1efaf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c990fda-4d92-4d9f-b81d-55c93970adda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0232100e-3198-4079-a376-0569d056b2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a175906-a55a-4d3f-b969-b4c2c8752316",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcbba4c-d7f2-4a0a-93e5-a7b2a325e9ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "022594ff-bc87-48ee-8d8d-d99bcc7874ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa12ab1-b82a-4dbd-9ba1-389691069d5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c82334-be39-405a-8e76-fa0b158bd16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d461e9c-d63b-459d-8999-4014fcb8f05f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9080ce24-7d15-4be0-84f5-a6e2c9c2022c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf021499-b28c-4032-a27a-600b43460c84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2230be-1474-4853-823f-c4554f8ac420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ffd818-36dc-4d5f-bb2b-054ef3e472e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e260fd31-3258-4674-9079-d2c32430041a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98eee4a1-65fc-4f30-92d6-f0940d50fa89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c874cdbf-13ed-4bdf-b8cf-07f29c820908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e68a3ee-9911-4cf0-b8b3-e3ee540330fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3cd33ac-de6a-49e7-9cf0-80026866c8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a911080-6518-407f-9c26-fe6986155152",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596c906c-6be8-4e6b-8f97-522c2409d986",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f968cfd8-69c9-407d-92e5-2e8575235022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "539d614f-2bb0-4294-8200-a2470ab1f2cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdfd3501-ad34-4a55-ac6c-a675f712c935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccd028e-b995-4a1b-8d76-0ff444b8202c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef632fd-7b88-4c6f-9a50-9352a53a57fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ae897d2-5ada-4707-a674-97308785bcfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "053b49ba-1e4d-4fa3-b190-005441e3373d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bed5393-7ee1-41a6-a49a-939730381a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c81560-633e-4f20-96c7-cc1f16b7ebce",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f182d1-1913-4530-a1a4-77a0ace2353c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa14499e-d19f-4388-ae90-87ae9108e7a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58040427-f60c-46fb-aa55-2e4c8abf374b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40dbdf75-a738-4589-8bf2-c8a3c464f11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238616bb-cfbe-437b-8cba-117c52fe9de5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a4d86f-b0f3-4c80-a682-5fa2712eaf95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b14473f5-12aa-4da6-80f4-60371d92a68c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a673c1-af2b-4795-9239-1d113588fc72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bca8a36-f4b8-43b1-9d73-7ca8214479d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c57b9f1-1a82-4e6d-a292-caebb5d2fb52",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cdb8fc-f79c-42bf-b178-c46426fce6e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1077a077-7765-4344-a4eb-238f78a2f9c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3d3040-88bf-44fb-a87f-01a231fd1553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7afab4c7-9c9f-4f6d-8abd-60cbeaf588e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84750ca-024f-4e00-aebe-52ace7bfa614",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c727afb8-613b-4c94-8462-348018092415",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1d39e9c-3ef9-4c07-9555-65a093c729ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90e4d16-89db-4e5c-b935-b905d7a13337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d8bf020-c7ee-4e81-ac32-d271c0194d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6ce66c-0623-44a0-a851-eec6f004f202",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51aa6ee-2a82-4eaf-b5cc-863a788c76b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb4cda52-80ad-47b7-ac47-2e1f57380cc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60a6d74-02b3-401a-bed8-dd0804fceece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "557f4068-2493-40c0-adc0-602c180571b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ccbecc-b176-4991-bff8-21b77388fd0b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e9e8cc-ec7e-4404-8a88-d008e42fbc45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7488d1f-e118-4092-b859-c4952545236b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b15d94-34a5-4458-94d8-b77e90033e70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7fb6c9e-7815-457e-9514-787e24f9be63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5f9846-795e-40ee-adb9-236e86fa1bdc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d874cbe-1cc5-402b-b1b5-ba295daae130",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48d5ec93-8dee-45e6-ab21-5219f8616822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9630e01-1bdc-44d9-b3af-5303092fb9b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44fbad1b-a406-459e-b8f3-0ea82d1357e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6af86c-8a92-4a50-8c61-e12ced77d510",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5750d773-d167-49ba-97d2-26445483c622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc5e2630-5ed4-4a10-a51c-673f3bb19f42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d37f266-7809-4567-928f-8de22201b56b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446e1d59-1e7f-432f-a8f5-7010fc9b83ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc86be75-8255-4a3c-9e8f-ef862220ddf5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b6201b-4de9-40c5-8a97-a4c0becfe10e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3fb0bbb-c737-448d-88c6-2e07aabb261c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c52fbe-bf02-401a-aab1-9aa5843b48b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e350f0a4-30ed-4c08-a460-a3e3c5097dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4708336c-79a2-4720-8092-7962ab95f930",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a60acd-c2cd-4314-837c-8eefce6799d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dc9f322-e4c7-4374-a84c-f2b507f92305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5726b8-0ca3-4c35-a018-41c601b114d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09099ce-6bfa-419a-9993-49ccb4b5fa5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8785f21-2ae2-4334-98db-4e9be0221728",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b883aae-5128-456a-9449-6b094bf079a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31278d0a-59ec-4a38-8bad-7565da38f40b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58329a4a-7294-476d-a91b-de262bd0ee1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3dd10eb-2758-4956-8a53-fc52f5226a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e628a0-6fba-4d5a-a1f2-03a8d3aed710",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ce16a0-aff7-4f18-8c56-639b645d314c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "839e5bed-5cfe-4280-826e-f3ced374da5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a20698c-8f7f-4875-b89a-e9511887435d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f89436b-db8e-411a-8b10-3184758fc4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c00e2e-3d13-4e0e-b2a0-d0ba76d119ed",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce06378d-7ff9-45d3-b3d5-606ae1ac3675",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54330458-33cf-4be2-8590-cc451d2a36be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4d5dec-8c4a-4760-87f2-932f573e8a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1923ed8e-0644-4d91-be51-ef4e821bede0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbdd817e-42b9-44f7-85af-a744ce013612",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed37b90a-993e-4b69-979b-16f0ccaeeb0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42cd3146-e2f4-49ca-ba4e-f5d264a62180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44b7166-454f-48e7-86b3-006888ff1876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5564ad00-45ab-4b68-a3df-e9db174ba509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3328c852-4650-4162-8c88-6e1dcfa33879",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59189f27-ea60-4897-b3ff-fd268175f3d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e594f55-65ee-49b2-97ee-4a7284d3c25f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d55622-b436-4cd9-9e8b-f0eb2aa669ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a90f33-c060-4c56-9c89-d4681e5ac233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9628fef-34a3-4ea7-807f-659059f24f39",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44cafe0a-18a6-41ff-8a15-8b37b98820a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf5ea347-4348-4dd8-b12b-cb7d482ff6a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d813ed7-ed74-4f38-b8d5-2266e4b4969a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5086009e-bbfb-438c-be28-ce52dab761f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2adbe32-3109-4891-95f6-476f20d188c9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82db7d02-71d9-47d8-a526-4615ab468844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b6e614e-02e7-4377-a258-09a06bfddb11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "088215e4-bd48-42bd-9cfe-2c2f1ecbe4fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ef52af-2f4c-4801-80fe-0d8c4d597b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda45309-0653-4698-8a2a-b728448faf23",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d256c4bd-7c8c-41bf-a473-c4150d1aec02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "015f7d06-4b5f-4c2f-ac83-f4adeac02f13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4416f1-6e52-43c2-adc8-91a16fdad96d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f2b10c-9395-42da-9986-a4d0f9830061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db34b990-1b2b-4aa8-b961-4c91369d35b3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d69a8f-2cf3-40e3-9650-dbdb86dee479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cac4babf-95ee-495b-b7c6-6e3fe9f8b074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0012d09b-d1ad-4869-9c50-992bd5d498b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de90bc3b-488d-4a22-96db-bb1da5741589"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c1aeb3f-c39e-4b0d-984f-a9082924a8b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8adf33e6-bf6e-4a17-83fd-7e5b5c68e3bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e66413db-7639-4eb9-be1b-655c3d3c28bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f46599ea-5599-4f92-a7da-a0ac0c6c7a98"
                    }
                  }
                ]
              },
              {
                "id": "c897d7cd-535e-42d0-8d7c-ca32970d002d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "17e2b4de-46a7-4e2c-952e-54f074a9d012",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd38565-37cb-47cb-bcc3-d7017226102d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d6809e07-f892-40fe-bdaf-7084ec235c37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76c83b5-e009-4059-bf05-1d9d48d658e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52b4c1fb-7da6-4798-a18a-6658aabe3ab0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b60fb7a-2bf1-4b2f-a0a3-ff820f20cecf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b80b9f2f-c333-44f3-9a70-b0a100f70e67"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dcefc37-16c5-4fe3-8c97-2965fad6c798",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce212747-7883-490c-a25b-f2393bf6368e"
                    }
                  }
                ]
              },
              {
                "id": "8e11fecb-8f24-4e2a-b10a-bc888bb0e606",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8f993e9f-ea65-4851-b248-9f755d33d1fd",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a571597-7998-4ae7-aae4-eae5e665eb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "70469468-284f-48ba-ac8f-9dc7a1fb9a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697e5960-4c9a-4ea6-9408-c84c25407c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da46750a-46e0-49df-8253-f8eb5dcfb3ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c4bbd5f2-3c02-4038-bf22-1f84e7e223b7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1f032c85-1fd3-4cd5-ba7a-9a36822f1855",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ef1036c-4ca6-494e-9c97-2ca92de5ecc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f8a1d907-6be9-42f0-8fd8-28a615dc1ea4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd7fbe87-85a7-48e8-9a59-e4aaa888f7e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8749721-32c9-48d6-9eb6-5e09dd3db234"
                    }
                  }
                ]
              },
              {
                "id": "5a8bb007-8a7d-4030-822b-464365e5aa4e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c25c44d-6491-498d-bef7-af554d90023e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "16e222b4-984f-44b1-9ba3-a32e9d348d89"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5db5423f-e347-4e92-8c9a-28efdefe0806",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eee67f6c-d4bb-4cd5-850f-8be624743ec3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c89c37c6-313c-4db1-b695-aee13bb29f12",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4790ec75-c742-4fe6-9d14-b8fbcf82fbaf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0afdeb28-e32c-4779-8115-de4d8c4e6817",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a402604d-63dc-4a86-a3ca-a63f704063d1"
            }
          }
        ]
      },
      {
        "id": "e48d9627-6c7f-41e6-8aca-c47fa4b04799",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d4603b47-6910-4ca1-a977-cdaeb9117033",
            "name": "Negative Testing",
            "item": [
              {
                "id": "72750fee-a0ce-48de-baa5-9d7b67c0f9cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3092b12-b80d-4fd1-99ed-586f8b016ac8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d0a0c5-11c0-4ab5-a33f-aca8c76f4fc1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7a2f1853-7c3f-44cb-b293-5d0da6322845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b6dfed-f74d-4f12-bcc3-e91301328ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ac2af55-f547-41f2-b542-c2a706ebcf78"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d123de9-7aba-4fcd-b768-dff5e4a44fbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43248dc4-fc63-453a-9a98-b2d986d1f470"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "98338f28-a938-4aa8-8500-d27eb36da1a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54975f92-6881-4565-80c1-9dc7e8e849bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70c9bdfc-57b2-4da6-8593-ee8d5b7e4b0a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b42e67e8-328a-4d47-b2b7-8ba27dfd6a02"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ee90bcc-0524-4659-aff4-efabf66d0c39",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a760090e-a5f7-49bb-936d-2f34f58b16f8"
            }
          }
        ]
      },
      {
        "id": "5f3ac44a-ec7e-4728-a582-2f0796c8b501",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "026466ca-7ec4-4299-a400-f72fd5785dbc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "33d6cdfa-e846-442f-8a4b-5801c3910a86",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3f052b1a-1dda-424f-98b0-8c689aa04f33",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914aeff5-30fd-4ad3-8499-2506e7219f23",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0350ddf7-47c0-4123-b5c0-566b797fd4ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57be9949-8b58-4a52-a495-cd9bca143e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3adcf33c-06bd-447f-87ba-29f821bd544d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dec88d44-0c87-4371-a487-0fbbf8076edc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c60bf58-fb0b-4f0b-95a2-b8c1b66d91a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3448cdce-7445-465f-9b71-73e4888ee8b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc78e622-a6b1-4043-b9a6-1f00b7aa2f44"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20f8c5a0-5abe-4aeb-86fa-2515c6f2642f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "842f8f47-bcf8-4524-9f39-6f65c6524e9c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ad16fd9-f387-460e-b9dc-5baf5215523b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a7357f03-7c8c-4418-be25-4d1cdc11bef2"
            }
          }
        ]
      },
      {
        "id": "ae30d8dd-d979-4167-99e7-9fccd8f0be79",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f72bccfb-8a08-4592-ba13-6117f92be99c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7423af3e-9d19-4319-aa7a-725858ca48ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9091dc02-d0ce-4835-8f64-2d7a7e80ea23",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e17ef0-3679-473b-86c8-388b2b5c6fe5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eff31b93-99e3-4f45-89bb-9c810674b05b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9478601-0f67-46d1-bf2c-bf66c54507b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80eee66f-0c7b-4edb-b672-737cdd3f1a51"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "361ab1d5-d9c6-44b7-be9d-83c76e67f0cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53d5c037-c2e5-4987-9e54-90f800c51845"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1812c67-4ccb-4529-8f80-b5592078d35e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44948cdd-7823-401e-9b1d-69d25b488c9e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "718c9ad3-116d-4aac-98ea-43f0cf3a40d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a5350918-ebfb-4a23-8531-bc5978827a9b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5166da99-fda7-41a7-8ba9-ace9a15bef32",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f597632d-d472-43eb-bf96-b488f03196ce"
            }
          }
        ]
      },
      {
        "id": "419b3b8e-9c60-4d93-bc4b-37a747b7a7ad",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eae3ab03-290c-40d5-95fa-e2a05f156dda",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b715512-869e-45d4-a462-79bb8f7d9efd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "35eb0190-527a-45cf-9523-8068d606ee6d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3549260-fe4e-4fd6-b57d-8026673e0599",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a0b9c9b-7c87-44e4-bd4a-7c27f281af77",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 76.13684210526316,
      "responseMin": 4,
      "responseMax": 9368,
      "responseSd": 597.964517116508,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702773527837,
      "completed": 1702773558511
    },
    "executions": [
      {
        "id": "3ffc5ed1-fc71-4580-bc7d-f72525808ef5",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7a19dbfb-fa91-439a-9ee3-b3d0b69dd0f1",
          "httpRequestId": "2ae3d1fd-ce59-4447-8798-d012777c0d31"
        },
        "item": {
          "id": "3ffc5ed1-fc71-4580-bc7d-f72525808ef5",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fe49aa83-4c55-4ba2-a033-02bebdc9b7f0",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "89b9dfa2-0fad-4b40-9c7b-2d01c7ce2c8f",
        "cursor": {
          "ref": "ac7b6d30-5365-47d2-8a96-945262b3c07c",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "77bcfe97-0046-438b-99e9-c671d30e9fe6"
        },
        "item": {
          "id": "89b9dfa2-0fad-4b40-9c7b-2d01c7ce2c8f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8c68d90d-b884-41dc-bf27-be82c7727850",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "e9f7066d-d54b-44ef-8c2c-b1b22bd2e53d",
        "cursor": {
          "ref": "fa97755a-a5b0-45ee-989a-ed2dbcb60026",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ca1174ea-aafe-4f29-a41e-88471439f8e9"
        },
        "item": {
          "id": "e9f7066d-d54b-44ef-8c2c-b1b22bd2e53d",
          "name": "did_json"
        },
        "response": {
          "id": "92498a0a-2fe3-45cb-bb44-144ed1c6f0c7",
          "status": "OK",
          "code": 200,
          "responseTime": 254,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9759d01-ebf1-4fe8-9dd5-b26686d5805e",
        "cursor": {
          "ref": "69e3765d-ffe9-4f98-a326-54c76a7d069a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9b85b3c8-6611-4c50-b468-11e79852c4a6"
        },
        "item": {
          "id": "a9759d01-ebf1-4fe8-9dd5-b26686d5805e",
          "name": "did:invalid"
        },
        "response": {
          "id": "60cebf93-cbfd-45ef-96c8-f4a91edea1f3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 752,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9759d01-ebf1-4fe8-9dd5-b26686d5805e",
        "cursor": {
          "ref": "69e3765d-ffe9-4f98-a326-54c76a7d069a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9b85b3c8-6611-4c50-b468-11e79852c4a6"
        },
        "item": {
          "id": "a9759d01-ebf1-4fe8-9dd5-b26686d5805e",
          "name": "did:invalid"
        },
        "response": {
          "id": "60cebf93-cbfd-45ef-96c8-f4a91edea1f3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 752,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b764b5a-69e5-4cab-b933-6f72e8802e17",
        "cursor": {
          "ref": "95f6227a-9f31-4069-868a-0fc6442d70dc",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "52231a81-c43f-4aab-9cbd-47fb92e034f3"
        },
        "item": {
          "id": "7b764b5a-69e5-4cab-b933-6f72e8802e17",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f75decac-297a-4359-a39b-6b8d5202dc10",
          "status": "Not Found",
          "code": 404,
          "responseTime": 13,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3a9b5d-7f57-452f-910b-6d1d1fe10575",
        "cursor": {
          "ref": "0f122b15-5422-4498-844d-8c2fc68a991f",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fbc228fa-1db1-4315-9f1e-53fe0771409c"
        },
        "item": {
          "id": "3c3a9b5d-7f57-452f-910b-6d1d1fe10575",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "634be239-48e3-4f78-9119-0ba448f0e8a4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 11,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b58c96-4706-40b7-a749-bbd7b8ddeb45",
        "cursor": {
          "ref": "a2e3b865-7fe2-45d5-bc78-09777173db6d",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "07a8766e-836c-4d00-bbea-69a5f99d2d5e"
        },
        "item": {
          "id": "e1b58c96-4706-40b7-a749-bbd7b8ddeb45",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9a600804-0816-4c23-b8ee-283ffa3c1163",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac52cedb-31e5-49ef-b024-4260a64db819",
        "cursor": {
          "ref": "575793ce-2cec-4256-90a7-950181a94a72",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "916c4188-5bac-439e-9129-5c4e41218464"
        },
        "item": {
          "id": "ac52cedb-31e5-49ef-b024-4260a64db819",
          "name": "identifiers"
        },
        "response": {
          "id": "8c170536-503b-4985-a4a8-6177eda7a4ff",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f9a986-671e-4012-9ed5-1f39014e65ca",
        "cursor": {
          "ref": "c23cc755-279a-44ce-89bc-8a7dcf588f75",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "dfdf1f6d-607a-4204-83b4-40931565b9a6"
        },
        "item": {
          "id": "60f9a986-671e-4012-9ed5-1f39014e65ca",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f5688932-015c-4152-96bf-2c84aa450d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28213d05-9e96-4d6c-9c1c-e403e609d80b",
        "cursor": {
          "ref": "c4f1dc14-dbde-4b9d-8d1d-b5101cdcadfa",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6e9b62c2-cd31-4f02-a2bc-c51f1dda6a0a"
        },
        "item": {
          "id": "28213d05-9e96-4d6c-9c1c-e403e609d80b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9aea495f-cc4a-4c12-9c7d-6c48855657bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6b47c4-302e-4c2e-afbf-124e39ccd29f",
        "cursor": {
          "ref": "11acb3fc-9535-416e-8c6b-5ea3ddc506a8",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bb0748b7-c72f-4c9e-bf0e-49fe237d3c2f"
        },
        "item": {
          "id": "cf6b47c4-302e-4c2e-afbf-124e39ccd29f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2d274737-f847-42ae-9404-783bd04a180e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71150290-df7c-4c97-aa8f-5ffee69784d8",
        "cursor": {
          "ref": "ac7df1c1-807f-43cb-80d8-9aa93421cad3",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "110800f5-4cf0-484f-9939-9b15e53c871f"
        },
        "item": {
          "id": "71150290-df7c-4c97-aa8f-5ffee69784d8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "12cbe662-ce60-4a27-9347-ae4988f2a5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a9a211-3838-4839-9d88-e0ecf68d07a0",
        "cursor": {
          "ref": "a98c285b-3014-4459-8539-dcde0df2b6b0",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5da692f9-b3ae-4c6c-a7e6-2126d5008b50"
        },
        "item": {
          "id": "a1a9a211-3838-4839-9d88-e0ecf68d07a0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "75bb123d-030d-4c7d-ba1d-af2749044288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4572e8a6-7c9b-4e63-8d25-721230db567a",
        "cursor": {
          "ref": "f69240ae-fe01-4c4b-bdb1-10208cc74f94",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a10bf140-050c-400c-a177-e816f6c156ca"
        },
        "item": {
          "id": "4572e8a6-7c9b-4e63-8d25-721230db567a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ed5061c1-527e-4226-88bb-237a0bdbc5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e319d69e-3d02-48e3-b8e4-b8f9477ccc1e",
        "cursor": {
          "ref": "6b8c5b99-1ae4-49b3-9541-86b95e6fb39b",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "be112e83-2fe9-411e-9d8c-1f81cfe2eb31"
        },
        "item": {
          "id": "e319d69e-3d02-48e3-b8e4-b8f9477ccc1e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "fc0155ff-fe39-4bfe-86a5-8e7c9481ea3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006976a5-8bb0-4f1d-9069-43c214724d3b",
        "cursor": {
          "ref": "641a6ada-94e3-4129-ba58-5bdefc0b66d8",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "671e1c68-6382-43fa-8c9e-c93dd7fda3f1"
        },
        "item": {
          "id": "006976a5-8bb0-4f1d-9069-43c214724d3b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "766f77fa-d5ea-419f-be2d-2eafb337c5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d565528-369b-4a2c-9e88-03e53a20d73e",
        "cursor": {
          "ref": "91e96bf3-8279-48ff-bf22-b62808036863",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ff5656de-1f80-4766-a40a-02e20e3afb1d"
        },
        "item": {
          "id": "8d565528-369b-4a2c-9e88-03e53a20d73e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "51f40185-75b8-4203-9a25-bb0195f3ffbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aab7454-2598-4858-9fc2-3867f6cd91c5",
        "cursor": {
          "ref": "e734bc11-3aa8-49be-a4f2-2e22a527183f",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9667f02b-b2fd-4ef9-bf21-6ef71f6c0242"
        },
        "item": {
          "id": "7aab7454-2598-4858-9fc2-3867f6cd91c5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "607795af-871d-4242-970f-88f8541c0ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4639ce95-5a12-4647-aa5f-ddca01d2e445",
        "cursor": {
          "ref": "ad99a4e1-1de7-47c1-88d4-66787b6108dc",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b86a4bc3-72df-4931-ab77-55b3a0c26d25"
        },
        "item": {
          "id": "4639ce95-5a12-4647-aa5f-ddca01d2e445",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "846976df-9467-4b05-ac20-63c90f8d765e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4289f902-b4be-4b6a-958d-3d0d88346a3c",
        "cursor": {
          "ref": "b88e4523-ba3c-4704-8f8e-7816cee7e14e",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4f62caaf-30a5-480f-b1ec-37d1690f01ff"
        },
        "item": {
          "id": "4289f902-b4be-4b6a-958d-3d0d88346a3c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4a2b054f-1262-486f-b5a1-c9d2eb5258e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52294ff0-0105-4eff-b48c-033e1f57aa02",
        "cursor": {
          "ref": "dc0b8a80-cc9f-422c-959b-5fd32c32217f",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9d5bff55-26bf-42dc-9063-433420b163ff"
        },
        "item": {
          "id": "52294ff0-0105-4eff-b48c-033e1f57aa02",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3470cc32-38b2-4953-b9ae-477eadb679fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f3fbdb-ad2e-4cdf-9d26-ea39cc59e8ba",
        "cursor": {
          "ref": "5a9ced03-1ea2-47ef-b76d-d84a79764413",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "88edc003-182e-492e-8956-fd5934c2aa25"
        },
        "item": {
          "id": "17f3fbdb-ad2e-4cdf-9d26-ea39cc59e8ba",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6c862071-6bfc-4ba3-aa2e-1030770e3af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e7fad9-9890-4434-8ea2-bcc1a60e5568",
        "cursor": {
          "ref": "65b205f9-063a-4e49-9169-0c876e9ca91c",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "38203182-a99e-401d-9b9c-6ed3cb7479a3"
        },
        "item": {
          "id": "04e7fad9-9890-4434-8ea2-bcc1a60e5568",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "373f0b5d-5777-495e-a650-b9a7c989d297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f341e20-6849-4842-ab78-7aa526cce262",
        "cursor": {
          "ref": "f45bfb99-09d4-4260-91e7-8b1f51df24e9",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4f13d0a7-91a9-4fb0-b5d4-784394c55675"
        },
        "item": {
          "id": "6f341e20-6849-4842-ab78-7aa526cce262",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7a0bd70c-1d08-4cdd-b853-ab84d9b4846f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4e1535-2033-4cd5-bb4d-604771b2ba75",
        "cursor": {
          "ref": "22d0e6af-9c62-4130-8f05-efdd559995b7",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "af24c3ba-58fc-47ca-a200-6d3a050f9bb9"
        },
        "item": {
          "id": "7f4e1535-2033-4cd5-bb4d-604771b2ba75",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "be048475-46aa-4793-95dd-6d082e05191c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9cbdf8-0e05-409f-a98e-7ed5c0a8721a",
        "cursor": {
          "ref": "32064bc7-582f-4be4-9cfa-8bc0773cbb4c",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f7ec1dc0-883e-440a-ab5d-479f7dc5b3ea"
        },
        "item": {
          "id": "db9cbdf8-0e05-409f-a98e-7ed5c0a8721a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "19110702-fa78-48e1-bc73-f4e30a1eac76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5076438-8258-4558-ac24-0b26e68323db",
        "cursor": {
          "ref": "6430ea2b-1b94-4913-9f1b-83d38b4cc6a7",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "56137d0f-850d-49ad-ba6a-7eb586135400"
        },
        "item": {
          "id": "e5076438-8258-4558-ac24-0b26e68323db",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "97d781d4-b1f6-42b7-b7ba-f1cad921399f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2caea6e4-1264-4324-8a36-11fc07f6a896",
        "cursor": {
          "ref": "e915b769-8c54-4891-9e78-5ab0b0b5f1f7",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c12c590e-ea2e-4cd2-82ef-d539ff821262"
        },
        "item": {
          "id": "2caea6e4-1264-4324-8a36-11fc07f6a896",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0879e231-be9b-4f3e-a2aa-2ef858ac09dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e079cbf8-2cad-4910-a06b-ec31e132adb7",
        "cursor": {
          "ref": "455c39f4-75cb-4e1f-9901-c66e9f90bd3d",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0edb67d9-4b9e-4418-87a5-66decd82e2a9"
        },
        "item": {
          "id": "e079cbf8-2cad-4910-a06b-ec31e132adb7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f7521d8e-e497-4ac6-9116-6bd6e75a89ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b77e5a-602a-431b-9700-edbf22afd8e9",
        "cursor": {
          "ref": "6494bbe7-8b4f-46a5-a097-9cb46143b5bb",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "70663e06-5e09-447e-8a31-a41322942976"
        },
        "item": {
          "id": "23b77e5a-602a-431b-9700-edbf22afd8e9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ebe94151-bbaa-4dba-839c-f14a7093e621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb163fec-7d67-4959-92b3-dd2bc62febce",
        "cursor": {
          "ref": "635e3ec0-96fb-4e52-a8b3-028e9d0ccd58",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1623ae63-dc50-4a3a-91b1-30a13b5309ab"
        },
        "item": {
          "id": "eb163fec-7d67-4959-92b3-dd2bc62febce",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2b17ba31-66a7-47b0-9de6-776351128567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2beae7bb-1abf-4b84-9432-e409305b58ad",
        "cursor": {
          "ref": "6a397f8f-91de-444b-9ad0-b6caa961953a",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c22738f7-8204-4f4b-802b-791dd6d5ad28"
        },
        "item": {
          "id": "2beae7bb-1abf-4b84-9432-e409305b58ad",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e03c02cd-9df1-45e7-b962-c7518a713d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0d0b41-e0ea-42ff-af26-373d8bed6696",
        "cursor": {
          "ref": "10cdf357-a004-4df9-8cc6-6f8c3ac7ffc7",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "10cffe82-6a15-44f4-8197-132bce4bc441"
        },
        "item": {
          "id": "bc0d0b41-e0ea-42ff-af26-373d8bed6696",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "257a09d4-db4c-46bf-bc1b-2dc4c87bbc78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880897fe-853c-48e4-bad3-4446f0adab2d",
        "cursor": {
          "ref": "534fca0d-fb25-4fb6-8e9e-01b3d017dfac",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "27392366-c145-483f-b11f-8fa0d0a82214"
        },
        "item": {
          "id": "880897fe-853c-48e4-bad3-4446f0adab2d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1a8bffd4-9634-4951-a321-b973ffa3d7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e885385-cd74-4ce5-8ca7-331dc9691a48",
        "cursor": {
          "ref": "167b4506-9a71-4da9-bd62-0b91ad45be5f",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "97f09a9e-0f88-48bf-974a-1c212eeb67f5"
        },
        "item": {
          "id": "0e885385-cd74-4ce5-8ca7-331dc9691a48",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "73403195-d60b-463c-9cbe-08582a063075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9bceca0-9e9a-4296-872f-ca936c9aded4",
        "cursor": {
          "ref": "8ae4d0a0-367d-47b1-bef5-92a3801a5342",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c48d3c90-57ab-4553-a696-17863243159c"
        },
        "item": {
          "id": "b9bceca0-9e9a-4296-872f-ca936c9aded4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4771572d-0ae7-4b71-b83b-74e32ac7909b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14dc0eb-1a08-4524-80a0-2340eb5016a2",
        "cursor": {
          "ref": "bb952d81-2618-40ad-969f-424de03f62a9",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9e91c322-1057-4ed0-b33b-66a16bcc29e7"
        },
        "item": {
          "id": "e14dc0eb-1a08-4524-80a0-2340eb5016a2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d309bc46-1add-403c-ba57-bed3f26063ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d67f02-c87f-4382-8904-30f5f5f63042",
        "cursor": {
          "ref": "d787f0e0-9dc4-4b4f-a74a-006eb307d87e",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "96af3720-21fe-4f3e-89a5-ebeb1fd7b30b"
        },
        "item": {
          "id": "16d67f02-c87f-4382-8904-30f5f5f63042",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "943026a1-2718-4b8b-9690-d271cabae420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e5129c-6a97-4211-a29d-ab8196d5c6c4",
        "cursor": {
          "ref": "23a32031-3b3c-4712-beb3-dc097cafd6e0",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3f27c59d-450b-4b43-a09e-d0b86f40afba"
        },
        "item": {
          "id": "40e5129c-6a97-4211-a29d-ab8196d5c6c4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "573b6c64-db37-4bc4-aed5-3f456f1455ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558f8220-edee-45d3-9799-65212de39135",
        "cursor": {
          "ref": "5cf37a2a-2aca-454a-bcbd-8f5d7526da07",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "64a198dd-0626-4b3e-a6fc-b6714f0fb545"
        },
        "item": {
          "id": "558f8220-edee-45d3-9799-65212de39135",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "096da07b-c7f5-4658-9818-07cc34a57933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd4b3c6-00fe-40c5-ab20-779f9362578b",
        "cursor": {
          "ref": "763fe218-14e9-4a30-b6ae-3607a070f9d3",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8de42eb5-4dd2-4a82-97ff-711573b153aa"
        },
        "item": {
          "id": "fbd4b3c6-00fe-40c5-ab20-779f9362578b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8c7efcb8-70d7-42a1-a306-315e7c5ccb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3771f4-ddf4-42e2-bca9-36673272760b",
        "cursor": {
          "ref": "5b762137-ecf0-4daf-809e-dc0378905ffa",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "195aee50-6e8e-4820-9378-2617309ead2c"
        },
        "item": {
          "id": "8d3771f4-ddf4-42e2-bca9-36673272760b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9f009cd2-cb2a-4657-a115-3391f28959aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a255426-8f8d-45c8-b6fe-b46c5ac0e41b",
        "cursor": {
          "ref": "841f66f6-9976-4484-8575-fc0e5f8e0814",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "218cf0bd-b2ac-4a58-ba6a-625fbf5b201c"
        },
        "item": {
          "id": "9a255426-8f8d-45c8-b6fe-b46c5ac0e41b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8cd8fe9f-1a92-47e0-80cc-d5880799c411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2974cc-e78b-4234-b631-8db5ef858515",
        "cursor": {
          "ref": "dec8794c-765f-429b-ab58-33ed7bc6b8ca",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7f412544-228e-43d7-aeb6-a9fcff35dd0f"
        },
        "item": {
          "id": "0e2974cc-e78b-4234-b631-8db5ef858515",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "191284f9-455a-4ff7-b16e-3717897852dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b461a20-4031-4bba-b474-33c97564c7b9",
        "cursor": {
          "ref": "a6ab1e44-d5fc-433e-a5ca-e201c625d8a8",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bec28fb8-01dd-4bde-8d6d-c0f81d9d253a"
        },
        "item": {
          "id": "8b461a20-4031-4bba-b474-33c97564c7b9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1cc4b1a7-eaea-454b-9859-9eaba935777a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04eda113-ef90-4cd6-a421-d2acd9fb33a0",
        "cursor": {
          "ref": "252d7f9c-a6ca-4939-99f0-cd605160f4b1",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "405c8ee4-dd80-4486-8a33-5f5f7c3bf2bc"
        },
        "item": {
          "id": "04eda113-ef90-4cd6-a421-d2acd9fb33a0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d43cd81a-8bb9-4764-9a2f-975d4a67fc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a540c61e-648e-45b9-85dc-b428b8247ddb",
        "cursor": {
          "ref": "ed4087ac-a3b3-4039-9b4a-c946b45351d2",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e0ac1034-29c8-459b-a9f3-f83dec0ca2ad"
        },
        "item": {
          "id": "a540c61e-648e-45b9-85dc-b428b8247ddb",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "922af82d-99fe-43d9-bf4c-231348471501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575dde96-2b1d-4e71-b4ae-8413be5606e8",
        "cursor": {
          "ref": "5e957cc8-83b6-4cc8-83df-93214ef32cbf",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "59da2122-1934-4217-8170-27a1f8b891ad"
        },
        "item": {
          "id": "575dde96-2b1d-4e71-b4ae-8413be5606e8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6df1d6c2-736a-4cd1-9ca0-7e64be608828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aafc3a7-bfea-427b-b84a-c5a2d38df4aa",
        "cursor": {
          "ref": "78c9c6f6-1a4e-4653-8b85-6c56aa4d6dec",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0bbc28d1-4a45-4ae9-aaf6-668b23e807f9"
        },
        "item": {
          "id": "3aafc3a7-bfea-427b-b84a-c5a2d38df4aa",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "39eff0af-6c3d-42de-933b-9984656b5402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ccff1c-7989-4a23-bdfa-e56abac6d8ba",
        "cursor": {
          "ref": "72da384f-ebd5-4d15-8eb2-f11c370ea054",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cb8d4ac5-eb70-4302-afd6-d7ca6d1ef716"
        },
        "item": {
          "id": "90ccff1c-7989-4a23-bdfa-e56abac6d8ba",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "83aa4820-4cfa-4e07-a00f-2223c750c7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e4c71f-a0e3-4173-bce5-24d76ed29361",
        "cursor": {
          "ref": "3c332d97-2db4-4094-8c0d-737c8ca33e99",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e37b6027-e2e4-4663-8330-a22b08749aab"
        },
        "item": {
          "id": "c2e4c71f-a0e3-4173-bce5-24d76ed29361",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c6e62b5c-fb98-4dc0-996c-b2069667a0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a209499-a15b-4dfc-bc51-4f78ae3eb430",
        "cursor": {
          "ref": "6f82e5fd-c894-4b52-93e5-88de0f57fb84",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "431d24ba-f7f0-48be-ab41-a8b86f0519e5"
        },
        "item": {
          "id": "3a209499-a15b-4dfc-bc51-4f78ae3eb430",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "417489c6-23d8-442c-abdc-2ce03cb56555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367437cd-774e-4184-9e76-10509b6438f6",
        "cursor": {
          "ref": "1268566a-62e6-4215-9f91-a8df4985fac8",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "60d1bae3-8c33-4238-b134-7b22419d95d4"
        },
        "item": {
          "id": "367437cd-774e-4184-9e76-10509b6438f6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8aee7fcf-768c-4ddc-9984-74577a220abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b220c9d-af47-418c-83d9-9c7804bb5bd6",
        "cursor": {
          "ref": "0fa3e234-d283-44b2-be4e-a9b03eced50b",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "936b90a5-3a84-4bdf-b6fd-7a480739d08f"
        },
        "item": {
          "id": "4b220c9d-af47-418c-83d9-9c7804bb5bd6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3d842e27-1ebe-412b-a252-4e7314249aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84525a3b-69b7-4fae-8910-7d004d2bd4b0",
        "cursor": {
          "ref": "a2ab466d-b8a7-4296-8f81-5f963846cae0",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2214b6a5-4566-404d-85d0-446ab8a29a81"
        },
        "item": {
          "id": "84525a3b-69b7-4fae-8910-7d004d2bd4b0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0832ab6d-e388-486d-8bef-91114f3af414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b346b4-bf01-436d-9da8-a3fac576fea3",
        "cursor": {
          "ref": "554e1ab2-bf7a-49a4-bcca-ba06a149dc6c",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "689b9ae6-395e-4cc7-a458-17ab50db97d9"
        },
        "item": {
          "id": "f6b346b4-bf01-436d-9da8-a3fac576fea3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "97efa97a-090e-45f0-894b-04f28ba657cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1a4759-0383-49d9-8e36-4437d121cea5",
        "cursor": {
          "ref": "8e901523-4664-4de2-ac04-b72c113fab01",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5cae36fd-3338-42b8-8aba-5c0ab53a9e07"
        },
        "item": {
          "id": "6b1a4759-0383-49d9-8e36-4437d121cea5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4e5f57b8-6732-45aa-b2eb-1652c32f1374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24a591c-a904-495b-909f-e3f9c49969cf",
        "cursor": {
          "ref": "c0b19aa9-57d4-4adf-8a03-d467e25138be",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1cfc7403-caf7-4e81-bf87-9aac9609ebe5"
        },
        "item": {
          "id": "c24a591c-a904-495b-909f-e3f9c49969cf",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2c60e323-bc41-4779-8ca2-dec1eaf18347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd47629-630a-498a-9ca9-8c04cd3894a7",
        "cursor": {
          "ref": "4a79443e-0964-48cc-be2c-1cedb58517f3",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a6e55ee8-81bc-4eeb-8ef2-39cdafc0ace5"
        },
        "item": {
          "id": "2fd47629-630a-498a-9ca9-8c04cd3894a7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "46fabf4d-38eb-4c92-b05e-3dcf242cc63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af43aea5-537d-4a9c-8272-c98827e8c032",
        "cursor": {
          "ref": "c3875395-a442-4469-911c-cbb4b538fb13",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "851deea7-bc63-40b1-9090-6df95c7d5249"
        },
        "item": {
          "id": "af43aea5-537d-4a9c-8272-c98827e8c032",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fa2664be-b4ea-4083-b8c0-fbc07e174403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbb77ed-6a88-4197-85ba-44f78e3e11d3",
        "cursor": {
          "ref": "f94c247e-af50-4da3-bb34-3ca43b1ceaef",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d76e59f6-aeed-4da3-b8c3-8f26911ab0c9"
        },
        "item": {
          "id": "5fbb77ed-6a88-4197-85ba-44f78e3e11d3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "bc58ac8f-5477-4f3e-ae59-02f6d9e68cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd6b259-2fe4-4133-81ad-c1febe35acbd",
        "cursor": {
          "ref": "a2434c45-ca1f-4f9f-9e75-95fcd210f4e4",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "26d3ae84-8eeb-49cc-b291-280875d5e3f7"
        },
        "item": {
          "id": "5fd6b259-2fe4-4133-81ad-c1febe35acbd",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a4eda4a5-928b-4f6c-b360-7b4ef4b4db82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deeadbdf-7031-433f-ad9d-1862339bc516",
        "cursor": {
          "ref": "194b4df4-b233-4511-8be4-2ab7738726b4",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f36470b1-ae02-4d47-ac17-ba49d224b4ec"
        },
        "item": {
          "id": "deeadbdf-7031-433f-ad9d-1862339bc516",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3316d483-3f88-46cd-9e68-d2c62f304188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00342e26-7bb6-482b-bb0b-32df906ba8c7",
        "cursor": {
          "ref": "17954d85-5b3a-42a2-93f1-4b48da4cb0d4",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "cf9c9a9d-4f1f-48d0-a3db-224bbe44071a"
        },
        "item": {
          "id": "00342e26-7bb6-482b-bb0b-32df906ba8c7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fb6e2512-7ae3-4061-9f3f-af504088a2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5335807f-ff8f-4818-a5ca-318dc6c0bda5",
        "cursor": {
          "ref": "648f8688-9fe3-480e-86b0-5e60491140c2",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "69972f72-c027-434f-aea4-704ea0303e77"
        },
        "item": {
          "id": "5335807f-ff8f-4818-a5ca-318dc6c0bda5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9c0dd7cb-976b-4b0e-9c70-fc0ff57ed4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565481de-d00a-4619-b72a-8eac8faaba37",
        "cursor": {
          "ref": "294f9b16-e20f-4ba0-ad23-2ba790dad3d7",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "14cfb842-7445-45bb-a039-bc51e8405967"
        },
        "item": {
          "id": "565481de-d00a-4619-b72a-8eac8faaba37",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "67c34066-c00a-4299-902e-d7b526e22a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddfdcb4-d099-4365-8a21-4a698f709d1a",
        "cursor": {
          "ref": "0937b249-18c6-438c-a03d-01a30060245a",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7c71cd67-9491-4fd5-898e-486d39793a47"
        },
        "item": {
          "id": "8ddfdcb4-d099-4365-8a21-4a698f709d1a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c2519145-4058-4f1c-8b40-af3e741537a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41b4a71-383d-47e3-9612-17ee8ba6697c",
        "cursor": {
          "ref": "5c2dc003-c9ae-4a58-bef0-62b3c1d9f4a4",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1081e9a5-29f8-4a56-9c65-be95f2d76d59"
        },
        "item": {
          "id": "c41b4a71-383d-47e3-9612-17ee8ba6697c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d524c742-88a6-4cc9-9f7c-ca8de75a3f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c9f418-fc4a-44cf-a790-9fba436295fd",
        "cursor": {
          "ref": "44a07b48-1506-43ad-a6ed-1d81b844fd96",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c2035f36-efce-417e-8b85-7d986185865d"
        },
        "item": {
          "id": "87c9f418-fc4a-44cf-a790-9fba436295fd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9c907905-8a0c-402e-8d5e-5b86774cbca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acf47e8-3053-4767-88d8-548de8e4fdfa",
        "cursor": {
          "ref": "0ff8466e-862b-403c-a278-e16750b3181f",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8f0e9e72-79aa-4587-8c1c-96eeac06f255"
        },
        "item": {
          "id": "9acf47e8-3053-4767-88d8-548de8e4fdfa",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1b04f25d-fda7-4bc2-aef6-ad8906f8b688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12da39f5-5f95-450c-a48d-e0265ef78ad4",
        "cursor": {
          "ref": "d62ab79e-83f7-4f02-947c-58bb79fcd097",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a2aa4f53-41e6-41d6-a297-86544151996d"
        },
        "item": {
          "id": "12da39f5-5f95-450c-a48d-e0265ef78ad4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6c10b82a-c1ad-412a-8cc4-0ed9e0beb36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09df980-b192-428c-801a-bccf98532aee",
        "cursor": {
          "ref": "4d61321f-84d8-4cf4-8053-685e6608a368",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cb309b9d-e9b9-4a98-908b-c2abd84f20d6"
        },
        "item": {
          "id": "e09df980-b192-428c-801a-bccf98532aee",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6040727b-02f6-4a86-8c3f-40350196ae0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c647fe57-9e70-4898-97e9-cf3d39f45fff",
        "cursor": {
          "ref": "35c62b4e-6565-48ef-bbc2-d8bd604a1fc0",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cd36f741-0103-4cc9-b400-46bda7f88703"
        },
        "item": {
          "id": "c647fe57-9e70-4898-97e9-cf3d39f45fff",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "85acfc0f-3c14-41cc-8ff5-67e87f9383f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a2d655-8187-4c49-9391-90448e224991",
        "cursor": {
          "ref": "ba635876-9cee-4ac0-bf25-c129e2f53882",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "be03558c-40d7-41fe-b469-da25f47e1615"
        },
        "item": {
          "id": "22a2d655-8187-4c49-9391-90448e224991",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2ba1ec55-bd09-4ecf-a7c1-f65b2dd924f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080d27b6-505f-4358-8a95-d60c2350af8e",
        "cursor": {
          "ref": "76c5819e-86c6-400d-8174-5938507c7db4",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c2f642a9-b785-4589-a4eb-07fbde0c716e"
        },
        "item": {
          "id": "080d27b6-505f-4358-8a95-d60c2350af8e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3dbccd33-0134-4f30-9e34-acfb0cc52b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77353048-da8c-45ee-a247-f9a51079baf0",
        "cursor": {
          "ref": "3f0b0d3b-a67c-465b-9f12-770a808c10d7",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b0f773fe-a10e-4e27-b87b-0357ff81cab7"
        },
        "item": {
          "id": "77353048-da8c-45ee-a247-f9a51079baf0",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e4a6f366-00ff-4b9f-b45b-3a1134f012d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f24397-2141-4376-b354-4c1cf8945056",
        "cursor": {
          "ref": "e22c2879-ef14-4dac-8ba0-83aecae522b3",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c350bd67-7fd4-4e3e-8101-3a2306b1b8a7"
        },
        "item": {
          "id": "70f24397-2141-4376-b354-4c1cf8945056",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "86e6c3be-d762-4cc0-a020-c7933bdd21ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c232ab3-35f3-4b14-8536-ab97311425ef",
        "cursor": {
          "ref": "7c45c37c-8977-40b7-a2a0-7e5767e60055",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8d61d364-e019-4ef4-9d49-da51403220c2"
        },
        "item": {
          "id": "5c232ab3-35f3-4b14-8536-ab97311425ef",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1daf6b5f-c027-4190-92bd-26f35a264ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ad40cc-e604-4650-8b27-246ebd75c9aa",
        "cursor": {
          "ref": "f800d080-6732-43bc-a03d-1c634185d2b7",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d9ca4e78-65fe-4804-8aa5-9db5ef5994e3"
        },
        "item": {
          "id": "b8ad40cc-e604-4650-8b27-246ebd75c9aa",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ab20b8bd-ae23-4088-9cc1-f88dd9e349d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179b37dd-be4a-4365-beec-6a21d41ea5f5",
        "cursor": {
          "ref": "f9d87418-09da-413e-b942-1bd649f65bc6",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ab310d9c-0a1b-4650-8047-7c527ebb912b"
        },
        "item": {
          "id": "179b37dd-be4a-4365-beec-6a21d41ea5f5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ae435f83-fc29-49b3-a665-4d4e60a2109f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6a3c8d-64bf-4615-8c48-268c6fdcc11c",
        "cursor": {
          "ref": "5629617e-afe3-4d4c-87f2-441c98eff62d",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e25076db-c97e-4483-9acb-16f440905e82"
        },
        "item": {
          "id": "cc6a3c8d-64bf-4615-8c48-268c6fdcc11c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "99112850-0e07-4ef8-abe2-90e949ed881a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27eb743-e7cd-48a5-9152-f28b716b3e2b",
        "cursor": {
          "ref": "433663a1-28d0-4b52-8223-3563ee0489ee",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "57a4f7a1-bf6a-46c9-b331-374ca728dd38"
        },
        "item": {
          "id": "e27eb743-e7cd-48a5-9152-f28b716b3e2b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2e6565f1-ec6d-4558-9b2f-4f359920e337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53321c41-716d-440b-981c-fe7baf17b643",
        "cursor": {
          "ref": "c701d6f1-b47d-4b2d-b36b-44d32595ebdb",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4013786e-5ef3-4c15-90bd-0e146d91d451"
        },
        "item": {
          "id": "53321c41-716d-440b-981c-fe7baf17b643",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3d171bf4-8da4-44f7-a494-ef17853eb0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04524b7c-7a8d-46ff-a8b6-bb5825753c45",
        "cursor": {
          "ref": "2b38144a-6f9d-4e8a-8318-211ad7b3b8b0",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f61011eb-d660-41b7-8fb4-28b4096ebe52"
        },
        "item": {
          "id": "04524b7c-7a8d-46ff-a8b6-bb5825753c45",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "be2217ec-1a1a-479a-a2c7-6561f5674c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd9cc2d-9e39-434e-ae0f-79c87bf9d409",
        "cursor": {
          "ref": "0d26afe2-7eaf-46c1-9145-481a380e561c",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c9140941-5064-46a6-8a0d-5450e787daa2"
        },
        "item": {
          "id": "7fd9cc2d-9e39-434e-ae0f-79c87bf9d409",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d1aca68a-2fb4-45f1-9b21-7027ddfe73e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39c7fcf-189f-4545-9767-26a720ee544e",
        "cursor": {
          "ref": "53ae0ac1-2041-472a-bb3e-ba8654067f04",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1552b4fb-1a28-4bb4-bcec-acdb66bb5e52"
        },
        "item": {
          "id": "b39c7fcf-189f-4545-9767-26a720ee544e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c1465333-5f3a-4fbd-b35a-920effbf269e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f903377-9a26-479c-9b22-b910747ac295",
        "cursor": {
          "ref": "9516bd4f-9b17-4677-8f3d-bcab3e7748d5",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8d64325d-a1ac-4b0a-8d96-3e0acc918552"
        },
        "item": {
          "id": "9f903377-9a26-479c-9b22-b910747ac295",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "352d23d5-f914-4f38-8909-3e6857758024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e4b6ee-143b-4883-952e-b77538784d60",
        "cursor": {
          "ref": "0f13e173-ce3e-4b48-8230-2cf2784d6985",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "684ec391-79ee-40e4-8842-db7571aadfa1"
        },
        "item": {
          "id": "c0e4b6ee-143b-4883-952e-b77538784d60",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8f0bcf1f-1352-4d81-8c03-5146c8878175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7b738b-03dc-4cf7-aad9-23daf7e02903",
        "cursor": {
          "ref": "8d3412b9-8a2a-42f5-ba62-4a2bcbf2ce99",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "63e49068-0a75-4ff8-85c4-62f96189f74f"
        },
        "item": {
          "id": "5b7b738b-03dc-4cf7-aad9-23daf7e02903",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "388b9a0f-2a7f-4565-8ff8-7ed9731641d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5bad6e-1f6a-4ff8-ad11-ca9c91cd549c",
        "cursor": {
          "ref": "632bd0fb-24cf-43bf-af7a-10e680f49aa2",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "bd1e741e-fe14-4cba-bcb2-dc31a24ffdcf"
        },
        "item": {
          "id": "2c5bad6e-1f6a-4ff8-ad11-ca9c91cd549c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "341ecfa4-5b58-43e5-b9ad-aa1399d41690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d42ab20-3e8e-4fc1-bb4e-b96bd777d70e",
        "cursor": {
          "ref": "dea51a3e-f48b-4e6e-a93b-7aa93c31d9a5",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6065eecc-e11c-4295-b4d3-9fd4c89337cf"
        },
        "item": {
          "id": "1d42ab20-3e8e-4fc1-bb4e-b96bd777d70e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "00f0aaa0-2c33-474c-ba1c-dfd6981f90b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718eef74-c511-47da-b917-d9d32d171a60",
        "cursor": {
          "ref": "73d705e8-597e-4a5d-aaca-7783e8ebe572",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5a1d0111-ed09-4e44-8dd2-dfa12e9b62b0"
        },
        "item": {
          "id": "718eef74-c511-47da-b917-d9d32d171a60",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a4fd7a1f-bf49-4408-89ec-48787fd3965f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb2a814-30cc-49e4-875f-c34ac3f83deb",
        "cursor": {
          "ref": "84bf3b88-3929-47ed-ac93-5f14188c1bd4",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5e000f89-e035-4a32-b165-28fd075f9b40"
        },
        "item": {
          "id": "7fb2a814-30cc-49e4-875f-c34ac3f83deb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "32d2931b-17d0-4ae9-a1e2-06c236473660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1f69f4-1bb5-45c9-a198-f516fe976c17",
        "cursor": {
          "ref": "f463abcb-5ce2-4f6a-9c13-630e79cc0eeb",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "abc500c3-c479-4af3-9dbd-7f5c8abdc550"
        },
        "item": {
          "id": "4f1f69f4-1bb5-45c9-a198-f516fe976c17",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "57534cfc-ad81-44b5-84bc-25307f7ca1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dae0e5-c23c-4960-a59a-d0bca37bc40b",
        "cursor": {
          "ref": "09c79c59-804a-443f-b2f1-92d20df2fe30",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d6a0f7b4-7570-49ae-9c5e-c16ce1f19918"
        },
        "item": {
          "id": "e4dae0e5-c23c-4960-a59a-d0bca37bc40b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "221ea283-5314-4278-9367-e1121a1d576c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cadcf74e-a6ad-44b8-afec-3747f9e120cd",
        "cursor": {
          "ref": "a0c180bd-38ca-4bfc-961a-919f070d4dc9",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "30cb545a-f426-473d-b505-8e3cbdd2b079"
        },
        "item": {
          "id": "cadcf74e-a6ad-44b8-afec-3747f9e120cd",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "376fdf53-91fc-4395-b721-78fd1483c2da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a388b6e0-d128-478e-955f-a78c714ead1a",
        "cursor": {
          "ref": "e00db13c-ba56-4f41-b840-dbdf12b340ba",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1b0cf03e-7945-4f05-84cf-c7b85585693e"
        },
        "item": {
          "id": "a388b6e0-d128-478e-955f-a78c714ead1a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f65e34c6-9584-405e-bd98-975cb0affc85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9005bfd-6231-4a49-bb69-ab8ed26bf049",
        "cursor": {
          "ref": "8b9e6453-6ee8-4cf2-bb90-70873e5aa41e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0618a0a7-7fa0-419d-b36a-22624746f6ef"
        },
        "item": {
          "id": "d9005bfd-6231-4a49-bb69-ab8ed26bf049",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d9a221fd-f022-4767-afc2-b256edabcc3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87917666-a90d-4912-ab78-292352b3099a",
        "cursor": {
          "ref": "a3a182ac-c04e-47bd-a12a-85b8e68f9ba5",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "da53bb56-40ca-4fc0-a0e5-775d1b4640a5"
        },
        "item": {
          "id": "87917666-a90d-4912-ab78-292352b3099a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "24ec8226-1e71-4cb2-a025-c624c6fb350b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0052e6-1b9b-44da-95bd-e10e58c4de16",
        "cursor": {
          "ref": "78825dea-2c96-4963-a0a3-3c0373d879f7",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "56337051-a445-4ab1-b9e2-4f881e5bd0c1"
        },
        "item": {
          "id": "7a0052e6-1b9b-44da-95bd-e10e58c4de16",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a904275c-514b-427e-8a7c-6afebd8dc9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2bece3-aef8-4ef7-b6ab-c72066770eb4",
        "cursor": {
          "ref": "2b44ee6d-d70a-4867-b8cb-051a71aa66a0",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d0707ca7-2030-453a-be15-4e66eb70786f"
        },
        "item": {
          "id": "8f2bece3-aef8-4ef7-b6ab-c72066770eb4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b1584eda-5850-4fff-886b-584a21c56696",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e808368f-4ea0-4257-ba5e-00b0b9906c40",
        "cursor": {
          "ref": "5c8505eb-6881-4e6d-a6a0-98068de07036",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5d2f875b-7e0d-47df-9f93-eb3f8e0df5f9"
        },
        "item": {
          "id": "e808368f-4ea0-4257-ba5e-00b0b9906c40",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "7ed2abfb-b920-473e-aeb3-8f744c9c9684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ce02d97d-8a4f-439a-9cff-b57753750904",
        "cursor": {
          "ref": "36a3e267-81e9-4fc6-a6c9-a70db7c6bf63",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "dea357d3-2792-4de3-bdb3-6066a30f3b2e"
        },
        "item": {
          "id": "ce02d97d-8a4f-439a-9cff-b57753750904",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9e73a40a-8935-4f32-8d7a-0769bac17c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "e31f2883-1784-4185-bd22-a5268c837748",
        "cursor": {
          "ref": "2b3cf17f-c974-4296-b05d-fd128682b6c7",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d0912b42-a22a-4dc8-9113-28ec9f253e83"
        },
        "item": {
          "id": "e31f2883-1784-4185-bd22-a5268c837748",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6e6d2338-9d2c-4b5f-89ab-77a6c379e0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "54de4e91-8fcd-42b8-9439-57acda6b52e4",
        "cursor": {
          "ref": "526c980e-db7c-459a-8ce0-a2b55aa8c26f",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d3a006d9-08ed-401c-bd3c-2a826fc45ba4"
        },
        "item": {
          "id": "54de4e91-8fcd-42b8-9439-57acda6b52e4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ec269277-5e35-4820-982b-2ed220eef8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "d95d67b7-6b86-4931-9297-aa490321df4c",
        "cursor": {
          "ref": "9cea1eab-ffa2-4a96-b0ea-656cbd027230",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c79ff1c4-263b-486a-b96d-2c27ad180dbb"
        },
        "item": {
          "id": "d95d67b7-6b86-4931-9297-aa490321df4c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4bbd6de2-7b7b-422f-acea-db626c013aa7",
          "status": "Created",
          "code": 201,
          "responseTime": 9368,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed5b2b1-0bdf-4c9a-ab4a-475939eab4cb",
        "cursor": {
          "ref": "80044d28-33e6-4e6e-b312-842a82bbb49c",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bffabbb5-e14e-4da6-82c0-dd46981e8a49"
        },
        "item": {
          "id": "6ed5b2b1-0bdf-4c9a-ab4a-475939eab4cb",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b5f5d500-954e-43cc-8f17-dd7189ed7718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "50c129fa-08d4-4eac-9ccc-3f3c235ef41d",
        "cursor": {
          "ref": "dab9df52-3a31-4441-888f-94068e16b187",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c20ea044-6c69-41c2-b2ab-a11118b0ec8b"
        },
        "item": {
          "id": "50c129fa-08d4-4eac-9ccc-3f3c235ef41d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e4df7680-f061-4c3f-bc49-08db8956bd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d6d7ac6c-4801-4eb6-a753-26cb7be928fe",
        "cursor": {
          "ref": "ea6c3911-215d-470a-bde0-5a1d157ec1de",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "02ca10b2-b0e6-4729-a32c-862608052a3e"
        },
        "item": {
          "id": "d6d7ac6c-4801-4eb6-a753-26cb7be928fe",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7e7a2764-8c28-489e-af69-8f113d9abdf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44abfd7-9511-496b-825c-0b87725f2262",
        "cursor": {
          "ref": "536fb1a8-9733-4f7f-8371-fc61c64b27d5",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d30364b2-3bad-435a-947e-9da2163c5be6"
        },
        "item": {
          "id": "d44abfd7-9511-496b-825c-0b87725f2262",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e23452cd-5659-4c32-a948-6fec30eb17ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e66e6b8-2189-4710-9301-a113c1a3db05",
        "cursor": {
          "ref": "5f303e1c-4675-4b5c-ba0e-14e6777583fc",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "21fc3c2f-303c-4327-b283-9ca960a159af"
        },
        "item": {
          "id": "1e66e6b8-2189-4710-9301-a113c1a3db05",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "19537f70-9532-4129-826d-6a881db2d5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d26f1e-5b37-4112-968a-d4a6f9706d02",
        "cursor": {
          "ref": "ee379824-9ca4-4be8-92f2-77e88a031888",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a45d7fd2-0947-405b-b87c-a8c1731f360f"
        },
        "item": {
          "id": "f2d26f1e-5b37-4112-968a-d4a6f9706d02",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "835ba4e5-27f2-4c8e-8b0a-e83150094cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52464037-8abf-4c0b-ac4b-34211518e044",
        "cursor": {
          "ref": "8262a005-09f7-476e-8f83-f7f9bb119ce8",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3f84ec4c-7518-478b-8978-69b98bb50540"
        },
        "item": {
          "id": "52464037-8abf-4c0b-ac4b-34211518e044",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "22ac2842-c505-4d87-9035-5b7eeaab9b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07d4842-80eb-418f-9883-abefc7ec2818",
        "cursor": {
          "ref": "dcaffb3a-96b9-4291-adba-f9300b0cd95c",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a00449f2-0538-4f36-b5b9-0c8617d3739a"
        },
        "item": {
          "id": "d07d4842-80eb-418f-9883-abefc7ec2818",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "03e226bf-1e47-4cb1-aa19-9e31c59a119b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911fe129-b6d7-4462-b13e-1d02634a2112",
        "cursor": {
          "ref": "61d60ba2-30f9-4a4c-812e-3d2567be623c",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "70253d56-c114-49b9-9d2b-e188e0a105fa"
        },
        "item": {
          "id": "911fe129-b6d7-4462-b13e-1d02634a2112",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "74906021-d65c-4779-8911-5bf0d1c2d96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af07220-7231-4d1e-93ce-88cffffef113",
        "cursor": {
          "ref": "b174ea5c-406b-46a2-97db-0996ab2c0e7e",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a3856a34-1e4d-48de-95d2-f6fab7e98aa5"
        },
        "item": {
          "id": "0af07220-7231-4d1e-93ce-88cffffef113",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "50a001c1-eecc-42c5-8967-6f1416086aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec102d32-ddd6-47bb-a119-ada760cd1fea",
        "cursor": {
          "ref": "43c93e5f-4eb7-451e-b85c-01c79957345f",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8bd8df96-445c-466c-bcda-78e1bb6fd507"
        },
        "item": {
          "id": "ec102d32-ddd6-47bb-a119-ada760cd1fea",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8e60456c-1143-4cc9-94c4-cd2836519dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf7e215-760e-4fbc-b0f5-4c90406eb2a7",
        "cursor": {
          "ref": "b1cfb41e-4c26-4148-861f-9719f3a217b6",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "86ffc7f2-2f81-432d-9725-714f23ae9bd5"
        },
        "item": {
          "id": "0cf7e215-760e-4fbc-b0f5-4c90406eb2a7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c66b5d38-0773-4748-8be7-9c3c97b67d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd46a8b8-9e8c-4a24-8155-4834d0fe7978",
        "cursor": {
          "ref": "f43b40e4-f719-43ab-97f5-c61baa827085",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "990c191b-9e16-4f89-8fab-b1d08c21aebe"
        },
        "item": {
          "id": "dd46a8b8-9e8c-4a24-8155-4834d0fe7978",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0e853b0f-85fa-4f12-9d5a-2cc592d2b4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce949e6-e829-4351-ac90-86b61cb744de",
        "cursor": {
          "ref": "77252d8b-9de7-438d-bc7b-2dbf5462f6b8",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cd62d6c3-9bb1-4942-8ed9-a619f99541df"
        },
        "item": {
          "id": "0ce949e6-e829-4351-ac90-86b61cb744de",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "510f8522-9ef9-4d68-8169-48b28afcc59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285758f0-cc8b-4bb4-b1e7-fe3c91a5ee22",
        "cursor": {
          "ref": "d76ca07f-bae7-463c-b94c-a719f6c83892",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bda45723-c358-4b11-a2d8-6d514eb2c82d"
        },
        "item": {
          "id": "285758f0-cc8b-4bb4-b1e7-fe3c91a5ee22",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9f5bd438-98aa-40b0-9375-1eb69e2603d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e071daf-50ce-41f1-8f84-97c5ff91af39",
        "cursor": {
          "ref": "7e43c716-98af-4882-9471-bab651a60bd3",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0e8653e5-870f-49e1-ab86-361b3558af21"
        },
        "item": {
          "id": "3e071daf-50ce-41f1-8f84-97c5ff91af39",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2a2a1fc1-bdee-4b1d-a927-f25814b34d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe7b066-bc1e-4c2e-94b2-5458961bb6bd",
        "cursor": {
          "ref": "7253b910-769a-4e6b-8840-528e972d253e",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4ded7b48-97b7-4916-95ee-6aa1e952f35e"
        },
        "item": {
          "id": "ebe7b066-bc1e-4c2e-94b2-5458961bb6bd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8e48f466-d863-4ee2-8148-d243ee3de9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83e3497-5d2f-406c-983c-0fc17bf67cb6",
        "cursor": {
          "ref": "50d8856e-ddea-48af-ac49-4e384307e517",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6f84f0ff-5a34-45c8-a959-ad9b411ba304"
        },
        "item": {
          "id": "f83e3497-5d2f-406c-983c-0fc17bf67cb6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "64d99283-2e89-43f2-97e2-0326c0bdb4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd6e8ba-d62b-4a3e-88b4-d12613ba117b",
        "cursor": {
          "ref": "8367c044-5395-4219-a7f1-cbcd10db382d",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e057fdaa-3394-4db5-8cb4-5c0d5e2f2ce4"
        },
        "item": {
          "id": "2bd6e8ba-d62b-4a3e-88b4-d12613ba117b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d4b0370d-abd3-4b78-a7e9-cfff2594a073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b1fe23-651c-40ca-af7f-ec4565c0c9fa",
        "cursor": {
          "ref": "7eb72cc5-62e0-4d9a-abe0-f79344011dbf",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ad042653-9dce-43d4-b836-ebff9806995d"
        },
        "item": {
          "id": "d5b1fe23-651c-40ca-af7f-ec4565c0c9fa",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "62407086-72e3-4137-aa27-17be20635dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b38373-69f3-44e0-8f76-9e61721ad0f4",
        "cursor": {
          "ref": "addc7792-3a32-4769-bd48-bf3f6fd73f16",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c65b7d31-5a57-4e99-940f-243048b03609"
        },
        "item": {
          "id": "17b38373-69f3-44e0-8f76-9e61721ad0f4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1e5b3300-4af5-4356-aaf1-1ba270399bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf15ac52-c84b-40d8-9242-3c23d3c27080",
        "cursor": {
          "ref": "0ccb7147-adc7-4d10-97c4-c218c795cdc9",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "69d2bf4c-7b0d-4457-af8a-60868ef0a46a"
        },
        "item": {
          "id": "cf15ac52-c84b-40d8-9242-3c23d3c27080",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1dd2fa19-ce24-4760-ad87-614a5dbcde36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfc9763-69a2-4a49-bb35-c364df124a0f",
        "cursor": {
          "ref": "8171b5b3-5197-43cd-90ee-106781ca1eac",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "55022011-fe94-40f0-8a14-ab964c6a82d7"
        },
        "item": {
          "id": "9dfc9763-69a2-4a49-bb35-c364df124a0f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "28dad5eb-9a97-45fe-b953-66b31184165a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f33271-27e8-4fae-b16a-edd4e5d63dd2",
        "cursor": {
          "ref": "5b65e874-9605-4590-adbe-0e8095946f09",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "486cd022-3a6a-4eac-85c2-161fc04b5667"
        },
        "item": {
          "id": "e9f33271-27e8-4fae-b16a-edd4e5d63dd2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "db68bf33-70c8-4101-841c-f5b9eae57339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f902ec1-9290-4063-abfc-ab1b7699a6c7",
        "cursor": {
          "ref": "cad557b4-693a-4477-807b-2ba7ec7cb275",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d2ecc8bd-85a7-4233-a0c7-d199a2552031"
        },
        "item": {
          "id": "2f902ec1-9290-4063-abfc-ab1b7699a6c7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e2c8bef8-ae5e-4c7f-b724-c636718a20c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16db95b9-8fdb-4745-ac1e-6d7b7cfbb5e8",
        "cursor": {
          "ref": "27c8c2ed-a503-41ce-8227-ecc4fe5a74c0",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "393385f3-b266-4df2-bd92-0120ec76264e"
        },
        "item": {
          "id": "16db95b9-8fdb-4745-ac1e-6d7b7cfbb5e8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6e852443-463b-40ae-a204-fcc29d5defb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f02770-fd20-4603-af05-1f1371a01a99",
        "cursor": {
          "ref": "09740ee7-6b91-493a-82fa-b155387bd1e8",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "233f214f-fd0c-44ad-b549-cb5614e1c0f5"
        },
        "item": {
          "id": "a6f02770-fd20-4603-af05-1f1371a01a99",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "02241cbb-0705-4c86-b3d0-07c3408beabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e76b72-df5d-44ae-9a77-d98c5e5be1f3",
        "cursor": {
          "ref": "cb38a7ae-5b34-4840-911c-377d9708afde",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "185e9de4-a1d4-48b0-800c-d9eb18c695ee"
        },
        "item": {
          "id": "e4e76b72-df5d-44ae-9a77-d98c5e5be1f3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5a487cf8-1af1-41f5-93e3-66c5a276175c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbea72fb-e9a0-4ed4-b3ec-a32e3bad861d",
        "cursor": {
          "ref": "c443b4cb-1eec-4fc0-8069-184bf87f9f89",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5708e55e-5870-409c-8abb-28d8ba9a1e8f"
        },
        "item": {
          "id": "bbea72fb-e9a0-4ed4-b3ec-a32e3bad861d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2bfcb0d4-9a59-4548-817d-3139b43af3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f3d155-2c4a-4981-95f4-9c3179149eee",
        "cursor": {
          "ref": "3b86ae8a-8295-4788-9d1b-7ec4cbb6ecf1",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "08a2670a-6e8a-41bc-85f9-989024c8f958"
        },
        "item": {
          "id": "06f3d155-2c4a-4981-95f4-9c3179149eee",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8b8a6597-883a-49b7-9128-4097efecbaa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5fcb20e-a412-44db-ab7c-3f3306176830",
        "cursor": {
          "ref": "924d6a10-c380-4d64-9927-ac5f7ca309a9",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "492f9ca2-b60d-4850-a0db-582670a7b381"
        },
        "item": {
          "id": "f5fcb20e-a412-44db-ab7c-3f3306176830",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2db35383-8631-4a98-b734-3627228aa258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30128a2-5613-4c14-a5c2-b184602e62d8",
        "cursor": {
          "ref": "fdb3d93b-6795-4b18-9f25-6ed7d536dea5",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e390298f-0c9d-4a30-9d23-9f3955a80148"
        },
        "item": {
          "id": "e30128a2-5613-4c14-a5c2-b184602e62d8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b897e61f-cb8d-46cc-9517-f9ba93abc965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76cfba6c-a7ae-407c-95f2-a4ed80f85e13",
        "cursor": {
          "ref": "86d3cd13-7794-4320-afb2-739474909c78",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4d378bcb-24c1-4f8d-ae15-e20accc358f1"
        },
        "item": {
          "id": "76cfba6c-a7ae-407c-95f2-a4ed80f85e13",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "995a28e4-d03b-4a59-989b-65e35798f5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5660c97-4d56-424b-99ff-76c0755e09c9",
        "cursor": {
          "ref": "4a69a7be-55f3-4567-ba3c-0ea3e240b626",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "311c9123-83a5-4872-bb0a-67cfc464516d"
        },
        "item": {
          "id": "c5660c97-4d56-424b-99ff-76c0755e09c9",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "749d437a-7012-4364-9443-12eeaa0a7b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c68c2e5-0440-4522-8da9-117ee326a844",
        "cursor": {
          "ref": "8b7bfe40-283a-474c-9487-2e196e67cae7",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "07392804-addb-4a4e-b70f-20ed71497ede"
        },
        "item": {
          "id": "9c68c2e5-0440-4522-8da9-117ee326a844",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bdae6246-a02c-43b3-8d5a-9180a4fb3bd5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b667188-74e3-465a-94e2-d36747f77679",
        "cursor": {
          "ref": "ae71a4d8-9eab-4da6-a909-45197abb3774",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "88fe8d47-5436-4f99-bcb8-1f1a20575c92"
        },
        "item": {
          "id": "5b667188-74e3-465a-94e2-d36747f77679",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "23b5999e-cfc9-41aa-b6a0-ae97a1574caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae52d423-9877-46c6-9d67-fad62d1db9e3",
        "cursor": {
          "ref": "8902f230-14d5-429c-a6c7-129d8ebc3af4",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a022b2e7-4d14-458d-83b0-149feed4dd6d"
        },
        "item": {
          "id": "ae52d423-9877-46c6-9d67-fad62d1db9e3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "58ec4382-20a6-4d80-8eec-e91833c8d570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b4d23a-e265-4a80-bca1-e5c402bcca2a",
        "cursor": {
          "ref": "e8760557-2add-4c4e-b2af-649450ef2a79",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0133ef77-bf12-44c0-a965-199894f1c03c"
        },
        "item": {
          "id": "03b4d23a-e265-4a80-bca1-e5c402bcca2a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a4bddf31-82bc-458c-9a00-9374b1aac8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98699e0-4a38-410a-89f6-93757e883929",
        "cursor": {
          "ref": "05ec6652-dacd-4148-91c6-135478926b25",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3bc865e1-64f1-4186-b757-bb2595ca1b46"
        },
        "item": {
          "id": "e98699e0-4a38-410a-89f6-93757e883929",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "67a47ece-8b23-4303-8603-1e15c4a2f51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ffccf7-afa8-4e4a-8b4c-fe008c612adc",
        "cursor": {
          "ref": "42e01c76-13cb-4a79-8038-04c2cb06f5e6",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9ee9bc06-4c05-4748-8b68-93744a6da4c5"
        },
        "item": {
          "id": "15ffccf7-afa8-4e4a-8b4c-fe008c612adc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "74e7908a-ebbc-4ecf-a057-888d3e37d30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55660dc-35ec-47dc-bde8-3c0a940a9cb1",
        "cursor": {
          "ref": "31a5cffd-8314-43ec-895a-6a042453e84f",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7c2a19bd-8fa2-4474-940a-dfed748cf037"
        },
        "item": {
          "id": "c55660dc-35ec-47dc-bde8-3c0a940a9cb1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "af21bbe8-54da-4e36-9ea0-faf2606ddaaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b555f2e0-a986-424e-b64a-5862ea003a8c",
        "cursor": {
          "ref": "e777d542-50b0-4260-a751-5142ec521dde",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1f0ac04f-095f-4a2c-bb40-162aaea77db4"
        },
        "item": {
          "id": "b555f2e0-a986-424e-b64a-5862ea003a8c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "844ad22c-d3a3-490b-81a4-250f9c32c318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe386c76-9cfd-4ee8-8dfb-4d770d0a5fc4",
        "cursor": {
          "ref": "64686410-5f56-4956-8285-0cd1357a261e",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d9c9c5e2-5296-4d12-bb9b-0991aaf8cf02"
        },
        "item": {
          "id": "fe386c76-9cfd-4ee8-8dfb-4d770d0a5fc4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6f4555d2-76e7-43be-b525-886c86f9bc07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d32851-9ec5-412a-9f83-606a1ef5c22a",
        "cursor": {
          "ref": "5430e0e2-7beb-4669-a10c-06523087b635",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "11ee0c98-7000-4669-a353-b34ccaad568f"
        },
        "item": {
          "id": "69d32851-9ec5-412a-9f83-606a1ef5c22a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "47afccd0-c95c-4c9b-b0c0-6d594ced18e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c906fe-b428-4b6b-9b6a-129e826e192c",
        "cursor": {
          "ref": "d3b9ff1e-54e8-4592-be22-2b915ce025fd",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "60de1b86-89c6-4992-8db0-e303af98a638"
        },
        "item": {
          "id": "59c906fe-b428-4b6b-9b6a-129e826e192c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f8057222-5107-41f9-8c1c-6538abcaa2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17abb59f-e262-4fba-8e2e-c636eed1a1e0",
        "cursor": {
          "ref": "0eeaabc7-34ea-40a9-be39-aa7cac70d268",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "57237cee-d2f2-42d3-9706-c72a79814d35"
        },
        "item": {
          "id": "17abb59f-e262-4fba-8e2e-c636eed1a1e0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c64d19c0-e298-4ca2-8698-422e4ce1bf2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad64d55-87cf-4e5f-8ee9-03f3ec30e455",
        "cursor": {
          "ref": "2eb88343-fbe2-4161-a740-b0201313c415",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b8fd14e1-3e6c-4c5c-85e5-b6e63decd512"
        },
        "item": {
          "id": "0ad64d55-87cf-4e5f-8ee9-03f3ec30e455",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "108dac83-c739-4112-9ba9-3628539ac606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1bfe70-3334-4d34-bba1-82b8a8d271d1",
        "cursor": {
          "ref": "5a9999bf-65de-40f1-9295-63ef106f5e1f",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5a8f3d10-b433-459a-8c2e-f60681012375"
        },
        "item": {
          "id": "1b1bfe70-3334-4d34-bba1-82b8a8d271d1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b05b3ffb-0ccc-4797-abfc-12ef43a74944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1ac0b7-1ec0-4e22-ad17-ef8a55590f53",
        "cursor": {
          "ref": "a841bacc-ac2c-4515-973d-ed6d9f82afe5",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b71a2c77-55dc-4022-8b37-584c2d42fcfc"
        },
        "item": {
          "id": "ec1ac0b7-1ec0-4e22-ad17-ef8a55590f53",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "794750d8-f1e0-481d-a88e-40955ce49873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2361a2-f6a2-4184-b11d-f54efa3cfaee",
        "cursor": {
          "ref": "9ceafb40-c5eb-4b2e-acaa-8df07eed8172",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fbbdf052-57e8-48b7-9a97-3d4c8cc4853c"
        },
        "item": {
          "id": "fa2361a2-f6a2-4184-b11d-f54efa3cfaee",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5278fcb2-8cfe-410d-bbcc-413ee5ef2bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0d9811-956e-4701-8767-68a635df4d4a",
        "cursor": {
          "ref": "9c5be4c9-b910-4b65-8cb5-a500280c39a0",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ad55209a-0f4a-4401-815b-2afc975d37eb"
        },
        "item": {
          "id": "af0d9811-956e-4701-8767-68a635df4d4a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4b80bd6e-6283-479c-941b-6c133d958f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c012c8fe-8f39-422f-8d13-1a0d8205dfc2",
        "cursor": {
          "ref": "96de4583-2208-44da-8b76-3a6549478815",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4889fbd4-04c2-442c-b766-4b3283a0b190"
        },
        "item": {
          "id": "c012c8fe-8f39-422f-8d13-1a0d8205dfc2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "74f84c65-1252-4438-84bf-8fdba3295ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc3674c-a658-4788-9d5d-26f229225238",
        "cursor": {
          "ref": "f23c8728-4aaf-41a6-8ad7-a3f1c953a5f3",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "acb692bf-acdf-4aa0-9b32-e644aab49c95"
        },
        "item": {
          "id": "4fc3674c-a658-4788-9d5d-26f229225238",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "13908b24-7931-4b6d-b2d5-8f56cd1ae683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb8b9aa-d336-4602-84a6-4dfa20266d7a",
        "cursor": {
          "ref": "26dca45c-fc68-4e8c-97ed-1a1ad18ba597",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "77a22097-cb37-48b0-9bc3-a6736eece4b2"
        },
        "item": {
          "id": "abb8b9aa-d336-4602-84a6-4dfa20266d7a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f8fd8376-4ef7-46f6-a843-f7cf1b91c840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff360ca-12a2-482e-9680-37796e321763",
        "cursor": {
          "ref": "b7abdb08-3a07-4965-bfb3-775a3ac34c5a",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7babf4de-44f8-4fb3-9bb8-bd1f384a3c83"
        },
        "item": {
          "id": "9ff360ca-12a2-482e-9680-37796e321763",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "04b92fd5-3ba7-4091-9a49-e1e262967585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f0aec3-19d1-4fb8-99ed-9fac1d0fae8a",
        "cursor": {
          "ref": "adc7106a-86f0-4847-906d-10fb94d5d573",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9a5d44f2-35e5-4fec-81a4-75ea1f904cf6"
        },
        "item": {
          "id": "88f0aec3-19d1-4fb8-99ed-9fac1d0fae8a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "11baa9cb-2bd3-47cc-ad90-e90915cdfd87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043f7d2a-e9a4-4b00-a076-efc8302ceae1",
        "cursor": {
          "ref": "a339bc2b-7a0a-4060-92d1-5a18d0bd1508",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c2a927e1-121b-4fae-bdf5-f623d419908c"
        },
        "item": {
          "id": "043f7d2a-e9a4-4b00-a076-efc8302ceae1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "485deaab-ef59-4c74-a05b-461d885d976c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c708c9bf-b3ea-4754-aba6-c8d847c3f5b2",
        "cursor": {
          "ref": "77acfb8a-5dc0-41e0-aa3a-35c0ab53de8f",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "83ce91e4-7164-4f33-80be-b6a6aafb4e5f"
        },
        "item": {
          "id": "c708c9bf-b3ea-4754-aba6-c8d847c3f5b2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0adbe955-232e-4f8d-a21b-186c9cbe5467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078a3ad0-4dee-4d52-b2f1-62f64e12dc55",
        "cursor": {
          "ref": "6313614f-53a0-4536-ae0f-51b0e6768c5e",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3077c980-c494-4d89-ab1d-7d84413870f9"
        },
        "item": {
          "id": "078a3ad0-4dee-4d52-b2f1-62f64e12dc55",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0be4f01e-4f6f-4dae-b35c-a213b69f363f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd70476c-fbd2-4560-8dd9-482f703dc625",
        "cursor": {
          "ref": "29670398-a075-4162-b77b-d79aa6e9a812",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "76f09867-ffe2-4301-8460-810234f41ec2"
        },
        "item": {
          "id": "fd70476c-fbd2-4560-8dd9-482f703dc625",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e895ed30-1135-45d8-92ff-346863302cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240cecd8-0d2c-4131-bb72-754e634ba547",
        "cursor": {
          "ref": "1d574c4a-ffc6-42d0-abf3-b367b852fa2d",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "34d89f39-3e6b-4646-8d51-6e12b51992b8"
        },
        "item": {
          "id": "240cecd8-0d2c-4131-bb72-754e634ba547",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "906f9288-71fd-45a9-a7e2-457662df7db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdb90b8-d15a-4dfc-9660-1321d0dfc26e",
        "cursor": {
          "ref": "a385331c-138d-46a8-905e-ffb73cf1087c",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "80193c56-29ee-4ba0-b678-07c6aad15adc"
        },
        "item": {
          "id": "1bdb90b8-d15a-4dfc-9660-1321d0dfc26e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a8099549-01c1-4283-b995-030617788d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ba4240-0006-482d-bd3c-1a0265507a51",
        "cursor": {
          "ref": "988e082d-f059-409d-b7b9-8b8eda1b4d17",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "16b65c0d-52e7-4f54-a647-a6b37a2782f9"
        },
        "item": {
          "id": "59ba4240-0006-482d-bd3c-1a0265507a51",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "749c16c3-a567-4e27-b3a2-feab28d9a9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8ece9d-cabc-46e7-b268-38efd0107bd7",
        "cursor": {
          "ref": "dcc8b9fe-8c8f-4605-a2f6-e33b8338cf49",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5e1d574b-8513-44b3-ad96-fb14bbc68906"
        },
        "item": {
          "id": "8f8ece9d-cabc-46e7-b268-38efd0107bd7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a4961944-3ba9-4481-a577-d9892088a9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d36542-6ae2-44ec-a7a7-ac0f1ae32712",
        "cursor": {
          "ref": "188a1abb-3950-42e0-a851-092e99c8aecc",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "98a565d8-eeac-411c-b96b-20d4ae6d9bd2"
        },
        "item": {
          "id": "a9d36542-6ae2-44ec-a7a7-ac0f1ae32712",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d070ba42-7208-46d5-8984-ff92a9ec3b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39715be-cb67-450a-8ffe-757639bd34ce",
        "cursor": {
          "ref": "c44fd121-5a99-47bd-baf3-cb7a2d32fd2a",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7ca9d2e0-a675-4434-83db-a494546f9168"
        },
        "item": {
          "id": "c39715be-cb67-450a-8ffe-757639bd34ce",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b5829aba-fe07-4b53-8a8e-864eecf7636d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503418a2-3438-4b93-b9da-5f1b6ed309b3",
        "cursor": {
          "ref": "570b126d-697c-415c-aab5-4243fa0475ac",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9736065c-3f64-4a2d-a374-81bd9324fd35"
        },
        "item": {
          "id": "503418a2-3438-4b93-b9da-5f1b6ed309b3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "10a90682-3333-47b4-9514-3614d4affde4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70404a4a-31cf-464b-b86c-e6b5f8b96754",
        "cursor": {
          "ref": "26495700-2699-4225-a01a-698a7fcd13eb",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f90a04f5-70ec-4de5-8669-49be3f08caad"
        },
        "item": {
          "id": "70404a4a-31cf-464b-b86c-e6b5f8b96754",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c39c2ec6-2505-41dd-a673-ddf0b341c735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b67daa-9a73-47cb-b0b3-523de6b96208",
        "cursor": {
          "ref": "d3519371-32f7-4bc7-a098-5ca5de0d63a7",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fd4527d7-4e04-4601-a871-8511861cf904"
        },
        "item": {
          "id": "c8b67daa-9a73-47cb-b0b3-523de6b96208",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b70ac737-70b5-459d-acf7-374d2bcaa762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7296f09-2e0a-473e-ac17-39caf5be6305",
        "cursor": {
          "ref": "d9fef336-4000-4c22-b300-6f4ff36365dc",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e627f3c5-1fb2-4d36-a7ad-9b356b464f6e"
        },
        "item": {
          "id": "f7296f09-2e0a-473e-ac17-39caf5be6305",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "35253637-e5e3-4119-9047-ecb431eccd4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e058d20-6314-4c37-a852-fe610e2ec6ff",
        "cursor": {
          "ref": "b10e2c80-086c-4ed6-b884-dc510b02d3bb",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8ba3d2a2-dff1-493a-9517-27bd1d9972d0"
        },
        "item": {
          "id": "8e058d20-6314-4c37-a852-fe610e2ec6ff",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3454c98a-4f19-4335-8a20-0cf736eb9758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acf3365-a803-4756-a952-563a70c8bbee",
        "cursor": {
          "ref": "3da3abea-173f-4429-a99c-01c8da113e00",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3bfe9c6a-4f60-4e2d-aa56-db616523df7c"
        },
        "item": {
          "id": "2acf3365-a803-4756-a952-563a70c8bbee",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7da420d5-4c37-45d7-b6c6-2682ac2e9864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb08b15-d040-4341-9efd-c055840954d2",
        "cursor": {
          "ref": "2aa2b293-de1e-47d1-b056-40d265ed9c21",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "72041ea9-4096-4cf1-9c0f-4c5c7d120ce4"
        },
        "item": {
          "id": "1eb08b15-d040-4341-9efd-c055840954d2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d358321b-5888-40fc-80c4-ba42c94c744e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd72816-7540-48d9-aa55-4d2f3c1da00c",
        "cursor": {
          "ref": "dde8fa04-815c-4bb6-914f-d8cb3c06f2af",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cdc536e4-971f-43df-b356-dd1bfb402031"
        },
        "item": {
          "id": "9bd72816-7540-48d9-aa55-4d2f3c1da00c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fdf62917-7815-4298-964c-c13d108bbd43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873a8d36-0709-4f3c-9eb0-9725713de6a1",
        "cursor": {
          "ref": "c02ba7a1-5192-48d6-9da5-8594852f09d2",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1bf3bf7e-1a18-4aea-81a0-8caa313141a8"
        },
        "item": {
          "id": "873a8d36-0709-4f3c-9eb0-9725713de6a1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e22b00cf-8e1b-4c39-b9e8-bf79b490630c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c03e6be-9d9f-4566-a377-78d5e755e984",
        "cursor": {
          "ref": "11c501f5-995f-48b3-bab8-2fa62aad375d",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7d949244-e783-475c-a7fc-d124e71c43d0"
        },
        "item": {
          "id": "3c03e6be-9d9f-4566-a377-78d5e755e984",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "eca9ac96-74ad-44b4-b24a-cc6c4ec576df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b79659-1195-4356-be40-3f87fa135f79",
        "cursor": {
          "ref": "1da4b46a-73ba-49b6-9c35-1ed6c84d5104",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "525b89f0-c3f9-43f0-b856-3240c7767977"
        },
        "item": {
          "id": "61b79659-1195-4356-be40-3f87fa135f79",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d093fbee-02e1-4071-aeb5-955523b1e3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182d8c25-b0ee-4e93-88aa-0ee5020fea12",
        "cursor": {
          "ref": "184eafa1-bdf1-4cc8-87e7-e56bf5ca187c",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "dddfbbc9-47dd-44ef-a32c-618c0d4a42cc"
        },
        "item": {
          "id": "182d8c25-b0ee-4e93-88aa-0ee5020fea12",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d4dae9a4-3101-4cf2-966d-f96ca1f86344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e79e3f0-2df9-4019-9b7e-8fea2a3d0922",
        "cursor": {
          "ref": "b6a7b5a1-f015-44ef-bebc-90568639fdab",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "692c2895-fcf9-4bef-b620-5558a045cb3d"
        },
        "item": {
          "id": "0e79e3f0-2df9-4019-9b7e-8fea2a3d0922",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a19b50ca-e7d5-49f9-8349-6691137cc646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc5f657-0485-40ce-83b6-7634453fb63b",
        "cursor": {
          "ref": "c0eb112c-acd2-4499-83aa-cb57e59373bc",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c6ff3219-be3e-47f2-bad2-0a8aebb51ad7"
        },
        "item": {
          "id": "ddc5f657-0485-40ce-83b6-7634453fb63b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0279b901-1886-40eb-ba96-755b8fb93aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c798b7f6-a4b3-4251-9d65-545f602d6a98",
        "cursor": {
          "ref": "6223cbd7-3533-4929-bdc4-0f809e22bc37",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bc61bd11-d0f1-440d-b095-27011d17aaa2"
        },
        "item": {
          "id": "c798b7f6-a4b3-4251-9d65-545f602d6a98",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "54f58ef5-d473-4dd4-9566-06bee779347c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a59e3f-82fb-40fb-af73-936c92872de8",
        "cursor": {
          "ref": "0a433037-2719-4977-906e-9e1f0dcfbd39",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fe0ae1f5-d88d-4994-a65c-9ea0974e7a89"
        },
        "item": {
          "id": "01a59e3f-82fb-40fb-af73-936c92872de8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c8b2402c-e2c5-4adb-8e6e-56f26012da3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ba2536-000e-4f01-957b-bda0df5887dc",
        "cursor": {
          "ref": "0d5ed9fb-122a-4065-ab25-580319eb6a50",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "fdc59894-5188-4eea-99d5-e1200dc84770"
        },
        "item": {
          "id": "15ba2536-000e-4f01-957b-bda0df5887dc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b25e7a00-9b80-4078-90aa-69f5dafe1cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9ad7a8-e66e-423d-8434-5f8d86d513ad",
        "cursor": {
          "ref": "40a51fba-cce9-426d-aa66-39d19c4799b5",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "78983001-08eb-40f9-a1d8-f39496cb9c6f"
        },
        "item": {
          "id": "1b9ad7a8-e66e-423d-8434-5f8d86d513ad",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9484d996-14b5-4508-aa21-503011ac64ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f81079b-a530-47db-9234-c15e8b73b69d",
        "cursor": {
          "ref": "fc911cdc-c5fb-4834-8bcf-a4422f57d5bd",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f24cfb77-d929-4033-8dc9-f966ee616da3"
        },
        "item": {
          "id": "0f81079b-a530-47db-9234-c15e8b73b69d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a58d314b-e589-4926-ad7c-e2ca018a853e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b807242-efd7-40ff-bf81-2abea50d0198",
        "cursor": {
          "ref": "ecaef178-27fd-4265-83fe-12d40e44495c",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "79eebaff-b6fd-4454-a3f3-4fb910635104"
        },
        "item": {
          "id": "3b807242-efd7-40ff-bf81-2abea50d0198",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2169b52e-bc08-4b04-90c0-5dfc37724ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884952e5-d049-4ca7-8034-35fed12e113c",
        "cursor": {
          "ref": "f049d33d-a7cc-4f5e-a00a-d445a3a91e36",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c8131100-7d7e-4863-8579-1fd28d0b1e97"
        },
        "item": {
          "id": "884952e5-d049-4ca7-8034-35fed12e113c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "329b1394-ad3e-4018-ac9e-c17e940ec046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71e8206-d6ce-43a5-9d05-9e14764bd98f",
        "cursor": {
          "ref": "91a03984-5284-455b-8239-1c2d9e1d04f6",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b3dd8fa0-7538-4ee1-876e-02c4b709d3e8"
        },
        "item": {
          "id": "f71e8206-d6ce-43a5-9d05-9e14764bd98f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7589b292-6110-4dfd-88bb-9416e08693bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc142df9-2578-4b48-afe6-ce3d58301ba2",
        "cursor": {
          "ref": "3f74dd60-2626-4578-84b6-28c4dbb08ddb",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "faeda430-cef3-43e0-8115-997b511569ee"
        },
        "item": {
          "id": "dc142df9-2578-4b48-afe6-ce3d58301ba2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1a842f02-5984-4532-b65b-60eb9b79c158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c475dc08-ddc6-4c8c-b994-eb8c8bbef5f9",
        "cursor": {
          "ref": "5fd3dcb6-ff02-4d4c-abf0-8ef00459e22d",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "967feb54-957d-42ac-9d63-b07ac8622882"
        },
        "item": {
          "id": "c475dc08-ddc6-4c8c-b994-eb8c8bbef5f9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "96bbc408-e50e-43d7-8bb2-c9f859aa0143",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "c318b2ef-feb5-4fc1-9f13-63f9ed4de52b",
        "cursor": {
          "ref": "a1081644-2f8c-43d8-96a3-55d63abf3f21",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a073de64-7e26-4ea2-88c3-c691a43b56ee"
        },
        "item": {
          "id": "c318b2ef-feb5-4fc1-9f13-63f9ed4de52b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "59881890-6d2a-466b-873e-0703bd657b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d58baec-f81b-4cdc-8f3c-6ac30b36e425",
        "cursor": {
          "ref": "6b69d47d-e28e-4194-9b61-96c2f2f6fae0",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9ec25c9b-88bd-4d1d-935f-4e33ffbe6f90"
        },
        "item": {
          "id": "2d58baec-f81b-4cdc-8f3c-6ac30b36e425",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1532172c-b015-4f1a-a831-d86fec5ece38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8085e02e-f06e-4a60-9f59-b3f3c26f95be",
        "cursor": {
          "ref": "90bb00d6-def1-43eb-b748-58fdc89cb84f",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "79bae75d-9324-4cae-9a9f-5f014b76d793"
        },
        "item": {
          "id": "8085e02e-f06e-4a60-9f59-b3f3c26f95be",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "39af23d3-d93b-4ffa-b6b0-966a206c75e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8037d2b-8f27-4e24-8577-19423fd5168b",
        "cursor": {
          "ref": "a82fb66a-9f3e-4df8-8f31-9ab5334cf0f4",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "df48cb47-6d04-4457-a9b8-88f24c7364a6"
        },
        "item": {
          "id": "c8037d2b-8f27-4e24-8577-19423fd5168b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e645fd4d-5593-44ac-a915-ce3f4abae1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbd8d98-57c2-4afc-9f68-c64b7949cf59",
        "cursor": {
          "ref": "890402d6-8f81-47f1-8700-7811857a14d1",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5211b4ff-20ed-44d0-bee9-ac9c77e35736"
        },
        "item": {
          "id": "4cbd8d98-57c2-4afc-9f68-c64b7949cf59",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "88298539-e99d-4461-8dd8-556b9eac4cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c3a9d6-f5aa-4234-9164-879325d1dd0d",
        "cursor": {
          "ref": "dfcb066d-1749-4b84-ba54-ead934c4ba66",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fd8514a4-dca8-421e-8086-026f64850c13"
        },
        "item": {
          "id": "a3c3a9d6-f5aa-4234-9164-879325d1dd0d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7bd33da3-3c58-42ef-b7c1-f047610f43d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042078ed-4dc1-483d-b8b2-e08c57895bdd",
        "cursor": {
          "ref": "38994492-b0a1-4a1f-9c74-55a4bcc2217f",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ec5de655-e2a9-4b73-87dd-c611be665d80"
        },
        "item": {
          "id": "042078ed-4dc1-483d-b8b2-e08c57895bdd",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5afaa150-a873-47b8-8c04-81216eeb3cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb085772-b4fa-4f3d-9eb1-df623ba1b20b",
        "cursor": {
          "ref": "7ca66170-a6bf-48f7-9735-0f2b72ba310e",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b5f34e68-2f94-4de9-b55e-7f621433afc4"
        },
        "item": {
          "id": "eb085772-b4fa-4f3d-9eb1-df623ba1b20b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5251beb7-2220-4569-83dd-de02e72f806f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb08f1a-accb-49ac-ae31-a472504ec09e",
        "cursor": {
          "ref": "653a8582-c2de-44ed-b55a-daf5fa2891e2",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f0bcf55e-47b0-48bc-91b6-817dc360a6ed"
        },
        "item": {
          "id": "6bb08f1a-accb-49ac-ae31-a472504ec09e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1d2ae841-d73e-4b18-b9cd-98999fea440f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b7da61-c78b-44bf-9c78-42d6ec7cb461",
        "cursor": {
          "ref": "f1d0637c-58eb-4389-81ac-fa31071b6e22",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e033f282-a592-44b0-b924-f42b1ad404a1"
        },
        "item": {
          "id": "50b7da61-c78b-44bf-9c78-42d6ec7cb461",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "39f5c5da-857f-4664-926c-e72965246fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4796e4-4b07-4d6c-add9-1b089692bfa2",
        "cursor": {
          "ref": "83280783-4b68-4b97-a3d1-3173f8ea5804",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "26d07089-b8fd-48a3-a480-997dcc4003bf"
        },
        "item": {
          "id": "4d4796e4-4b07-4d6c-add9-1b089692bfa2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1bc5d2d5-2a52-464b-9b45-6836955c9366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a13e59-a65b-41b6-a7a4-d0ebc1279161",
        "cursor": {
          "ref": "d19144bd-be52-4afd-8108-5c581901cb6b",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1a092c77-d98a-406c-9d42-eab4e8cb20fe"
        },
        "item": {
          "id": "94a13e59-a65b-41b6-a7a4-d0ebc1279161",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7bfdb66f-102c-49fe-b43a-9a9bc2b40a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c4d4d6-3a23-450b-afb2-9a484b5d03dc",
        "cursor": {
          "ref": "f77d6e77-0159-45a1-865a-ba43c5cd1b47",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "cda79952-dce2-4887-a533-679d0161fae5"
        },
        "item": {
          "id": "b0c4d4d6-3a23-450b-afb2-9a484b5d03dc",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "cfb42006-992a-4af2-84c6-20f72d14624b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab87ced4-a148-4eef-978a-2dc793a348e5",
        "cursor": {
          "ref": "6e01f600-c963-4852-b83a-b4f88b92aa26",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a1ccf07d-0dc3-4406-9fbf-22f65a2b4784"
        },
        "item": {
          "id": "ab87ced4-a148-4eef-978a-2dc793a348e5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f3006926-1beb-4609-9d1c-70bfc13d79d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da1eb18-9d3f-4be8-8c96-d8eb1d5908b7",
        "cursor": {
          "ref": "354a7104-9364-49ef-aa23-822475b4179c",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d82930b1-5ead-44fd-b9fa-8e2eb2b01e8a"
        },
        "item": {
          "id": "7da1eb18-9d3f-4be8-8c96-d8eb1d5908b7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9f633e1e-2ee4-47e3-819a-3079b807ee95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327056b2-f76d-4bde-a78e-fe3e371f7ad6",
        "cursor": {
          "ref": "423aae96-d870-4f8c-bcab-090e4dfeff06",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "75b8c2f7-afb3-4709-a032-567ea5ee2c89"
        },
        "item": {
          "id": "327056b2-f76d-4bde-a78e-fe3e371f7ad6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1fe3f7f6-2f12-4069-b0d9-69bbafce77bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530cf742-ed6c-4146-9649-709828af1752",
        "cursor": {
          "ref": "d51a9740-30c6-4c82-a970-0d1aa6b54416",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "43e2eeb5-37e4-4777-a30c-1b3362e11a23"
        },
        "item": {
          "id": "530cf742-ed6c-4146-9649-709828af1752",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a6f3db1e-edb2-486e-b841-1f101e0dcea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee8b442-f03e-4628-8369-5b625506b264",
        "cursor": {
          "ref": "ec85ca47-e65f-4d34-b030-49cfe94961ea",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c06e1ea2-aab5-44af-bf8d-c4b0c28d7e04"
        },
        "item": {
          "id": "eee8b442-f03e-4628-8369-5b625506b264",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a49e6b9e-76cb-447f-9f71-13193db8c2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c641e0-9420-4617-a318-8543fd7845aa",
        "cursor": {
          "ref": "4b5d4dcb-3fbf-4bae-9a7b-b29e56d5b6d4",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ad1eb15b-b40a-438f-acf3-7fb00de699e3"
        },
        "item": {
          "id": "57c641e0-9420-4617-a318-8543fd7845aa",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a2b27b1a-629c-4282-9cdb-ac9ecdd4c30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e073a255-617d-4f8c-821c-afb22d0972f1",
        "cursor": {
          "ref": "3aaa5bc5-06a4-4db9-82b3-cd5e5d02586f",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7ba2cad9-a8fc-4202-9b65-1b2d36362af7"
        },
        "item": {
          "id": "e073a255-617d-4f8c-821c-afb22d0972f1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "eeae91d7-9418-4454-8cc4-36bc921a1cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24071626-5739-438d-93a8-5c1d7ea04f3f",
        "cursor": {
          "ref": "7eb3032f-3eee-493c-a2a3-4a5713eef01d",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2c24128a-60f3-4819-bb95-c7f750c05d96"
        },
        "item": {
          "id": "24071626-5739-438d-93a8-5c1d7ea04f3f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2af0ccd6-7188-4738-8897-e3365809252f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea9ec83-107c-4002-9920-02adc945cb9e",
        "cursor": {
          "ref": "1968f3d2-49a7-4b98-8b0e-8ca6fb8df5b7",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "873ad965-8ad1-470e-b4a4-7fec4969929c"
        },
        "item": {
          "id": "7ea9ec83-107c-4002-9920-02adc945cb9e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "36ccbdee-341b-4f65-b939-ded698a31bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb9191d-3ccb-4af6-839c-6e0d1807de86",
        "cursor": {
          "ref": "d3827ec1-cb11-4e2b-882f-d9790310f6e3",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "84c46f0c-46d8-416d-a57b-bbda94d20b1c"
        },
        "item": {
          "id": "ffb9191d-3ccb-4af6-839c-6e0d1807de86",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8fb3e44f-fed2-4afb-ad42-8d295a98b9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e09d92b-01cc-4de4-9712-65f62cf7b2ba",
        "cursor": {
          "ref": "4db7d518-18af-423b-b870-e5e9529f84ff",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e65a0897-0dbf-4d44-bd94-deac33cf6502"
        },
        "item": {
          "id": "1e09d92b-01cc-4de4-9712-65f62cf7b2ba",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "06d357d2-0f90-4769-b42f-ca84bc3dbfdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838f7f36-dfa0-4929-8744-3bc80b7011e7",
        "cursor": {
          "ref": "15489133-369c-4360-a1f7-07830c6d3e7b",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b4d77d9e-8675-4cd0-a425-5ad708e502e5"
        },
        "item": {
          "id": "838f7f36-dfa0-4929-8744-3bc80b7011e7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "dd87b70f-4f69-47ee-9b74-fb635916ec96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32c8c1e-ac1a-4eff-9a59-11c19ab8adec",
        "cursor": {
          "ref": "058e48ed-4b83-4dca-99e7-1c23679ac963",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "85926093-3e38-42a3-aa86-101aa50d6729"
        },
        "item": {
          "id": "d32c8c1e-ac1a-4eff-9a59-11c19ab8adec",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5853d6ef-25cc-4614-9d75-19f36fb9dc3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010d0df5-d634-4f68-a28e-7e80c1003889",
        "cursor": {
          "ref": "575cd3ba-cd5f-4a0d-9dea-6a6a44d62efe",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "96998647-1546-4846-a861-f084f59c8aa0"
        },
        "item": {
          "id": "010d0df5-d634-4f68-a28e-7e80c1003889",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "381d8159-a02e-4f2e-b969-28bc04fa582a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb83aa49-fe1e-4194-ae5e-215f0acb54fd",
        "cursor": {
          "ref": "74bc1daf-00d6-48f0-a874-fee30556e21d",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "548cf888-ca51-4d40-a5bd-2639d4cb772b"
        },
        "item": {
          "id": "fb83aa49-fe1e-4194-ae5e-215f0acb54fd",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8be4215f-2b97-4bfc-8848-3eba65a22e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40b6bfe-f34e-4b9f-a1ca-4dc26c4876a3",
        "cursor": {
          "ref": "86cd7e40-342f-49ba-b5b8-3141c422536c",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cffdddac-bd8b-45fc-84f0-d02b9c92a0bc"
        },
        "item": {
          "id": "b40b6bfe-f34e-4b9f-a1ca-4dc26c4876a3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "081874ad-3265-4ed1-ad8a-7c6e1c8b462f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208bd5d1-4a43-4eae-ab65-3b7057b3ad7d",
        "cursor": {
          "ref": "c2bf95d8-5876-4656-9a4c-f15cd4af9e9e",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "78690ef2-5c2f-4252-a83e-31bae365305e"
        },
        "item": {
          "id": "208bd5d1-4a43-4eae-ab65-3b7057b3ad7d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d8dbf914-81ee-4f52-8fc2-f50a1854f802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6dad5ae-55c3-4ef2-9d20-c74e4fa19bfb",
        "cursor": {
          "ref": "19f4b74b-5832-4468-ab84-f4c7c4512129",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3da33c7d-cbae-4210-bcc2-b98a33458163"
        },
        "item": {
          "id": "b6dad5ae-55c3-4ef2-9d20-c74e4fa19bfb",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d245732f-6c19-487d-bea6-956e8acd4ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc76d54d-9c86-4956-a299-26909c8563e1",
        "cursor": {
          "ref": "605e0cba-889a-4ccc-bbe2-32fc84febca6",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "439046d2-5302-4da8-8bdc-e1d6373a5735"
        },
        "item": {
          "id": "dc76d54d-9c86-4956-a299-26909c8563e1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1e4c1847-a401-47c9-8f37-d2e8b40e15fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d4ffd1-8aae-46f7-93a4-8107828046b9",
        "cursor": {
          "ref": "2130032b-b400-4642-ad15-04be2ad4bc36",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ea37a5f3-f86c-4383-9bcd-4a06b162dcf6"
        },
        "item": {
          "id": "93d4ffd1-8aae-46f7-93a4-8107828046b9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e47a0a1b-9216-4097-ab0e-12fe882b34e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cb9eed-53b3-4507-a553-f88ed0fef8af",
        "cursor": {
          "ref": "499bbc81-7f90-4ff5-839b-1d33f479f45e",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "360b64b0-e87d-4aea-99d9-44c83610c72e"
        },
        "item": {
          "id": "78cb9eed-53b3-4507-a553-f88ed0fef8af",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d768c986-379b-4fdc-8778-26b40ad45b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc7ce2c-7b57-4c89-a93b-19cffee9f452",
        "cursor": {
          "ref": "fb58167b-41d8-42ea-8de5-d41e9a709211",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0ff98ec3-d07f-4b2f-8655-4ce6dcea0f2d"
        },
        "item": {
          "id": "6dc7ce2c-7b57-4c89-a93b-19cffee9f452",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7927fbd2-a439-42c9-82bc-0d43a59904bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7626c7c-c1b5-4fb5-906c-843327cad8e1",
        "cursor": {
          "ref": "7116b14c-01b9-4f52-86cf-c6402c230d0b",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "332be93d-6ad5-4e2b-9dc6-d66cea1963ea"
        },
        "item": {
          "id": "a7626c7c-c1b5-4fb5-906c-843327cad8e1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "272e9b72-18d3-4f1f-87f1-579a59a948ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12015e31-cc2d-44f8-a4de-a1ab62a0bb98",
        "cursor": {
          "ref": "b57173b6-ba61-43aa-8a14-4645cb785315",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1e5cef62-944f-45c1-aa9c-cdadb9541477"
        },
        "item": {
          "id": "12015e31-cc2d-44f8-a4de-a1ab62a0bb98",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "602871d0-5140-4759-82da-0f0eb476dcbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a089c30f-0f9d-4795-ba8b-a7266c9af5e0",
        "cursor": {
          "ref": "2e210462-3582-4000-9970-e097c0e16a3f",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a2b77400-ee3d-4b88-96db-41565bb07bf7"
        },
        "item": {
          "id": "a089c30f-0f9d-4795-ba8b-a7266c9af5e0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "30b907af-46aa-43e6-b308-bfe215b2f9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb566fb2-2a7a-4255-90a5-9dfd3d3412f0",
        "cursor": {
          "ref": "fabb4a48-2a9d-4991-9941-299cc9e5a11b",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8c98a047-8e19-4dea-bed5-c956e36397e9"
        },
        "item": {
          "id": "cb566fb2-2a7a-4255-90a5-9dfd3d3412f0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d3343ef2-1ea5-4c72-b034-2a7dda0aa422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45d6f3d-0af7-4746-8025-2aeb9c5b1474",
        "cursor": {
          "ref": "ec534840-5fa9-4c0d-bd3d-bae052e06635",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "74c8a93e-2cd6-4664-9288-204e75d90960"
        },
        "item": {
          "id": "c45d6f3d-0af7-4746-8025-2aeb9c5b1474",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0a732012-84af-4059-b716-6e9f165e8a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e27f6d-eeca-42fe-8f23-c0ac5ad15577",
        "cursor": {
          "ref": "b3f1bef2-3ac3-419c-ae1d-23585717dcfd",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "97672a71-3276-47fe-b0ce-13ab61190f23"
        },
        "item": {
          "id": "71e27f6d-eeca-42fe-8f23-c0ac5ad15577",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3e24ba80-a8b7-47bc-9644-3e625a46d2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478199ec-a2c4-4902-945f-4abef8a2b7fe",
        "cursor": {
          "ref": "cf45964f-487b-4687-a383-8c0a6ad2aa5c",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "24a88cd0-2de3-4b3a-a78c-0d2f90ca8a60"
        },
        "item": {
          "id": "478199ec-a2c4-4902-945f-4abef8a2b7fe",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "eed95728-6c1c-41e7-bbb1-2b536daedfb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1adae038-f655-498f-9ba0-584306151234",
        "cursor": {
          "ref": "973ce776-558e-4802-b0dc-42ac1dac807d",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6569fa90-3255-45cb-8187-7eaaca08edc7"
        },
        "item": {
          "id": "1adae038-f655-498f-9ba0-584306151234",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9dcf7557-d633-4325-8078-24564ee411e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a091727-e9d8-4ac4-a36d-5625ab02f513",
        "cursor": {
          "ref": "e3ae21c0-6631-4f43-ba23-dce4dc62061a",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bd83bde3-fc83-40bc-8a5c-dcaa89dafec7"
        },
        "item": {
          "id": "3a091727-e9d8-4ac4-a36d-5625ab02f513",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c0f995db-03ae-410b-ab8c-f5b377a1becc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219a577c-bbe9-4a62-8cfe-b30655516d7f",
        "cursor": {
          "ref": "5b95cd0b-2259-43b7-b934-aa0aea534546",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "65c592a4-5228-4857-8d87-0285f4df42cf"
        },
        "item": {
          "id": "219a577c-bbe9-4a62-8cfe-b30655516d7f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "37ab2917-faf9-4ece-983d-e0971a439f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d228c40-1f41-4b67-adb9-400e029a2759",
        "cursor": {
          "ref": "54b59df1-4450-4579-bbcd-943bcb98d11b",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fe66d1d4-467e-437d-bbd9-9c6d2b40fd66"
        },
        "item": {
          "id": "7d228c40-1f41-4b67-adb9-400e029a2759",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2cda8362-7086-441d-9a59-dba1c1662130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fe19e4-863e-49ab-b526-70dbcc4dde02",
        "cursor": {
          "ref": "a6b32e09-10b1-4ea4-8822-20b0e3bad9e5",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "75500b06-a6dc-4a07-8ac7-cbf9ad8a49c8"
        },
        "item": {
          "id": "94fe19e4-863e-49ab-b526-70dbcc4dde02",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ca5117d5-6394-412c-a865-070fa7c28c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84703746-ad0b-44cd-b65a-eb74c46411c5",
        "cursor": {
          "ref": "546bea05-e384-4c18-a630-085ed743c424",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "622a57ca-26f1-485b-9ca0-782637bd955a"
        },
        "item": {
          "id": "84703746-ad0b-44cd-b65a-eb74c46411c5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "84ae301c-840f-49fe-bcf8-941551b5785b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625329cf-6ed9-48be-998c-adaa2170e53a",
        "cursor": {
          "ref": "bb04c4d8-ca2e-4e03-bfd4-7b6528ae9f73",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "19dc4636-0aaa-47e2-a5a8-f553f9fd0d9d"
        },
        "item": {
          "id": "625329cf-6ed9-48be-998c-adaa2170e53a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f4376177-0aae-42c0-b16f-4b422cad3db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da27977b-924f-4987-a9ac-6b01d236047d",
        "cursor": {
          "ref": "5e87ccc7-b04a-49a9-aa9f-6837b5a1638b",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fb00feb2-aee8-4474-92a2-4e506dc61585"
        },
        "item": {
          "id": "da27977b-924f-4987-a9ac-6b01d236047d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c53f492b-613c-4063-ad6b-55c02cd0dc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb9ddb6-9016-4437-8ce6-1f9f77affae2",
        "cursor": {
          "ref": "ae83518d-5468-4812-adbc-dc86c354a8f3",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a503590a-bcc7-49e2-9f7e-1c9b911e1ac7"
        },
        "item": {
          "id": "5fb9ddb6-9016-4437-8ce6-1f9f77affae2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d8052c16-8503-46a4-b47e-8329ec6e7737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f58add-ad42-4a37-9fb4-5c0df89b2312",
        "cursor": {
          "ref": "543c26d3-44a7-49a2-ae45-dc2a8d68e294",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5665d528-ee07-4c23-85a8-51026611d78f"
        },
        "item": {
          "id": "b4f58add-ad42-4a37-9fb4-5c0df89b2312",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "41efefdd-4c2f-4ba7-a943-784e33ea67a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d81307-bc22-4c2f-9622-8f23f83b477b",
        "cursor": {
          "ref": "af3170e6-5b89-4d6e-bffa-1352c17bd81e",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3615d84c-9f81-413b-a6c3-402998dedda1"
        },
        "item": {
          "id": "20d81307-bc22-4c2f-9622-8f23f83b477b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "46bdc8e6-7f5f-49e6-8039-39afe2469f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4d39d4-d5c7-440c-9c92-39b945416c81",
        "cursor": {
          "ref": "01dee0fc-85e3-49d2-8058-cccb2cedc40d",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3866aa37-a26c-4b1d-981e-9c9778a83055"
        },
        "item": {
          "id": "ca4d39d4-d5c7-440c-9c92-39b945416c81",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d68add4d-310d-4e18-8642-432bd725f68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969b1ecd-ba03-4e1c-a5fd-0955dd394675",
        "cursor": {
          "ref": "46e66b6b-e3e2-4734-866b-4baa832aeff6",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ad081416-3bc0-47e3-875a-ccee9421b47d"
        },
        "item": {
          "id": "969b1ecd-ba03-4e1c-a5fd-0955dd394675",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2ead56fa-7122-49f8-8db3-7a44030d4443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4029fcee-363f-4a45-a672-4c5e1f8921db",
        "cursor": {
          "ref": "24c97da9-4a93-42ae-bbd8-4b2d651def81",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "937241a1-a88b-4d17-b571-40f31e602b43"
        },
        "item": {
          "id": "4029fcee-363f-4a45-a672-4c5e1f8921db",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "daa76582-c80e-491f-9a95-3d6b6b731ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a175906-a55a-4d3f-b969-b4c2c8752316",
        "cursor": {
          "ref": "94969421-d9db-4499-93eb-fef3a62d9589",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "54eec48f-e527-4813-a14f-970abecdee8c"
        },
        "item": {
          "id": "6a175906-a55a-4d3f-b969-b4c2c8752316",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7272eb0a-3792-4003-bcc0-7d3bc459809c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d461e9c-d63b-459d-8999-4014fcb8f05f",
        "cursor": {
          "ref": "2799c0f5-3fb1-4bb3-813e-3a6669be8bb0",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "33cb7857-0bfb-4621-bbec-9152298bdadf"
        },
        "item": {
          "id": "7d461e9c-d63b-459d-8999-4014fcb8f05f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "53bcbe35-608d-497d-b802-530310f12519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e260fd31-3258-4674-9079-d2c32430041a",
        "cursor": {
          "ref": "63e759b8-491f-4c11-bd0b-40319267379d",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "18108f14-575f-460d-8d3f-0d02b1aac511"
        },
        "item": {
          "id": "e260fd31-3258-4674-9079-d2c32430041a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3345b2e4-3a66-4e5b-9493-438193334b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a911080-6518-407f-9c26-fe6986155152",
        "cursor": {
          "ref": "0b18778a-3aed-4af7-9e99-c85a0e8d4d0a",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "89890d32-664f-446f-b090-d52633f54615"
        },
        "item": {
          "id": "7a911080-6518-407f-9c26-fe6986155152",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "80ba8550-fd28-4062-90a4-152aae2ccebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccd028e-b995-4a1b-8d76-0ff444b8202c",
        "cursor": {
          "ref": "452da38e-e60a-43b9-b5c8-c5e5b7238445",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "51bfec84-5835-4f1e-a399-bd0e28313e6e"
        },
        "item": {
          "id": "6ccd028e-b995-4a1b-8d76-0ff444b8202c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "94c6e729-7cf5-425a-8db2-51ee997dc10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c81560-633e-4f20-96c7-cc1f16b7ebce",
        "cursor": {
          "ref": "93b46a72-bf32-4b6a-b85c-2602aeb58420",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "28b90f85-1644-482d-9ffe-bf503f10e99a"
        },
        "item": {
          "id": "32c81560-633e-4f20-96c7-cc1f16b7ebce",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c712190a-a486-4dc4-a874-da0325732dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238616bb-cfbe-437b-8cba-117c52fe9de5",
        "cursor": {
          "ref": "23ca9f4a-7fcd-40ab-aacd-1000b39a3cf2",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "ad0629cb-3d8a-4945-87b7-2772cbe8278d"
        },
        "item": {
          "id": "238616bb-cfbe-437b-8cba-117c52fe9de5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7bdfbe34-96ca-4095-b9a9-9703d59cc1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c57b9f1-1a82-4e6d-a292-caebb5d2fb52",
        "cursor": {
          "ref": "26efc9a6-415c-433c-b788-a4556ebb146a",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1240c98c-83ed-4e76-96fd-c0a53e2d7d6f"
        },
        "item": {
          "id": "3c57b9f1-1a82-4e6d-a292-caebb5d2fb52",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "34b5ac7e-3e0d-4af1-a98c-7afbc5d6d254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84750ca-024f-4e00-aebe-52ace7bfa614",
        "cursor": {
          "ref": "0b1afc70-9aee-40aa-bd39-97d41c59ed6c",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "eab39bbe-ea1b-46cd-90b5-8944b6bb9a4f"
        },
        "item": {
          "id": "c84750ca-024f-4e00-aebe-52ace7bfa614",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a78e3457-a4e0-49e3-b3c6-182f2ec0e265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6ce66c-0623-44a0-a851-eec6f004f202",
        "cursor": {
          "ref": "47646e06-0218-4a40-8eb6-b363e841787b",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "1b809cd6-12fc-4cb4-b3e3-a9272372ceb5"
        },
        "item": {
          "id": "ef6ce66c-0623-44a0-a851-eec6f004f202",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "32bd2bda-3b2c-4c05-aa40-14c8d0376779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ccbecc-b176-4991-bff8-21b77388fd0b",
        "cursor": {
          "ref": "de8afe90-d8dd-486a-a541-66a6135fa605",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "8a368b4d-c041-4324-b43d-cfc37065e04a"
        },
        "item": {
          "id": "67ccbecc-b176-4991-bff8-21b77388fd0b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3a3105ba-d358-4c6b-b2c0-704d6c52d533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5f9846-795e-40ee-adb9-236e86fa1bdc",
        "cursor": {
          "ref": "56065a0a-4deb-446c-8eed-0345318d0eb4",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "b6f758d2-694b-49f4-a349-74f0e3cbcf59"
        },
        "item": {
          "id": "4a5f9846-795e-40ee-adb9-236e86fa1bdc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4fa1007c-6ff1-4e9c-8622-f024e8834051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6af86c-8a92-4a50-8c61-e12ced77d510",
        "cursor": {
          "ref": "5d5996d2-132a-40de-b7e3-ec8ac83d8317",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "4f1636e7-3520-4c82-82d5-e71619872afb"
        },
        "item": {
          "id": "6e6af86c-8a92-4a50-8c61-e12ced77d510",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "59137103-3cf9-46c4-b04c-c5a09170fae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc86be75-8255-4a3c-9e8f-ef862220ddf5",
        "cursor": {
          "ref": "1527e7a0-56c5-4717-89ca-3c14918ffff3",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b88c0d0e-8e79-45e8-982d-79943a639b5e"
        },
        "item": {
          "id": "dc86be75-8255-4a3c-9e8f-ef862220ddf5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "71c5fae7-ae38-4aa0-a5cd-77d3ee8dedc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4708336c-79a2-4720-8092-7962ab95f930",
        "cursor": {
          "ref": "5f53dab4-f30d-4055-9929-87ddb8450b53",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "c427afc8-fc1c-4b48-b6d5-ac3b6c773226"
        },
        "item": {
          "id": "4708336c-79a2-4720-8092-7962ab95f930",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a2a66e77-b598-48ac-9006-8caa7639b83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8785f21-2ae2-4334-98db-4e9be0221728",
        "cursor": {
          "ref": "a1614591-a702-432d-96b7-655777970f6f",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ebd57047-c248-4caf-94c7-9d881835c50c"
        },
        "item": {
          "id": "a8785f21-2ae2-4334-98db-4e9be0221728",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ac2f3f3e-6fc9-47c0-a9af-35f11a37de17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e628a0-6fba-4d5a-a1f2-03a8d3aed710",
        "cursor": {
          "ref": "8964aca4-021e-4d2e-a518-5e9b7e6ce993",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "db63c550-89e1-4970-9f60-a0da7c2c5b07"
        },
        "item": {
          "id": "60e628a0-6fba-4d5a-a1f2-03a8d3aed710",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "16195fcb-230a-4c86-8f0c-f0460abc9335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c00e2e-3d13-4e0e-b2a0-d0ba76d119ed",
        "cursor": {
          "ref": "a00339ee-9186-4973-8f84-60939bf02a4c",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "84a6087a-286c-40af-a3ec-a8b4ded94633"
        },
        "item": {
          "id": "78c00e2e-3d13-4e0e-b2a0-d0ba76d119ed",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "89ab4aa9-33c6-499a-a000-1349c7c9897e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbdd817e-42b9-44f7-85af-a744ce013612",
        "cursor": {
          "ref": "ca3f037d-8e2b-44a3-9228-81d880344f61",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "df97c861-fc1a-43a5-8592-ccbdae4a9c3d"
        },
        "item": {
          "id": "cbdd817e-42b9-44f7-85af-a744ce013612",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "aa4d3815-86dd-47e4-b38c-818fce800394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3328c852-4650-4162-8c88-6e1dcfa33879",
        "cursor": {
          "ref": "d03df96a-855b-47b4-a8d8-9e540f0af61a",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "1683ad34-3be6-42b7-9603-5a3b4ddef19d"
        },
        "item": {
          "id": "3328c852-4650-4162-8c88-6e1dcfa33879",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "da2ef0f4-03f2-4264-a9b6-3d5335f6813f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9628fef-34a3-4ea7-807f-659059f24f39",
        "cursor": {
          "ref": "dd200f5e-afe3-4e4d-a15e-03108f78a31b",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "7801ec0d-ed83-48e8-b00e-2721be77ed76"
        },
        "item": {
          "id": "c9628fef-34a3-4ea7-807f-659059f24f39",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a42853d7-5a70-472a-be75-7c2d970c91b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2adbe32-3109-4891-95f6-476f20d188c9",
        "cursor": {
          "ref": "6cbcfd43-2960-48fd-950f-c4ab9bbd324c",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "1eaa8f38-079c-4d87-95fe-c5f222d3446d"
        },
        "item": {
          "id": "e2adbe32-3109-4891-95f6-476f20d188c9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d7fb6b76-60ea-4207-a0c0-4fdeacf1525b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda45309-0653-4698-8a2a-b728448faf23",
        "cursor": {
          "ref": "15417055-548e-4d05-a7b9-5267f06e1f7f",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "aa86300f-a11d-4e5c-92e8-fe5ba3b9bdd1"
        },
        "item": {
          "id": "cda45309-0653-4698-8a2a-b728448faf23",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "668a3bcc-87f5-417b-8230-09492c6cb890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db34b990-1b2b-4aa8-b961-4c91369d35b3",
        "cursor": {
          "ref": "82f159aa-fe83-434c-8f23-ddd8635b356e",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5473e13f-7c8c-4919-aec5-cb335418109d"
        },
        "item": {
          "id": "db34b990-1b2b-4aa8-b961-4c91369d35b3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3967396a-6dbb-4720-aa0e-9decbe51ce14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e2b4de-46a7-4e2c-952e-54f074a9d012",
        "cursor": {
          "ref": "c7598d7a-2b63-45a5-b1f0-9af11ac561d9",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ec034e30-96d2-4b07-9a73-4ef1313fafa4"
        },
        "item": {
          "id": "17e2b4de-46a7-4e2c-952e-54f074a9d012",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d25d3058-9c57-4355-9f24-08804dd22634",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f993e9f-ea65-4851-b248-9f755d33d1fd",
        "cursor": {
          "ref": "1f72a08c-36ef-4930-b37b-ee7e8caa4c17",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "dd423203-ea53-4d06-a7eb-04889e502410"
        },
        "item": {
          "id": "8f993e9f-ea65-4851-b248-9f755d33d1fd",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d0f2bad2-b3e7-40c5-a129-50ba602de3ba",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f032c85-1fd3-4cd5-ba7a-9a36822f1855",
        "cursor": {
          "ref": "a5dbfa94-6a16-43a4-b7a7-544819fd06ce",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "03db1b09-93be-4729-885e-3efc3cceb1ea"
        },
        "item": {
          "id": "1f032c85-1fd3-4cd5-ba7a-9a36822f1855",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5f7d7d39-44ca-4d66-bb89-60768a35f4bb",
          "status": "OK",
          "code": 200,
          "responseTime": 2454,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8bb007-8a7d-4030-822b-464365e5aa4e",
        "cursor": {
          "ref": "897474d9-7ec6-43c3-887c-ebf8133c4c7c",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "15bcb4c4-d77a-4ef3-b3e0-c192feebe233"
        },
        "item": {
          "id": "5a8bb007-8a7d-4030-822b-464365e5aa4e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0eb3bc88-e403-46b0-a7e2-030a9cd6f58d",
          "status": "OK",
          "code": 200,
          "responseTime": 2606,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3092b12-b80d-4fd1-99ed-586f8b016ac8",
        "cursor": {
          "ref": "5e590e3c-5fdb-48ad-b932-b82807f556ad",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "09ddf733-b287-40f0-928e-b5ea5d0b3e86"
        },
        "item": {
          "id": "d3092b12-b80d-4fd1-99ed-586f8b016ac8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b9d551f8-e581-4c74-b5ec-38be6b354529",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3092b12-b80d-4fd1-99ed-586f8b016ac8",
        "cursor": {
          "ref": "5e590e3c-5fdb-48ad-b932-b82807f556ad",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "09ddf733-b287-40f0-928e-b5ea5d0b3e86"
        },
        "item": {
          "id": "d3092b12-b80d-4fd1-99ed-586f8b016ac8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b9d551f8-e581-4c74-b5ec-38be6b354529",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f052b1a-1dda-424f-98b0-8c689aa04f33",
        "cursor": {
          "ref": "58a5a4a3-47ad-469a-8a88-6dddb055c102",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "a2332e13-82bb-42ec-9857-54475d693cd7"
        },
        "item": {
          "id": "3f052b1a-1dda-424f-98b0-8c689aa04f33",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dafda6e8-ec11-428e-9333-0039581255b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9091dc02-d0ce-4835-8f64-2d7a7e80ea23",
        "cursor": {
          "ref": "43375574-0219-4f9e-b18d-ad65628a560a",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "7cd8e73d-e4d7-4458-b66e-3d9fe0a960c3"
        },
        "item": {
          "id": "9091dc02-d0ce-4835-8f64-2d7a7e80ea23",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6435cb0e-b746-448a-a42d-eb2dcd71df4f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}