{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "20ad0bb9-643f-4c48-b4f2-0287f2ffb2de",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8a72a013-acdd-452f-8e9a-155c663b9d33",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2210a3c0-8ab4-4f91-8803-cf4522438a6c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d9219d46-f8e8-4740-8b0d-94074b555500"
                }
              }
            ]
          },
          {
            "id": "cd46ff24-dc6b-4b4f-a4f3-f44ef196428c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "707f0f29-e39e-40d2-b9b2-7d5ccde9eec3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "57f3a4e0-82af-418f-9909-b5390432f1c8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "39c219a0-18dc-4c5a-a051-77aef8ddb6c1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e2cb06ec-d32a-4799-9be9-099544a50b3f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "66ff44ed-9c38-4b84-8e1d-a085670fd59c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d34a2cbf-4e67-4e75-823a-e29e7366902f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a5e7f51-b1f9-4e77-a9b2-61cc4553a2fc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5d07192e-328f-4ef3-a8ca-1bbb7b705b63",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f990c5d-da60-45dc-aa9f-6354b626d275"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cb5b4b37-5a9c-43c4-b0ec-afacf00d6be9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4d6baa7d-cdaf-4276-810b-6c7ca1ee229e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c28b0d48-1712-49d2-8d09-57c448f891e1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "620cdf62-8e1b-468d-af16-357f1d1f0eea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1ea786b-5357-45cf-bba2-6f2104e1466e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "758425ad-f2eb-4c51-9a2c-a2245e607e5b"
            }
          }
        ]
      },
      {
        "id": "51946a83-205f-4342-b655-dcf98a3e3317",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1ed135dd-eb15-4c0e-878f-c55e589aed61",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef2dc84a-1d40-482e-9cc0-717dc07476c4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6e99a116-e59e-4ce1-9c91-bef2765006b7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92551f0a-0c6b-433a-ab84-719bde7229f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3885b6c5-76c7-4431-b6af-c21d420fcb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd85579-c75a-4299-b481-dc65b68986eb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09105570-82a9-4f74-98af-29a901e1866c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9864d484-e510-46d2-af43-43313fdb323c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849122de-296b-4af1-aeff-3809fd6a9a02",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460608d7-2d22-4f84-a61f-b3ac326f8f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0bf08647-ae1b-4b4e-b25e-ebd23e0d871d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c1e1b843-e815-4ced-8f01-260809d3ff0a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e3af878e-e154-4af0-bde4-46714bd0b95b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a44e04-8bbf-457e-b295-d33631b8f6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce5c3679-9cb1-4319-9167-d2b162f62570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d16b6a-c8e7-4497-b662-261d97856dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a35c20-82cc-46d8-b399-155ef3b01d02"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "90a898d0-d895-42c0-aff0-9bdbcfe46f2e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6d9017b1-278e-4e79-9448-16f13b236262",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9cf9662-66f2-49dd-bd1f-caf2e53a8f46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "262347ca-552c-4eaf-acc0-5a027cac6050"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9802cc45-e63a-4e05-b618-3856f3487ce9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1409b939-a12f-439b-a464-96f2433360d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec53b7b1-0153-43ed-888f-a3e88364805b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf78ceb6-6f28-4e7b-ab67-fa149ddb8eec"
            }
          }
        ]
      },
      {
        "id": "aa9bff01-80fa-41a1-af61-288a3ac8ab11",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7d0f13a5-0e4b-41b1-a283-ca8dfec1e187",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a3093722-8ad3-4d3e-ba11-ee902dba9463",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "be9086f6-52ef-49c6-888c-da494decfcc4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d656de8-897b-4ba5-93e0-30fd96dd6d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e431f268-bc30-46b2-92ec-e6117fb34a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f49bc1-ed14-4666-b1bf-9167c3150dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffed9c5a-501a-4573-8de6-91567a59c9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8b385c-b645-49bd-9575-647b17f3c6d9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2f0ae8-427a-44a9-9141-e567ca30617f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "851654e3-3d6c-4895-91c8-1c113758c688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4339018a-31b1-48eb-80d9-6ebd10743c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e48ac90-61b9-4ca3-8cff-708df80563e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b651a87f-1f15-444a-aa91-9ced544e55f5",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59051033-87f5-4a2d-a996-91bc3242e593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "460e6241-36eb-41d4-9c36-dac9a6da0ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f777c27-38b7-4dda-8b7c-9326d606ae2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf670293-6d92-449d-9488-e0a166a69844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0743714d-e413-4c34-b7a3-35722ce81517",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d86a1a-96fc-421b-8258-eb55a1bb3599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0c19f8-72c6-4a2d-9ec0-5f569127478f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3d5373-13c1-4597-8801-b0d5e82128b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f4c2691-fdba-4485-a02c-e984adaab3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d88904-9edf-462f-b2c4-482e3e4cadb9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9bffed-3907-4544-a7c4-5d88c885d981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9bb8ab5-fee8-45ee-8c9b-925cb5d7986e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d637ce-a924-461c-8e7d-15638b31bf7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72a760b5-b7c4-4c3c-ba59-3d5eb1f8068f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27a81d0-e049-4095-8cb1-bf0d23498433",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca801ca6-0394-49da-a5cc-dfa57e0372d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2dbdf3b-0bdd-4a86-a757-353cbc9b3a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e6734e-4be8-406a-b895-6392872b49e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fe291e3-9ca0-4458-b3c2-dd7c64ee7c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ce2bcd-ad26-4ce2-b95d-bef9cf3abff8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e95c90-e674-4cd7-bedb-82f13e0ebe82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc54d505-13e5-473f-97e6-a9c58e708093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25c1d92-4762-4a94-902a-8dc47344f2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75325c91-f8b0-46ea-88b3-96ca68202167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26145df-8655-4bb3-a3fd-814440898c2a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f417ff3-d88a-495c-9889-513319e16a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec2cc18b-c919-4b24-b317-c9f85b1be9a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e67858-fc4c-43ef-b080-ec027cc49f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "641ad936-6017-44f4-8c88-fe2813206012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0356c3c7-fd51-4440-95a3-7150b28d80bd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5217e2dd-df84-4acd-ba1a-94aa5fe6d54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f9839b-340d-44c6-8a5f-c75c2d263caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c5de65-35a0-4703-a0a8-544da225733a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68034636-111a-49ca-b84f-bbb795665435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b18ef9-3741-4e21-be25-c6741d4eceb2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea80c6e-b4bb-4f5c-a7b2-5d39e73757cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcce6d44-756d-4e37-9fe2-d7c8e966c0dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fc3e59-3d42-43c3-bf6d-06f137243808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83997a0b-991a-4ebb-8019-4ddc5677fc23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108ab505-6d42-4ca5-9b21-e6ab0ca83f41",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab08dfca-5553-4edf-ac30-ec6ed255f572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb74ede-b7ff-4a63-9b2a-3e4371da6c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00819d30-c9bd-44b6-9415-dde59cd8f5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0056f5fb-44e8-4939-a90e-1a8884d8122e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9db096-9572-4d42-b510-c6bf592ae33b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452baa4f-198d-4e90-ba34-893c0d83fc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18306f44-08cd-4e89-b324-5835d67220ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226b8f5f-8684-4f0e-a546-e43b1651bdc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d5fd0a1-4aab-4227-a2f3-964022253c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c9e2c4-0be9-49e1-aba8-e605430e6bf2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4359a0-ece4-4c02-92d8-5f9a33e92b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a559cb5e-f3fe-48d7-8449-1425c8b78676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0420b998-f0d7-4414-8f97-68690616d3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "470c2353-f58a-45d7-81a9-7ca491c6d6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354478c2-1020-4dc9-8113-a33da75ea0de",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f162be8-250c-48d2-ba7f-e97cb6af1f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "804b6e36-afe1-4c5d-b028-995c9f8bc210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6882470-9628-416f-93c8-95eb28f83ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c385da0-8c38-4569-9091-3ed00eff4e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ed2ed4-ed6c-414d-9a8e-35c906022a9b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16585d0e-4c59-4332-a6ac-85fe1a04dcaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593d550f-a684-44af-9898-209407177f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c761b58-318a-4a79-ab9d-00f5af1d23d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b3e1486-12c5-4154-a2d0-0180ea36ee0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882ca34c-a3b6-4867-a200-ab469842e4a5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65fcc6f-1ff8-4d52-81d7-7bc79b9172c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41466006-eb66-4590-8e6c-dac259231ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354dcf23-e209-4d06-9d82-cb18b61865b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "987de983-91c7-4f6c-b64e-39036dbd0f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c603463-516b-48e1-a480-99445fbac4bf",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbc420e-afaf-4b77-bd1e-7e2716597408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f145ed-4857-4e22-8d94-46bcf4e0191f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b636255-6305-4afb-9fab-d8d42aaa9308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95d19132-7381-4834-947d-2b3f8df22023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef405c85-6a06-45eb-8a3d-30ec4c14e0c9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "802b412a-82ed-43e8-9ba0-630b56ef227c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1378ec47-3006-436b-bdc7-cb25205a1476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655402ad-581e-433b-bd20-9a6fb1ed68db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ddba2bf-c80b-4e12-8df4-6328850ac817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49c4900-9828-4544-8173-6743570c0ed1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c4f3f4-db89-4141-9e0c-43e07b29ef33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1ed3ac3-fedc-4332-b113-65b3d972001c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1485c9f9-4189-426d-ae25-1b2af643a07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b426691-6714-4256-b693-5c36d686fdb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fe573f-a2dd-4b42-a1b3-93c7b9f4d2be",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eebfca9-e68e-42f6-ba5a-bd89899f0b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e0b45c-d3dc-4d76-acb2-485206d1c34f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07198d47-e5a9-4052-bb07-2eeec03cbd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6779e8a8-a3d7-4f4d-a79a-2e24e0e3ff36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f284327d-6c49-4f5f-86d5-b2ff197e618a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99e8aed-be49-4e80-9103-84552bd41900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b4e40e5-ee0a-4e5e-8f68-b502447c133d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222ac152-fc97-4ea6-8782-e79668c8404b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "658c19e1-1931-4de7-8d93-2a6783f20022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d26580-15e2-401d-b639-4c5c86225a70",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be945e2-5d91-4be3-bc40-2d1cb6bc6738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5fade1-5813-4212-a32c-5e48bcb21f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcbf1d2-8ec3-4ecd-93e3-b7766d718e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73169e28-dea0-4ab3-8415-854978c0f4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6696b1-0b16-42da-a5fb-c733a5d230c2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db9f0d2-d757-4abb-af20-c72fd90d3833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb24434-7c1e-4d27-b5ec-bd61e8d7a754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce47696-26d0-41eb-846a-b707723c049e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf54e24a-c167-4028-9ee8-4ab881ae7fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852b6556-61b1-4461-bce5-29b3e2fcb4c5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb3fb54-36b5-459f-9378-dcefce1e1754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9a1e43-9bac-403b-8b47-9db8024bf26a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44b288e-40b5-4a90-a6cf-8feb89853379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1515ea94-abed-4031-bdc4-6b29f9f197da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5efe0f7-79e6-4ddb-a839-2446d4bf10b7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f0d26b-d69e-4b44-9a25-757cab36dfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a4f416-4cdb-48be-b4cb-f5be06969dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8952f343-1fe0-4cc9-a26b-34f96d6eb7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdd87b25-ff05-4359-bbca-9cf3c15f0a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b035fa96-b7c2-458e-8af0-33d91b3619c4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39bc1dd0-c967-4b90-b08e-6d580ed03870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ba2652-ad2a-4ee7-8f44-22a3e3359a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c952d1-1190-45d6-8eba-d1597a2910e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "30506b82-f43d-4cb0-8742-44f1639f7c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aae600b-9e31-4633-aaec-1b4d3444f68f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfdd330-620e-4003-8528-c099d4e0beb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9333250b-5a6c-458f-85f6-badfc1ebc82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169f6c59-0554-4b0a-91ce-609f2ab00408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "16634620-d2d1-44f6-9f32-5480000b8ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c1f634-9d9d-413d-a483-3f938df10080",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cbe607-c82c-4368-8921-a133e7129d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6ba23c-6a38-44eb-be3b-d1eaed36ba72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c904537d-d119-424d-b8e4-6d8372cb57a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b17f7eae-432b-46ae-bb64-168382f081b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b485fa9-9909-49e9-94b0-db3d0ca2c378",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a10cf60-84da-4286-8bf7-d47e5c016fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3cfdde5-e76d-4629-9dc1-d8d318626771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14f7c4a-0a53-47c3-acb8-da89ce778fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23ffa7d1-650f-4e66-86c7-175e7958f749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b1f0d3-2abe-44ba-9bb8-b7fafad3ab6b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e6cc56-f8e7-4c8b-9451-a06db88e540d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28902def-6900-47db-abc5-74c6e88da13d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c13b2e-8d43-4d99-8356-8573ca5b68ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2430427a-9d34-419f-b099-8f04fb1a11aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842ed703-1eae-4f83-8a91-43b6c8cca99e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd84fac3-055f-46f7-9f3f-860d54a1533c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7fae10d-5aef-4ac7-bb1f-2165e6cc6eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb393e21-8b4c-4238-b28c-1f612540ea37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ade56ae4-d698-495c-9dbc-dbce2b46d27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c671ab41-5229-46de-b386-6afdecfc2003",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b218663b-fbb3-41ee-8c5f-9dcb7b6a7587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3becd6fc-06f1-476b-92bb-c4828433a6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ded32a0-466b-42df-a498-da6f2bfafca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12ace62f-106d-42bd-8844-ad16f44f1328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6666162-220d-44d1-9dea-93e2958e6c1a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82951859-5045-4e95-9368-9d01c0e1886c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c60021df-1120-4431-aa9e-f0d21db2edc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4870b8f1-cbe7-41ea-9673-0ad836519390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e35de3d-a08f-487b-9393-88ad6ac95f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b12a6c-b443-44e0-a621-93ac92e9adba",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e8bc68-6968-4906-b853-e1a4369603f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd1bdaa-afea-466c-bd57-38fb3d7551c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97adfa52-e97c-4168-b273-11b3955a7e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d07b48c-7c40-4697-a112-dcfe4c788a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0558fe4a-d637-4194-91b0-43a0fdcf6534",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be717492-af9c-40ee-a026-5c207ac20b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23419c92-1717-4d82-9c81-a9b92076ec78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c31ca19-718f-431f-8e49-7d369e4c1825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b69f073b-54be-4a1c-9d95-69b963cfa04b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546ff566-d929-43e2-af6c-42b5e375a536",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f8db03-812a-4024-8b05-1f31d1553143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47df4710-b961-4355-b5d4-05569171e241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50930128-a954-4c34-bc59-edeb6214af74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d42e0d40-92fa-4d12-9d37-074838edf184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c1bbfa-3a22-4198-b6c8-21d0ba236711",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8247f8-5407-4c33-b2e8-b03135dd688e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95008532-42bd-4396-ae73-fe4ff3c6911d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d341e1-b405-40ed-b87d-4d9953858ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dabdf639-cffe-4f1f-ba09-d3928a4cdef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9489e18-99c6-4af7-901b-437d6baeb5a3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ddfe7f-5c34-4a62-9d91-55dc91a5bf00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e3f155c-800e-442c-ae47-6ee060e7d3ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e5c135-fd3d-4dc3-b5e1-fb418dce1418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f3afe3e-0b06-48b9-8eec-75f8e876a540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107c9cde-b907-4654-bd16-8da3ad02f99c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c4aac3-8469-4fec-91b1-99c79cd0d4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "351a18ec-22c8-4d7a-8ec9-85a984903355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30729bf1-a655-4ddf-a3db-35275b84b650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "78241487-a038-4aaa-990e-b02e381e5646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2650d378-8975-4be3-839c-f6d6ad73df49",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6f30d3-a619-4b9f-b52c-ca4fd5a42e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2d5aee-13a1-4396-9f4b-6156395846a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82bf0ce2-2b93-4af8-a9ce-73959082efcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc0d6ed-d78c-4c14-a600-1e96ee870cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64eac1f-9c28-4fa4-8119-00498e78d7ef",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10486705-f773-4f19-9d4e-7ba6b274ac93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ceeebf-935a-4f64-8c9c-9e0aae5b36fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5330ed-da5f-4a1f-937b-9978d195cb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea76c50b-5149-4bba-8ea8-355ea7d94d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911f0dc6-c3c5-4ef8-8145-4558d0e2ddf6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299d4a30-dd44-4669-8dd5-a4ca7c645deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205b55bf-338b-4ca0-9469-c28ed389c888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f03728b-6148-42fc-8269-47e42388cace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c47e5a2c-e7ea-4d20-a95c-31b11b3ddbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf899b8-c5ed-4e82-af7b-dc295e131e09",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced96a15-40bb-4736-98b1-09d6825e5478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54630e3b-2aca-46e7-ba5e-03c6b56a5bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e08fae9-1f67-4160-9c79-db2e1814ae16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "47ee35f0-57f0-48c9-a9b5-f2cc71bed6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bb15f6-1c52-45d5-a8a3-842c381acb82",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b207bcc-68ae-42c4-ae6d-44e1d2ef1c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df1acc3-8d38-4b45-ba0a-375ac2c9fe05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b29e64-c35d-4613-94e8-4d59aed6a6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "179d6504-a463-4dec-8a93-3a8a4b27a0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ba3e8e-a47f-430f-9abe-124f2fdc73bd",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9a4889-5efe-4830-aebc-e60cbf744197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf42c15-eedc-47af-a545-19679ca85941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9c64e0-c7ca-463d-bef6-4ebb2898fa7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "14fdcee9-ca67-4204-9153-68bfefdf870a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ae59bd-4fb0-4640-b09b-943f9991e514",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be60e78d-9357-4fb9-a6fe-02097afea0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a3c979d-2156-4ee1-aa4e-2aaf995e8fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d562e7-d95c-4822-b334-356701d824f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6538e49d-8884-49fe-85b0-8ed48f057330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6553a0be-dd26-47ea-be91-71e7cb7da0de",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7946f641-6675-4edb-8565-4f2ea4002935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95dbad83-f367-4d4d-84ac-9b4e769d6baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d9332e-4b9e-4365-94c4-19359f5967cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9302243-df7f-4156-a52b-476da42d2253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8ae0fd-0ea1-4f38-8a71-277da56e7e00",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb40b8ce-9cd3-4c9c-a60c-43a3f7f935f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eecb94dd-a673-4223-b71f-56c400d33ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c99a1e-5003-4de5-98ab-84895a5d1cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "620ce1fe-e1e7-4223-8cae-ee20acd22c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3881f4-adbc-4b9d-98d3-8598aae5e2b4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ea0285-157f-4fd7-8f95-ccfa613ef82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30cddd59-012a-4e27-8fda-51d7e4a70018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f8d496-188b-406e-972a-469878861219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "592668b7-ca27-4f06-b9a5-24211605f061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfcfaec5-3e69-41bb-81f4-7cc5708ef13f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b220c9-558d-4588-a428-dfcbf8caa5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a92c6b1a-babf-4c1f-9b61-068b819151a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bf64f7-cc93-4d2c-90a5-b483caf5fc4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "feecd3a4-18e1-45ae-ad3a-44d48a622af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6e64ab-441d-4233-ba01-4777f642cdc2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b70166-b2f6-46d1-a7a4-f4ef06b02bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "365ce77c-9f65-4c97-9619-cbed951a5610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7ec9f1-a142-470b-9796-ba61acfd2570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b2778c7-6c63-4c4d-8e91-41d09c9e2ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0de5bf2-b4be-4adc-b52c-f92391517ff0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1153edd-e014-43d8-b941-08dc5b418eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e87b0e-cd5e-4327-8cbc-a3cb0c9d311a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ea457d-8546-4231-9ad7-5f8311872dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "82a1ef15-af32-4314-a594-fdfc10ac0bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083bdfde-f2eb-4136-9013-0b9d6ac72d64",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6847a6a4-1851-41e6-a128-667a3503eaa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946de111-8ad2-4924-994f-346171f6f51a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2e2842-8ea5-49af-a736-1a92ee496bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7504cd61-84cf-4a60-8a12-37f3717c892b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcbb557-21fd-4c02-a18a-13d963d72f29",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69ad7ff-c30e-4b49-b851-4644fc03e793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee70a14-ed86-4164-9d78-4bcef9c0eefc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f4a068-4596-4c8d-9dbc-7bf6b8246bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d720eb5-bdad-468a-a8f0-70f2b49bcfb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c78110-f9b0-4296-9a32-f0b425f44042",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f772a8-3954-4a3a-a5ee-893b9b14c038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6225ef9c-a242-44e4-be56-716bccb912e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7208761b-249d-430f-82dc-6fb4202697b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "340d160b-f868-4ab4-bc61-13a417091ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eded5a53-0ab2-4610-9bfc-d16626acd1fe",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba474c9-9781-4522-baba-6f4f648a1b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3131e39e-42dc-42d0-9349-a10d973cd117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddbf4a2-b1f6-45ea-821f-2279430dcff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "141b7a02-70ba-4106-a250-42050a8dd4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081d1aa7-9455-4321-a266-c664eac154db",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe72425-b7e8-423a-b2ef-fec98cd8c412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb47ba8-6843-4993-80a2-c929a3ddd98c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1b6bf7-e505-481a-8ba0-a6e450a940a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ce03816-1f05-4326-bc40-452f3adc310a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931affaa-70ea-4459-869e-2a4d8909e443",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbcd927-0fa0-4dea-b16c-ad1bbd445d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a88e9398-8f15-497c-885a-9504015cac1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8bd0ec-7b91-4c97-ba68-d060a9f294d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf4364d7-0342-4ad0-90fd-ea193f302615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614e89c3-57a3-4b8f-8f77-3bcb5a218362",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002a4ade-fe2e-4cc1-8bb3-5c072a9dac84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5d3b29b-b42e-48a8-af08-1d7f9a843047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159b703a-f2d5-4648-878f-892d8df0df1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b3f5cac-0390-4688-ac80-5329d5de9ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9773eb75-bb6f-43a1-b4d9-6c581285bca7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4734f6ba-066a-41c4-a6f7-144030bd5e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9be6e15-d275-4c4d-aa28-3852b6bae616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db668d0-7076-4aa0-878e-498ba7d6453e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "362fdd63-fa07-49b9-b2ca-3ec72f790728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ef1596-4140-43b3-ba8f-1face51a24f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af945e28-a92a-4212-8b48-e55dc43f5e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ea0a73-39e1-4adb-a1df-9f97cbf1e23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645afa7a-4918-42ac-888b-ec14da0f78dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "28cb1fc5-c36b-4c7f-aad5-02a352adaa16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8f19f7-997f-4245-ba6a-155a98b14628",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9064c3-4f2b-4e3d-b621-6c00f3cffd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2693ce-d4db-4949-acf1-1975656223dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bece417e-df97-472d-9f42-d28f38857370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd5f6ffa-800a-47fb-81e9-f03dd3a16bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31175a5d-db95-4c72-8d73-96586ba6ee88",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57eee7ae-a5b9-4b68-b099-a7586ae6fb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a04ca8df-3e36-44ab-94f2-c37f9a36a0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27affb88-d50c-4e96-9b5b-43efc8d554a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e37d6009-fd76-4c9d-b038-cf8637fd900a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a39b6b1-87ce-4c1a-aa32-795af317ef6d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abc7e00-811f-4f10-ad68-25ace989e702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59922527-f6a2-4dd1-8534-a6ba1340c796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dcfb74e-4ef7-4199-9265-1a981a163b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63955d75-76cf-4ea7-9f37-2929901f8e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2802559-260f-4a0b-8d86-52175e7365df",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cd8e39-70e1-433a-a6a4-12489a5b9f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4c3fc8-c91f-4e47-bbe7-c8175c50126b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f379f3f3-6643-4272-9a0f-d847130309ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3f588fd-990a-4039-8f28-c422e801a156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8e5e9c-64a2-4e06-a9d1-a93d8925c3fa",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4679e889-1dff-4088-9155-a140e95c9ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4603a9fd-dbeb-454b-935c-4c44bf3368de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fedf0df6-aa7e-45ce-baeb-3b12377754d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e20a774-895f-4144-8526-09f759bd3a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2bf718-6b10-414f-ae01-27b9462e50d7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccdb4ec6-dee4-4fa5-b289-6ed104ffed70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bccd167b-285c-42dc-a3e5-8380eafb2279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97fc544f-1eda-4725-94f0-e79961f0682b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a688125-7dc8-4b86-b45c-392c8830bd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368d3bc9-fad6-49f9-81f9-bd907ed24dc8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9ad2df-73ab-4917-9b70-95dab1748710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fbda316-d1bb-44df-8877-8191c9df5397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2375564b-0848-4702-822e-4dc3f2ad4833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9929b6c-99f0-41f6-8d94-64e3dfb7b32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03553b23-dbc1-43a0-bba5-df34a86d7172",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b8de96-d69b-40dc-affb-14de13e051ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb153682-96a9-474b-bf46-f6b5a9918a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab7979f-7c60-4057-920d-c13bfcc49c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b54b735-e12c-4092-8580-5dd56bb51f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e709578b-d5e8-4cc3-8796-517d6c2abb29",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab30ce50-f17f-46c2-b75c-15f563d20bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9395fa0-0615-405d-827a-aa8148abb68b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae1b0fb-7232-4237-a1aa-ee2de163c731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77f8f13a-0485-421e-baa9-140ba5772f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34989259-1989-4807-aaec-3fd4fe99ef3b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db934237-40a2-406f-9da3-4f74d1db83e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b106829-1fef-46f0-8fee-665d9586735a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e5d0d7-042f-4af0-bc05-0c31afe8555e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9f3e88-3f88-4e2d-a8d4-d875590a1d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0530e5d8-c69a-4c52-960f-3f55071f8dfb",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e50b54e-545b-4a68-aec4-444d828f3784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc88b12-a14e-4968-8315-73ffc3cd14b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865647b4-1595-4422-8212-e6982c8f4cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e0dc76e-f971-4521-8b73-ec3b049d5262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250b5ce0-a702-4088-ad6e-1af965610237",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23914dc-08cf-4818-8c73-32e2a24ee22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c1c4ce-8959-48d2-8742-0f6fefe10404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ca384b-9de8-4b7a-a81e-9f7616350814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a6484b0-e76e-4219-b5ad-757875c82779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62c900d-eb7e-49e3-a91b-1b70709c27c9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1397c17b-4a2a-4bde-9d22-91c49a84d5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24229c7e-9908-4f22-8e65-878e49050758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c115f2c3-07f3-4c2e-9f2a-7a0924eb2dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "978b4092-5512-4dd9-9bf8-0283428d7fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f93082-cf9b-4911-8d59-29b5ec3f9b96",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0480e6-856b-455b-99b4-307f9733011e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdfd10a0-66ca-4440-a272-36a9b043dde5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8995b19a-90c9-43a8-b808-285d0c99ff04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "63348a01-4d56-45fb-8a7a-0673554f7f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ac6579-e412-4685-9015-2fbb129bbb08",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72daee7-ea2a-4877-992d-05d3af32ba9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef45f16b-d7e3-47c9-a820-1edbc78ede2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7ad731-eada-45b3-9bc3-63c596cce5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec89a2d5-3183-488f-b682-0bb8e9600718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167dbee2-e5db-4a1d-a32e-1d95cf6d4e62",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d0c7e4-608e-4fe1-8215-60f2cfbac783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c8a1fa3-50cc-4c81-bfb5-c1ddddae8320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b34b528-0ae6-4314-b211-8a44193cfa97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b3aacf7-1322-4352-a6ca-d9d2fab2100b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1889e17c-6d24-4e39-b3ed-3e26268862b8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58714ca6-d718-4d95-8fd7-3c277747c46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e533c67-84fb-4cf0-bbac-0b486fe8d661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6323b1b5-d2ea-4965-a718-72cb7dd635c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92b82aea-d04b-45d1-ac91-90f30a385c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829853da-8971-449b-896a-22ecf62d2661",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "defbe813-5b15-467d-8e21-d0af822aec19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c78a4c31-9163-4fa5-b2f1-58672aa5abc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c4e5c4-0ffe-4c58-82d6-8c6554dd8be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "486d0042-311a-4d0b-ba74-9175e158b024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb51322-456e-4520-baf2-eb16cee2e14d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b523ad-7dbd-4d2c-bcca-01fdf9e43343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74029800-059d-462a-a1f9-32dc88f66a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018f84ac-c8af-4bde-98aa-d9c1063b5bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed86874-88e3-4015-b62b-dd3718f8ef9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64201a89-b0c1-4657-9ea2-8d5acd2b163f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e2b4df-7e70-4f8b-8c9b-926caf14b89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75cc9264-5a76-4f85-b875-2b87394e85c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b808ab1-ff24-4caa-8743-b73af2c62ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b63e0ed8-6718-4ab9-9ac3-19c2fccccc85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b3a3c9-0623-4665-b6d4-1bb8d79d4b12",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b39411-7221-42fe-8d1e-2272737feb1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80300610-2bf1-4a33-9f8b-fd320f26c9e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc60ca1-1e10-41a4-815e-3e8fc7b95501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8d64dd-abbf-4c4e-bd26-7d58ed688e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c09528-e2eb-4a3b-a895-8569ddf9015a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5290489-cbe1-452e-b96c-75df5de69479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e8d0df-6aa1-451b-9bc4-e658fe81e3b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aafca42-6e21-4bfa-9e51-71b61c3efdc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09acd1e9-d9b8-4543-b65b-61119cb1c0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0d06bc-8e40-48e7-bcb2-88250dc4e2bb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c30bdc-81f1-4d8c-b7f7-0c1d192b6501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec3210c-c836-4434-b77d-45ee92641bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8029fe7-8209-41d4-bdfb-31b36c1832f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "58e83ac0-ba95-4739-ad4a-5d7a2d5ef4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a015b62-7d2c-4503-8ed5-534576efeef6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196ebb9d-591e-438b-a31e-4a5f88aae52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ccdd5b-24d8-465d-a717-5e8a572d478e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afaaea8-beae-441c-9962-6642ca11a020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f388ecd2-3d63-4709-8380-74d76eebadea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94052504-f291-490d-8cd0-c8f61768f63a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e00213-8f33-488f-996b-2ebf14fd0aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4e22d0-2d83-430d-b9bb-7b526d0d549a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1e7502-e452-4d39-9cd6-b07e0992831b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "417559af-0685-4fe9-9d66-d8f51893b876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11dae551-15e9-4c20-b72b-723da2c1d282",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8f861c-55bd-4d2f-b49d-dd5301b8ff77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f20f3d5-c4b6-447d-aa25-06f4ea4fef82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7dda59d-1c1f-45b0-8a13-420bb7a4a9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "156f237a-ec0b-440d-9ffc-b1d1745bea9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c90b83a-68fa-4d30-9cdf-8b652933dc16",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f96ad9b-d46b-44b1-b732-508bb67322c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d3bb1e-eb96-4d37-81f2-6756ddab2561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26232376-b37b-48ab-beda-ad226f534463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8023dfe-d181-4561-91b8-05eb054fd706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a924bf6-ec48-41a4-bf17-72d975740093",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e0534e-cd7f-4b32-b251-c798b6442a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cf864f8-4d7f-493e-85a5-5a5ada60e979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075d1090-775a-4b52-84a5-b6c495b31710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a930871d-6ca7-4b35-bb86-e86ea06a2020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d43b1e-ac85-4c22-aa54-3b0696ab6def",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d6aeb4-c4a3-493a-96ce-908580343a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf894983-2937-47c6-9fba-343570514e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8367a1e-1ec8-407e-880a-c9898577da84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a02f819-32f3-4fb7-9c72-9b0bad0a81c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c0c89f-0721-4d5e-8f64-420694ea3c24",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdf705d-981b-40ea-bd33-90f6f9ece67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db7aa45c-4ac0-495a-a448-2dcfa6874c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099c4d4d-7657-41d6-9a0a-3469a5b6f185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5edad313-3674-45e7-b6c7-a784706c5599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9e37e8-3ce7-4cfd-9523-63f7d90244c3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7f1169-1755-41ae-b2de-02458bf6d08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e316e008-63a6-41ea-9953-28dbd5ae6c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8f9d5c-8287-48d9-a4a9-2f1e3ce2d037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "40bf4683-6cb4-419a-8641-bf97eb498721"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c4d84e23-aeb4-4e4d-9043-a58983a0ab73",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c85bda83-55ba-464a-966d-ed80338878bd",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddbd235-2728-4740-958d-256445e0cbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2988e214-bbee-44f4-93a4-a8cffc0c6fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ed488a-b5b8-4105-af20-cd5984a15acf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3684b26b-35ad-4b9d-abd8-bc77dd961af2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28b5ad05-0527-4ea2-b654-34e3241af432",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33a0f149-9315-4329-97ec-921dbef79490"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "608a228a-befb-48e7-b696-16d14e2e7537",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9411d241-2b9f-4de4-8c61-7a1165fea6ca"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e5244a1f-705c-4b57-bb9d-faae1cb461b8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "93ab2e8f-3b00-4f77-9a97-5192dbbb12d3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e39cbc32-b517-46eb-b568-0eac1c33de70",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "65514273-d2eb-466b-8bbc-781903578917"
                }
              }
            ]
          },
          {
            "id": "268a5f2e-e270-49b8-bd89-44437834831b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6a960618-e9a0-48c9-a90a-98eaa6efb63a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "4d49f669-b49c-4c0c-9d57-bf607a4182b6",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4ff79f-9c5a-4bff-9cd8-4b90bb01399d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "21dcd21a-910a-4eaa-b0ff-72bf62680ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c0a7a4-a31d-446e-8f60-ba1ea3d4df32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71faef4d-cf12-453e-8c6e-f59d0db767a3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5f06eece-4dd9-4d7c-b450-1221499268cf",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "805acc6a-9855-4f03-9322-13887343b834",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86e9b99b-0d54-4fcf-b49d-744847389145"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "491a4819-9ade-4c87-bbef-41ff9dc17939",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "34b452f8-1475-4118-a8d3-448b3b090fb2"
                    }
                  }
                ]
              },
              {
                "id": "c6c2a106-f728-4db4-b07d-1a34f65b956f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e09c0ad-e509-451f-80ef-ba6b131f9038",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7470912c-a05d-4598-b0f4-e9e442b971b7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67101647-2815-4f83-96de-826df37eb8d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e1279e65-d1cc-4ad6-a0f8-51c790706bbf"
                    }
                  }
                ]
              },
              {
                "id": "12029a54-e4c6-4ba8-a7ef-13199c67d179",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "571ddf89-f40d-4cc3-9366-62724813a14c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ebe6a7e-7836-4eaa-b9f0-26c2a2bba4fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f89a15c-53d7-4c95-9dca-faaeb0ddd710",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3d16c773-ef18-481f-8801-0e5b105ac41a"
                    }
                  }
                ]
              },
              {
                "id": "a0b88105-06df-4791-a887-4a36b02eda92",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aeec0927-8773-44f4-9540-0da1e2e123a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "438ddfb5-8312-4154-a485-2992ca75f351"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13ec23d6-f9c0-4a8c-8ef3-d3ef18d3ddfe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1b929412-68d0-4e12-9510-8d88d0876114"
                    }
                  }
                ]
              },
              {
                "id": "904cd204-42b9-4da8-aa59-837dc9abcbfe",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffb2fdc0-4daa-4c6d-9bfd-cc315cf5f061",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eaa5ed48-3ace-4c0b-88a7-5e2cf1e70cc2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bea1162b-b87f-4dfc-b65b-6332bf62ea87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d84367d3-8843-476d-9e5a-c01561a8cd64"
                    }
                  }
                ]
              },
              {
                "id": "b7b9f09b-0afb-48c3-a397-b2c579a81512",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "346fd67c-763f-4346-a2a2-589090d4d733",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6cb80b1-fcef-43b0-8e8c-1d1598d4489a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddc76312-f8f8-47d9-89cf-ba10176fcdaf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "42da8d68-0739-4246-9a46-851d62794130"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "abc488c0-623e-4280-bf2b-a5eeeaacebc9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d5176a21-5bf6-4bd6-848a-48d908230f8f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c2d2206a-eb6b-4193-a6af-16fa4ecca986",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08766e79-a193-4ca3-9f45-57ad61fca425"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60e7983c-9c2f-4ddb-b2f0-818c675ccfd4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "486109c0-b490-4d50-8b04-8ac2dc339624"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9aa76a0c-252d-43bb-bebd-c6c37599688c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a3559a0-0e10-4de7-8dc1-551f995d60ab"
            }
          }
        ]
      },
      {
        "id": "76abb443-b26a-4412-b230-4bdb5e203dc0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8137e11a-6834-4a71-92e6-16636ff7f031",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8bbddaf8-5ab6-4d8d-b915-8975bf26083b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3bbcacdf-d2be-4ca7-b3b4-c9a5273eb8a3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7d1c70-375b-4a3b-995b-c3fa5e14a088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2fedae-801b-4f10-be39-9e7c45f50f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439579d4-9240-43ee-96a6-59599da24d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc513cf7-e209-44fa-9ae8-17ce26c13e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7dd6f58-5115-4da2-a627-8484b1b99511",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a941c41-5c0a-4b11-bde7-704f53fcadb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43336343-0148-4710-9b04-cc92744aaac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb3eed3-3373-481e-bee5-a3093cf9a650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "04304445-e9fa-481b-8a6e-abc99b7ec46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fbb2a9-df34-428c-8b6d-753a77b840c4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c9c864-79cb-440b-824e-dce2617981b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b895a98a-356f-42cf-9e8f-2a2287c95821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df37e14a-7cb0-40e6-af57-9c3d420ac152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4504333-30b0-4b43-a028-60bb04c27f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e09866-db38-4d57-9b2d-65bb491081db",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6286a1-a804-4543-b6c3-6b958b301b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "484a76bb-9f20-4e4a-ae70-1b6f6f3c9711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9013192-4958-4642-ab59-d74ec0d83296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9116aef1-4a17-4644-a96f-0e7c2260ee0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c334c64-59b4-4f50-a061-e98e4fdb78da",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58cd2f2c-380f-4fa9-998f-199786eab29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d736d5a3-1ae9-45f1-95e2-9ce35f69d2a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18f482d-d85c-48d6-bdbe-54e04a7c1dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f78ce49-3896-4452-8e1d-8b3cb1e0c67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc329cb-793a-4122-8683-79468098f5d3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1492a979-40bb-469a-9b65-ad7f91f015f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e92e941c-daeb-4e1e-98d0-f1bca9f23ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29fa53b-3976-4cbd-8d80-770f7e024f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f531ea3-fa07-41b1-ade7-a3149cda9678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4414bf4-04ef-4ac9-b16d-301f379573e7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8c8f15-e23c-4fda-8ce8-c6b44987bda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a013a25b-f786-4bb5-a30c-b02608ac1388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66915cbc-c2e2-43a7-a667-5abd4bb18dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ebddf4-7eef-4d68-9207-364f501c7a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72c9dfe-212a-41db-b025-55c7b07427c8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8621b720-a6c4-48ae-857b-695c4a0443a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f264a4-6959-4658-8084-6217bb877392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd99deb6-481e-4a8d-9c8c-70a9faaf813a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01b63e30-7072-44ca-b54f-c2095de253ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7baaa3-e94c-4180-8601-7a64a434afec",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437e1865-cf72-4b39-a6bb-2a7c2d50b4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44aeeb87-2b74-4e14-87ef-ecbb854319dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a567ab53-be8f-4f41-ba2a-3305960c12e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4245fe8e-2c36-4235-a31f-4516c752c06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c84b8b-b27d-40df-af61-40a673100e41",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe84e565-8124-48eb-a39b-4c0544b4ed5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcee436f-3bd0-49d8-8aef-660dac59f98e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07c6f1b-432c-4c8c-9bb0-d50509428a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d72a75bc-bdd2-48dc-ad49-fd4651ce4e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5c716e-78ec-4ab4-8eb2-6a139cd5aa7f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c743bd7d-667c-40b7-8631-69d619eb86b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d63c242-cfaa-40ed-ae9e-456bf4d09037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890ebcba-9cbb-4d67-bf60-5f3bf2c8b218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "103a31ae-2079-442e-b586-7329233eee4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218d5f84-7ce4-4594-a701-cbb5ff221c20",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56c3361-682d-4d83-8e81-c8bf579d8848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1bfdecc-0e0f-4744-8dcc-e6fd0d171448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe8a29b-d590-4769-ba60-901e920ecffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5328d062-8241-419b-8640-b06a78e55de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76914fa2-1433-476c-b53a-55f744a9d0be",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12432c6c-81a8-4f6b-a787-02ec8dd67623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a2a9721-6771-4b28-8891-db83070b281a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ad4791-b21c-472c-a782-8d39c01b3aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c24167-0cb0-45b1-a2bb-f01c2fdcbcfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fc58dc-32fe-423a-a0d1-c76095cba3d1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8811e6c3-62e9-48b9-b4b0-c07e3f64ff15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03d4fcc-cea1-4106-8cda-264b1fa6e1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a574d26-c67c-477a-bbe7-01bc6b0fe539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "83ec6dc0-8cb1-49f2-b7bd-40c608c6c6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0439cd-350c-449b-b1f2-0dcd82e90b1d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece68faf-7ff4-4c0f-a2f0-496ca3a1caf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f17021a-73c9-4a3a-bb10-86eaacc79b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d260e0-49d1-436e-a091-063d74351fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9c5818-f544-4629-96ed-814b72ae5a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90124be1-75f3-4757-bbef-052075b8c2ff",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf34e356-e45b-4453-8827-0c9d71aa927c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77fe9fac-918c-4ddc-b1b8-8a5619813fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40595e1a-8669-4da7-997d-6b3254dc6356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "40a14238-39e0-421b-9814-b7b8808866fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ee9c3c-2293-4e10-9653-7dd21cf03adc",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04f1c4f-6d2c-4ea2-97d0-04cab81e62dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45cc3539-24e4-4f36-af88-48416890ba3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbc3fa8-24ac-4797-93fb-f3e22300045b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "56ff150f-40e1-427b-b260-e037cf563c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1e088a-de59-4509-baca-51dcd237a80b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6acead09-77de-4d02-bdc1-502a156994b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7a79ee-6f7f-4776-b6d0-5ccff618b867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae4cdd5-0fac-4787-9c6b-2a333ff62157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d092c135-c19e-4062-99ff-f840abeda452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a45113-ed85-4bae-a785-9ad4515012a1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efda2354-f8ba-457b-9824-89ed053b4a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc1c278-fe93-40e5-97ff-2e3dd3c951c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1550993d-38af-4ca9-8e59-7f51ee031d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53b3afc8-7f4c-4de5-9f4a-cbd5fcfaffde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6c4091-e422-4a5a-9984-7cbaa47473a4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb20eb39-74fb-406b-b490-2b584d2d2e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8833757d-00b6-41cf-aac5-646088eaf5e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff2a0e2-416d-46bd-a812-1ca2870c0d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbe5ad87-17bd-44e7-ba95-2a91015a44b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd6c4c9-bdef-4502-9c5f-08f23698f9fb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e40966f-6f53-4670-ae45-5b5a99d398e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea77ed6b-8039-45e5-a141-e5029ae9443d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4673e8e2-c80d-4615-9145-9bc584948cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c4dc93-85b1-458c-8f9d-44b99ea96f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3771c161-eb0e-45db-b592-ede3adc5bac2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6970e37-ecc7-4e50-baf9-41bb7147bfc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "428170fa-5587-4a95-b6c3-55ffc903685c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63a975c-cefe-4138-8f9d-a9e85476127a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ee04b0-2977-4e97-a335-dfe27a36a84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8271ae72-8c39-4454-af48-1f678a3fe0c6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f17134e-419c-4977-a086-f01961adef16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ee85a6-5ea1-42dc-a7ef-5d8d72b810fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edfbd00-c3ed-466e-b792-ed622b520014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1d1530-369b-4561-bb36-c55c51e5b945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58471b3-5fbe-4e23-b67f-142bf7d8d7f1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a725cd-d639-487e-8dbe-84860a781bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b43eeafa-a123-4950-b05f-aaf6bd5a91e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41b42bc-b264-4821-b781-ca5b31e9338c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "607f036d-8707-45c8-bddd-d8224b93f704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f142773a-0b2a-4305-a3ad-5e32fd3f34af",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b7ea2e-23df-46ab-8c94-412fac02c041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d89a8b-d06d-4bbc-9d67-b44608bd05d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c020f76f-c6b8-4077-884a-8d47158f4bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8c6420-02dc-4eec-ae76-4d27f27b5398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1c003b-00b9-4353-87cb-d67381d2cf30",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4e66b6-cb8e-4da0-8358-978a635a38f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec84e9e-4afb-481a-82bf-c89ced47c095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766c9146-2b1f-4d02-bd70-b006cfd7ba1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3561d27-3da4-48b6-bc87-85109bd566d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d88f6b-1057-4a3e-be3f-74c897b433e0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3469c42-f804-456b-956b-418f09d5410e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd07270-9c43-4cb3-88c0-021c4e2c0380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f6c157-21dd-440a-96cf-c985918cabec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb52f0b9-7aee-46c6-ae20-39c5bfe6b9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6db8a88-dee5-4a78-806a-a9d0effd9ee4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c6fe67-c8e2-4afd-88d6-5cece1ec560e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a7d892-83fd-477e-bfdc-87166b2bee34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913862c0-082f-4c34-b7ac-c2ec2cbc3abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da9c3bdf-1344-4a3e-a52c-21db3426eba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd8d758-bf15-43a8-9255-8e1eba7af5dc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d972c0-7008-434e-8a6c-6730ae08dbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac1ba4aa-f94d-4511-a463-10492cf5d118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9eca4b7-125a-425e-9765-32611d57e6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bea1f01-e5b1-4ef4-980b-52250e4d7237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b734e9-8009-4137-966f-d30e4ee686b0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02e0f4a-c8b1-464f-b909-a7fc43543556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e9e134-e794-4458-be00-6df8a698c55f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5658b6-4edb-467d-b500-c1de910a0f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f50ed32-398c-4d60-87bc-b35b05eb6b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877963ea-2357-41f0-b853-25d64652f958",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f4b3b0-51e6-43f2-9288-e209cf5b4e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b92f26-dd47-4f00-966b-65a26c1dda78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94d86e2-c3a2-4b93-84f0-c9b3131c932a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "471e4999-d6ac-436b-b429-b1425b0b37a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626ca389-889c-4bb5-969a-137f2dbc5d54",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4580f18-73bd-49ab-8e18-7d85b7bf88a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f75fd5-d1bd-4276-8c9e-51b787275f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822d62d2-e313-48eb-9b16-76c5b7844bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e79229a5-6f48-4e1d-9e2e-7bfedf9404a3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3d665fcc-62ac-4fb3-a633-cfddf0d5ab2b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "566b73e7-b567-4c8d-9fc9-766aea49150a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2eaccc-ee1b-4abb-81ae-af772494b51d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2d3a47-fe67-41bc-a49d-64716d199c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b30bb0-ed25-4f30-a02a-9cfae0b80c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19969ec2-f6de-41ca-90b0-ee81f1c0d87d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c71bc9d-3ad6-4b22-89bb-5967f0d71bea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53524f16-730d-4b3e-bced-14d84adb4492"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca0945ed-450b-4efc-92f8-64dc4331534e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43af5324-f754-4faa-a781-9e813187d72f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "332c06ae-8577-416b-a959-7cbd7e8a4930",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "78e32a1d-93e3-41ba-9f83-636ebbf4db5e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2dd439dc-a356-49c2-b1ad-04436927fec2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e92fc558-f178-4ac1-8541-2066bfaf30e8"
            }
          }
        ]
      },
      {
        "id": "5552d885-124a-4e08-b8c7-4f6ec70e0c00",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "3cb10e04-c860-40ea-97a2-1605aea2a1be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca983820-b95d-4ca2-bd1e-aa07ead3b735",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d160b90c-5c22-4150-97d9-9540aede3a44",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5612510-685a-4ef1-85cf-1780ed88d48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "783d444c-8cf9-4b09-9d14-a07a0c034081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023a712f-1698-4728-a51d-e493925bc12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "831ace73-4237-4387-8024-ad434d31b6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5c8b65-d02b-4bca-8277-382926a66fc0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9a6712-fa59-4123-93f3-9ba0649fe2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b444c4cc-b6c9-4e45-a920-7a29e55c4297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885aa167-5807-478c-985a-4278abb3ea6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ffd515c-85cd-4668-9cd4-959e62bb7e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833085fd-308b-4670-aa6b-ad2b5d9d8621",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da30b044-fac3-4c3d-9b4c-e1308145ffc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b1af952-7091-4fca-8bed-554c5201e03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd1e5a9-ea1d-447e-aa1a-5895d0f43e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac8aa2f-3ade-4be4-9710-f0afe33b3ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc75ff34-1842-4255-8864-037ac3a27db1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f867910d-5649-4417-a64e-3fcf9946f32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "052fab1f-2213-443d-9dbc-b761c665d7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bacea8a-d099-4814-8ebb-29a5d39002fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e53527f-09cf-4874-9209-d07d868d2a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da2681b-5c8d-451d-86d5-e6691a2b0d54",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac3b7c9-ba99-45b1-b864-17a104149435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c68e9dc-c70d-4911-ab5c-9a02e2a2a332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5a9ab1-813e-4924-876f-c401012b2769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "03945dd0-37b2-4198-b137-8091ec911beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92cd4e2-cf3d-4465-914a-ea270b1c455f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5042a1a6-2e82-4cd6-b327-5a393309437e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e91f5846-53d8-45a3-a4fb-5c01e3a12dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d87aee2-535b-4e22-ae02-db350b7f039b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d1be68e-9fd5-4b93-9b88-91e50d38e1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9406b831-c3cb-4de4-bec8-4d403a57a779",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c2af33-00d1-4357-aa49-f49bbb930659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a050cb4-d44b-4a03-a131-41ed9bb71180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f070d3e-5523-48f8-ad20-3b6af3bc6cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "216627e1-7c9f-493b-856d-2b15ad20c8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5339aff8-ec08-4f8c-a50a-c6499908c993",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15baae8c-4a22-4dee-bf5e-5f5fe6ac7879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35ffe0b-2d56-4623-9a17-6479a1da711a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d9559c-25e0-41d2-81b2-2f4e92419c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f3fc3d5-64f9-4813-8b6f-45af1958ee2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85da95ad-d2db-4b3c-b82e-67d3cf9b6c61",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b13d20-6c52-4d9a-ab1f-6fef077a4540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "883d7e9f-8035-4705-b8aa-64881a97add3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23df551-4743-45fe-be24-519eb5379ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f64eee20-6533-4944-bb41-4b049d11e15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842d3528-67da-4e2e-bf77-e20ede846416",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edff7316-da71-412b-a1a4-d9489fe3ebe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb685a9c-81e0-4eca-99e7-fb3edbd693de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452b49f7-a867-49e2-ae88-2982b192ffb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c67d23f-ac57-4ca0-85eb-b1771753119b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d0b4ef-9414-4066-93cd-7b8a20688168",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d2715b-24a6-44c3-84f7-12166be6b93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5cfbfdf-13d2-4209-81a6-9732376ea437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c09e28-81fe-409f-83d0-3ba5c70a4a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2db0a96f-dbeb-4c58-8105-d919bbd82bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e36406-384d-4729-9116-7f204c154a09",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ab2af1-b1d3-4c38-9a5a-23f068f77934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a0cebe-26a5-4272-8a4a-8be33c9d2f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3baeebc-1f3b-481f-9a74-879888e9dde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "273a52c7-13cc-40d3-a021-b6f614fd638e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89544b3c-4cb1-4db5-bf0a-8a79d5700ca5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ca4301-52c5-46ae-997f-dce5bff505a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79ccdc8-e242-418b-b504-cb44751fefe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6a4a1b-79f0-4628-acaf-236157ea83e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "981e8136-3094-400a-8d49-669c7b8d83bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989fca8d-eae2-4fe7-832a-aec731ac6c0e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f187a05e-a05f-42c7-9ef1-c178496f4caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f749e7c7-f390-46a9-a934-9eb3c69a1544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4aef5f-705c-4446-8120-10e8dc8b8800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "55c1d2fc-ed72-4b6e-aa76-f3f627b34ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b91f999-7d5d-40fd-bf32-9bad140956c8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65ef92a-9fa0-467e-9eb9-76711dfa00ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb1e777-19fd-433e-88c9-2b316974b0ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe66d9b-9514-4779-9604-db95472d3881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "293407fb-80cd-4761-a2a4-bed693456b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06fe221-6ef1-4ba5-96d4-0ee830e73464",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ffd39f-4934-4358-83cc-1bcc7d4493dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "643c7fdf-bd4f-48fe-8580-7a78b6d50317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85896c89-659b-42a6-8257-de286c76f736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "740ebb29-5319-4831-a79e-8fe3f5c38fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50119779-dcef-49d4-8d08-f563cf8226bf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03ed875-d1c6-4f97-ae45-ff6aaef939ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c66b98-8e07-4ade-9b3f-064c804a8e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d168df56-ab8b-4968-b06b-26cb7671aa55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "804fc425-96b3-4781-90dc-b2d055edc4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbef03c-3941-48a4-a44e-206280a493ce",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d949ff76-70bd-453b-a2fc-48ee563ec9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb41133-6c60-4e26-9de8-b3aeb3abe063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6c6381-accc-4902-908b-bf8971371a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d65a6f0-2724-4360-9532-b36e6ea688e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb13802-fbb3-4db7-97ed-058ada3e82ea",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0401c54e-1be1-40f0-a7f0-88cf5e52c4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e026879-92bf-4b50-8317-c12994c3c497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02fbb11-17ac-4893-a477-9257e3d5f1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ade9aae-7d6b-4e5f-ae33-e828fcd38d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ec432e-d25b-4439-a50c-89568ec17bf3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235a8b4d-6bbb-4e79-a50b-2230eae881f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b915f057-8390-4a3c-9dc8-2d8042b42065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdaa48f9-479d-414a-852d-ac0196a74bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1a328f-77cf-41e5-ab56-f48e7a85e4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e75c09-d851-46f3-bc1d-da6e95fdd7d9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a133ffb6-0c10-43d7-9718-35f4c5f27896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8098c723-8a0f-4ea8-8c9e-811ea79556f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c38a089-b1b7-49d3-bd9f-33398643ff3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84feef11-cd60-41da-a0a6-67a82c3a13f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2599385-7454-44b5-b6bb-39780cb365f4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0357653d-07dd-4031-bf6f-ee6e9cb58bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cfbce25-a720-425d-8e47-02f15151d1f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5d172c-0ab6-4067-95cc-f7942904e357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01630074-3a9a-47c2-acf6-d99a7cea0a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5895ab26-852b-471a-a81d-c4a5fa8d89c5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435d9d81-a916-489c-a015-e489dc474db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b22b55e-fa64-4158-8593-249c64bf3e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed629bf-b1a3-4d13-b966-a197709813c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "441ba08f-c294-4082-9990-5c4496a802fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65f8c93-c881-454a-ada1-221d3bfb6c02",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2f8ebd-5d36-4c84-8bfb-66a9532bd6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d78d08-25c4-43ea-8f6c-0860b77ac7a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7525d4f0-c373-44b7-a58d-984e6b9d1c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af0107d7-1de5-430e-a180-80870976f1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da1a2dd-a519-420e-9071-ef489f61e388",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e58852-f684-4c9d-ae4f-f1a80756fe9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f918fc5-3a0b-4df8-83cc-1784fd0a7d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e13886-c66d-4a3d-ac11-d22638f95efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f557c51-2dc5-499f-bdad-5f30045c32b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856b35de-a5dc-45ba-b512-e9d74e282ef4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e73fac9-6e42-4f7b-8d52-8f1828de3903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c98900d-f5ed-4c67-bdda-fe990318aa45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb73eb8b-0d4b-4e3f-9273-db9ad126e3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f28571d4-5ef5-4877-8d29-79accf1471d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3688f9d-25be-418f-8daf-5f46a80451b3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92fa1240-a542-43c9-939e-deeeaab579dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f0edb5-29fd-422f-8ecb-da22e86177fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9362617-d41b-44b5-8aaf-207363edab2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a9a326c-e6bd-414a-a680-ad15122e4e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65645f4d-b845-4cc1-a71f-4e8508cb877b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d23e6bf-d529-44ab-a064-825539972b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d354ed9-fe8e-4b58-a7e9-52482bb8f7ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8328c68-5400-46f9-b7aa-4c4a0d523c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92aa0b2a-4d2d-4236-9097-c84915ec80c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b90d06-f296-45a9-a3e4-4929b5e53db0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8871dc6-bc71-487f-b02f-d75343cb0711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60546175-d081-48da-b4f7-d26b009e9785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d9d64a-01eb-4ec5-ac84-08b265397740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc46018-76ca-475c-a8c9-66990e239b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16010f2b-6628-46eb-bfaf-cb01218b9fc3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d352ab-9802-45e7-b285-4df303559ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f587690e-229a-44f5-ab12-a9598f8d066d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a26d303-7eeb-4647-b1dc-4dd99423f46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45e2e33d-24dc-4667-a729-4f5ba12129ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a297474-286b-4b77-bd6d-72e1c624e78e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4d0977-7c81-42f4-a22f-e94896c57020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a168d1c7-c2e7-4c06-8472-96220748a171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398bb326-82fb-4832-b31a-d44380cde8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0421c3de-6a97-4cd1-ade4-1c4b1be85683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5836fa-2c30-4fad-8e43-e0da5c826c2c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53babca0-f661-4df8-8707-3dea063ac98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1254dee2-7e52-401a-ad4d-30f9442fe275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fb46c3-333e-4f87-ab4c-26ad71380247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84dca0f5-a847-45d3-b65f-c135c11d97d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7120103-3226-441c-a524-024e4ac7bcb6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e884a7-d957-4a66-a2f3-5cd18e979388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd97f89-b6ce-4719-91d9-89bb824150a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0eea51-3a62-4a11-a083-770649c9493f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acc7ce8a-763c-4089-942f-88de57e3282b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2ca7a5-34d2-4af1-befc-ec687e041de4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785a9356-5f30-42a4-b4f1-7d529e9ee439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402f4532-f666-4a32-961d-23a06f890583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a75b2f-a9a8-4c25-8236-b5181d11790a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9868b585-c406-4cc0-9530-8fa48f5e0515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbfd55d-eab3-43af-925b-a5f3afc388bf",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7b7b4a-e6ba-4efe-bd73-5a322dc1f594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f8d1f4e-c8d5-4bf6-aa74-7146be933ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa972997-45e3-463b-8e3e-61b7e6bde95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0582ee43-4024-44df-a889-082a7b561a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecf7f53-0e36-4f8e-a1d1-027604811aa4",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3abc53-7fd2-4110-846d-65a93ab3c6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d42fdfc-9116-4ed2-861b-ba0154d689a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd94e24-1da6-47f9-bc36-fe7ded550dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8996cd9e-8c2c-4251-affd-057b4a6caf22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c39ff7-d798-465d-b433-1c3a82ba404c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba772014-9ca6-407c-96a9-b961ee5baa47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a169a6-2cee-4588-8860-077ff217744f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd897f4b-6bbb-49ca-a30c-2e724e857d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12312192-f5b2-4577-aa4b-33427a5fe0eb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4a6e26db-b6f1-46b2-ae38-c6e62e859b9f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56f4e45c-c0e3-4a4b-af89-000d3bc5e278",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa9b326-34df-4274-9bde-6c0901fe9da7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8a884bfa-6d87-4b7c-94df-c44592ea27b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8af5e6d-8543-44be-9914-a5b26e832295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "741a484e-96a0-4e95-b080-a87b56e697ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00830b6e-9a97-4252-b584-756afd4702e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "990acacc-7719-4e92-b751-7eb53f28a64c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa0e3e47-fd37-4175-94e6-0a867f953ce8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "159f5204-f27d-444c-a966-2a3b1579288e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b93f3da0-2b6e-4cc7-a06f-20d077d64629",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cbbf4a56-0573-47a1-a453-1e5980b94526"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fd57624-5f1f-4a51-aaf9-34c77ced7860",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ebfd2600-0e61-4aa5-8def-0911c55c7acd"
            }
          }
        ]
      },
      {
        "id": "f916028f-c8b8-4c39-b838-5591b87a6736",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e18801b2-f95c-49e8-878e-bc51bf0d7dc5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da728e03-3e39-4a37-b40e-0e4755ebaea2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1033d24d-5c89-4836-893c-a68b4d5999cf",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c96aa0-393a-4349-bb2f-57da63b3a0ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2588926-e908-4545-ba53-2fcc4b434487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ee3155-fbf6-4fd0-b2fe-5da9ae750444",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14009ba5-c233-445c-ac1a-bc129f6de6e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e254d2-99c3-452a-a140-1567d14c26e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f93e34-7e1a-4bec-9f70-47eeee847d43",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a55636-788b-4df9-8003-037dcc2d9a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73aa6aff-6bf9-48b7-be6b-9a3517f70f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f595f99-a1d7-4fa6-b9d8-6b92fcbc154d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69b2f64-05b3-4bd6-8b79-27a6fdcfa36a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc32e514-1144-4171-849d-7f61ad7ba3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b632a8e8-43e1-48e1-811c-dfde283a9668",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb90a248-918a-4bd2-81eb-317d66546210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8fb8a7-c344-4f45-acad-c58edc59abcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6b4a37-2da7-4dc7-94c6-b83b04c49ddb",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd8bc00-0a38-4eb3-9542-3b6d97cf89e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b8719fb-6d1d-4dd2-b9a0-b83d7d825bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fc43db-0fc7-449a-b0bf-f205f2f676ab",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b096c9e-ae08-4a56-b5ea-190e25a3392d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac72edaf-6dc8-47c2-818c-51c99ff0f98a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "378da599-aeb9-4e42-987c-50dee802769f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1df6fab-ed29-4b18-b968-38ee082aca26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dc49f5-7c70-4f00-b4d8-3d325ff33913",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda31f1c-3133-4f50-a341-ba8b6125689f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13abe8e2-29cf-45d4-9665-dc0b4b7a780a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "853f70b6-5bcc-4f1d-a208-fa8862398ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95b1d55c-93a8-4762-8e22-e5a72b90d010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8d50e6-0b94-4c44-8b6a-40e32a00e828",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1c02e8-4a38-4ef7-8ab9-e5053361e30c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9348757e-8364-426b-8712-b917264e2fbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9e41eb-f750-4e08-bc3e-70caf86e3f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b9056c-4752-4282-a78e-db4f9671492f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2b035d-d133-4648-81b5-2b23a80b2c69",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7b494d-cb4e-4558-85d5-d377b2d1f111",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d3b8100-9166-47b5-84ec-addeb706d136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6715a54-5b47-4771-9790-d0123272407b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84803d82-db01-4b59-8ae0-eb6801b99d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d64acd-950d-40c5-88fd-71f02addb147",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8abd11-8501-4fed-a1fd-214eb2d5cfb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dfd29e6-d856-4ef7-96f3-4f9f67f47d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "254f89f5-3bd2-4209-8b70-5c1c72e6365f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8f9f2e-e0ec-4118-aa2a-92dceb6ad7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543f33cc-26b7-4930-98a7-895df602fbee",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ba884c-fc29-4858-bf3b-6e2b422d485d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e98ef6d8-3a27-4f8c-b61e-05d970032309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "153edd24-25eb-4975-a50b-b3f2d8459e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f624454-5c9b-4465-833f-8204f65b5f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681b6796-d065-4d24-b434-59444875195f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb197435-300d-450e-a4be-05928102ebc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b731a31-de4d-4957-946b-d96fa0c29c4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "317532d0-6372-47b3-a97f-ba426441e33f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8908695-51cb-4561-8c20-0e5354074ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333a2d2b-e1ca-4f3b-b5c9-e730d9002306",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18480896-33d2-4edc-b3a1-7d7b3d178725",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aabe442e-ba1d-4000-9bfb-ff39d7a66733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c31a24-930a-4914-b389-f1fd0214261b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "973ca1bc-0d50-41f8-a0b4-4d51074f21a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76cb0511-06bd-4652-ae35-4c39028fa732",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674824dc-c375-471d-a0bf-2b0e530adfdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87e94b50-5f41-49ab-b175-571dee4f1fcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75937eb-e32c-4d1f-8d7f-c61219d03cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ecb902-0551-4fcd-a01e-173bdc621169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615c657f-574b-4007-a58b-d5a213f3afc9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20c1c93-3d6f-4143-b52e-bb8fb86ac51b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62db5da1-186a-4908-b438-eb26f1c631d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e06bbf4-ef2e-420c-bcfe-211e29988b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8515885a-bbe8-48bb-a0c2-983ee66a2e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685d08ba-d6be-4cff-be23-e8937526b56e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc16b4fc-a48e-49e4-9a32-f6275b637f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62f3b663-447c-4466-a627-c87b233e84c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9b034b-7ad9-449c-8e9c-61a9d0cb15f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ee2aae-cf8a-4bd1-944c-501ee5b7042d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4eadd6-3c24-46d6-963e-3945282a2cc7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c136835f-0866-4754-acf5-3ff42714f9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd148504-20df-450d-9032-787bfd58106a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "908ddd6b-08c2-4d0c-b500-92b0b91c1f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b49435-4317-4636-83e9-067e3861994d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0dd5609-b0b7-4412-bd11-f33eff5e5c17",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7856209-9387-402b-aeb5-0f46c6ab5b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad9a23e-26a2-401d-a69a-eeb96bc82e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed13225-676e-4386-834f-7b4248bf9a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "211a4fe4-e1ee-47f7-a92d-13fe96f54f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255d9357-e63d-4a8e-91e1-069224e860b8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7a8d65-dc02-46e7-b284-d06a0c4820ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa511ae-4b1a-43e8-8ac9-2d86a9dcb19d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df81a9e8-b12a-4f25-a81e-8c4389ed2b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168211d4-883f-40e0-9ff7-5945cfae91f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9361407d-8078-4b22-bcf7-65d6683f9f54",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc470009-6fcd-4043-adff-f747575be5d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e434196-e83f-42b8-946c-69a34d7aab81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11a78b1-b671-4294-8f23-8cd3cdb2fc6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b82d1992-9c6d-47a8-a4e0-a7a40b96d75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ba7635-70ef-4146-b832-cbc4e23e11c2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358e02ce-7ca9-43a1-b23d-f3d2bfdf4322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c378f6ad-528f-493b-8186-185ad2009961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acec6832-b894-4787-8391-e7ed88b4ad77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd62df49-7dd7-4894-9e77-17841cb8a77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5e53e6-ed8f-4369-acc4-b8e8b5d337b4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a91fb6-7c63-433d-9796-5e3f4f4af37f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a1d3d3-d205-4282-80d0-c2ab0c202900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f153eecd-64c5-4131-930a-0f111ec8a4a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a1cb52-863b-48ce-bb53-4892d6b23bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedb4e1c-554d-4bca-843c-992ea5e60615",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48baa1b-77af-4110-bb0f-9b588d0ff3bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d87e7da8-94c7-4ea0-8324-b117dd3341ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "531e0d0f-574d-4c1a-af92-2f9ad2979264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c000835b-7029-43db-a89d-a4325abc76e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d612c9-1554-4450-98c5-0295fd4fb6b3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41aa524-b059-4ee1-addf-ee45bf5ebcd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8d5a105-00e5-4dca-a9df-b426793dc0d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "174ae57e-994d-4328-86f0-2ad626ab4183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a55b4b9-bb17-4ec5-9eab-f7f7aecc5c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553907d0-eefa-4ee1-9808-c0621c423620",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7450b460-b75f-4210-9f8c-9ad0fa31c4c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d554d7ee-0b74-420a-9064-181a44488ea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab83bc63-16b8-45b2-8174-de7604933c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac3f71c-82ef-4e21-8fcd-217754800ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d430cff-13fd-4458-b704-6abc352043d7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56e41b6-a856-4e0c-bcf3-e978ca5625e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffded7a7-144e-4fd7-b0d7-7ecf29642b74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "075da1a1-ac9d-43e8-9ee1-421305051290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3803d13e-8834-4337-8576-c7a096515f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2422972a-a7ad-4871-98ea-8615578d1838",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b4aa78-af29-46cd-b541-9e72e7abdd6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "718095df-bba5-4345-a8ae-cf49a7efb09c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44649275-243f-4215-a444-8872e75422a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da2d91a-f426-4579-b471-283682ca7fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6eee090-104b-46b0-8121-acecdb5dfebb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72437da3-e810-4212-93dc-751393af5dde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "808bdf44-688e-465a-9394-df74e6d9e577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1510b9-d45d-4e99-a93f-5484864a0a4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b88896-8301-4a2a-90a0-60ec966f1430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67222884-658a-4cf7-89d8-cd274489901a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623341dc-1a5b-4e12-9d32-0b8bb8fd2b1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32b30477-b527-4e4b-a4b5-526e9e2e4a75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "051beebb-a7ab-4169-8219-648d2a83ca24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14a27a8-eb72-4a93-a454-abc3fa00b9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9246aa85-6685-4238-87a1-033c85f831b6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a70673-26d1-4c5a-87b8-af1baed0dfa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c2a74f2-5d73-4667-88b4-ce1840891da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc0d7d0-9b93-4a5c-8d88-0473c878056f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75dbc1f-ecf2-4fd5-a587-5319b0bd1930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664392c2-8c23-4438-aaf3-40598d51fbaf",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc9cb48-e983-4ff0-9972-fbfa6e459349",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2cbd0ef-82e5-461d-b9ef-22b1671ce170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51edca10-5902-4fd7-8723-87c840621a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a90164e-5891-4d31-bb36-6960a8fdfb1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b525ee-871f-4a60-8bd5-dd179a2dc890",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385fca51-f186-4a54-bc11-fa41c5fbb037",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c3086cd-1b9f-41fd-af1e-0c5ca477ec4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e523473-d0c0-4da9-a09e-0b24599a3de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0070e37-a1e4-47fc-b9e9-c777b82cc5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ab6f1d-ffc4-4784-99ba-246be52fbcf4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc684e0-ff40-454f-82dc-3c31d761ba0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acc2b5f8-c451-4128-ad2d-09f4de5d1739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c915831-6214-490c-b040-e8ff24092da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c05ed513-7ee9-43ae-8d3a-d21d9defe290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdeaf488-94a8-47fc-8dc9-d4e55ef72900",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24704ba-db8b-44cc-aecc-e2504dd9a891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da730a3-5215-4c84-9d2d-5f7ccd582a57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "500e825f-44ea-4411-ab4d-5cf9264b56dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e744c494-beed-4092-9755-a43d64f4a7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60aa3671-91bb-40ba-b569-40b105a5c67b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb727c4-8f24-41f2-b5b1-0ed36cf3ecb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51bd42c4-6237-4194-bbc7-c0ba5083724d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "393d719a-3fce-4185-9592-79c254c0f12e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b117a16e-54b6-4286-9106-14717db6df1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09909b54-b938-45ef-aec5-c0e6c38c6667",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63a6119-f184-4203-8a28-115fb0bcfb83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ea24a7-64d6-4152-9b9c-c4e3f5c33e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81cba6d-69c3-4723-9d1b-efa9177f1b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ecd4e89-33ec-4fe1-bf0c-74b3104fc3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4440ce-55e8-4e6f-8fa0-6adfb27ffb9b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c339c2fb-713f-44a2-af49-400f1434ec23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d29b2cf-ec45-4497-ba31-bebe8a28aab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b37163-bc26-469f-9c0b-36b832d02471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c4a7bc-60c6-4a79-b89c-fe11b373ef29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ef6442-0950-4fc5-8829-38c9e672a07d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6cb0e4-b5a5-4e20-bec4-5924cafcb952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae404cd4-c548-49f1-a60c-67bdb9d8b1ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a816cac-d923-4714-b324-302081c81286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46321e00-fcfc-47b1-9179-c8e7d72f223f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d34ea14-4eb4-47e0-85d6-3f0e00449021",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ddf68a-fc3d-4df9-9eb0-76cb9556c229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db20fd6-6815-4383-9fb4-1df0fd15dc09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11459a03-2f8f-4e75-b18a-9fae8c28cdd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201bed42-44d5-44c2-b4fb-e071b9a4e372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ce31dc-30d0-4114-8b3c-6baa42f08dab",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd58fb4-3c6a-4985-a3b6-04ca4da864f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b1c765-0c5b-4f39-9cbe-e49633b09514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7cfd66-afc6-4a52-a1bd-6f72a41287e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e983a1c2-f891-41b9-a387-0eb635c1b607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147c2a79-801b-4209-bb93-0725d562c1ef",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ffceb1-2ad3-4ed4-a783-1f148462bf0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f240cf83-aae6-44f3-aadd-30a5f3a07db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d62741d-ffef-48fc-b3de-269ddd9b11cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3dca74-501e-4ca4-86f7-2408f0092239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3feb9c53-ff85-4f77-b3d7-8d045f4480e8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785937cf-ec59-46b7-9cf8-1e03a4935879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed9a2bb-3803-4a90-a4e4-d7d294cd9102"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8110648-44b4-4632-be2c-57021b78a3db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ccc8cdd-f944-4caa-9abe-34e222d2db4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae5facb-26e7-4a37-90a4-5f7afe06f78e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b1225f-d4ac-4d7a-903a-4429714ee22d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "104b9dab-0fed-478e-8a29-ba52993da37b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ca8080-1ad8-48bd-be24-cabf62f56720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbcfbf44-461d-4cd6-a7d3-91ff4c9868f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011864c9-368e-4a92-9877-50ab802ea6e8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4f5792-23e8-4076-bf09-b342a72a0c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9cee1d4-4502-49a5-931e-bcd0de64ffc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b0e13f-000b-48d5-90af-07a6628f3b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa9c7dc7-377b-4399-8b55-ec77cfbf9345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb0b045-83e9-4db6-a0f0-aaf89336012b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5826bfdf-60c4-42cf-b0c6-e7200cc03fb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "131929b8-aae1-4a4c-9d8b-7ea9cd15f438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd70a52-13ab-4993-b977-cf5bffccfbf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c79cca-c052-42af-bcd9-cbe9d099f550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d8d884-d8b9-4b48-8d63-5752e2d74337",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374d114f-79e4-4e62-b663-7a2d7676b87b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a81ade8c-ef21-4720-bbff-64301fa309ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "936b5802-4f6e-4201-9d43-c40698cdee64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf15ae08-db42-47ea-ba03-50ab77441110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741312ac-7763-4938-bfe8-3aa979763b80",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2ff18d-c2c6-46c1-9bc3-09b596c27aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04fd0d65-9905-461e-ad28-c4298e0b6092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f8e7d6-3dfb-493c-8a01-1d29d03c76f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc90eeff-0304-409f-8013-c10079e53839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747d0f18-c777-4fd6-ad6d-6908b32ca315",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b741673-83dc-4be0-9a9e-238b767f0d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1130adfc-9416-421e-919d-efa08b4eb716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83de6617-3e9f-42b0-b3a5-b9821730bf5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc6c270-f583-4cf2-85a9-f969f19943cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb48dbd-5e75-4ec2-bf14-13cc908e9868",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac02f5a0-ece5-465e-8fdc-bc492862c076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec25b3b-03e7-4035-99bd-f22fde58d8dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6de9ca-bf35-41f3-ac47-0443dd4d8000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241e99e1-713e-4e51-9a41-5e147f790179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239ab53d-478b-4419-8b2b-34077dcd2b75",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e7a30f-5a18-4b69-b336-53b1779e2a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b7491b-4d08-4307-ba0b-7805935092ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c2cae7-c659-40d4-ba8e-c92408e1e28e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c799c29d-6c6f-4ccd-88a5-1c99006c704c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4270c485-0a06-462a-aaf3-71c0175b686f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d285d41-d7a5-4ec6-9dd0-63c5e4b26920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a535e37-1cd6-4eee-af60-cb78c9c1aab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33c6ca8-a696-4c8b-8000-6766f5e9bbea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f50c2ab-92f6-4f59-8f7f-0cc427de9eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2a0da6-1979-4502-8c06-822454aec84d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7643b9d-ac17-49ab-8dd5-d8bc8bbf1782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde22e45-dc7f-4381-8ded-eecea8eddea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ce4c36-334e-4883-aad6-211b08182b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8545c4fb-a5d7-40f4-99d5-40d783e30ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e41f71-2639-4ad4-a25f-39b0debbe6d1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8277bf16-2e83-47b2-80af-38ba74bc7897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f79a6d8-982f-4b63-b5f2-3fe341d7ed81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a835d082-5483-4378-b9be-2e29cdd66d72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824413f0-5481-44bf-8820-9d99332d19c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d5fc73-3018-47e7-970b-46c7c7aa2de3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c382b8-6373-477e-8bbd-f5f1d0142994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c93b0a-3547-40f1-afda-1ba44bd8d1e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5e6f6d-5cdc-4c07-9571-f99b02f870d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "408f759f-1bbb-4175-a562-69c3048d7d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb0d977-d577-45dd-93b0-8eef1bb92cd7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb65369-f2d5-415d-bf75-1a6090b36c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f96473-b46f-4842-b581-c2464eb9f4ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97077c82-b6ef-4909-b949-721fb877ff9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c320c87-525e-47b2-8813-58e5810e3109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b585fc22-2a5d-4284-ab39-d634bde50f2b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075a146c-06df-4234-bc10-9f163348338e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f752a941-1cac-4835-8e53-524149c2a115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e27525f-ee6c-4401-92d0-53407b5f1a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d95e974-1c40-4ce3-88ee-a0d9a54e147a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3660ba-a669-4bf3-82cc-a143b6930ab0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2fcddca-0b19-473a-8786-d42a0ceb5f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "504e5f48-9365-459b-bfd8-f936c6a1e133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99d7a63-6bb5-4702-9faf-686d78185b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab7e96f-1218-49e4-a12e-6eab110a18e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b107143e-a3fe-4bc2-ae9d-9cb7f9cf8a65",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03092ab3-80b0-42c8-9ce1-d920543da669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54de723-a6b0-4b1a-b945-87e44fb168d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9037b283-a258-4629-8916-5229043f1378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1cc1b2-3d6c-4c56-a01a-ad56d7111cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25d3694-95a4-495c-87ba-1926b8c89616",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad2b507-b7b0-4171-875b-7af1ed360ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea81af8c-d7f2-484e-a303-00d243a90d91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b339d65-b55e-476a-aca9-d1e5d02bd249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b68dff-fc06-46fb-8158-2f2dfaa3bb7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de5d4b2-e73b-4f90-9cdf-541171ac5c04",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80bc678-ad31-4dad-937d-1ae1c73af1f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdde91d6-aac0-45e1-acb2-b2b79cb4d162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6fccbb-b60b-4b4e-916b-6239dd5dcc84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51c0ceb-44c9-43fc-b6b5-208cab9950a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa9f284-302c-4d28-b246-4a544c7ad80a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46d2ab2-c29f-4208-922d-d55e63d6750b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e9d7ba-5f83-4f0f-8f98-90a637551cba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2d8b14-b46d-4525-8526-73d0e6ee218a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e963c1-2a5f-4434-8e06-2ca79d21c9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7d65e0-5890-4186-bb33-dd32791aff5e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baef75c0-c163-4c78-9b87-8b7032662e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "944eb9d1-9bdd-4a59-92cb-c839bb9a4f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9442aa2-3892-4c02-8e91-47559e8d03a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38901608-c494-4234-bfb8-76425060962a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6f159b-e054-4063-b81a-78b995d0a343",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca622320-4417-439a-aaee-0ada35d61bd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77d68301-dde1-4ff2-ac13-82d2e2abb056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bbda40-1680-4413-aa10-bfdf51230a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b282e7f2-8fb7-4d31-a077-9198fce2a96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c27c50-dd0a-44e4-9f98-25d4e17d0230",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e918175b-e600-4574-ba8e-d0bc56b83169",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1df9823-abec-4366-bbf8-324f0f0aa1d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99ae7f3-7720-4fa0-95c9-2d4aeb7a6f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e05ad30-9eb4-4b1e-a49d-bb9bb03af3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8ea7a7-5791-4e1b-92b5-41d1ac4fdd34",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec05ed24-f7a8-43bc-8eaa-4e213be20f67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ae31fc2-6aeb-4d04-a7a9-2e578fc9a871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c17ab94-a66d-4c17-89d1-7879b261b34b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8abe44a7-1d32-4f61-9922-90d4a7a5a436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bde272-1224-499f-b1ed-aecc7aabb7a0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbad2bdc-1623-420b-9736-eb03f3fb584a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c2c5cdd-e632-478e-aa67-4a34aa35ed98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fededd92-17a5-4585-9fb4-220e3be101f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb92e13-c88b-4109-babd-04bce2997a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc46f446-8ec3-4bc1-9b60-69c3ec57c92f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22480b6-ff30-490f-96fe-9a78718be913",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9499658c-7cf1-4cdb-b47f-62771900b9f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9c2a11-8f41-4105-9b0a-88d4ae32d533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932751d0-8537-4070-9be6-93f8ba5335e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c229c9-58a1-4101-8f7b-22087cfab5a1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9acc2cf0-7e18-4139-81d1-54f3599c3835",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45801f87-fded-4b71-96c9-b23967fd2234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf73cd61-9213-402e-8f5a-14ac1104b60b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4e824c-73c3-4f60-a45a-07f0b026c885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d08deb-ba13-42b7-8281-770f84d61531",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e756e7-9973-40e6-8ea3-13077b161dc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d2c3ba9-ac72-47fa-b763-f1a7e9581498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b806223e-e5c0-4dea-a991-d2a64e0fb299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45259a15-4ce5-4138-ab4e-d521ddb6c655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b8c462-8a59-4997-8307-a0a65ec3fde0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0365928d-f782-455f-81e4-538dedd94d86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c8ad7bb-2b8e-4d07-9fe8-7b564441039b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "848ce1ed-651f-486b-944e-1f4ec400dc88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10ff49f-bbd8-4821-81e3-4545c062c39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cd1aa1-8439-4f18-8b63-15eb735bb376",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c84535-62e4-4e2a-9f0a-5b864d632c90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f0d0bb5-c988-4438-a92f-b3721df7fc4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "037a2ff2-8189-4421-bf74-c3b9d4d64429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bba8cdee-edb2-4436-b220-0ea288c7fff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acba7d49-746b-4515-86cd-5a4b0111f1f2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f4bf40-fd2b-4677-b25c-64be1b16f80a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b9ea594-57e3-40b2-a098-54db237f97b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc297cab-eccd-49b0-8be5-56e8ecb8a5b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17013c10-80a2-4a82-9731-24dcb42632fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b469e567-b4c5-4cfa-83b8-3085a383aa29",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15dd3ca3-3a6f-46ef-a7a3-0bf0abb8a2f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cfef983-52f9-4ff9-a191-1a72c1f48c39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a0483f-418c-41af-96ab-5486fae1ac7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "907910f7-0bb8-450b-82f8-4374867379cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41b45e8-2653-4d8b-9a69-36ea5a38b270",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9856420d-20bc-412f-ae68-f0b9a490560d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a577192-0f42-4ef2-aa5e-206860feadf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af3486f-9223-4b79-90f0-6243778d3969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4edaa9c-3292-4cc1-945f-1709803cead3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2909a0e-51d0-46b6-8c80-0abd948e1876",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370342f7-b3c3-4c1a-ae01-617041cd1c6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90f64b64-c2d6-42a2-853e-4025c5b088be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8a83d9-9e6c-48a4-8d04-94a93e2e9a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b10386-2ff8-47a8-b7d3-81107c4a4328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33370182-a5ff-4e61-8d46-aa954137355a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d65db05-4796-400c-aa8a-cb454e1e9970",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff40773a-8c8e-440d-b8a1-a855b25c80a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c2ac2a-33fc-4d43-b776-a00cdc645680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8099baf-92b1-4431-953f-16f56058104c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b14770-d1b0-4dd7-969b-f7fea22bc295",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b421a5b-c050-40d0-8eaa-ec87d9206777",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65652b6f-7104-49f7-9e3f-7600bb26edbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a27d5e-280e-4266-8e23-e3a7200401d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874b79e3-b2a2-4f86-8921-10a4ababbfa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955bbf56-c2e9-4305-8067-7cfd2055e784",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74417b40-8950-4945-9486-e8d8c64b7639",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0d732ea-1d1a-457b-8092-77dc81da48fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "257e949d-1621-4ea8-b648-365a1c055515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ee0402-a2e5-45f2-a81b-f6c5b3534543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704fe4b3-e43e-4139-b21e-0f891c816068",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db063b2e-f7f3-40e4-9112-79a61a9f72fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88ca6384-509d-4fb0-946b-3359023d894d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a346256-2c8b-475e-b99d-fc7351716ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "138dd3f7-2b81-44ec-a0ff-236b91116be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235b37e2-437b-47a4-8741-eda626c72061",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd87eaef-a195-4579-adf5-810fa210ceb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bc5f995-4f1e-4b13-b404-4e3e804ad10e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b66a18-9dd7-491f-9cc5-c68608849923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a886aef4-5689-4b29-8840-c0090f66aafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a698393-4734-48c3-a2ec-7821de6b9b91",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6244091f-2fbd-464e-a8a0-eebf033da904",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c72ad52-418e-442d-a944-cdbb5eb9872d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4963b98c-487b-451e-9ef5-9c4fda24d873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "137879b2-5ff3-4f6c-ac32-fa682d64c094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540fd1a4-f466-4bf9-82a0-ac221ca8be2f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6b1a81-8370-459d-96ae-9e75b460cbb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db61677b-c0ea-4eab-901e-7d522e1c510e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8487de40-2991-405d-a257-148d4c63ae56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dbea388-4b8f-48c2-b01d-e70c1fa92c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e0924e-9473-4157-a417-ece6bb9caf5c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a36763-941c-440e-8330-778e059ee2c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "071cefac-bb33-46d7-afd5-d7b0763b226d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5843412b-2e17-4642-95a4-3114026d791f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2653b94f-555c-48b6-a8e1-a909f3b07c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07fca13-ae29-4228-8250-45ac95903f8c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d97cec-6085-432e-88e2-20453a30b206",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40aa112a-9a82-486f-8422-e55d52bf2c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9375a5f-6b9c-46b9-9fa4-dc7cffb46793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65fec387-cfc3-4958-a5ec-f951a8277107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eae7b76-39dc-4a89-96b8-7daffbaa5a77",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85991806-3521-412e-b293-4eca5aefa4dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8b56e5c-bfc6-4f9b-8a14-a0caa975daa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1f36b5-42f5-4394-9a49-cffd349371ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9faf28-a400-4f5b-a648-2001b48215bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c54a628-4334-41cc-9947-8bb97d6bb0b7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f257d3be-e95f-412e-9768-0c499d5c5c24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2307e96c-d83e-4283-94c4-0eceeb9906b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a849d59-f75b-447c-97e7-91c623b78c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65299162-407a-40ad-9f15-3f02dd678202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c19e7c-1691-4649-857b-f48ee28328e2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44c00d3-2fe4-42d0-935f-76b6669466c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e134f85-b203-478f-8171-1e4fa971a100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f940b9a4-43c0-4914-87ed-7dca96486629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c7f118-d405-4e34-b4be-4374a8f68d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7b018e-bf23-4c60-ba46-f29e87fbef46",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4815a705-90fa-4309-81e5-d96258fe36f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc5334b6-c44a-48af-bcfc-c0e076071fee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7077158-9466-4080-bc7c-e9ecf9d16bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d639360b-f019-4186-becd-8c15ce5b8f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4aa5b6-a46e-491d-87de-fdf81df9c702",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760a2b36-9d8a-40fa-91ab-60a46307e16a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "631eaa7d-688f-4219-9d4d-f3f2e529e950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "443bfe4a-6d49-40f3-b826-a516b6b1c3d3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45018b77-ed69-41d2-a037-06206767b250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5a093e-6213-4392-beea-e24ea5719d3e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3504b1-43d2-4e9f-addd-9332f45805c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4036846e-9ca9-45c0-964d-2055e9ce16cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8c1e45-2811-4184-bfc3-5a3ae76509b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b3496d-1692-48c1-afd6-da83cebc38dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b22f1a7-71c6-4727-826b-f1de759b63df",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea9fa6f-3e46-4963-9adf-dc9ce55eb2e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab65a142-0993-4cf2-9e16-7f0d00e77c98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad8d39b-af3d-4874-8d6d-d0f72cdb2887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9874c9-3a48-42f3-aef4-5c59cb49fb89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18f4ea2-a1c8-4caf-88bf-df29a92b63e6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7f5902-c0a9-4213-b907-48d6cb8afb88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "206baa7f-ae6a-4974-b66c-adf453f1f213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12b655a-4b59-4d3f-a2f7-9d8f9720ef42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16105042-72de-44d2-ab8d-61a64ae7dc8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468204f7-6335-49d1-8354-775d979e400d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85da5a73-ff0e-4bbb-921d-6ba7e7a60780",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a103a958-6fbd-49a3-b49f-1f84bdd0296e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd207da-83f6-48ad-bfae-5b0088f755a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33fa9821-e4c1-4997-b387-14fd27359d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef44409-286d-43f9-a90d-d8a8132d5622",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdece53-5d8b-4196-8b0f-f9039095bd8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9519877-4e58-40e2-ab1a-63641a39dbe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06643a82-cb57-45cb-b81d-ad5e27b6f615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c86d0f-0ea3-4805-a40b-415e3637e89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665a94cc-8534-4cfc-be3c-4a425e672ed6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3cefbe-0bd1-4663-beae-7ce627940f79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d665760f-ec90-4619-a9af-f08f2fcbdeba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc373124-3be9-495d-932d-0bbf8a02909b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35e5ecc-d299-4173-a202-4bc0276e709c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c66c874-b9a6-416f-845f-5123a1235389",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0674dd52-6572-49c8-b2c6-f34a56c20f0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b22e3980-ca90-4827-b9aa-e885c28a5412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebda0627-e2e8-4b1a-999e-3dd8c649168b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758994e0-5a6c-43c5-a74b-d7d3bfe3e37c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89ae520b-2f47-48d8-a1c2-fd524ebf0b09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3fd2d5f-bfb5-4f28-9831-d8db7b311330"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54a4aaa5-22d7-48e6-b68a-eea0214e4003",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "763b1aa0-d86f-4fad-b39d-c162232bed7f"
                    }
                  }
                ]
              },
              {
                "id": "c064dbf6-7d46-4580-b764-b60b920da143",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "194b89d4-6ec9-462c-b06a-baa1ac6eb568",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b4125a-5ea8-44a9-ac74-7a918011c8e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b445ef96-ca82-4b83-a0f7-10717ad1adeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b26f237-0d9a-4777-9b69-589ffba31c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "378da000-8819-4184-b246-421733a2fc29"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c01a2395-17c5-4233-a71a-90e149fc55ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d05ff49-3e59-4c0d-b15c-8e1c62a87940"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fbb4c567-51eb-4e9e-a114-f4b48cfeb488",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e76f336-1ddc-4a4c-bcd9-b11f4b380150"
                    }
                  }
                ]
              },
              {
                "id": "6058e928-4f2b-43a9-b7e2-af3e921d5bd7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2842743d-a19e-439d-b4c3-ae89f17ec22d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77296652-9be8-46f9-bde6-b4049c0e3d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "24d1be28-5be7-459d-9046-51e66179ad0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b6c03b-c797-4338-9baa-3981e6839516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b34bbc92-1c3c-4e46-b2cf-924d107d43b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ae93e01d-e0a2-456f-814a-a0d17ff47d71",
            "name": "Positive Testing",
            "item": [
              {
                "id": "45cd550b-1ecb-42c2-a7f1-c7506cfd9780",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "462dff9f-d47f-45ab-bda4-b341caed20ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "66f0559d-d9b4-421f-bd86-eab7e9eecbe6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1b7bdc5-28dd-49a7-bce2-b82b14fba9a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24c40d60-fc18-4fc6-b3a5-287ab2882706"
                    }
                  }
                ]
              },
              {
                "id": "08b508c3-ef17-4208-a062-3e1f585ed18f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46efbbe9-a460-48d8-a4ea-1bea743232aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d4baf632-4706-4b2a-80c0-7a0248615b86"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d3bde5f-3f0f-45ea-98f3-69e4e10eba14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9240df37-a3f4-4846-99fb-572e6483f395"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4449ddf6-966b-4a81-8f3d-0b492460fe25",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "349edcc7-7d96-4ad1-b606-a928d1059983"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86d13b0c-31f0-477c-9e47-c0c261ff6dcc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f5dac73-6a72-4f30-b033-9ebb00e9467a"
            }
          }
        ]
      },
      {
        "id": "13311833-ff96-427d-a436-1f7989bb414e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1fb4e898-7650-4644-ae13-4b93f5d05d3e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c6e90d6e-6ec9-4eea-bb89-2efb79be8126",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "91385a82-ba80-42c0-9f25-ad91dc9d372a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ca6cf3-5769-4752-8456-77b96df3745c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f40de334-ce61-4484-b06e-5f111592d53b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69bd961-7144-48d1-a31a-34c6e0e8e8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df629de6-1401-4e0e-97c4-d8b4eeb4fc54"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6b1473b-c1e2-46d6-97fd-412fc4dc49fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d05f15ce-2caa-4e6f-968c-691972e58d7e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ba85ec5-2dde-4b20-b3dd-b189790f6876",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21ab212c-b085-41d0-96de-ad383cd879cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "111dac3e-a0cb-49ec-b9f6-bd9da2912d37",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2da89975-25c9-4b7d-84ee-515cdab21872"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a65e0799-875a-4ff6-a05e-80183f2840db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2be6492f-9549-408e-a913-f896bd50f02c"
            }
          }
        ]
      },
      {
        "id": "37377270-e138-49f0-8846-84b23b105153",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d121950a-c2e9-4cb7-9bef-60405cd3f42b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3315110e-797c-4a46-9438-f3efbc8145f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "723cf4e9-c87d-4107-80a3-ca9f710c210e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3467e2f4-4b92-422a-a74d-c4d95fbd679f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2cecdffc-c349-4cd3-bafe-1df170062ab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2889d01b-a584-479c-92e4-60612c32ee89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05d435fc-fa84-4010-b91d-3ffb14007884"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c251718-f9c6-46e0-90a2-4bdb8a7f0f27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d6e7392-3799-409f-905d-dd2670718e24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73db4a91-f27e-4c14-be57-1887e959c69a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e150db9e-086c-41c2-a0f7-035ee8be252a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0dbc3378-48ae-440e-b2b2-a7cc33a1f94f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b9b4da5b-37b2-4d3a-a882-c7b6b42fd77d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5cf3c9a1-fd4c-44f9-94ee-7a1ffb3e3d51",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c714b2d3-f080-4bba-8a87-8407a10a801e"
            }
          }
        ]
      },
      {
        "id": "8c9f6050-1fa9-4598-a068-4e5911bead0e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3ca87777-c08c-4424-94c4-15ee7f23819a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eee01331-2378-44d6-89d1-a27cb5854b2e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40f0ab03-f6d0-46f7-99f3-76aba68b442e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be094c1-42d8-4e72-a2c2-17d15e76cc5e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "465e3313-d767-4a40-a007-b95816ba6361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90d61fe-fa5e-4632-a305-1dd1f9345f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d226a3c8-ebed-4025-af3a-8567d39277ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b14d58e-b6d1-4068-9608-ae4faf6f36b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afadf551-7f40-4bef-9dcb-6bdd7428ce70"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc310856-6165-44c5-a5fc-54b4d4709b0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98432219-9045-4789-99d1-c1a460cafa88"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6213b920-5490-4053-9529-1e2f3388e9e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "63e16d33-640a-4d16-82ba-22a2636743f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e00f48d-afe2-4a11-943f-98e36a94cee2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "40bf81a2-d0ce-4784-b80f-a4293980ad58"
            }
          }
        ]
      },
      {
        "id": "d5ac91d7-e386-4395-8c16-593990ac35ee",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ad84f4f-b02c-4a3b-a4cc-3665792829ee",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ad507a4-f066-48a9-811d-01d39bf325fe",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "878e0f9b-96d9-46e7-9939-bd0cd2e64aed",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aafb5a22-38ea-40da-8ab2-44f52337b5be",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d92138c1-bdc8-4795-bd09-ad55217277da",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 105.14385964912283,
      "responseMin": 9,
      "responseMax": 10077,
      "responseSd": 640.7814448048227,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1707093319632,
      "completed": 1707093358754
    },
    "executions": [
      {
        "id": "8a72a013-acdd-452f-8e9a-155c663b9d33",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "26506249-c20e-4286-aaaa-df7687bea360",
          "httpRequestId": "917aefe7-81a9-4a8e-8bba-7f3ad1ca9086"
        },
        "item": {
          "id": "8a72a013-acdd-452f-8e9a-155c663b9d33",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7dc6103d-d49d-47e3-abaf-08496a287fd3",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "cd46ff24-dc6b-4b4f-a4f3-f44ef196428c",
        "cursor": {
          "ref": "51485875-1e57-4564-987f-8d38dd835d24",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f72fce96-019e-47aa-bc85-63abaa60cc16"
        },
        "item": {
          "id": "cd46ff24-dc6b-4b4f-a4f3-f44ef196428c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a39c1b33-738d-4f4b-80fd-b1dec20c07e6",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "66ff44ed-9c38-4b84-8e1d-a085670fd59c",
        "cursor": {
          "ref": "e0ea59ee-c15d-4a6e-8312-1a0ea2bd17d0",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5f31523a-7a54-452a-9e83-d2c2ec2b6756"
        },
        "item": {
          "id": "66ff44ed-9c38-4b84-8e1d-a085670fd59c",
          "name": "did_json"
        },
        "response": {
          "id": "e0de122c-dc12-41de-8e0b-7dcae2aef3b5",
          "status": "OK",
          "code": 200,
          "responseTime": 348,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e99a116-e59e-4ce1-9c91-bef2765006b7",
        "cursor": {
          "ref": "f0e30801-f58a-4c38-88ff-207fa3f80023",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e1b7febc-a556-440c-820e-471c09b3679b"
        },
        "item": {
          "id": "6e99a116-e59e-4ce1-9c91-bef2765006b7",
          "name": "did:invalid"
        },
        "response": {
          "id": "2117725d-0c45-414a-ad22-8df963fd797c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 714,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e99a116-e59e-4ce1-9c91-bef2765006b7",
        "cursor": {
          "ref": "f0e30801-f58a-4c38-88ff-207fa3f80023",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e1b7febc-a556-440c-820e-471c09b3679b"
        },
        "item": {
          "id": "6e99a116-e59e-4ce1-9c91-bef2765006b7",
          "name": "did:invalid"
        },
        "response": {
          "id": "2117725d-0c45-414a-ad22-8df963fd797c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 714,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd85579-c75a-4299-b481-dc65b68986eb",
        "cursor": {
          "ref": "227f88d2-6a56-4bfe-b669-93c945f12f31",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fe7a67d0-051f-4a58-abb3-5ed1cecc3f44"
        },
        "item": {
          "id": "dcd85579-c75a-4299-b481-dc65b68986eb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1019e661-30a2-4dc5-8307-65eb61369ade",
          "status": "Not Found",
          "code": 404,
          "responseTime": 46,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849122de-296b-4af1-aeff-3809fd6a9a02",
        "cursor": {
          "ref": "caad55a7-9ba5-4f78-922a-cdccf42109c2",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "15662e16-5659-431c-ba5b-349344f3f5a6"
        },
        "item": {
          "id": "849122de-296b-4af1-aeff-3809fd6a9a02",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6953bda4-ee6a-44c3-ada9-c9b4bea47723",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3af878e-e154-4af0-bde4-46714bd0b95b",
        "cursor": {
          "ref": "0f1cbc9f-5989-4616-88d2-688d26aa1b7f",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "56d19a7b-87b2-46c3-98c6-7ed8a7a51040"
        },
        "item": {
          "id": "e3af878e-e154-4af0-bde4-46714bd0b95b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b402d450-2e77-4d01-a256-1dbc90d4fb27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9017b1-278e-4e79-9448-16f13b236262",
        "cursor": {
          "ref": "f3722541-b83d-4284-97ce-10d54b3155bb",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0da72b2e-110b-4728-9595-eb5e105ddd4c"
        },
        "item": {
          "id": "6d9017b1-278e-4e79-9448-16f13b236262",
          "name": "identifiers"
        },
        "response": {
          "id": "9b9a15aa-df82-46fa-8201-a0c81a602c48",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9086f6-52ef-49c6-888c-da494decfcc4",
        "cursor": {
          "ref": "71351d07-8d11-4f9e-9d37-0cb44dcd6324",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a60172b4-6e1e-41f0-b24c-ea7f53d59189"
        },
        "item": {
          "id": "be9086f6-52ef-49c6-888c-da494decfcc4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7373d0f0-04c5-4998-b2af-a91fdc8036d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8b385c-b645-49bd-9575-647b17f3c6d9",
        "cursor": {
          "ref": "0f734420-1fa2-4400-934f-40b75c7e9a4e",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8e22cfef-48e4-4752-a79b-8e6768b97d86"
        },
        "item": {
          "id": "9c8b385c-b645-49bd-9575-647b17f3c6d9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "af4807ab-5e50-4a7e-90c4-970da98d2048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b651a87f-1f15-444a-aa91-9ced544e55f5",
        "cursor": {
          "ref": "4bb59d3e-0b13-464c-812b-7b912b096c9e",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a2f9767e-2e24-4bdd-ae49-7fd484121632"
        },
        "item": {
          "id": "b651a87f-1f15-444a-aa91-9ced544e55f5",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b72f0ebf-8008-49fd-997e-166d85cba1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0743714d-e413-4c34-b7a3-35722ce81517",
        "cursor": {
          "ref": "f285ae1f-2aad-4cdb-b3ea-43aea5e8b6dc",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8f6e8655-14cd-4654-a5a7-7fc89295e26f"
        },
        "item": {
          "id": "0743714d-e413-4c34-b7a3-35722ce81517",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "52ddadc6-d6f7-4cea-977f-e44f10a5c63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d88904-9edf-462f-b2c4-482e3e4cadb9",
        "cursor": {
          "ref": "e7674ad9-6449-442d-a04c-3dcfa03a11b3",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cb419969-f239-494b-a606-ce02a3ed20ec"
        },
        "item": {
          "id": "44d88904-9edf-462f-b2c4-482e3e4cadb9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d0f628e7-2c12-4955-b708-8d65104b513e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27a81d0-e049-4095-8cb1-bf0d23498433",
        "cursor": {
          "ref": "c46a24a8-d436-4f1f-8242-7b81bafd09cf",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "de4efc1f-e345-4d0e-a858-2e8fc8388436"
        },
        "item": {
          "id": "d27a81d0-e049-4095-8cb1-bf0d23498433",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "51d8cc3d-b171-42b4-ae9c-854cfc785350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ce2bcd-ad26-4ce2-b95d-bef9cf3abff8",
        "cursor": {
          "ref": "25063cc1-647a-4bf6-9960-4c8208acba62",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2858499e-1fca-4027-9255-47dc1dd5d551"
        },
        "item": {
          "id": "76ce2bcd-ad26-4ce2-b95d-bef9cf3abff8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "114ffe6a-9e98-45ee-b7e0-ab96a4156954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26145df-8655-4bb3-a3fd-814440898c2a",
        "cursor": {
          "ref": "aaa8992e-41e0-4647-9a3b-d9a8cd2851d9",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6b0fff11-79cd-41c4-9d86-c3c7f26663c5"
        },
        "item": {
          "id": "c26145df-8655-4bb3-a3fd-814440898c2a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "87175f61-e1c3-43e4-9341-26d6b26099d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0356c3c7-fd51-4440-95a3-7150b28d80bd",
        "cursor": {
          "ref": "2a5b5c3b-2d53-4ab7-9013-bcecee4b93db",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0e26cc26-8d76-49b5-9119-79ecfbdcc2ff"
        },
        "item": {
          "id": "0356c3c7-fd51-4440-95a3-7150b28d80bd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0780df0a-9cd2-4f0b-bbab-7bd6be1c6422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b18ef9-3741-4e21-be25-c6741d4eceb2",
        "cursor": {
          "ref": "fee259b2-551c-4fb3-abf5-b6470da16b1b",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "28879442-9eca-4642-a26a-276cf5b4e940"
        },
        "item": {
          "id": "81b18ef9-3741-4e21-be25-c6741d4eceb2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "98b47bb0-06d5-412e-a990-b97aab77c4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108ab505-6d42-4ca5-9b21-e6ab0ca83f41",
        "cursor": {
          "ref": "c88a0b02-7246-431e-a329-a932df075135",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c0017a03-6d56-4b82-b20c-fee89a5c3b3b"
        },
        "item": {
          "id": "108ab505-6d42-4ca5-9b21-e6ab0ca83f41",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5df6b2ce-6c2a-4c3f-8cae-73779b3d910f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9db096-9572-4d42-b510-c6bf592ae33b",
        "cursor": {
          "ref": "e33aeedd-8a49-4a67-86d7-be7a9918846d",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "45126173-5303-455a-b88d-3c02d8664938"
        },
        "item": {
          "id": "9f9db096-9572-4d42-b510-c6bf592ae33b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c9d4d62f-bfc7-42cb-81c0-5b4d3b31998b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c9e2c4-0be9-49e1-aba8-e605430e6bf2",
        "cursor": {
          "ref": "eb758f1b-d63d-4ee9-a56f-c51d5b7526c5",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7a61b831-4c7d-42d9-950d-2436a4e54832"
        },
        "item": {
          "id": "52c9e2c4-0be9-49e1-aba8-e605430e6bf2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "045d5df8-9c87-4e18-9e47-2f4349d39e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354478c2-1020-4dc9-8113-a33da75ea0de",
        "cursor": {
          "ref": "4681fd97-f221-4121-8b86-1142241e0b9c",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "446f44c4-7fff-441d-a6e0-29db28591173"
        },
        "item": {
          "id": "354478c2-1020-4dc9-8113-a33da75ea0de",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f3ae0baf-95eb-4607-8539-48e82efbd9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ed2ed4-ed6c-414d-9a8e-35c906022a9b",
        "cursor": {
          "ref": "b4b193e4-cd97-41ac-81ba-ad4a387898ca",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5c3f4e48-4cbd-4876-a131-c3871aec29b2"
        },
        "item": {
          "id": "35ed2ed4-ed6c-414d-9a8e-35c906022a9b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3286b2d9-c924-4d49-996e-67c7fca9c7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882ca34c-a3b6-4867-a200-ab469842e4a5",
        "cursor": {
          "ref": "6293fdcd-1791-4194-9fe9-1efa81ee912f",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "15fb8de7-b47d-429e-98a1-d52439af6c80"
        },
        "item": {
          "id": "882ca34c-a3b6-4867-a200-ab469842e4a5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6ade31f2-d786-4055-be82-44beea064950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c603463-516b-48e1-a480-99445fbac4bf",
        "cursor": {
          "ref": "08653775-4973-4432-9e4d-472b3b10ae11",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2ad11a3d-9a70-45ed-b40e-d188ee4e6f91"
        },
        "item": {
          "id": "2c603463-516b-48e1-a480-99445fbac4bf",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a4486704-d105-450b-9ed2-3dba8791b2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef405c85-6a06-45eb-8a3d-30ec4c14e0c9",
        "cursor": {
          "ref": "adc7d162-60c3-4de5-ae6b-b0407e87bc24",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "055d815c-3ba6-4bd1-8208-e199e3338f63"
        },
        "item": {
          "id": "ef405c85-6a06-45eb-8a3d-30ec4c14e0c9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1f2b3783-9b8a-4e81-82b7-206070c1d2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49c4900-9828-4544-8173-6743570c0ed1",
        "cursor": {
          "ref": "51c64c48-5bf9-4a30-9b99-f56d65b646a5",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b8ed1daa-d623-4b0b-accf-9b615741c008"
        },
        "item": {
          "id": "c49c4900-9828-4544-8173-6743570c0ed1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9dc16bb5-538d-49ba-8f0a-235bd50f4805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fe573f-a2dd-4b42-a1b3-93c7b9f4d2be",
        "cursor": {
          "ref": "6dbe70db-42c7-430c-b94a-a723accb0491",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "78c9ab91-d5a0-4bdd-855a-c5fd2ee7cd5f"
        },
        "item": {
          "id": "d8fe573f-a2dd-4b42-a1b3-93c7b9f4d2be",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8ee4543b-ebe2-40fb-b8f9-c76cfaa4edd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f284327d-6c49-4f5f-86d5-b2ff197e618a",
        "cursor": {
          "ref": "f37e92d3-af68-446e-a702-736e8d09a64c",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "66a3d991-1e93-4f6b-80a1-e98586c05f7b"
        },
        "item": {
          "id": "f284327d-6c49-4f5f-86d5-b2ff197e618a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fee40f09-f017-4af7-9653-fbe0af22e36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d26580-15e2-401d-b639-4c5c86225a70",
        "cursor": {
          "ref": "834b96e0-c570-409f-9577-41da65256ac3",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "03de5767-fd0c-4290-bbca-cdaccaf7934d"
        },
        "item": {
          "id": "97d26580-15e2-401d-b639-4c5c86225a70",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b958fbfc-546b-4602-ad0b-0c456fd3408b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6696b1-0b16-42da-a5fb-c733a5d230c2",
        "cursor": {
          "ref": "a230b208-4d11-4140-a214-f20498dac633",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6fefeb7b-a857-4ac9-a7f9-60f8805276c2"
        },
        "item": {
          "id": "7e6696b1-0b16-42da-a5fb-c733a5d230c2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a28ac090-02dc-4e27-8304-f8cbcbe9e39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852b6556-61b1-4461-bce5-29b3e2fcb4c5",
        "cursor": {
          "ref": "4294720f-ef00-4fbd-998b-0ede88a6be48",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9aec4b95-29eb-44e7-a679-42e86b93d61c"
        },
        "item": {
          "id": "852b6556-61b1-4461-bce5-29b3e2fcb4c5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "38d642fe-663d-4240-b50a-f4a71cc6f055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5efe0f7-79e6-4ddb-a839-2446d4bf10b7",
        "cursor": {
          "ref": "bb0b83d8-a1ed-469a-9b57-4c26ffa0cc1b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9309de49-8f9a-49d8-b725-4cd0829ede3c"
        },
        "item": {
          "id": "e5efe0f7-79e6-4ddb-a839-2446d4bf10b7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f0d83522-ef00-4c99-89c9-79398d7acc11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b035fa96-b7c2-458e-8af0-33d91b3619c4",
        "cursor": {
          "ref": "7881a596-1ff6-43cf-ad6d-0ffd0539fdf0",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7aa942c2-a64d-4b6c-88b8-fd66cfde7c39"
        },
        "item": {
          "id": "b035fa96-b7c2-458e-8af0-33d91b3619c4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ad5a9d98-63a9-4e10-9132-4be2bba61a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aae600b-9e31-4633-aaec-1b4d3444f68f",
        "cursor": {
          "ref": "c522e468-4dcc-4d80-893f-6fca5ac4fa2f",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8b0514db-6dfe-409c-a9ef-046e48f6b5c0"
        },
        "item": {
          "id": "8aae600b-9e31-4633-aaec-1b4d3444f68f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "07245a4d-cd0a-489f-af85-a06580dce24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c1f634-9d9d-413d-a483-3f938df10080",
        "cursor": {
          "ref": "53769963-5871-4afc-9fde-008e3a220a44",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4f13c524-5776-43bc-acbe-afde99a18a60"
        },
        "item": {
          "id": "45c1f634-9d9d-413d-a483-3f938df10080",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d882a2b9-2a69-4010-b159-0ecc78521015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b485fa9-9909-49e9-94b0-db3d0ca2c378",
        "cursor": {
          "ref": "2d826ba2-3a99-4c0e-a868-4c0f0c7ec7c3",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "70b27f90-f592-4cbc-8c47-ce8fda3440d8"
        },
        "item": {
          "id": "5b485fa9-9909-49e9-94b0-db3d0ca2c378",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "beb9389b-f0a3-49b2-83bf-ff22a1569ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b1f0d3-2abe-44ba-9bb8-b7fafad3ab6b",
        "cursor": {
          "ref": "52e40123-45c7-4d72-af39-73a8afe09163",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "78d6e42f-09b4-426b-ab75-f04833c475be"
        },
        "item": {
          "id": "27b1f0d3-2abe-44ba-9bb8-b7fafad3ab6b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "02bab67b-2c3f-42ed-ab74-e9eabff7ab62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842ed703-1eae-4f83-8a91-43b6c8cca99e",
        "cursor": {
          "ref": "3a89acd3-f54c-4395-b7e6-a70d8b349217",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7ddf656b-bc39-4bb0-9c82-3af463af25ec"
        },
        "item": {
          "id": "842ed703-1eae-4f83-8a91-43b6c8cca99e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1b0a2ed1-ffd8-424d-b5e3-c3edc5f92fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c671ab41-5229-46de-b386-6afdecfc2003",
        "cursor": {
          "ref": "da19e05e-5eff-4735-8c82-98120f873272",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "25ccb105-21aa-4dd6-996f-e51dbed71ad7"
        },
        "item": {
          "id": "c671ab41-5229-46de-b386-6afdecfc2003",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "801b692f-2d08-414b-92aa-a223aea0e698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6666162-220d-44d1-9dea-93e2958e6c1a",
        "cursor": {
          "ref": "dd7a81b3-1101-4775-b9d7-a84b87547f8c",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "84f3f4eb-67cd-45fa-bafb-4875ab2d7a00"
        },
        "item": {
          "id": "d6666162-220d-44d1-9dea-93e2958e6c1a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d22547f6-e0bf-401f-893d-f690c7326950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b12a6c-b443-44e0-a621-93ac92e9adba",
        "cursor": {
          "ref": "83301839-053f-42c3-90e6-723f6cac52cc",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ce457761-8312-41bc-8333-28ac5aed5900"
        },
        "item": {
          "id": "68b12a6c-b443-44e0-a621-93ac92e9adba",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e98bc588-326e-4f21-9d0c-8cbd35c68a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0558fe4a-d637-4194-91b0-43a0fdcf6534",
        "cursor": {
          "ref": "cecf3053-6265-48b7-92d7-c8f96cda411a",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4e300315-b5c7-4e29-a67f-72944540ec23"
        },
        "item": {
          "id": "0558fe4a-d637-4194-91b0-43a0fdcf6534",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bc2ed3f7-d48a-432f-95ac-60506d9e26cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546ff566-d929-43e2-af6c-42b5e375a536",
        "cursor": {
          "ref": "0a30f9ad-b65d-44e2-bed0-9a38d191343c",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "197cbdcc-7441-40a7-9341-2acdefce8afa"
        },
        "item": {
          "id": "546ff566-d929-43e2-af6c-42b5e375a536",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8180369a-d3ad-4547-87da-82bff3f861ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c1bbfa-3a22-4198-b6c8-21d0ba236711",
        "cursor": {
          "ref": "fc19cab7-39c0-4e9e-9b8f-0ebd5bfac584",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d65b29fb-c95c-463f-9de6-85c4578479f9"
        },
        "item": {
          "id": "56c1bbfa-3a22-4198-b6c8-21d0ba236711",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "525e0243-6107-40bf-892a-d9e18cd8688f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9489e18-99c6-4af7-901b-437d6baeb5a3",
        "cursor": {
          "ref": "5fae870f-1144-4724-a55e-6eafaffd13fb",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f1d96c99-63cb-4164-90a6-6c74d709fa8c"
        },
        "item": {
          "id": "c9489e18-99c6-4af7-901b-437d6baeb5a3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9e44d7bd-6d86-4d09-9fea-8d27bb96d746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107c9cde-b907-4654-bd16-8da3ad02f99c",
        "cursor": {
          "ref": "149c94c6-521c-4159-81e2-e275d3428d97",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5107aa41-63ca-4723-b956-5c613dc5132f"
        },
        "item": {
          "id": "107c9cde-b907-4654-bd16-8da3ad02f99c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2633ff2f-b712-4fa0-bbb7-482995a93954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2650d378-8975-4be3-839c-f6d6ad73df49",
        "cursor": {
          "ref": "792a805b-0bb8-4ede-989f-3e8fa957ff05",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "879f369b-15c6-4ccf-8441-302016d25671"
        },
        "item": {
          "id": "2650d378-8975-4be3-839c-f6d6ad73df49",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "00720750-d249-4f16-8b62-ac6176455f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64eac1f-9c28-4fa4-8119-00498e78d7ef",
        "cursor": {
          "ref": "d8d1784b-faa2-48fb-a140-486a742a9228",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0a757c34-549f-455a-a76b-fce27435abaf"
        },
        "item": {
          "id": "d64eac1f-9c28-4fa4-8119-00498e78d7ef",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6add6182-1617-43fe-8cbc-3a9a2f0854bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911f0dc6-c3c5-4ef8-8145-4558d0e2ddf6",
        "cursor": {
          "ref": "42e73c80-5169-4916-9065-e9d01cc04b98",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "895e6ab3-add7-458e-8e3b-2ce11bacbd19"
        },
        "item": {
          "id": "911f0dc6-c3c5-4ef8-8145-4558d0e2ddf6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ea58777b-cef9-4880-af32-208ebc5ebf6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf899b8-c5ed-4e82-af7b-dc295e131e09",
        "cursor": {
          "ref": "2b0ddb88-f98f-491c-a856-2d55f7e83008",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8f52d6e2-7544-41c5-b2b6-b892e251e872"
        },
        "item": {
          "id": "dbf899b8-c5ed-4e82-af7b-dc295e131e09",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "df58b808-b34f-4446-9ce3-87caf0a50eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bb15f6-1c52-45d5-a8a3-842c381acb82",
        "cursor": {
          "ref": "cb16abef-35bc-4edf-aae2-736bc4987324",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "023a7136-d762-43fa-9ab6-2ec95539bbea"
        },
        "item": {
          "id": "29bb15f6-1c52-45d5-a8a3-842c381acb82",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "34799739-596c-46b4-a8d9-5f7eb039899c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ba3e8e-a47f-430f-9abe-124f2fdc73bd",
        "cursor": {
          "ref": "9206453a-5465-4d31-8bb6-ef85cfe9d740",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "28595046-0115-4ae3-9a0a-8f86c0a4b25b"
        },
        "item": {
          "id": "f9ba3e8e-a47f-430f-9abe-124f2fdc73bd",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c75902c7-c42a-46ad-b849-e4c0c4cb4ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ae59bd-4fb0-4640-b09b-943f9991e514",
        "cursor": {
          "ref": "371d7f14-5802-4327-ab51-538e13d01cba",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c9f7c29d-e51c-4940-9278-bb48f8b38bad"
        },
        "item": {
          "id": "03ae59bd-4fb0-4640-b09b-943f9991e514",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e6880c27-8c91-42c5-8120-2db1dfe520eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6553a0be-dd26-47ea-be91-71e7cb7da0de",
        "cursor": {
          "ref": "44f2a903-949b-45f0-8d18-de30f8086042",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7410d752-d61b-46b2-940e-3eed9de6b80b"
        },
        "item": {
          "id": "6553a0be-dd26-47ea-be91-71e7cb7da0de",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2aeff393-d16d-4a1d-b5dd-519fbb882bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8ae0fd-0ea1-4f38-8a71-277da56e7e00",
        "cursor": {
          "ref": "9752e616-6fa9-4776-9c30-f456ee0d7f1b",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d5f08d1b-8c0a-482b-be6a-f17fabeba942"
        },
        "item": {
          "id": "4f8ae0fd-0ea1-4f38-8a71-277da56e7e00",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "17609faa-0b19-4124-ae69-6d72e249fbf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3881f4-adbc-4b9d-98d3-8598aae5e2b4",
        "cursor": {
          "ref": "30a5f3bd-7d1f-4c56-bf45-0d764a8f2eea",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ce58a906-6b65-4043-804e-0794cdae1381"
        },
        "item": {
          "id": "6a3881f4-adbc-4b9d-98d3-8598aae5e2b4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a28b11ff-7646-4a77-99b5-037df94cdcc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfcfaec5-3e69-41bb-81f4-7cc5708ef13f",
        "cursor": {
          "ref": "f786b0f8-7235-47d5-ad67-39cb800d60c8",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "963bd1fb-a706-4155-a21c-1b3f273f6731"
        },
        "item": {
          "id": "cfcfaec5-3e69-41bb-81f4-7cc5708ef13f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9fcf79ca-b70e-48fa-9af1-621a4716c8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6e64ab-441d-4233-ba01-4777f642cdc2",
        "cursor": {
          "ref": "d00f1533-1af4-4f57-9676-5b19f19b4f71",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "194c86f3-4856-4e64-a1cb-f64f2975c003"
        },
        "item": {
          "id": "cb6e64ab-441d-4233-ba01-4777f642cdc2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8329b100-dba7-45b7-826a-626606df3cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0de5bf2-b4be-4adc-b52c-f92391517ff0",
        "cursor": {
          "ref": "3cef3669-f5e2-486a-8628-b378ca4718c3",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "34f656a8-2487-475f-91b4-e24cb78a8991"
        },
        "item": {
          "id": "d0de5bf2-b4be-4adc-b52c-f92391517ff0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "862e6340-9bc7-4b6a-91cb-e1ba0653a5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083bdfde-f2eb-4136-9013-0b9d6ac72d64",
        "cursor": {
          "ref": "53eb417f-3649-4c56-bc1e-da5799c1cc5b",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "525a181c-7eea-4c42-8de3-eafbb91a4363"
        },
        "item": {
          "id": "083bdfde-f2eb-4136-9013-0b9d6ac72d64",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "eb07aacd-f170-4c30-8bbb-c62ee7c74adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcbb557-21fd-4c02-a18a-13d963d72f29",
        "cursor": {
          "ref": "dfecc0ce-a851-493d-998d-fa587a8a3ea4",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "af60fc9d-e329-4c26-bf86-6a6ce8b5a4e9"
        },
        "item": {
          "id": "5fcbb557-21fd-4c02-a18a-13d963d72f29",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6bb4e450-2360-479b-81ff-99ad2c060925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c78110-f9b0-4296-9a32-f0b425f44042",
        "cursor": {
          "ref": "7e443e30-1b97-4522-9b9c-07aa536a4469",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ca5a7383-8b8d-4f14-a64a-2eb9d7d951f8"
        },
        "item": {
          "id": "53c78110-f9b0-4296-9a32-f0b425f44042",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e405ec4d-3375-4aba-b43c-4fc2995c2bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eded5a53-0ab2-4610-9bfc-d16626acd1fe",
        "cursor": {
          "ref": "0d32aa5a-02d0-4c36-8659-ff9d8bc07a36",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "388cb669-e4e9-4c56-a6e3-7d59ded89090"
        },
        "item": {
          "id": "eded5a53-0ab2-4610-9bfc-d16626acd1fe",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2808fa85-4330-4d15-b07b-7cdb8c327906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081d1aa7-9455-4321-a266-c664eac154db",
        "cursor": {
          "ref": "c1aac04b-3e6a-4446-a0be-506892fa44b7",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "83189ac6-7465-433e-b316-bed97abdb7c0"
        },
        "item": {
          "id": "081d1aa7-9455-4321-a266-c664eac154db",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a396dbff-9ce0-4589-bf5a-b619a646c9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931affaa-70ea-4459-869e-2a4d8909e443",
        "cursor": {
          "ref": "10df3e88-1abf-4c24-9833-a3eec78ed5a5",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7af10ca7-1587-4529-9252-50a35bdbbaed"
        },
        "item": {
          "id": "931affaa-70ea-4459-869e-2a4d8909e443",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7b700a40-ac76-4d3d-a751-14319e0b5f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614e89c3-57a3-4b8f-8f77-3bcb5a218362",
        "cursor": {
          "ref": "98d0dddf-0d67-46f7-9469-1b5cc3e3bbf7",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6ec3da1d-f54b-477e-8614-6a347f95becd"
        },
        "item": {
          "id": "614e89c3-57a3-4b8f-8f77-3bcb5a218362",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9ce5c80e-d8fa-4e87-a87c-1a225e9c4d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9773eb75-bb6f-43a1-b4d9-6c581285bca7",
        "cursor": {
          "ref": "68943571-08f9-4e0b-8a8a-9caab28a1b11",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b945f306-ad13-4731-a911-7869d6a12c7d"
        },
        "item": {
          "id": "9773eb75-bb6f-43a1-b4d9-6c581285bca7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "23138683-6644-4279-8314-4f766fdf4e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ef1596-4140-43b3-ba8f-1face51a24f0",
        "cursor": {
          "ref": "5a697f55-b5ae-4f00-9716-db98d74a9916",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4a55a692-ba0e-4121-a89c-1f4bcb706c9a"
        },
        "item": {
          "id": "a3ef1596-4140-43b3-ba8f-1face51a24f0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d806b38d-2619-408f-bf5d-10ba85243fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8f19f7-997f-4245-ba6a-155a98b14628",
        "cursor": {
          "ref": "c2bae839-3753-4477-a172-19d4c1299cb5",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "edfa472b-637a-4eee-81e4-08931a460082"
        },
        "item": {
          "id": "ff8f19f7-997f-4245-ba6a-155a98b14628",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f460d12d-df57-49da-9fc6-5b5c848cc4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31175a5d-db95-4c72-8d73-96586ba6ee88",
        "cursor": {
          "ref": "eadd46c0-c046-47cd-98dd-707c9f87c619",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "712e0458-9e5e-4fc1-a95f-eabe7dfd70c9"
        },
        "item": {
          "id": "31175a5d-db95-4c72-8d73-96586ba6ee88",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bbdbcb13-d75f-4e01-9684-f1610d0fc038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a39b6b1-87ce-4c1a-aa32-795af317ef6d",
        "cursor": {
          "ref": "82e21b39-e92a-4b52-84a2-2bb23b9381ab",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1d966203-73e6-4650-9c36-f3d64187360e"
        },
        "item": {
          "id": "8a39b6b1-87ce-4c1a-aa32-795af317ef6d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4d34f3fb-b83c-4be0-ab53-4512af52029c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2802559-260f-4a0b-8d86-52175e7365df",
        "cursor": {
          "ref": "c087b990-975c-48b3-bb19-7b514007963a",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3cd94554-6c99-4f9f-921c-de37596f5d11"
        },
        "item": {
          "id": "e2802559-260f-4a0b-8d86-52175e7365df",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2d04216c-abaa-45e4-86bb-3b43eb9e10ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8e5e9c-64a2-4e06-a9d1-a93d8925c3fa",
        "cursor": {
          "ref": "f159584d-cbbf-447c-9468-f02e55c3d9cb",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "fbec3b07-ea1b-41d3-9df1-e93114b77a83"
        },
        "item": {
          "id": "3b8e5e9c-64a2-4e06-a9d1-a93d8925c3fa",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "bb868017-e554-44de-bc94-9d66f27eee15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2bf718-6b10-414f-ae01-27b9462e50d7",
        "cursor": {
          "ref": "803185ce-49d6-401a-89e8-d2a016e6f8e5",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "472a17bc-1478-4495-853c-e6523cdf1d3c"
        },
        "item": {
          "id": "8d2bf718-6b10-414f-ae01-27b9462e50d7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e78966de-da31-4a43-ad88-f8a7d94a881a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368d3bc9-fad6-49f9-81f9-bd907ed24dc8",
        "cursor": {
          "ref": "3aa92ebc-2e24-4715-8bde-f8a44d91ec26",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a758cd41-6ed3-4acb-a93a-25e5af72840c"
        },
        "item": {
          "id": "368d3bc9-fad6-49f9-81f9-bd907ed24dc8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "cff7a1bd-53e4-43b2-8a7a-fc7acab9c3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03553b23-dbc1-43a0-bba5-df34a86d7172",
        "cursor": {
          "ref": "db349420-392a-4a0b-9f99-f0075ca1841c",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1c9cf297-68f7-4f9f-ac62-4056fe497259"
        },
        "item": {
          "id": "03553b23-dbc1-43a0-bba5-df34a86d7172",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8be36884-5adc-4521-b0b5-08d3b849a5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e709578b-d5e8-4cc3-8796-517d6c2abb29",
        "cursor": {
          "ref": "e02033a7-acc0-491c-8c73-0a3b9ff72136",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f3714bd8-ea4a-4272-96e6-7ebe20a3dc55"
        },
        "item": {
          "id": "e709578b-d5e8-4cc3-8796-517d6c2abb29",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3607bac4-b09a-422b-a2be-2018b656b237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34989259-1989-4807-aaec-3fd4fe99ef3b",
        "cursor": {
          "ref": "b9769b56-76ce-48b4-84dd-c199c79bf152",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "15c10398-368c-4a3c-8400-7f73dc2fdb8f"
        },
        "item": {
          "id": "34989259-1989-4807-aaec-3fd4fe99ef3b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7f4902c3-ed2f-4762-b064-0efa49625399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0530e5d8-c69a-4c52-960f-3f55071f8dfb",
        "cursor": {
          "ref": "9e216ec8-780d-4c5c-8674-e7a3ac022a7c",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e552401d-101e-4df0-a44f-db420cc5f6e8"
        },
        "item": {
          "id": "0530e5d8-c69a-4c52-960f-3f55071f8dfb",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "aec3b034-bb32-4dcb-ac0e-3c8a08b8bd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250b5ce0-a702-4088-ad6e-1af965610237",
        "cursor": {
          "ref": "7ec6515b-005c-4edc-a2bf-2afbb41a5ad6",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f421c83e-117f-4ea8-be7b-56c0d173fb76"
        },
        "item": {
          "id": "250b5ce0-a702-4088-ad6e-1af965610237",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9973ccfc-3061-48bf-a8e2-33e4f836bb20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62c900d-eb7e-49e3-a91b-1b70709c27c9",
        "cursor": {
          "ref": "63277fdc-8e7a-4ac7-bfc2-f82a4b7653db",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e655f0ea-c405-4974-abce-cb049481a337"
        },
        "item": {
          "id": "e62c900d-eb7e-49e3-a91b-1b70709c27c9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "609529c5-b5fe-4d54-aec2-04ee5dff445e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f93082-cf9b-4911-8d59-29b5ec3f9b96",
        "cursor": {
          "ref": "ea0a0f18-7684-4b14-a517-5020c5336560",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "753701fb-86cc-4efa-96a5-80db12e11571"
        },
        "item": {
          "id": "b6f93082-cf9b-4911-8d59-29b5ec3f9b96",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9c130340-e34f-4e79-ac1f-35cf434e150c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ac6579-e412-4685-9015-2fbb129bbb08",
        "cursor": {
          "ref": "c849fa4c-d63a-4be5-99ba-a309126e5569",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d7a299e1-cb01-4888-833d-58d30a4581d6"
        },
        "item": {
          "id": "f9ac6579-e412-4685-9015-2fbb129bbb08",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "15167169-e239-47c2-8187-c88d6af9c579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167dbee2-e5db-4a1d-a32e-1d95cf6d4e62",
        "cursor": {
          "ref": "d9a9382a-4503-46d7-a99c-dfac1954d9aa",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f0cdc932-b518-4d34-a135-11f118cf19b9"
        },
        "item": {
          "id": "167dbee2-e5db-4a1d-a32e-1d95cf6d4e62",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "34065202-81b9-4254-9399-4075e6be0bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1889e17c-6d24-4e39-b3ed-3e26268862b8",
        "cursor": {
          "ref": "d3a7c80c-348f-444d-9f03-4cc120f16f70",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b55ff333-507e-4589-bbb6-d190355a8fc4"
        },
        "item": {
          "id": "1889e17c-6d24-4e39-b3ed-3e26268862b8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "db245951-8811-42b5-8e69-e190b4e601cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829853da-8971-449b-896a-22ecf62d2661",
        "cursor": {
          "ref": "a619e88d-1d4a-4dd3-9f78-06c94caa2c33",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e562f62f-7279-4b88-9ade-32cfa49d2dc7"
        },
        "item": {
          "id": "829853da-8971-449b-896a-22ecf62d2661",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "52750e92-785f-4ae0-84bf-b91863f70954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb51322-456e-4520-baf2-eb16cee2e14d",
        "cursor": {
          "ref": "f1069ebd-1c67-420f-a5c3-33dae2ea4b5e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ca9536b6-686b-4a56-9a99-77e389ea5a79"
        },
        "item": {
          "id": "4bb51322-456e-4520-baf2-eb16cee2e14d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b32ef243-0dad-4f0c-8475-405176188a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64201a89-b0c1-4657-9ea2-8d5acd2b163f",
        "cursor": {
          "ref": "c80f3a16-4337-4e30-b106-e696666b4add",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "85c9ff63-90f8-4520-9e66-6d411cfb37d5"
        },
        "item": {
          "id": "64201a89-b0c1-4657-9ea2-8d5acd2b163f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1fab35c1-7754-4587-b4c9-582f22f49470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b3a3c9-0623-4665-b6d4-1bb8d79d4b12",
        "cursor": {
          "ref": "a51e4cd6-08a6-4ec9-843d-031aa778f87f",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "91fa9860-453b-49b7-a212-caa1d1f06e36"
        },
        "item": {
          "id": "e3b3a3c9-0623-4665-b6d4-1bb8d79d4b12",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "343503d4-b4b7-4e13-8b72-c9f29db8e1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c09528-e2eb-4a3b-a895-8569ddf9015a",
        "cursor": {
          "ref": "b4652f15-0c6e-4aa6-a7f4-772a187675c0",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2a224b25-b5b3-43c7-948d-0b132bf156f1"
        },
        "item": {
          "id": "93c09528-e2eb-4a3b-a895-8569ddf9015a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9306093a-7ff5-4c83-a599-8d49cfdcc92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0d06bc-8e40-48e7-bcb2-88250dc4e2bb",
        "cursor": {
          "ref": "9c3c6617-7c89-404b-9577-83291e34dbc1",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f71d9d2e-b3ba-4239-9d5a-8aaaa78ee8c1"
        },
        "item": {
          "id": "6c0d06bc-8e40-48e7-bcb2-88250dc4e2bb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "32279c34-d543-445f-a473-43323a22c7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a015b62-7d2c-4503-8ed5-534576efeef6",
        "cursor": {
          "ref": "eb4591ce-b04d-4b11-b0a6-9687604bf8de",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5ebe54a7-583b-4717-8999-28ae66904f55"
        },
        "item": {
          "id": "3a015b62-7d2c-4503-8ed5-534576efeef6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1d973215-d5bd-4a9c-8c4c-f8589fc49666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94052504-f291-490d-8cd0-c8f61768f63a",
        "cursor": {
          "ref": "b133e6c2-efe5-40b8-9854-fbfb839d4514",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0dba4070-46ab-4482-80ad-feb443acac54"
        },
        "item": {
          "id": "94052504-f291-490d-8cd0-c8f61768f63a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0e9b143c-d36d-4dc6-b7d4-5b9a5010ab0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11dae551-15e9-4c20-b72b-723da2c1d282",
        "cursor": {
          "ref": "d4e55a8c-198e-4661-a9c1-9a008726d4c2",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fdc13d65-b63e-4ccc-85a0-0faf5454e6dd"
        },
        "item": {
          "id": "11dae551-15e9-4c20-b72b-723da2c1d282",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d2008035-5e10-4e6b-86d2-9be7c8e105b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c90b83a-68fa-4d30-9cdf-8b652933dc16",
        "cursor": {
          "ref": "3657ce68-a686-4fae-b886-a2d406c5bd2a",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b20933d4-7f3f-48e7-9fa2-318cb137bdb0"
        },
        "item": {
          "id": "1c90b83a-68fa-4d30-9cdf-8b652933dc16",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "082a0006-e3ad-4a51-89e7-0a2e979035cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a924bf6-ec48-41a4-bf17-72d975740093",
        "cursor": {
          "ref": "db418398-a9a9-4f29-a26a-132b4617b96c",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6ca38877-194a-410c-acec-9f8254ca3a34"
        },
        "item": {
          "id": "9a924bf6-ec48-41a4-bf17-72d975740093",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "62ecaaaf-6bdb-4b1f-8071-52c324b6b5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d43b1e-ac85-4c22-aa54-3b0696ab6def",
        "cursor": {
          "ref": "be0e1152-ee76-4897-b3fc-beec7b264f88",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bcadf605-e2ae-477e-97ea-d84d0875b80b"
        },
        "item": {
          "id": "a4d43b1e-ac85-4c22-aa54-3b0696ab6def",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "65b4cf79-a8c6-482a-9430-e47851a49203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c0c89f-0721-4d5e-8f64-420694ea3c24",
        "cursor": {
          "ref": "b2579a90-6609-45c0-8ac5-509db1844f3b",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7d6f1b95-4304-40bb-9702-a5b7edbffc4d"
        },
        "item": {
          "id": "f5c0c89f-0721-4d5e-8f64-420694ea3c24",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6df8ad19-4176-4aa1-9c75-e9962b6aae25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9e37e8-3ce7-4cfd-9523-63f7d90244c3",
        "cursor": {
          "ref": "e5bbbf33-808e-4dbf-80fb-513c2252b0b0",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d20166b7-04b6-4b03-a9f9-43c9b42368f4"
        },
        "item": {
          "id": "dd9e37e8-3ce7-4cfd-9523-63f7d90244c3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3ad30ae1-04fd-4a14-ac9a-468713a036d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85bda83-55ba-464a-966d-ed80338878bd",
        "cursor": {
          "ref": "3befefc8-e0fb-4791-832f-b0911dd1829f",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "52b90f5e-b3e2-440c-8ef0-0157983fceef"
        },
        "item": {
          "id": "c85bda83-55ba-464a-966d-ed80338878bd",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "bfa57c3f-62f8-409d-8e5c-efc516cedc1a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d49f669-b49c-4c0c-9d57-bf607a4182b6",
        "cursor": {
          "ref": "b0ec6517-d968-47d6-a344-518e17e2a3fe",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ff807125-2374-4591-b891-3b081257b060"
        },
        "item": {
          "id": "4d49f669-b49c-4c0c-9d57-bf607a4182b6",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "0f054758-c41b-434e-8787-3822b5605a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5f06eece-4dd9-4d7c-b450-1221499268cf",
        "cursor": {
          "ref": "d35f6114-8866-4bd7-8eb3-262a98b4234b",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "eac0acb0-981c-4c36-bff9-34d4af305001"
        },
        "item": {
          "id": "5f06eece-4dd9-4d7c-b450-1221499268cf",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0ce7c7a8-690f-4069-b705-ee8f4f762c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "c6c2a106-f728-4db4-b07d-1a34f65b956f",
        "cursor": {
          "ref": "390b3d9d-4060-49c2-bbe9-f36945b54fed",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "40c683c6-90d7-44c7-8665-812dc28bcdf9"
        },
        "item": {
          "id": "c6c2a106-f728-4db4-b07d-1a34f65b956f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "72761d70-b238-4cd7-a876-ce197de018c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "12029a54-e4c6-4ba8-a7ef-13199c67d179",
        "cursor": {
          "ref": "6c89bad7-af76-44d9-8c0e-17badfbc9e6b",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "245e36e9-871b-4297-bc62-56cb4469f254"
        },
        "item": {
          "id": "12029a54-e4c6-4ba8-a7ef-13199c67d179",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "35ce774c-69b8-433e-a3af-110070dc115e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "a0b88105-06df-4791-a887-4a36b02eda92",
        "cursor": {
          "ref": "382f1ec2-2eaf-48ee-ba77-e23a638403bb",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "aaa70717-b150-47ee-b7a4-cf792dd550ce"
        },
        "item": {
          "id": "a0b88105-06df-4791-a887-4a36b02eda92",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fa7eec3d-0911-4241-8a7d-49d011ffec48",
          "status": "Created",
          "code": 201,
          "responseTime": 10077,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "904cd204-42b9-4da8-aa59-837dc9abcbfe",
        "cursor": {
          "ref": "b0cb4b3f-9ca6-47b5-a400-5c0cced35775",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cb140848-69c3-4429-9ec5-fe4353823773"
        },
        "item": {
          "id": "904cd204-42b9-4da8-aa59-837dc9abcbfe",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "bbf1dea2-7804-4159-94ad-a42c191a49e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b7b9f09b-0afb-48c3-a397-b2c579a81512",
        "cursor": {
          "ref": "87b48f13-c5f1-438b-9831-f7ce78b72fab",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b72cf01f-c4aa-4f37-ac67-1cf6a4ef7c3e"
        },
        "item": {
          "id": "b7b9f09b-0afb-48c3-a397-b2c579a81512",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5ac2e341-f246-4928-ae3c-8df991d49113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "3bbcacdf-d2be-4ca7-b3b4-c9a5273eb8a3",
        "cursor": {
          "ref": "d1f6973c-dc4f-4dea-bdd7-b4892a3f9032",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7ce0c558-c015-4618-ae76-88900d8226b1"
        },
        "item": {
          "id": "3bbcacdf-d2be-4ca7-b3b4-c9a5273eb8a3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e2207305-6eef-4d31-a295-4146d0f9aa71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7dd6f58-5115-4da2-a627-8484b1b99511",
        "cursor": {
          "ref": "5bb7adeb-2e63-4af8-b4c4-bf573ee09f2e",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "18e50a62-4374-4ac2-ba16-341f67f39b93"
        },
        "item": {
          "id": "a7dd6f58-5115-4da2-a627-8484b1b99511",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "edd6de62-1182-4df0-92b7-4771a812b636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fbb2a9-df34-428c-8b6d-753a77b840c4",
        "cursor": {
          "ref": "0b7d87a2-1c94-4638-81ab-46f17ca4eba0",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "762123a5-6db8-4e5d-809f-a6d59a6067f1"
        },
        "item": {
          "id": "35fbb2a9-df34-428c-8b6d-753a77b840c4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c70c2f47-2a02-4291-9463-61ce31d26d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e09866-db38-4d57-9b2d-65bb491081db",
        "cursor": {
          "ref": "750cc819-2281-42c0-93d9-14d121ea7df5",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1fc0e505-00f3-4792-a2d2-afa2f8d24144"
        },
        "item": {
          "id": "56e09866-db38-4d57-9b2d-65bb491081db",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e0757923-bd8e-4edf-87bf-23a6f9f4ed48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c334c64-59b4-4f50-a061-e98e4fdb78da",
        "cursor": {
          "ref": "906df1b2-4dec-421c-9ac2-9d12f11f736a",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e702a042-9c3f-4cd5-a29c-3c4ae78c6c7b"
        },
        "item": {
          "id": "0c334c64-59b4-4f50-a061-e98e4fdb78da",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "31efba9f-b1c2-4834-93da-d0bc7c847b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc329cb-793a-4122-8683-79468098f5d3",
        "cursor": {
          "ref": "8616d275-9cad-4373-9b6b-8b3a42397cf4",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c8df3615-c006-4667-badd-f018e5254bf8"
        },
        "item": {
          "id": "ddc329cb-793a-4122-8683-79468098f5d3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "11576717-0af4-452d-be79-7cea8ecd7d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4414bf4-04ef-4ac9-b16d-301f379573e7",
        "cursor": {
          "ref": "9ca04e27-3695-4d60-be77-da7e95368376",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3768d67e-3321-4107-81c1-957d08c451db"
        },
        "item": {
          "id": "c4414bf4-04ef-4ac9-b16d-301f379573e7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5d10b6cc-ef4f-4009-855b-de2ca9083a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72c9dfe-212a-41db-b025-55c7b07427c8",
        "cursor": {
          "ref": "65f0fe7f-9564-4b44-a140-95e8509f053d",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6d5d4a21-54bf-4fea-9e66-6fe741f4abba"
        },
        "item": {
          "id": "f72c9dfe-212a-41db-b025-55c7b07427c8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "61f744fa-dbc5-4e5d-9342-81edc4fd4896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7baaa3-e94c-4180-8601-7a64a434afec",
        "cursor": {
          "ref": "8eab8638-3597-491f-9b9f-7e29997b8b1b",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3394983f-777c-45aa-b34c-529c54e346ec"
        },
        "item": {
          "id": "dd7baaa3-e94c-4180-8601-7a64a434afec",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "39cb220d-e75f-48f7-9b7c-717342cc89e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c84b8b-b27d-40df-af61-40a673100e41",
        "cursor": {
          "ref": "e1d2ebfe-3439-4724-bd0c-8916c83aac97",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8c9c64d9-afbb-4fb0-8a05-858e92ce9cc5"
        },
        "item": {
          "id": "19c84b8b-b27d-40df-af61-40a673100e41",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6790b818-2035-4186-a1f7-2235d3be9b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5c716e-78ec-4ab4-8eb2-6a139cd5aa7f",
        "cursor": {
          "ref": "24f432b2-c2bd-4afa-add0-c4e2b0c0f42f",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2832cc82-8712-499c-82a0-fc83de36c2b3"
        },
        "item": {
          "id": "db5c716e-78ec-4ab4-8eb2-6a139cd5aa7f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5b9fe97e-b398-45d4-9087-d2aeb82c452f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218d5f84-7ce4-4594-a701-cbb5ff221c20",
        "cursor": {
          "ref": "ca85ff5a-b2d2-4c15-81ee-273842a089d6",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "05c4c294-3ca5-4f02-9ee8-8752c19a40f2"
        },
        "item": {
          "id": "218d5f84-7ce4-4594-a701-cbb5ff221c20",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9e1a722a-89a4-44d2-ae60-18324ba46145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76914fa2-1433-476c-b53a-55f744a9d0be",
        "cursor": {
          "ref": "5a20b085-f9b4-4271-a537-710d3552d418",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f3865631-6e53-4683-9ddb-14334ee186e9"
        },
        "item": {
          "id": "76914fa2-1433-476c-b53a-55f744a9d0be",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b7ee130b-53e7-40db-a909-1e8ae9d03391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fc58dc-32fe-423a-a0d1-c76095cba3d1",
        "cursor": {
          "ref": "6315bef5-75ee-45d3-af23-0e2902713fd5",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "269b35ae-fc26-4c79-9d43-eafde2b1d8f3"
        },
        "item": {
          "id": "c9fc58dc-32fe-423a-a0d1-c76095cba3d1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cc8625ff-281c-4191-b41c-db680d76f627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0439cd-350c-449b-b1f2-0dcd82e90b1d",
        "cursor": {
          "ref": "19be3a5d-a1b7-49c4-b152-f5878b601cfd",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "04c65e23-1672-46a5-801c-2a1b186ef056"
        },
        "item": {
          "id": "2e0439cd-350c-449b-b1f2-0dcd82e90b1d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "139a42a2-1faa-43a0-84ef-20d72cffdda8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90124be1-75f3-4757-bbef-052075b8c2ff",
        "cursor": {
          "ref": "285b587b-d18e-48f0-9362-3f4791a5bd1c",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d13883ec-7cf1-4e3d-bb86-3cfb0ea1a329"
        },
        "item": {
          "id": "90124be1-75f3-4757-bbef-052075b8c2ff",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5680fb64-6d6f-4875-bf65-4586afd01868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ee9c3c-2293-4e10-9653-7dd21cf03adc",
        "cursor": {
          "ref": "5289bf18-24fb-4562-a9ab-fd19c2cb7dce",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a4b088d2-5ff6-463c-bddf-3ddddbaa78a3"
        },
        "item": {
          "id": "f3ee9c3c-2293-4e10-9653-7dd21cf03adc",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4c1d3823-e8a1-40de-ae9c-669178522086",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 102,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "ea1e088a-de59-4509-baca-51dcd237a80b",
        "cursor": {
          "ref": "d7f01252-b64b-453a-9bfc-c4f4a57bd00f",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f01c13fd-8ded-4c42-8e6b-4b71bd003e0e"
        },
        "item": {
          "id": "ea1e088a-de59-4509-baca-51dcd237a80b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2fb1c865-9e20-4db7-8c31-d8cacbc07f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a45113-ed85-4bae-a785-9ad4515012a1",
        "cursor": {
          "ref": "13d16b8d-8a1e-41c4-9238-4a3614aef197",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "fd571012-a74a-46ea-816e-8479fa0b57db"
        },
        "item": {
          "id": "21a45113-ed85-4bae-a785-9ad4515012a1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b06dc733-ddad-4163-82cb-9c69daf17ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6c4091-e422-4a5a-9984-7cbaa47473a4",
        "cursor": {
          "ref": "17feb7a3-9e49-43fc-8d1d-76ce665b491c",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8abb0f80-cfab-47be-858c-b8f8eb80443a"
        },
        "item": {
          "id": "db6c4091-e422-4a5a-9984-7cbaa47473a4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b0bbb600-5a63-420d-baeb-d86ff784ae86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd6c4c9-bdef-4502-9c5f-08f23698f9fb",
        "cursor": {
          "ref": "fd3457d4-0cc1-4807-8d6e-b7502cab95d9",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6a790693-f6aa-4fb6-b943-5fc534dc310b"
        },
        "item": {
          "id": "1fd6c4c9-bdef-4502-9c5f-08f23698f9fb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e628ec76-7982-4ac5-b0fd-e6851846b16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3771c161-eb0e-45db-b592-ede3adc5bac2",
        "cursor": {
          "ref": "dcf3dcf9-df46-4772-824f-34318fffd742",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f2b15373-e0c5-40f9-a96c-b14b3651472f"
        },
        "item": {
          "id": "3771c161-eb0e-45db-b592-ede3adc5bac2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4d38921f-b9c2-41c4-b31a-4ac07080a555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8271ae72-8c39-4454-af48-1f678a3fe0c6",
        "cursor": {
          "ref": "7c0494c9-4864-41cc-af26-8a61e0e10be2",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d5a2501a-0db5-4254-8dc9-1df5a2467472"
        },
        "item": {
          "id": "8271ae72-8c39-4454-af48-1f678a3fe0c6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a0f1a07c-2c5a-4251-89da-262df17341c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58471b3-5fbe-4e23-b67f-142bf7d8d7f1",
        "cursor": {
          "ref": "407b9b10-7075-4cc0-9112-2870b76bae0b",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a3beb361-1717-408f-844c-6f17e5262362"
        },
        "item": {
          "id": "f58471b3-5fbe-4e23-b67f-142bf7d8d7f1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "26c9f203-9808-49b2-896a-d83d9f990a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f142773a-0b2a-4305-a3ad-5e32fd3f34af",
        "cursor": {
          "ref": "974f398e-dbd6-4fd5-8792-13c01767cb10",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "07a7b27d-47b1-4e43-88a9-257fb06ed0cd"
        },
        "item": {
          "id": "f142773a-0b2a-4305-a3ad-5e32fd3f34af",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1ddd13aa-75fe-4770-8b5a-7805151101f6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "8c1c003b-00b9-4353-87cb-d67381d2cf30",
        "cursor": {
          "ref": "9badd360-1416-4eda-87fb-f3df41275aa0",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f2027de4-2192-4774-b3f7-d2e7f486a3f1"
        },
        "item": {
          "id": "8c1c003b-00b9-4353-87cb-d67381d2cf30",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5fc44ad9-236c-44e2-9aff-982beea020b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d88f6b-1057-4a3e-be3f-74c897b433e0",
        "cursor": {
          "ref": "55aac925-da4f-4145-8330-cc3f3e89a71b",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f395e5a1-a191-410d-86e8-c54b72f0c8cb"
        },
        "item": {
          "id": "a9d88f6b-1057-4a3e-be3f-74c897b433e0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "667cd799-ca56-47d1-a4aa-4a4cab368375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6db8a88-dee5-4a78-806a-a9d0effd9ee4",
        "cursor": {
          "ref": "4954aa5c-69d5-447c-9c21-49d98a4da471",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5a321012-f696-44b9-9f9a-700d4b6f8c2b"
        },
        "item": {
          "id": "b6db8a88-dee5-4a78-806a-a9d0effd9ee4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "071259d8-2ca7-44c6-b312-ee15648b63ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd8d758-bf15-43a8-9255-8e1eba7af5dc",
        "cursor": {
          "ref": "4258e5a5-7978-484f-887e-4a6408c24374",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5d3e85b4-f509-434b-b4a1-deb07701856a"
        },
        "item": {
          "id": "bbd8d758-bf15-43a8-9255-8e1eba7af5dc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "40dc8f92-e847-4e8b-9073-fdfb908ea2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b734e9-8009-4137-966f-d30e4ee686b0",
        "cursor": {
          "ref": "556ef63e-c6f8-4beb-aa10-5cdfc8bcd222",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "708c7429-3c11-4b46-809f-3fb24b3eff57"
        },
        "item": {
          "id": "b9b734e9-8009-4137-966f-d30e4ee686b0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "31f38a72-a8fc-49ee-af8e-6a31d0ba6dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877963ea-2357-41f0-b853-25d64652f958",
        "cursor": {
          "ref": "af964769-9a44-4132-81f3-73f2d99a4d29",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "500b24d9-85ef-4e50-9827-fc3f28640208"
        },
        "item": {
          "id": "877963ea-2357-41f0-b853-25d64652f958",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6636b298-1cea-4833-a644-932832341bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626ca389-889c-4bb5-969a-137f2dbc5d54",
        "cursor": {
          "ref": "33f90ccf-7367-47ca-9efa-1c697d893401",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f79d4640-13c1-4f40-a235-fea676a4f3bc"
        },
        "item": {
          "id": "626ca389-889c-4bb5-969a-137f2dbc5d54",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "762262d7-c91d-4db1-b0ed-7aa968d5a0b2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 87,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "566b73e7-b567-4c8d-9fc9-766aea49150a",
        "cursor": {
          "ref": "b09f539d-0dd4-4c9f-bf65-9700e2ea963e",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "294cdfb4-ba00-4cbb-983a-8b94a07c73dc"
        },
        "item": {
          "id": "566b73e7-b567-4c8d-9fc9-766aea49150a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2fa4bc44-8740-447d-9741-ae32cc63e23f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d160b90c-5c22-4150-97d9-9540aede3a44",
        "cursor": {
          "ref": "7ad2d661-82b7-4fe4-9853-65c446799672",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ebd9a0ad-dc12-4b02-80b6-fd568eeec78c"
        },
        "item": {
          "id": "d160b90c-5c22-4150-97d9-9540aede3a44",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0a781367-2577-422e-9772-b6d83ed44658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5c8b65-d02b-4bca-8277-382926a66fc0",
        "cursor": {
          "ref": "d3379fc1-e8eb-4012-9a03-94e44966e50d",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6bcc3696-852f-43af-865e-5f59976fc2aa"
        },
        "item": {
          "id": "fc5c8b65-d02b-4bca-8277-382926a66fc0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "83be6584-879d-4357-b863-5e594a474bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833085fd-308b-4670-aa6b-ad2b5d9d8621",
        "cursor": {
          "ref": "311cec75-674e-438a-95d0-4744eb65a0b9",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "29f86bac-5324-4224-ab2b-3a374769fbc9"
        },
        "item": {
          "id": "833085fd-308b-4670-aa6b-ad2b5d9d8621",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "325b0c0c-62c3-41dc-a383-f2e6c68b7721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc75ff34-1842-4255-8864-037ac3a27db1",
        "cursor": {
          "ref": "47f613fc-1340-49e6-b8c3-2037e79ef952",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "492b12e0-3eec-4a81-9577-6f5ce7d3fe2a"
        },
        "item": {
          "id": "cc75ff34-1842-4255-8864-037ac3a27db1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d98dfa59-5220-4bec-858a-c9ab22ba3df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da2681b-5c8d-451d-86d5-e6691a2b0d54",
        "cursor": {
          "ref": "1f726709-ed73-42e7-955a-2acfa4bacb4e",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7a464d5f-f231-4bc5-87ed-a8e8db42e3ed"
        },
        "item": {
          "id": "8da2681b-5c8d-451d-86d5-e6691a2b0d54",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cd8720d2-d043-4eee-92c1-413fe7c5e66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92cd4e2-cf3d-4465-914a-ea270b1c455f",
        "cursor": {
          "ref": "eaf2e4df-122a-4c80-992d-859ef17354e0",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ee219764-c9e4-4141-969f-fbc7e083869e"
        },
        "item": {
          "id": "e92cd4e2-cf3d-4465-914a-ea270b1c455f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3aa6d7d6-f554-4cbd-8e9f-0720d5c815ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9406b831-c3cb-4de4-bec8-4d403a57a779",
        "cursor": {
          "ref": "945c74a2-e475-4769-97e8-795aba8c9c06",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4f580933-f50f-437e-bad5-80f1de8d4fd4"
        },
        "item": {
          "id": "9406b831-c3cb-4de4-bec8-4d403a57a779",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4df9d165-a371-4617-9b43-7c536c56e854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5339aff8-ec08-4f8c-a50a-c6499908c993",
        "cursor": {
          "ref": "c671a4b6-893b-48bc-8bbf-dc21bc7aa1eb",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ec3588d7-b585-4d2c-9abb-47389d02e417"
        },
        "item": {
          "id": "5339aff8-ec08-4f8c-a50a-c6499908c993",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4f86b95d-8be4-4ba6-a54f-11d6f53bf3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85da95ad-d2db-4b3c-b82e-67d3cf9b6c61",
        "cursor": {
          "ref": "82639cab-0aa2-4b08-938f-bda9802a813a",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "aad47d54-dae6-4968-83a5-de2914e793b4"
        },
        "item": {
          "id": "85da95ad-d2db-4b3c-b82e-67d3cf9b6c61",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a53fbe3e-1b62-4f3b-9fff-f55a098a8932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842d3528-67da-4e2e-bf77-e20ede846416",
        "cursor": {
          "ref": "9a1cc706-cc3c-4dd6-bc4d-e14695ae9535",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "33890703-fd6c-4fa6-bc8a-489cb9927f5c"
        },
        "item": {
          "id": "842d3528-67da-4e2e-bf77-e20ede846416",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "575d14c7-0c60-4f96-b741-840908efd461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d0b4ef-9414-4066-93cd-7b8a20688168",
        "cursor": {
          "ref": "9d4ad123-269c-4a57-9c31-fdb7f350726d",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2c355b32-a4cd-4dd7-8348-f660008a411f"
        },
        "item": {
          "id": "08d0b4ef-9414-4066-93cd-7b8a20688168",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "109cc206-1a8f-4931-abe4-7feb2b60e325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e36406-384d-4729-9116-7f204c154a09",
        "cursor": {
          "ref": "23f312c3-e42e-4935-86d0-92fced48a336",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2cb6946f-8637-4c3c-88fd-a310f346bb70"
        },
        "item": {
          "id": "74e36406-384d-4729-9116-7f204c154a09",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a5341813-3152-4b8e-abfb-6d2563409830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89544b3c-4cb1-4db5-bf0a-8a79d5700ca5",
        "cursor": {
          "ref": "94c0e83e-5047-4e47-bdd6-133540f0e118",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1682f348-a5db-4834-b537-1dc1b6d0f5be"
        },
        "item": {
          "id": "89544b3c-4cb1-4db5-bf0a-8a79d5700ca5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "42c9aa36-8b07-4a7f-9df4-d09112a083b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989fca8d-eae2-4fe7-832a-aec731ac6c0e",
        "cursor": {
          "ref": "00c4ec9b-2aaa-41d2-a576-ff9d869cf69a",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f9b6aa23-e92e-46ea-8ca0-6442179317e2"
        },
        "item": {
          "id": "989fca8d-eae2-4fe7-832a-aec731ac6c0e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e796ecfd-178f-4689-bf5f-1571ad798a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b91f999-7d5d-40fd-bf32-9bad140956c8",
        "cursor": {
          "ref": "8bc971e4-46af-4ac6-bd5d-61e6b8edcbc3",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "40536e1b-e848-4ebe-86ee-2308d1849be7"
        },
        "item": {
          "id": "0b91f999-7d5d-40fd-bf32-9bad140956c8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7159fc9f-9b99-4cda-a73a-4bdc6592550c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06fe221-6ef1-4ba5-96d4-0ee830e73464",
        "cursor": {
          "ref": "324d9eb1-4b38-483e-a232-bbcc0c4a876a",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9a0fd0d8-6c24-4c4d-ae3c-72159310b0f1"
        },
        "item": {
          "id": "a06fe221-6ef1-4ba5-96d4-0ee830e73464",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6aecb16c-a59a-483b-960c-7de2ae11a3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50119779-dcef-49d4-8d08-f563cf8226bf",
        "cursor": {
          "ref": "b8c453d5-cb8c-41dc-b385-bae092448c98",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cfd145b6-9caf-4818-818b-5db7f42b0d7d"
        },
        "item": {
          "id": "50119779-dcef-49d4-8d08-f563cf8226bf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ed348336-d0be-4ff1-a79b-6d66d87b635f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "cfbef03c-3941-48a4-a44e-206280a493ce",
        "cursor": {
          "ref": "5ef97b90-05c2-40d1-8b12-9316b1a3119f",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f244d6f6-cdde-419e-9f2d-5364ae88b3d6"
        },
        "item": {
          "id": "cfbef03c-3941-48a4-a44e-206280a493ce",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c64d8657-a06d-4d5f-b827-163bf5c9b31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb13802-fbb3-4db7-97ed-058ada3e82ea",
        "cursor": {
          "ref": "3e16b85f-73ab-47bb-a65d-46cdf4dc7fe1",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "64ed025b-00b0-4543-b971-2a28c1e61508"
        },
        "item": {
          "id": "ceb13802-fbb3-4db7-97ed-058ada3e82ea",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6bc15560-d4b2-43d7-bbf8-c4f0f64eba11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ec432e-d25b-4439-a50c-89568ec17bf3",
        "cursor": {
          "ref": "75e6b557-ff41-47da-a15a-27bdf9557c8f",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e1b10393-ec2c-4d9c-9f6e-869566281baa"
        },
        "item": {
          "id": "15ec432e-d25b-4439-a50c-89568ec17bf3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9da88de4-1c64-41e4-b606-e17e61a97726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e75c09-d851-46f3-bc1d-da6e95fdd7d9",
        "cursor": {
          "ref": "9e6c8d13-6ee8-4e4c-bc73-2c00ed5701db",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5c9e1f56-2b44-4684-8610-dac4bb0168fa"
        },
        "item": {
          "id": "71e75c09-d851-46f3-bc1d-da6e95fdd7d9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8e2d7e24-4ac5-4c57-8dfb-6fe99fd00a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2599385-7454-44b5-b6bb-39780cb365f4",
        "cursor": {
          "ref": "7b913abe-3a0b-49d6-af63-daa4e3c0e11d",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6ceac749-ba2a-4198-9af0-d67e84e8a805"
        },
        "item": {
          "id": "e2599385-7454-44b5-b6bb-39780cb365f4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "98d33c73-050c-4006-9df8-38aa30122ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5895ab26-852b-471a-a81d-c4a5fa8d89c5",
        "cursor": {
          "ref": "5ead2dc2-5004-49a5-b24b-601e42c8bb15",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8959c711-c906-42db-be96-150efeaa8614"
        },
        "item": {
          "id": "5895ab26-852b-471a-a81d-c4a5fa8d89c5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5371a8db-b565-41d3-aeeb-d76b95c38f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65f8c93-c881-454a-ada1-221d3bfb6c02",
        "cursor": {
          "ref": "a92b8560-7610-4414-8301-d0dd237d3b87",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a94fd820-7d4f-4e7d-8da1-c7ccbc1e62bd"
        },
        "item": {
          "id": "b65f8c93-c881-454a-ada1-221d3bfb6c02",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9b3ec362-d81e-4e12-8c29-73435bd8d10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da1a2dd-a519-420e-9071-ef489f61e388",
        "cursor": {
          "ref": "d2aa8255-4932-40be-aafa-b8708fd90a6d",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a48fae85-0cd4-47f9-8dcd-8f7a919e4965"
        },
        "item": {
          "id": "9da1a2dd-a519-420e-9071-ef489f61e388",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "16972d66-c7b4-4063-a7b8-87c3f433ebda",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "856b35de-a5dc-45ba-b512-e9d74e282ef4",
        "cursor": {
          "ref": "1195d5df-da5a-4794-b096-83f1ba6df8ff",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "82e36da2-5960-43b4-b0e0-20bfbf7031eb"
        },
        "item": {
          "id": "856b35de-a5dc-45ba-b512-e9d74e282ef4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "de9e7e3f-f6a8-4d61-a058-bb508abf1290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3688f9d-25be-418f-8daf-5f46a80451b3",
        "cursor": {
          "ref": "72c05de9-e5cc-44c0-980f-6ea9f4b5b390",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4ef24dbd-43b9-49d5-b7a4-ec6fce4a35fc"
        },
        "item": {
          "id": "d3688f9d-25be-418f-8daf-5f46a80451b3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a721a9cf-37ad-4f20-82f5-ca0d16350e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65645f4d-b845-4cc1-a71f-4e8508cb877b",
        "cursor": {
          "ref": "c21baa33-0f8a-4932-8975-3965993383b7",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "14884501-664c-4b2a-bd6c-e564024ebe83"
        },
        "item": {
          "id": "65645f4d-b845-4cc1-a71f-4e8508cb877b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7cf056c5-fc48-49d7-8249-f3745588e91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b90d06-f296-45a9-a3e4-4929b5e53db0",
        "cursor": {
          "ref": "1f5a2c35-0246-40c5-9935-9877c6056907",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a0035b5a-ea74-4701-b02f-b956f529a1fd"
        },
        "item": {
          "id": "c1b90d06-f296-45a9-a3e4-4929b5e53db0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d6ff04af-74b4-4e0b-8c00-7b6c298da18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16010f2b-6628-46eb-bfaf-cb01218b9fc3",
        "cursor": {
          "ref": "f9fb425d-2f60-49ca-934a-8b812051e34c",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8ae44fe5-a519-4827-8eaa-0f9406134e03"
        },
        "item": {
          "id": "16010f2b-6628-46eb-bfaf-cb01218b9fc3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0782d51e-8825-4ded-96f4-8b167716d654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a297474-286b-4b77-bd6d-72e1c624e78e",
        "cursor": {
          "ref": "939cb310-4a97-4ddd-bfe5-4264c7bc272a",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "dabe51e2-a7ef-4644-a617-93831707fcc2"
        },
        "item": {
          "id": "3a297474-286b-4b77-bd6d-72e1c624e78e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5f232932-7a13-49c1-b630-1206bf46065d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5836fa-2c30-4fad-8e43-e0da5c826c2c",
        "cursor": {
          "ref": "805a7b27-68ac-49bd-a381-fcb92b69ccee",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e7198c47-afb5-4d64-aebe-5aacc0adad87"
        },
        "item": {
          "id": "cb5836fa-2c30-4fad-8e43-e0da5c826c2c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2b302497-84e1-4f38-81e2-59ef7b1d4e98",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "d7120103-3226-441c-a524-024e4ac7bcb6",
        "cursor": {
          "ref": "9fb465d3-be22-4426-959c-6cbf5c8d4ba2",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4ce31917-d186-46c4-ab86-690058b429d3"
        },
        "item": {
          "id": "d7120103-3226-441c-a524-024e4ac7bcb6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a1cd8a3b-3750-4bab-a836-257f161c4f1e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "1e2ca7a5-34d2-4af1-befc-ec687e041de4",
        "cursor": {
          "ref": "2bc6da76-0fa0-4585-92ea-563809f95727",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "277cde58-1139-40cf-907d-f2b46a3665b5"
        },
        "item": {
          "id": "1e2ca7a5-34d2-4af1-befc-ec687e041de4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9af160ce-dd05-4915-9692-909414a293ba",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "1bbfd55d-eab3-43af-925b-a5f3afc388bf",
        "cursor": {
          "ref": "adc6ec0e-906c-4c5f-8b13-bd015aa0bb8d",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "91f540c3-a70b-4c69-9205-b3b8ef612791"
        },
        "item": {
          "id": "1bbfd55d-eab3-43af-925b-a5f3afc388bf",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "37b132b1-0b55-4633-b11e-6cce687c5093",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "4ecf7f53-0e36-4f8e-a1d1-027604811aa4",
        "cursor": {
          "ref": "c63887c5-c46f-46b0-8b07-b5f76a4ce9e0",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "bb965576-fe2d-43d5-a235-95861f857633"
        },
        "item": {
          "id": "4ecf7f53-0e36-4f8e-a1d1-027604811aa4",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ad275580-409e-4a27-8326-d655ff3c474d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "92c39ff7-d798-465d-b433-1c3a82ba404c",
        "cursor": {
          "ref": "5e73748a-c786-42c5-bf30-223a072a1846",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9261af9b-d2b5-4b9a-bb4c-52db51c60f63"
        },
        "item": {
          "id": "92c39ff7-d798-465d-b433-1c3a82ba404c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "db805d6c-a6f5-440e-92b7-d34b95170c83",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "56f4e45c-c0e3-4a4b-af89-000d3bc5e278",
        "cursor": {
          "ref": "d78c1d13-e649-41c8-9924-c7ed7ea7c181",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "65d21c3a-6ef7-4097-9bd1-9b2e2fd2668d"
        },
        "item": {
          "id": "56f4e45c-c0e3-4a4b-af89-000d3bc5e278",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "62f02f8f-8ccf-4daa-a95b-1855eecc1c0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1033d24d-5c89-4836-893c-a68b4d5999cf",
        "cursor": {
          "ref": "8f0cfac3-dee6-4cfe-a782-dbc4e5828acc",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bf2fd47a-48fc-4bbf-ae7c-bd6d959e68d3"
        },
        "item": {
          "id": "1033d24d-5c89-4836-893c-a68b4d5999cf",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b25a57bc-69e7-4221-97c2-16254ad2f7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ee3155-fbf6-4fd0-b2fe-5da9ae750444",
        "cursor": {
          "ref": "181139e0-d4fc-4c9c-8a19-8368d75314c2",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8ceba7c3-71ec-4d34-b871-3cf322bf480a"
        },
        "item": {
          "id": "53ee3155-fbf6-4fd0-b2fe-5da9ae750444",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4107db4d-3f73-4791-ac1e-ac841a718e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f93e34-7e1a-4bec-9f70-47eeee847d43",
        "cursor": {
          "ref": "a439cb24-0335-4126-870b-c01c00d063e3",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c3b4c0e3-12b8-4327-ac01-8d1020b9c790"
        },
        "item": {
          "id": "77f93e34-7e1a-4bec-9f70-47eeee847d43",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d5cf9173-87ce-44fb-87f7-a4975e06b0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f595f99-a1d7-4fa6-b9d8-6b92fcbc154d",
        "cursor": {
          "ref": "93213c44-b58e-4343-a941-f9a05cf33e92",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2460ea45-c7c6-4a7c-b034-b165cc5314a7"
        },
        "item": {
          "id": "0f595f99-a1d7-4fa6-b9d8-6b92fcbc154d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6122d4f6-d8e6-49c1-9640-672301f039f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b632a8e8-43e1-48e1-811c-dfde283a9668",
        "cursor": {
          "ref": "3a16c264-8622-480f-a25f-bfc527c204c2",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "29cc708f-b34d-4306-9cd5-6b56148156a6"
        },
        "item": {
          "id": "b632a8e8-43e1-48e1-811c-dfde283a9668",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "eb2d79b7-fac7-4ac0-b431-1d5d0e1aa2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6b4a37-2da7-4dc7-94c6-b83b04c49ddb",
        "cursor": {
          "ref": "fab29bfd-0bba-4881-8699-f5e595cb8b55",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b9abdbc3-1a0a-4dde-8760-9bac32d81022"
        },
        "item": {
          "id": "2e6b4a37-2da7-4dc7-94c6-b83b04c49ddb",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "63acfa7e-1f1d-4f68-8721-f6ed1cedbfdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fc43db-0fc7-449a-b0bf-f205f2f676ab",
        "cursor": {
          "ref": "b624a462-b810-4261-b023-84e5d1b74dfe",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ec37f23a-9264-459e-b236-ab2c52749891"
        },
        "item": {
          "id": "a8fc43db-0fc7-449a-b0bf-f205f2f676ab",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7507321e-9396-4986-bbd6-8890b5e10774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dc49f5-7c70-4f00-b4d8-3d325ff33913",
        "cursor": {
          "ref": "48f35d6f-3618-4a2e-9830-9ceadeeb4a22",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8a9eecca-8e89-4d8e-974b-4bde2aa9850d"
        },
        "item": {
          "id": "56dc49f5-7c70-4f00-b4d8-3d325ff33913",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "550447f8-46de-4274-ad53-c839c3393da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8d50e6-0b94-4c44-8b6a-40e32a00e828",
        "cursor": {
          "ref": "652e13a0-32c6-410b-80df-ce7c95c770ee",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7a1ac6ac-d467-4a6b-bff4-82fc634c9c2b"
        },
        "item": {
          "id": "3b8d50e6-0b94-4c44-8b6a-40e32a00e828",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ac3a8344-bdb7-4efe-99d5-52784880176d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2b035d-d133-4648-81b5-2b23a80b2c69",
        "cursor": {
          "ref": "4c241e7f-ecae-4ed8-96cf-966a8d2575f4",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4c2a5ce6-087b-4657-b56b-7aa984e43f79"
        },
        "item": {
          "id": "1f2b035d-d133-4648-81b5-2b23a80b2c69",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6d873e3c-143b-4a77-bf52-9008bfd212f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d64acd-950d-40c5-88fd-71f02addb147",
        "cursor": {
          "ref": "8d12eb69-5401-4c44-9633-039757e483f5",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "fa8d2b51-8186-4357-a33c-b0506d7a32f3"
        },
        "item": {
          "id": "e3d64acd-950d-40c5-88fd-71f02addb147",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1abc82bf-3938-49b4-9913-46d418f7e89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543f33cc-26b7-4930-98a7-895df602fbee",
        "cursor": {
          "ref": "ecc5d24f-5dc1-4e3f-b12f-5e4129735e54",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b37a99a6-7cc6-478a-8a22-a9123e80fb4d"
        },
        "item": {
          "id": "543f33cc-26b7-4930-98a7-895df602fbee",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "505eed27-e9b9-40ee-8941-f9e0e1265c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681b6796-d065-4d24-b434-59444875195f",
        "cursor": {
          "ref": "4e489550-8215-44e4-8d12-365f248ddd88",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e3f9aa1e-b1c3-48c2-83e3-68ee5fcee58f"
        },
        "item": {
          "id": "681b6796-d065-4d24-b434-59444875195f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7a3b4c18-7dc1-465b-af53-55e1b07dbda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333a2d2b-e1ca-4f3b-b5c9-e730d9002306",
        "cursor": {
          "ref": "5c0ee225-9c87-499e-b382-f52877bb9a30",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a701270b-e7b5-4adb-8d60-781e3ddd7c59"
        },
        "item": {
          "id": "333a2d2b-e1ca-4f3b-b5c9-e730d9002306",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f7ff5a34-6463-4298-975a-9ccd5d7f09bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76cb0511-06bd-4652-ae35-4c39028fa732",
        "cursor": {
          "ref": "92a5bb46-f291-490d-a69a-e72bb478966d",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b9fa6cab-45c1-4eed-b1ab-075a7396a871"
        },
        "item": {
          "id": "76cb0511-06bd-4652-ae35-4c39028fa732",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a187a644-2358-4e7b-92fa-9c7740bf9657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615c657f-574b-4007-a58b-d5a213f3afc9",
        "cursor": {
          "ref": "a43be63b-824b-43fb-b9e6-f4be5f5cc85b",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2352618f-b144-4554-bc43-837b0098d0bd"
        },
        "item": {
          "id": "615c657f-574b-4007-a58b-d5a213f3afc9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "33e8a057-14df-4dd6-a517-8ffaf339c719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685d08ba-d6be-4cff-be23-e8937526b56e",
        "cursor": {
          "ref": "08b8d7db-e114-4367-8db0-c5fa8ad75793",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "70ebf2f1-d114-4897-8226-7b65f152b25d"
        },
        "item": {
          "id": "685d08ba-d6be-4cff-be23-e8937526b56e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "385cd413-b789-4d7b-86e6-3e469c9a394d",
          "status": "OK",
          "code": 200,
          "responseTime": 115,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "ba4eadd6-3c24-46d6-963e-3945282a2cc7",
        "cursor": {
          "ref": "fca5c93b-6d43-45ea-ad3a-b1a043c6da40",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "dc824018-022f-4778-a13f-d234f88081c6"
        },
        "item": {
          "id": "ba4eadd6-3c24-46d6-963e-3945282a2cc7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4cf49f5f-cc55-431c-a9ac-f0dbce505b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0dd5609-b0b7-4412-bd11-f33eff5e5c17",
        "cursor": {
          "ref": "9940e279-2d03-4f9d-b4d4-52df4fff1b8a",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "64232d14-0543-4891-aa49-05faec2affc6"
        },
        "item": {
          "id": "c0dd5609-b0b7-4412-bd11-f33eff5e5c17",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7ff3c82b-c8b4-4d63-be55-4729a8cf5a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255d9357-e63d-4a8e-91e1-069224e860b8",
        "cursor": {
          "ref": "fb4b14a8-8efc-4731-925e-c9c320d62b11",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "595c2e05-db4b-4433-9ebe-a05120c2de0a"
        },
        "item": {
          "id": "255d9357-e63d-4a8e-91e1-069224e860b8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c8651838-3d4b-4890-8ef0-638ab7dbffa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9361407d-8078-4b22-bcf7-65d6683f9f54",
        "cursor": {
          "ref": "6fc0757e-38f3-4ac5-8f77-9ef05bbdf045",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d188e5a7-5a1a-40d5-be6e-3551b22231b2"
        },
        "item": {
          "id": "9361407d-8078-4b22-bcf7-65d6683f9f54",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e1eb5404-d833-4c89-99b2-fe2be5056356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ba7635-70ef-4146-b832-cbc4e23e11c2",
        "cursor": {
          "ref": "859ffadb-10f3-456d-9071-82329ced10f3",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b128b916-b92d-446e-8e00-23b78568ca28"
        },
        "item": {
          "id": "06ba7635-70ef-4146-b832-cbc4e23e11c2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a9eba914-c59e-4512-946d-c734fd583b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5e53e6-ed8f-4369-acc4-b8e8b5d337b4",
        "cursor": {
          "ref": "df17fed4-fdb7-4a3d-a2e2-16126634a7ac",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4fd4e437-2720-41b5-88fa-84d659d6e4fe"
        },
        "item": {
          "id": "9d5e53e6-ed8f-4369-acc4-b8e8b5d337b4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "81e5318a-3918-4433-8aaf-773a8c76908f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedb4e1c-554d-4bca-843c-992ea5e60615",
        "cursor": {
          "ref": "c06ccdf1-b359-4f20-8158-2430312619c0",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "de251952-81bf-40d2-8f99-04f54dfbb7c8"
        },
        "item": {
          "id": "cedb4e1c-554d-4bca-843c-992ea5e60615",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0162ebdd-a1f6-4427-ae76-962c8f6b538b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d612c9-1554-4450-98c5-0295fd4fb6b3",
        "cursor": {
          "ref": "4e61384a-28ed-4ab8-b0b2-bb956be5d74a",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e08ab393-408e-4892-86bb-6eeeacc58fd2"
        },
        "item": {
          "id": "63d612c9-1554-4450-98c5-0295fd4fb6b3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a14ba9f5-419c-4be9-bebe-a91485231eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553907d0-eefa-4ee1-9808-c0621c423620",
        "cursor": {
          "ref": "ea5f7e0d-72c1-4a59-b11c-a200422f1544",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "be5cb002-25f3-4a5b-bee8-ba67d397a8f0"
        },
        "item": {
          "id": "553907d0-eefa-4ee1-9808-c0621c423620",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "57e049b5-d7a3-4d72-b8b3-2b033cd7439f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d430cff-13fd-4458-b704-6abc352043d7",
        "cursor": {
          "ref": "0f087b9e-80ed-4ada-94d8-da0d48932dd4",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "61883f34-470f-469e-8416-4f0cb6c51ca2"
        },
        "item": {
          "id": "8d430cff-13fd-4458-b704-6abc352043d7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e5651944-5411-48b9-b6dc-bd7d23f41df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2422972a-a7ad-4871-98ea-8615578d1838",
        "cursor": {
          "ref": "1c88cb5c-1e89-4c3d-9026-3858157d47cd",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "54105379-e190-4a13-9c05-7682c682fc58"
        },
        "item": {
          "id": "2422972a-a7ad-4871-98ea-8615578d1838",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "48a4eb1d-7db9-400e-ae1c-ed298a2e6a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6eee090-104b-46b0-8121-acecdb5dfebb",
        "cursor": {
          "ref": "4e76fe1c-0a40-4fee-9531-b407cf1e10ff",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1b9290a5-f8ee-4faa-86b9-1324061f6e36"
        },
        "item": {
          "id": "b6eee090-104b-46b0-8121-acecdb5dfebb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cfe7e086-ec25-482f-a77e-53774fe5f901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67222884-658a-4cf7-89d8-cd274489901a",
        "cursor": {
          "ref": "fac8cedc-d3b2-4e37-a4de-2c933f687c7d",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b48e5c07-39e7-4e22-ad33-ec8c5658ba48"
        },
        "item": {
          "id": "67222884-658a-4cf7-89d8-cd274489901a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b63a47a6-13db-4211-a6a3-59b276b03d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9246aa85-6685-4238-87a1-033c85f831b6",
        "cursor": {
          "ref": "414fc9b4-1cf3-48e7-b5e5-ccc3ed03741c",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6f09a407-51ce-4350-84b0-9178f976386d"
        },
        "item": {
          "id": "9246aa85-6685-4238-87a1-033c85f831b6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "264e8b45-945c-4ebd-a8c1-07bea820cf99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664392c2-8c23-4438-aaf3-40598d51fbaf",
        "cursor": {
          "ref": "bfa3e3af-8f41-49a1-a1b7-ff4d7a8baa86",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "42344b9c-ac06-4dd6-9488-a49ac970f3b9"
        },
        "item": {
          "id": "664392c2-8c23-4438-aaf3-40598d51fbaf",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3f167e75-565e-4ac4-bc6c-98dca1d4c12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b525ee-871f-4a60-8bd5-dd179a2dc890",
        "cursor": {
          "ref": "c401b67b-efc8-4e94-a865-eb1dae6b6d0d",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "034325a4-c160-4ce9-a015-cc0cac043d0d"
        },
        "item": {
          "id": "08b525ee-871f-4a60-8bd5-dd179a2dc890",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8a0e2ace-4565-4d42-aa0f-6269670eebce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ab6f1d-ffc4-4784-99ba-246be52fbcf4",
        "cursor": {
          "ref": "d9020f7b-b086-4fac-80c8-b4d97c41df84",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b8f4510a-46ba-46e1-9ad8-3fb70426e413"
        },
        "item": {
          "id": "13ab6f1d-ffc4-4784-99ba-246be52fbcf4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "01b07f7b-3db2-464f-8f7b-f023397e068b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdeaf488-94a8-47fc-8dc9-d4e55ef72900",
        "cursor": {
          "ref": "bf67d7eb-e917-42b8-ac3f-829e3c0baaef",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cf6733db-7bc9-4423-8a91-9f85dc62ee28"
        },
        "item": {
          "id": "fdeaf488-94a8-47fc-8dc9-d4e55ef72900",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "539f7bb1-6887-45ed-8aa4-ac9a467745ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60aa3671-91bb-40ba-b569-40b105a5c67b",
        "cursor": {
          "ref": "8ad80094-0ad0-4660-8104-b8f83c209f13",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "43efe9db-fcbd-4204-9886-3581c0af6123"
        },
        "item": {
          "id": "60aa3671-91bb-40ba-b569-40b105a5c67b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e2dbb606-6f03-4b2c-8cd5-320122d9d116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09909b54-b938-45ef-aec5-c0e6c38c6667",
        "cursor": {
          "ref": "db4c8914-fdff-4008-84cf-8ee334fb7c85",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "147f2336-6729-4a4c-ba69-331b4bdc0bc1"
        },
        "item": {
          "id": "09909b54-b938-45ef-aec5-c0e6c38c6667",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9e5d0d87-ce43-4287-9b6f-325e85647705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4440ce-55e8-4e6f-8fa0-6adfb27ffb9b",
        "cursor": {
          "ref": "695162d0-636b-4a67-a575-fe3a4b12dcb5",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4f92a4e2-c7c2-4ef8-90ba-67db2e48d6cc"
        },
        "item": {
          "id": "ff4440ce-55e8-4e6f-8fa0-6adfb27ffb9b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bde0c96e-9f0d-4b7f-8c98-784b435ca3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ef6442-0950-4fc5-8829-38c9e672a07d",
        "cursor": {
          "ref": "dc8079e0-5e4a-4810-9e42-60800c46fb75",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "04c4deaa-9bbe-4c3e-9244-f5b4e9e08ff4"
        },
        "item": {
          "id": "76ef6442-0950-4fc5-8829-38c9e672a07d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6e99c644-ae80-4329-ae9f-45a2bef3b3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d34ea14-4eb4-47e0-85d6-3f0e00449021",
        "cursor": {
          "ref": "e270f222-71b3-4ee6-971a-e40cf0676a4f",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b59bc32a-c04e-4938-8a06-5748096c8156"
        },
        "item": {
          "id": "6d34ea14-4eb4-47e0-85d6-3f0e00449021",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2fe54472-c04b-4aec-82a0-25225c0d0f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ce31dc-30d0-4114-8b3c-6baa42f08dab",
        "cursor": {
          "ref": "e60b64ec-8a0b-4a2f-9141-56c516161dd7",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "90c0e7a6-4e29-4364-a386-4b7c48ec596a"
        },
        "item": {
          "id": "01ce31dc-30d0-4114-8b3c-6baa42f08dab",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b1555d07-de2d-445f-8496-ab6b0444cabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147c2a79-801b-4209-bb93-0725d562c1ef",
        "cursor": {
          "ref": "e40bf183-3207-4429-957d-d6498f399684",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a16628f3-8639-402a-958f-e1f34b032659"
        },
        "item": {
          "id": "147c2a79-801b-4209-bb93-0725d562c1ef",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e4729c8b-3a55-4b3d-b5a7-c17aed01f689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3feb9c53-ff85-4f77-b3d7-8d045f4480e8",
        "cursor": {
          "ref": "f485f562-3fd3-45be-8fcc-596c504cd8e0",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ac142909-cbbf-4ed7-8842-9f2490975e5a"
        },
        "item": {
          "id": "3feb9c53-ff85-4f77-b3d7-8d045f4480e8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "862e23df-d4a1-477b-988a-85db61d67cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae5facb-26e7-4a37-90a4-5f7afe06f78e",
        "cursor": {
          "ref": "c1750f97-0590-4367-a13a-eea3d0245989",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "24215d90-24ef-4f68-8205-193a7fc20702"
        },
        "item": {
          "id": "1ae5facb-26e7-4a37-90a4-5f7afe06f78e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "24c51a0c-9a47-4731-8dfa-22faff7dfaa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011864c9-368e-4a92-9877-50ab802ea6e8",
        "cursor": {
          "ref": "78378b51-3a42-40b5-bc66-fd984e537650",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "63b6b3d9-d0f1-43d4-96df-a8be00b62c38"
        },
        "item": {
          "id": "011864c9-368e-4a92-9877-50ab802ea6e8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2235a9e3-48de-4694-822a-22487b0d962a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb0b045-83e9-4db6-a0f0-aaf89336012b",
        "cursor": {
          "ref": "8163891a-0384-4518-872b-609f3321444b",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "df55b064-5de0-4e9c-bced-19c7c17542d0"
        },
        "item": {
          "id": "8cb0b045-83e9-4db6-a0f0-aaf89336012b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1aae1200-92ee-41ca-9f8c-99315227c108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d8d884-d8b9-4b48-8d63-5752e2d74337",
        "cursor": {
          "ref": "379e9d50-52d2-4170-8711-78f4f7ce068f",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f0333e90-33d8-4828-8b5d-57bbdc253aad"
        },
        "item": {
          "id": "26d8d884-d8b9-4b48-8d63-5752e2d74337",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f284213f-1114-4f4a-af42-a452a83540e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741312ac-7763-4938-bfe8-3aa979763b80",
        "cursor": {
          "ref": "ea5f94f9-8aa3-422a-b1f3-90bcb2196115",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "223dc3e3-3708-41cd-bda6-b15772de0bd0"
        },
        "item": {
          "id": "741312ac-7763-4938-bfe8-3aa979763b80",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d4c1056b-17e5-4f4a-bfb4-e86f4896ade7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747d0f18-c777-4fd6-ad6d-6908b32ca315",
        "cursor": {
          "ref": "5271f3d5-61ef-4804-b3bb-28b04dc58d49",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4065b5d6-a02b-4fb9-90f8-6e9d355df299"
        },
        "item": {
          "id": "747d0f18-c777-4fd6-ad6d-6908b32ca315",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1773f055-d6e6-4287-a796-9ca4dbe3c52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb48dbd-5e75-4ec2-bf14-13cc908e9868",
        "cursor": {
          "ref": "8496111d-329d-4a5b-92f4-974c7fd47e89",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5dbf1fe3-2550-41cd-b854-ea2d0a65d6cd"
        },
        "item": {
          "id": "1eb48dbd-5e75-4ec2-bf14-13cc908e9868",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "95b209ac-53f9-4ce1-8215-7ea1dcebda7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239ab53d-478b-4419-8b2b-34077dcd2b75",
        "cursor": {
          "ref": "8a79cf92-fd71-4b9c-a45d-64be49cabaf5",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "93a1e3c4-4291-4348-806b-868051efe914"
        },
        "item": {
          "id": "239ab53d-478b-4419-8b2b-34077dcd2b75",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5174212e-0ace-41c9-85d2-fd098787a188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4270c485-0a06-462a-aaf3-71c0175b686f",
        "cursor": {
          "ref": "8ad8050b-10e6-4375-9918-88820cc9260c",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "71466dc3-9c09-4f88-a598-e64b8015cdcb"
        },
        "item": {
          "id": "4270c485-0a06-462a-aaf3-71c0175b686f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7d313a52-1add-45fe-ab46-a75c83468715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2a0da6-1979-4502-8c06-822454aec84d",
        "cursor": {
          "ref": "ced4f379-0cbb-4720-8bc2-27ff49b0027a",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "636161ec-c03b-417c-8852-0128b50a56b7"
        },
        "item": {
          "id": "1a2a0da6-1979-4502-8c06-822454aec84d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6ddf76be-c985-4baf-ba50-62a20769ba78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e41f71-2639-4ad4-a25f-39b0debbe6d1",
        "cursor": {
          "ref": "084f04b3-8f41-467d-96be-9fb74fac4434",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1503ec74-fb70-4f89-8eb1-0570c36a764b"
        },
        "item": {
          "id": "08e41f71-2639-4ad4-a25f-39b0debbe6d1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "898fe359-aa21-463b-a747-04ce1d366d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d5fc73-3018-47e7-970b-46c7c7aa2de3",
        "cursor": {
          "ref": "a00a08f0-cf01-484e-986e-5c6dfa41e8ac",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3bb9b37e-57c7-440a-8cfa-9f45a071e592"
        },
        "item": {
          "id": "d1d5fc73-3018-47e7-970b-46c7c7aa2de3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "63a7cd02-4d37-44d7-b172-e8cb1f63fd01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb0d977-d577-45dd-93b0-8eef1bb92cd7",
        "cursor": {
          "ref": "f6029533-4031-4764-8168-78a4ac014338",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3d644177-792f-426d-931c-60e612d11c96"
        },
        "item": {
          "id": "fbb0d977-d577-45dd-93b0-8eef1bb92cd7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "55994da4-e7d0-4ab4-9c7f-31e1c7e8b105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b585fc22-2a5d-4284-ab39-d634bde50f2b",
        "cursor": {
          "ref": "bb0ec770-1c00-4b35-9955-6fd5f0d495f9",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b8ed7e4b-bac4-4c2a-9c42-44b6dd7a6ad8"
        },
        "item": {
          "id": "b585fc22-2a5d-4284-ab39-d634bde50f2b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0d300361-a72b-4492-836b-9953c4d1a81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3660ba-a669-4bf3-82cc-a143b6930ab0",
        "cursor": {
          "ref": "f36aeeee-7308-4bd6-b3aa-c48a3977a4a1",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e0f70045-7fc1-44c2-9626-b888cd4eda0e"
        },
        "item": {
          "id": "cc3660ba-a669-4bf3-82cc-a143b6930ab0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3574225f-593c-45ed-b8e5-e1cdd9111d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b107143e-a3fe-4bc2-ae9d-9cb7f9cf8a65",
        "cursor": {
          "ref": "024aadf0-583e-44c1-9ec9-4c43e2b548dc",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f265c966-e810-4f65-bfac-5bef0084cd58"
        },
        "item": {
          "id": "b107143e-a3fe-4bc2-ae9d-9cb7f9cf8a65",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "67008d8d-b0d2-48b1-91d3-b51285c45918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25d3694-95a4-495c-87ba-1926b8c89616",
        "cursor": {
          "ref": "21d22bc3-6ef8-4b3f-96f5-2a973e8fa4ea",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9b0ddab0-8f78-43ea-9c78-e9469ae5d217"
        },
        "item": {
          "id": "a25d3694-95a4-495c-87ba-1926b8c89616",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "dc23c8b2-e84a-41f4-900d-8c2fa387245a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de5d4b2-e73b-4f90-9cdf-541171ac5c04",
        "cursor": {
          "ref": "9d2fba77-f5f3-4d55-90d5-c3b998870d49",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "58ce5c86-9d00-4eeb-abd7-0dc3601bca3a"
        },
        "item": {
          "id": "6de5d4b2-e73b-4f90-9cdf-541171ac5c04",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "eba0ad01-77c4-47bc-be97-902ed332ec8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa9f284-302c-4d28-b246-4a544c7ad80a",
        "cursor": {
          "ref": "1c28c893-af0b-4bea-8a7e-e72d0eafe208",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "38001e71-bac7-4225-bd5d-1e514c4e726c"
        },
        "item": {
          "id": "0fa9f284-302c-4d28-b246-4a544c7ad80a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4d371c21-b81f-4d5e-a1ad-8da3a6abe4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7d65e0-5890-4186-bb33-dd32791aff5e",
        "cursor": {
          "ref": "8f013fa3-9506-4a0b-818e-6d24696ab0e6",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ed76f16d-ca35-44b7-8dd8-1ff4dba4c4bf"
        },
        "item": {
          "id": "5d7d65e0-5890-4186-bb33-dd32791aff5e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d2a3b780-d0d6-4a97-b9ce-1a3834fcd354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6f159b-e054-4063-b81a-78b995d0a343",
        "cursor": {
          "ref": "8ae8a903-802e-4bd0-95d6-43fe0b03c243",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0519f1ed-373b-4b71-a715-aa0e2660ecc8"
        },
        "item": {
          "id": "0b6f159b-e054-4063-b81a-78b995d0a343",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "69330627-834b-4536-9566-be98a3f3629a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c27c50-dd0a-44e4-9f98-25d4e17d0230",
        "cursor": {
          "ref": "f0c54bf3-1ede-4b2b-9b27-86381c74b7b1",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4bf879bc-1346-43c0-bc16-15191dd7b856"
        },
        "item": {
          "id": "74c27c50-dd0a-44e4-9f98-25d4e17d0230",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "60c1d279-372e-45d1-9bed-ef8cc24f036b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8ea7a7-5791-4e1b-92b5-41d1ac4fdd34",
        "cursor": {
          "ref": "97af1356-bd49-439b-ba43-e9bdb4c60f23",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b90ac47a-0fdc-4cda-b65b-86f3cc9faaac"
        },
        "item": {
          "id": "df8ea7a7-5791-4e1b-92b5-41d1ac4fdd34",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a295bce6-f317-46f6-8627-d7f42245d85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bde272-1224-499f-b1ed-aecc7aabb7a0",
        "cursor": {
          "ref": "08599999-b081-42be-b00c-1c62c60fe84c",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f933fbcd-4668-4e27-8fff-2bb65ea45c09"
        },
        "item": {
          "id": "57bde272-1224-499f-b1ed-aecc7aabb7a0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a1719404-b758-4197-909d-79663a1f0c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc46f446-8ec3-4bc1-9b60-69c3ec57c92f",
        "cursor": {
          "ref": "01ca0d76-c755-4540-9bbc-0f92e11a903a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3f538511-7416-41e0-87c4-9b9191a1fdad"
        },
        "item": {
          "id": "fc46f446-8ec3-4bc1-9b60-69c3ec57c92f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c06d624d-335d-4067-8ad3-3b776e7b09d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c229c9-58a1-4101-8f7b-22087cfab5a1",
        "cursor": {
          "ref": "73c287b1-f38b-4cdd-a6c3-23512ed35744",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "577da311-219a-4a0e-ba1f-efb495f1ab23"
        },
        "item": {
          "id": "49c229c9-58a1-4101-8f7b-22087cfab5a1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "aba5f18d-5bc9-45e6-bfc4-5ed2bc9e0205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d08deb-ba13-42b7-8281-770f84d61531",
        "cursor": {
          "ref": "787194b0-ad70-4a1b-a49f-1402fe642185",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7a254999-599c-4c41-bd67-6451b1a2d100"
        },
        "item": {
          "id": "d8d08deb-ba13-42b7-8281-770f84d61531",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e02dcec1-f6a2-42f4-8a3d-bb3fa4f832b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b8c462-8a59-4997-8307-a0a65ec3fde0",
        "cursor": {
          "ref": "7bd634e8-22eb-44bc-829e-9a8c747090b3",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "59acec69-f833-403e-bc56-b633d8276c09"
        },
        "item": {
          "id": "44b8c462-8a59-4997-8307-a0a65ec3fde0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0ddfb76d-6f3a-43fa-b92d-8c09b2a75789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cd1aa1-8439-4f18-8b63-15eb735bb376",
        "cursor": {
          "ref": "2c170f7f-185c-4b38-91c3-dc4d885d68d6",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3ce0c21d-f783-4291-b4d7-01b010474b43"
        },
        "item": {
          "id": "28cd1aa1-8439-4f18-8b63-15eb735bb376",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d79832f0-2b03-4a44-8272-c54e828234ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acba7d49-746b-4515-86cd-5a4b0111f1f2",
        "cursor": {
          "ref": "1396a920-bfcc-410a-b910-a1e017493730",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "9e307160-9870-4680-a457-32b65df8733f"
        },
        "item": {
          "id": "acba7d49-746b-4515-86cd-5a4b0111f1f2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1cde3684-85a4-43b1-8a5a-822406af72a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b469e567-b4c5-4cfa-83b8-3085a383aa29",
        "cursor": {
          "ref": "5874b773-3e7e-4f37-b52c-561e6aead8a6",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "362b844b-8f05-4e23-820d-6db166b80c8f"
        },
        "item": {
          "id": "b469e567-b4c5-4cfa-83b8-3085a383aa29",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "86e50429-5857-4363-9dac-7fc367343bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41b45e8-2653-4d8b-9a69-36ea5a38b270",
        "cursor": {
          "ref": "92dddd5e-5a28-4363-8e71-dc352109fd7d",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ee612831-02b8-43b0-a14b-025ccab22537"
        },
        "item": {
          "id": "b41b45e8-2653-4d8b-9a69-36ea5a38b270",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6b930e2e-d924-44a0-81fc-73dfaa4cce9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2909a0e-51d0-46b6-8c80-0abd948e1876",
        "cursor": {
          "ref": "27c26021-e6ab-48c4-bd39-85edb8e61ca8",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "a304bf4b-b9a0-4064-9fff-5856e33af140"
        },
        "item": {
          "id": "f2909a0e-51d0-46b6-8c80-0abd948e1876",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4637610a-254f-414e-98e6-3e56e68e0a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33370182-a5ff-4e61-8d46-aa954137355a",
        "cursor": {
          "ref": "14b3c9e3-2b46-4d6a-b53b-f1e938c928ba",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a0af99d8-bd37-44f1-a9e2-7861dd195de3"
        },
        "item": {
          "id": "33370182-a5ff-4e61-8d46-aa954137355a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "60befb0b-0928-4a43-af95-12b411e501a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b14770-d1b0-4dd7-969b-f7fea22bc295",
        "cursor": {
          "ref": "747882bc-2df7-48be-8c7b-dccd659213f9",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "5dfeea6d-68a5-4ee1-aa2f-529a51b4c4a0"
        },
        "item": {
          "id": "b6b14770-d1b0-4dd7-969b-f7fea22bc295",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "82d1d7ea-3d1e-4b84-95ae-82eb8c6c09b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955bbf56-c2e9-4305-8067-7cfd2055e784",
        "cursor": {
          "ref": "27f8106d-ff32-4e93-b83c-8ebfac5a7909",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "df652ce9-14d3-4c52-94d1-0a78ddf2fa31"
        },
        "item": {
          "id": "955bbf56-c2e9-4305-8067-7cfd2055e784",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e337029f-5ef1-41a9-b5e5-12a5c785f131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704fe4b3-e43e-4139-b21e-0f891c816068",
        "cursor": {
          "ref": "ba5efbe7-06d6-4c97-b7f5-b6a55f37d08e",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "bc059020-b90d-4d5f-bb68-0455a645438c"
        },
        "item": {
          "id": "704fe4b3-e43e-4139-b21e-0f891c816068",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e53b6ee0-f0bc-4c1d-afe2-3387860a94f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235b37e2-437b-47a4-8741-eda626c72061",
        "cursor": {
          "ref": "99202e8a-0f4f-475c-bd6f-f9a6404ef75d",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "3ce4ec5f-24f3-464c-aaa1-e4cd2944bc18"
        },
        "item": {
          "id": "235b37e2-437b-47a4-8741-eda626c72061",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cac075dc-6828-4607-aac9-b7d977a718b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a698393-4734-48c3-a2ec-7821de6b9b91",
        "cursor": {
          "ref": "d114ace4-2b0f-47f0-88f8-3cb63054c656",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c20b6e94-5e05-4143-b6b2-4d879029ccc0"
        },
        "item": {
          "id": "3a698393-4734-48c3-a2ec-7821de6b9b91",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "18daef4e-bb5b-42a5-b7cc-af9b6f3bedcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540fd1a4-f466-4bf9-82a0-ac221ca8be2f",
        "cursor": {
          "ref": "1b374c60-50b4-4fec-8482-530f974170b7",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "0c56e898-7907-459c-be22-7accd2c341b4"
        },
        "item": {
          "id": "540fd1a4-f466-4bf9-82a0-ac221ca8be2f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a34d19fe-f746-407b-bcf0-32be5e623131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e0924e-9473-4157-a417-ece6bb9caf5c",
        "cursor": {
          "ref": "6f01d141-9bda-4ecd-a10d-6d42da0c6a87",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "bd53a993-563d-4382-ab87-70bb499ebd40"
        },
        "item": {
          "id": "93e0924e-9473-4157-a417-ece6bb9caf5c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "262ae3de-5d53-45be-a623-f37c12bc8808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07fca13-ae29-4228-8250-45ac95903f8c",
        "cursor": {
          "ref": "8a40c6f2-ac73-4b0b-a8c3-0c011a0d8019",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "4d2b2194-7550-4754-84a5-1b25aee7d51e"
        },
        "item": {
          "id": "a07fca13-ae29-4228-8250-45ac95903f8c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "64e05f93-9a18-4da6-974c-423f193d5b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eae7b76-39dc-4a89-96b8-7daffbaa5a77",
        "cursor": {
          "ref": "16dea046-9117-48f0-9086-a44e49e47ebe",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6e535128-05c3-4b01-9a96-57f862e0b339"
        },
        "item": {
          "id": "0eae7b76-39dc-4a89-96b8-7daffbaa5a77",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4dad31b5-fc4b-4b8a-9dc5-866253025da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c54a628-4334-41cc-9947-8bb97d6bb0b7",
        "cursor": {
          "ref": "bd541f64-33ff-4d3d-a42e-74bebff35f6f",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "3a56994d-75f2-4445-953c-161e980daced"
        },
        "item": {
          "id": "2c54a628-4334-41cc-9947-8bb97d6bb0b7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6a4f318b-6864-4aa1-b825-7de2d36baead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c19e7c-1691-4649-857b-f48ee28328e2",
        "cursor": {
          "ref": "6d1704fa-e94f-4a44-8ccb-c77b53fe9886",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "9c64bb63-8b8c-40b8-b338-141329b8ac70"
        },
        "item": {
          "id": "a9c19e7c-1691-4649-857b-f48ee28328e2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b2d44419-9e3b-4ded-8530-da22b3f0872f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7b018e-bf23-4c60-ba46-f29e87fbef46",
        "cursor": {
          "ref": "6c6f5fa8-a73f-452e-aba0-ee5f2ccd4e5c",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "7e29fa95-687b-4d95-98d7-625224a2ed2b"
        },
        "item": {
          "id": "ab7b018e-bf23-4c60-ba46-f29e87fbef46",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "df22170f-1cfd-4779-ab89-433240271443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4aa5b6-a46e-491d-87de-fdf81df9c702",
        "cursor": {
          "ref": "bb9ef26f-7ee0-404c-b3d8-ad919025e691",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "fb4b98d1-f9ee-4bc8-9b92-94c5d53e7bae"
        },
        "item": {
          "id": "8f4aa5b6-a46e-491d-87de-fdf81df9c702",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "42618973-9118-4555-a39a-9e1e447afb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5a093e-6213-4392-beea-e24ea5719d3e",
        "cursor": {
          "ref": "d3c46241-61ac-4560-bd5c-5bc0b79c6518",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4f17ac82-6492-4595-bf15-7c3fbf4924dd"
        },
        "item": {
          "id": "3c5a093e-6213-4392-beea-e24ea5719d3e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4b5f31be-74a8-462f-89a6-1f76739a9fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b22f1a7-71c6-4727-826b-f1de759b63df",
        "cursor": {
          "ref": "c9b2fa67-69b6-4370-ba48-a05814b46203",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "2dd8e017-23c8-4be0-bdc5-c319dcc89d48"
        },
        "item": {
          "id": "4b22f1a7-71c6-4727-826b-f1de759b63df",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b71a07a8-b823-45fe-aa71-cb7f62b2550c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18f4ea2-a1c8-4caf-88bf-df29a92b63e6",
        "cursor": {
          "ref": "32cb47be-a08b-45a0-bd53-e0c0362ffd46",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "bb0a447a-96f7-4cd3-b8f6-375cd474eab3"
        },
        "item": {
          "id": "e18f4ea2-a1c8-4caf-88bf-df29a92b63e6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4cdfd043-45b7-4932-9873-37883735da26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468204f7-6335-49d1-8354-775d979e400d",
        "cursor": {
          "ref": "52548a55-caf7-4a48-bd75-2fa34f3295c9",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "90699775-8dd7-43b7-b4aa-7650b5f86ced"
        },
        "item": {
          "id": "468204f7-6335-49d1-8354-775d979e400d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2263dbd8-ed64-42bb-8757-6e2991abcd0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef44409-286d-43f9-a90d-d8a8132d5622",
        "cursor": {
          "ref": "8209da04-4899-40ec-b7d3-91f326544cad",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "6169cb82-c52c-40fe-afa0-650ab0eaea6f"
        },
        "item": {
          "id": "1ef44409-286d-43f9-a90d-d8a8132d5622",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "edf1ce0c-79b8-4b37-b926-8f6e9bee6686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665a94cc-8534-4cfc-be3c-4a425e672ed6",
        "cursor": {
          "ref": "e0cc8b31-395b-429f-bc64-82ead4463e6c",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "61cb33ec-73e7-49b3-9aa5-2773d7880e99"
        },
        "item": {
          "id": "665a94cc-8534-4cfc-be3c-4a425e672ed6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "bd6431eb-414d-4edc-b3a5-d18b8563e0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c66c874-b9a6-416f-845f-5123a1235389",
        "cursor": {
          "ref": "b5edea95-1c07-47eb-9e46-89161bd9c9e5",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "83d3c0d2-af09-41ad-bb7e-323cc8d1c37b"
        },
        "item": {
          "id": "9c66c874-b9a6-416f-845f-5123a1235389",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "77bd1955-dfa6-4792-acc6-5e670e968c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194b89d4-6ec9-462c-b06a-baa1ac6eb568",
        "cursor": {
          "ref": "e8bfa453-3f21-4c91-893e-dea818688735",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e3a9d608-d43f-4cce-9025-7cb0fcb45bf2"
        },
        "item": {
          "id": "194b89d4-6ec9-462c-b06a-baa1ac6eb568",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b4658fc5-0d32-489c-b9d3-b76e7140f8e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2842743d-a19e-439d-b4c3-ae89f17ec22d",
        "cursor": {
          "ref": "b37e0b9c-44b5-4872-b129-5770a7df96c7",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "4c4da746-d600-402b-a3cb-882f8cdb437d"
        },
        "item": {
          "id": "2842743d-a19e-439d-b4c3-ae89f17ec22d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "96f5139b-2a5e-4fb8-8c5a-9f7606e35a95",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "45cd550b-1ecb-42c2-a7f1-c7506cfd9780",
        "cursor": {
          "ref": "a1f6b87b-6650-4f78-a2a6-7373aff3b5ce",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "22f9b8ef-0bb2-4add-a4bc-51f5d197d1f7"
        },
        "item": {
          "id": "45cd550b-1ecb-42c2-a7f1-c7506cfd9780",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e6dd931d-ea2d-4029-ab2a-37a2c2e8e8e9",
          "status": "OK",
          "code": 200,
          "responseTime": 2409,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b508c3-ef17-4208-a062-3e1f585ed18f",
        "cursor": {
          "ref": "aaecf1fc-11da-4813-a0d1-dd9c6790e829",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a410ec94-4449-40af-a37f-d4754b016e67"
        },
        "item": {
          "id": "08b508c3-ef17-4208-a062-3e1f585ed18f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "804f34ac-7647-4c05-90ac-5d721d5092d8",
          "status": "OK",
          "code": 200,
          "responseTime": 2834,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "91385a82-ba80-42c0-9f25-ad91dc9d372a",
        "cursor": {
          "ref": "81e6b903-0a39-4685-a1c4-2f8662d12c69",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "408231ae-dd43-4805-bb86-1490145df4da"
        },
        "item": {
          "id": "91385a82-ba80-42c0-9f25-ad91dc9d372a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "80ef2c12-b1e7-4ef0-870b-ac0623807183",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91385a82-ba80-42c0-9f25-ad91dc9d372a",
        "cursor": {
          "ref": "81e6b903-0a39-4685-a1c4-2f8662d12c69",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "408231ae-dd43-4805-bb86-1490145df4da"
        },
        "item": {
          "id": "91385a82-ba80-42c0-9f25-ad91dc9d372a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "80ef2c12-b1e7-4ef0-870b-ac0623807183",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723cf4e9-c87d-4107-80a3-ca9f710c210e",
        "cursor": {
          "ref": "787839ff-e3e2-4073-a791-02f041683ca0",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "35673da5-d166-4955-be35-b1c6fcbb88f1"
        },
        "item": {
          "id": "723cf4e9-c87d-4107-80a3-ca9f710c210e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "314f6317-de50-475a-93fb-bd4f31ba2584",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f0ab03-f6d0-46f7-99f3-76aba68b442e",
        "cursor": {
          "ref": "56a631b0-9887-439e-8d55-75b77236b277",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "88dc0602-6b37-4896-ba49-b871937d8cbb"
        },
        "item": {
          "id": "40f0ab03-f6d0-46f7-99f3-76aba68b442e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "282f54e0-3109-4383-8b02-c9c0bafe184f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}