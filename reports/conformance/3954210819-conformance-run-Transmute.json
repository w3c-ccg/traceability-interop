{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0271dcfb-2983-46ca-9a5f-e2a95e7f8ccd",
        "name": "Clear Cache",
        "item": [
          {
            "id": "56e7e6fd-0245-4055-a039-cdadcebde23b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5e271cfd-756a-45c4-8fa6-419f48ff80f1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "90b8e831-886d-4964-8d42-6e69911c81c4"
                }
              }
            ]
          },
          {
            "id": "eb1904dd-54ce-4454-ab16-3204e8a7214f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aa745a99-f578-4170-bd23-f5f1e9ce6297",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eb34fd36-7f14-4a80-a00f-88e516e89b70"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5e1a71f3-2932-4618-b6d7-3782a4634db5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0476b49f-f702-43d9-a4ec-418cf5e12035",
            "name": "Positive Testing",
            "item": [
              {
                "id": "75a4c9b2-ce2d-47cf-81b1-f06affdb7fe7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "410a3ba5-a6dd-4ed1-bbfe-cfe44692ac9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "364d429d-5748-499b-b758-9b5c3293ad2a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "acff5876-d56d-4cdc-876c-20b8e6930bd0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "80764f7c-8e86-4217-90d0-cd88aec601ee"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d2d3580b-d81c-4771-8e69-e462f96b660a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2c7e2859-c25b-40e0-b5d3-2fded0e40b53"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7fbd807-2206-4d0e-a2f0-28d360695f0d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1673b32f-ce17-4503-96e0-8971100c4ef4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28109e67-8e09-4096-baea-b628b7bd5198",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c119b2e-0a98-47ab-a649-faa64360dc2d"
            }
          }
        ]
      },
      {
        "id": "a2a06456-c105-4da0-b95a-58b7f99c7f51",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8f283486-7ec4-46ce-a1be-dab5271bd642",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3597c341-2b17-4faf-a855-d83bfb8577ff",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "94ca7fe0-2efd-4e7a-82da-fd629121a5d6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5f2f25-7f3b-43a0-8cfd-c97a85c7b3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6381e875-77d4-4a37-8f24-06f3527d48ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c21e983-cd50-4466-9968-eb87fbc73ef2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44325d25-b9eb-4513-a3dd-4c6d30f297a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1db003ba-83c1-4eb7-89c2-0fd5796522a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c8001f-01ef-4fc3-b38c-d90a211bf025",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c9e35c-7419-4694-bf50-f920af1a26c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f029dca1-526e-454f-ad17-8e534cc012f9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9aeefa7d-f89a-4f2f-913d-2b252b64804c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "35464805-638d-4698-9d36-f6436571c613",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3dc31f7-7cb0-4329-a40e-36602a419ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1eb146ad-e6db-42cc-817d-f142c89bbf0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa702a9a-9b31-45ae-97ba-2207e117aa97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d551000-3431-4d63-a938-5fad8bd90cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3e4e28-30d2-4b7e-bbf0-48294197951c",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b300342-f082-4f44-9971-803ae59ca235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa392b65-a8f9-43d0-be16-d0230e4fe9d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6a4a91-b671-4fad-ad05-262b701bc24c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "76b2c678-aa1f-484e-8b6f-88114e36849e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5a937222-2745-46b9-aa7e-04530e8839c7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3551bbf9-a512-430d-aef0-1261db1d9694",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f66c9297-988f-4737-8914-66b8abb04cae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6fb37cc3-4431-4370-8642-c051cc53663f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57f07c97-4d1a-4299-9a2f-af2687f02316",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "de85e49c-3f26-4349-bf21-4721d5a9dd1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c4b41b5-ca2e-4be9-82d6-368b295355bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4fb7d0fa-fd0c-4183-94fc-71f006eed526"
            }
          }
        ]
      },
      {
        "id": "ca225478-99db-421a-988a-2d73e7371115",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c42d9517-b676-4c67-91e4-e49dfb9c79df",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08f2cc3b-8aea-45d4-8c5e-a74a82ebe6ab",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c92c926d-584a-45dc-ba26-f8d332a8427e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1de876c-d4c7-4dce-9d36-4ea0dd7ee91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c29864db-9070-40d4-8906-fd2c97cd8c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e448f963-fc32-44f6-b8af-9559a8b2a695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38b49a7a-f61d-4528-bdfa-245f52a27a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7680a22-018e-49c2-a737-dd2a71f3a797",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd23252-e69a-407f-81c6-d2d870601787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2346bc-16b3-45cc-8afb-7abd4c0915a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301afc49-1d71-4f90-bda4-aedc87459a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ad07e5a-eb56-4be5-94b9-ae4e5148cb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3980b785-180d-4e7d-82b8-89ca6facd9b3",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61398b1-0f85-4689-8359-65a6079c7547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ac049a-3d59-48db-a0b1-2bf208f6f8df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf5fa65-f2fb-428e-b6b5-33ac5641e197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5a175e5-b43b-4082-8721-7392d6fbe849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f081808e-64c2-40d9-82c7-13e4c1c8221b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333dcf31-36ea-47a4-af02-d6078212a93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f594e4b2-f40a-4e51-8aa8-91f523b4d053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1394453-fd5d-49b1-866e-72b036500aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99263de5-a9ba-4641-9c37-21a2601c3078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c362c32d-64cc-4c78-95db-6fb8cc1ce0ca",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb147045-0383-4290-8cbd-500622a20259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a018c3-bfee-4022-9cff-08dcf2682965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d4a1dc-3608-4748-b724-6cdb5450a5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77923bad-ab7f-4ccc-9e81-e56b9d396468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ef0af1-21c1-440e-a245-94ba1c465c02",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fd4910-0c42-4314-9d56-82ba048d49a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0bfb04a-631c-4352-919d-014ef21e7370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4c010f-fbcf-40e4-898f-b838e6a8b054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0715d003-966a-479e-b57a-9aad5ad46f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0a41d4-d0ae-4428-94e4-9b8fc801c0a2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497a02f1-acb7-4b18-83f3-30e9d4be3ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d0e227c-f0bc-4c4f-8ccb-5b2669665c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bc12ad-4c91-4f20-a74b-97cf24ab1aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5551ed4-66a4-4c08-8fd8-0072249055bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38d11ad-2f14-4783-90f0-2475b617ee7d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6be65aa-46d3-4efe-875c-24bddc766111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f7c668-559c-4905-a50a-28c64b5480ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c097d39-549b-4d0f-9b7c-18904850d582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7242920b-57b5-42dc-873b-ad576ca50a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2b3ad0-c20e-4ef4-bd05-be5d4c7120f4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44add4c3-d2dd-460d-b614-d1e65a00fac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6d63e84-e14c-4cee-9c0c-9f27817820b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c2e0b2-aabd-45c9-8ad1-a85196a32459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79abded7-4be9-4f4f-83ca-b823f877d849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8197e48c-e807-482b-8e2f-fa021d1914fb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f1f8a7-0c81-475b-9335-d7a790683b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017140db-43ed-483c-8c5a-3e7da6dc54f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d50793a-b0aa-45b8-ac86-d021050a04c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "245256a6-1024-481e-b8ee-0a5ab0afc54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d2142b-b5b3-47d9-a1a5-6a00af4c8721",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7818ecf2-c9e8-4d02-b034-eecab3ce39a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db49b64f-9a83-48db-a5d0-32ed676b88ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024e8a47-4825-4bba-9069-a11d70ac40b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4e8428c-cc7a-4e09-8e73-c124e6ddc287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83e9a1d-26c5-4ff4-a111-4325f75fa74b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef7b0e3-5121-4d0d-8716-fc82b8ccb870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab99554-2856-40ba-bbb7-7fcec67de19f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14e19e6-9c5f-4817-9954-2a6cdbc537db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab86b2c4-28c6-4834-96d6-0cf911e9d1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992da228-525c-49a6-baf8-98c4c4481764",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da65509a-ddd7-4974-84bb-e302cfb15b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcceff55-d39a-4305-bb91-7b2273b8e4c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc64a2ce-337c-4021-9a2a-7ce0773fa004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "696f6e82-fedb-4bf7-ab33-414bf0df6564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57598f9a-0f84-431c-a9e4-7a4a310a6b26",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490eccaf-5bcf-4a18-b9bf-9e789a11d9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d5d92a5-d281-4fe7-ba81-719704d5bca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da53706-71a2-4b33-8381-da5ce73c25fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ddc1812-a013-457e-bb08-9825fd1bbed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761d16df-dc96-416b-bd67-9b7449a068f6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b26029d-29a2-4b12-bde7-475d24134967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f79b1f-26a3-45bf-b1b3-d8d257fe0cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d0f1bc-cbbf-43f6-bbb6-9aecaff714cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27d681d5-484a-42cb-882e-192d32f6e799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3998b2-63fd-4477-a912-ff42e2b282ed",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7fd626-8e05-4bd7-8374-3fc84f92eb12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8883588-94ad-4e00-b8d6-be3e62302a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39f038a-9b5f-4173-9f33-57d07e527c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56ea60ec-581b-4d4e-bbc9-893c7bb54ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011cc52e-b5ca-4436-bc77-fc29b73e1d46",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7689598-ec04-4350-abc9-c8a241f7f0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616dc697-d166-48c0-92b2-9d3dab18b416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d881abf9-5336-43ea-8b2b-92c819f5f9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66063dc6-b46f-4c08-8689-07af77c6e62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8fea0f-07f8-412e-9663-34cf377221a4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b1ec25-8da4-448e-8faa-c80ce2955c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f6ad0c-a331-488d-9be4-03279d4a5495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8509868e-9939-43da-9ddf-4feaf5722c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d45dcb3-72eb-4e3a-ace4-53b860b026fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1e7ae3-b83e-4dce-8e05-71f7bf9ad0b4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9fa486e-6320-484d-a3d0-11e894e7d8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3cbce26-192c-4a01-96d4-184aa48e03cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c65df4d-8ca8-4192-8f22-7e03c13731d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8033a685-7179-4030-8c49-1f742eb5ea09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9616e5e8-9f2d-47fd-997f-bbb4ab36a36f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2052624b-a8cb-45b5-8cd4-925c98f842c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3d6b340-db89-45c6-9701-6f0ba2f89c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5dfc6ff-2f3d-45d2-81ba-4bc5f4b8450c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e560edab-c3da-4c39-9203-443403eb458f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5721e3e3-88b3-4033-8ad3-ca0b8f8499a7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55f1752-dce1-437a-b0ed-4a893c40a6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b496f81c-b1eb-4e60-9b1e-7a4a42e193a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f09c341-56f4-407a-bdfb-1b9cfde5277d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "582d8c03-861b-4529-a7d9-c89fd9ca502c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58169a79-f97f-4a88-90b1-1589a830afa4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb6ec59-a404-49d1-b283-583a4a13d151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69a7c4f-73b5-43a0-8654-9d8d39044977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673ffb93-2164-4c50-9c2f-206c71812bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc02e487-a69d-446a-b386-7cd691fe009f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff0a30e-9921-476e-808d-d203c79cfc35",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c1b11b-0a0e-4c7c-a472-c0a7a08f6cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3885a594-a089-4812-806b-7907ea8a0f7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a621f5-d191-4930-8f0d-4bec8db49cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f169b8-399a-47af-bcc2-e4b099ddfefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4367a6-a9f0-48ec-9f5c-85b10c2fdf0a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161207fe-af24-41ee-acf2-4e4735334df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "063eafcc-7564-4d69-97d8-c63c8a7f2635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983b0c02-0174-431b-bf34-b0e6e86d1348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c02d48e-d32d-4b82-bfb6-09dda5460c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b82905a-2911-420e-a882-21e83f1864fb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f3c790-bf24-4cb0-b0db-c44f7ab27ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca325e3c-be68-4f1c-8ba1-863da5c88f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529e02b7-c90e-41bd-9a9e-2e98fc805c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55ef3555-b8c6-4a7b-b53c-07e18e7feee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e65345-dc94-4087-86e9-b998d9df822b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f082cbd-7fe0-4dd0-8044-ee291db60ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb1f2f03-1b69-4bdb-b7a4-8bebde390bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c306ab-6d8a-427d-9db3-e821767a3ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9745a316-9312-4055-b363-e135f10d67d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b817a5d1-faa2-4f06-a774-1354a0887a06",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2df259-abd8-4566-884d-1e3da2305006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1775601-0bbe-4c18-a958-23f697e2f173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4795d543-addd-4cb3-8b6f-babe3e3c08e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4914ab-78a9-49ac-82d1-5c4586df5248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57339872-e0d5-4c13-b907-3f1a6bf0a0b6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9817c0-a21c-442b-a7a0-be1e406ce008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f582ad71-d428-4727-a8d5-2ecb9d60fd41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5395d8-c211-40b4-8748-2e9cb6c83d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff8b11c3-0e43-4aff-92e0-b890d50a0fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f26b58-2cab-4bc7-a6ae-3139e9ee6016",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6069165-e40e-42c4-aeb1-f14a05109154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2030389b-d11d-49fd-bf77-2fb1af1e7fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d881342-3e33-47a4-b958-5752ab0418fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e771b8b1-bd4e-4fa4-920e-64d1c5e734ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a069998d-8f8f-49d0-bb22-7fa7b8acbadd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d147303-72ef-4f9b-bbc5-337a2ecad1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04eed837-7b55-40c5-8f10-d8d4cf56d122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51b5f82-a880-40fc-afcb-b9521becd5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd912461-0e87-431b-94bd-e024c6fa4ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9679ca3a-373a-49ed-bf61-747f2c5e1c9b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e42b156-91cd-4749-99bf-ac1ba07e4347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd5c1b8-24f5-4f52-974e-4ff60ca99661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6a9d5d-8ddb-4073-a977-1dd1cd4c67fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a418a528-4eb9-457d-b891-1be661993135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8a1ee2-35d2-40ff-90f5-6ca15f124d1a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f13497c-70b6-41ae-90ea-a2c2c464768c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945fc7c5-c785-426f-a478-6f96c622fbb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd06f2f2-165e-4ebc-9d84-9a0782cd3f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "03bf1a0d-ea43-4c1d-85f6-50eb9ef2772f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5824c2c8-3593-49a8-8c0e-c268d79cbcfd",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccfc69f-ae23-44a5-a5a8-bf54b139896e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b20a0da-0492-41f9-b8e5-7352edc01a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec42226-eb62-47b7-9a25-25bea6c109ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf142a7a-d83a-454f-a97f-4358702a33be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fceb312a-12bc-4518-b0c7-915a55269b14",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95722d44-f6cf-4a7f-802f-3f642d7fe367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b533c093-0cdf-41e8-98ae-f4ae0fe946ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c9766b-8a6d-4ff2-a700-0c36690ebf9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30cce7d5-423c-46d2-8468-5ff09b74b9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801c2aef-db9a-4e36-8998-a61186321abd",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85454468-9fd5-45fa-8da3-4a7672b7ea28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a744c0-e351-41b4-a349-59133038a0b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f80345d-aaf7-43f0-99b1-f0f5c1f557c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "196a834c-3510-4eef-87dd-379d04956d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60c91fe-4393-48f5-852d-3c7d09acb667",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598679a9-e6b1-4ecc-8df4-a441847e9e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b837bd52-386f-4a31-9c85-3c587f6e5521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76cdec6a-b528-4b39-81aa-47381126cd1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d18e1755-ea49-4509-b420-4bf365e46c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69bfd8c-85c2-4a05-9ed7-88f7b94f68e9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c70b3c-b686-4032-9432-7edc093cdf90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae0302a-d7be-4dac-aaa1-1c53097176ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9956da0-9d8d-4a94-9a2d-783c31dff643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "58193fd7-8f61-4529-8fde-1d82255a3b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b453b553-16a2-401d-b2c3-fb9de99b3ac5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "215bbe0f-5ea6-4645-bdd6-3f0a6071c843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00c2fd05-560b-4075-94fd-cc5171c2bb7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0ef05f-eb94-4463-8f32-50e8f0fad16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d9abedc-e234-4473-83de-a62ca3d37505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2730ba45-8625-4609-8a89-cc687f825bab",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f188336d-46f0-4c6e-af2c-166c65160244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75678b6c-271b-4620-b52d-a343a70469f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bfe96d-138a-4fc1-9dfe-f4af56d1bde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d777a2e-73bd-4551-9420-274cf4630177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2486738-0b88-4638-8b88-82f54d7c5d6b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30a38e6-cc45-48cf-ac4a-57b870172c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be0a8e4-e3a9-4e96-8ae9-d19060550b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a457081-d958-40bc-b7ec-f161681c3018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b6d15e0-9d55-43fc-80a7-3a04b4471487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53bd621b-fd40-449c-93f5-37d42bf08147",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237a72b7-2147-4134-8406-c335b45fe8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6040de-1f4a-4a66-95fe-f4b9da7dd05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2953a11c-bbca-4336-a400-cfc132fadb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "492ebd51-518a-4d13-86f9-46e7caf95899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd75529-2d16-484c-a0e6-cae4692d6cc5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a115bb-cd5c-4861-8f1e-becf1c67f6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e1d62e7-8d8a-4f97-a8cd-359c64b6ee7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6106c7-7371-42c1-baf5-75dfb24820fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd286540-9dcc-49f7-8880-de2f6c4ffe87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4ed54c-ca31-43b5-a505-2ba2633d21ae",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77d1121-b899-4570-860f-a2c2e8178128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca8a85c-9954-466d-a618-1fe3b4622c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421f9173-99c0-4c9c-8436-8f72277f30bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5771613-9dfa-4af8-9e96-d2b9bcc769f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c548f19f-ea7f-488d-b102-1d3d79af1683",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a08fcdf-2060-4717-9b98-e07667eb253e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e75c2c4-491d-4ad9-801d-5e5b99bbe572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66642672-4495-4264-ab2d-1b26f80b74f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d7239b52-454f-44c0-a7ff-948ed81ca489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb67c80-713c-456e-b813-4dc7036196a6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "781e3886-3273-4cd0-9342-2b0f63c088db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e2d0e7-13da-4e95-97f0-733c0109d311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d960a44a-86d8-4db4-9f34-360bff73a5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c09ffab8-976f-4436-9a5e-f907c6ee47dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1c242a-dd91-4d05-8614-14567cd91567",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e65a7a2-b2b2-42d0-adf4-7ada46a6cc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db4bdd26-c563-4ed8-8049-d214d41f2f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518d161b-2bc1-4eb9-9f1a-ca4144cc0e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecdd2626-5cd0-474b-b833-75163a45a4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4172b395-303d-4e0a-bf25-ca1f0d092b19",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e3a49c-2366-4847-a33e-58c8017abb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eac8ee7-82c6-48df-8073-c2763f64ae11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319291f0-e8b1-41ac-8574-3e3ba234d83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "add9031a-eb55-49bb-9446-b0edf63af351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d522891e-3409-446c-85a0-0e88a3bf2ecd",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548cd4d9-26a2-4f89-94bf-4f4953939dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd801038-58c4-46da-a0b0-8a7c2b84d369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e7b73f-95d0-40ae-b607-128efef3e83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a08c7f6-7883-4b83-bf88-4b1fbd097d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44323884-03b2-4517-83d6-49b8a20377f2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211998b1-4ad2-43f3-bd5f-91abb89b5415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9efc1ff7-ce29-4195-98f6-4a6e6eb9df31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2e06bf-b5c3-416d-b3b0-a3f36f6242ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9be31e7-855d-4420-adcb-cfa70f154055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb35e9c-5e48-42ef-9e5b-e742604ad7fb",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274ad694-6317-48d0-af0c-e2c54dd17739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87148d50-dd6e-4d1c-9d72-5b1bf55d410d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22eac1a0-0d8d-47ec-b418-cab7e280d791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01c64c40-0542-4ecf-960a-58f57e3809c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5838ff1b-c6e2-4819-a545-b12880ce4faf",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46032b6-af2b-4607-b87d-53ef54c5976e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b59c05-6edd-423d-a1a8-bcb6144633c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8351c2-304f-4130-9c7f-fe21ee3d8b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7baaea6a-427b-4c8d-8d96-8c0a33d95811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab9b005-1c7b-44f7-bf12-de6b3852b264",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104a3f17-1372-4889-8fae-4e370d899430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f14333-5403-49a2-a430-2ff628162729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f763b0a9-5d4b-4601-9a3a-7593fdc0c396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e32fbe9-14c5-452b-b77d-b51fecb6d8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b33cd67-535f-4f01-9953-54fa1ba80059",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178ca6f2-d10d-4a8a-afbd-90929467ee51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9f24b0f-6d3e-42af-977a-c5264cc483e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91bd3bcf-bb5d-4e3f-83c9-1f680352bca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0fedfa7-8204-4371-87d3-df6f4ae23818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f7c9eb-9d99-4e9a-819c-a7d73feb5001",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb61441-7e23-40bf-b57d-46f5285bda30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5089a68b-111d-4024-a33b-c2fac7649997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08119240-9469-4a9e-9aa0-a0a339cf104f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "354f0681-7aa4-4636-b544-258116bf5fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7a6b59-cd9b-40cd-911c-32234093a90c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "befb8d73-77a4-476f-bf7f-0ed5ee8408fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82fd668-1161-4577-8780-5da8ddc16ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd83bd5-4b4b-43fc-872d-3c36480fb5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3610fbd-b4db-4ab7-baa2-fbc6d4a7eb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f966bfb5-fdf2-443b-b35b-2a6842850d59",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc0807f-e076-4513-84ae-5ede8b7a60c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043e7a66-30c7-4a1b-ab92-a3a5541a11e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eac7c96-a007-4613-8c78-72f14c25b2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4ed4de-e3cc-461d-a40d-597334222214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92373c0-a738-4a0b-a2a6-e8b73977811c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ff698c-6512-469f-b5c0-163122cf20d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b8dbfe-eb7c-4dd6-a715-327550bf7326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd9c957-ce7c-4737-a4c2-c629e6d5a981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79f4a048-1edf-4b8b-a156-c652b56291d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860cc982-46cd-4a17-bb56-79fc01636d96",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f7a69d-a037-48c5-8ad7-3fe40947ee65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc8be92-772d-4418-a946-75971a02675f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e08700-d34f-4572-8946-619439f9440c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3a7d00bf-1b05-4852-9076-f050fa8d3492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879df98b-2b26-45bc-aa5d-a683db4e062e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e026f2fe-82fa-4b5c-ab2f-803e7102ee02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92188720-56ef-4059-ae0d-267bf6fa562a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af952c41-e5db-4791-bf35-e5a9668f73e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d237cd0-1d02-4d3c-80ce-5f274626b3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da4ad22-4b38-448d-adde-9f9e9e731b55",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4d4607-13cc-418a-871e-f0de8f444f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c67b0b45-6d3c-4a90-9ac1-a0ffbd80f8a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504bd346-5e6d-4fd2-bb06-35b9b199195e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "86652021-db86-4cab-9aea-ec20910d0a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305c6d3f-c362-49cc-8b83-3f2413caf91c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4a7d5c-ce22-4d09-961b-abcc57df667e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a250a86-c6e2-4e06-9ac2-e736b0a3ef80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20ccdeb-c884-4269-96f7-8744a6ec33b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "31f8e94f-e6ac-4569-adf2-e0db3a8a390e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47472ad2-985a-424e-8a35-c4998628827a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52cd295-7aca-40c5-a2b0-5c3a6bd108f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629f03ff-8533-43d7-966e-ae9920f756ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b13480c-14ef-46d3-b73b-4cfd7307d213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "72be15f1-ae36-4b7e-b3d4-c4e3d59f78cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b60964c-cd8c-48ed-9cae-76021f4ec924",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11ebe40-bbd0-4685-96be-9fd9a9cedc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae68e3e-4423-42cf-a40f-27dbdc13c711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21f2bf0-cb9f-4891-b796-8e4af4579398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0877f53-5ee2-4e07-b2bc-7e801e4129cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abb347a-0c04-4d7c-9172-b223cb3e0142",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "828b9cdb-bf96-40bb-83ae-96a6fd308e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d3d498-7292-46d8-b305-ea7acac1f917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38023c2b-cec7-4c81-8f9f-ac46c4e70d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "377ee662-7ee0-4d4f-9ba6-f44579ac6d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455eca7a-b733-4f8d-98b2-5e438b0deea5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d110c859-1749-4f03-9fec-7e257ee06a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2b4f13-8bf3-4674-b9c7-5396f88bae70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d62145e-115e-47e5-9e9f-95ad06adf700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab655f6a-ea8f-4c56-b880-863584d3cad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d4f3f6-ea2e-45ac-8a83-5139e92d3c5c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9f6243-a00d-4649-b526-75cf65b2600e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b127a1c5-c727-4967-92c7-a0223d067574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180da4cd-5c6e-4a38-9e0e-ba3e12102448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "008a7530-ae8b-46d5-a28b-b521682989b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb5e6b7-d482-407c-9f2e-963e448e5500",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "991272f1-1979-4dcc-a2b5-963cbf301c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9608f6-4890-4c1e-ad11-219ecb4c7d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91138093-300a-4022-92e1-b9e3fbbb6e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f07c0a47-6d0e-4ab2-86db-1151af763f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7fa554-b5f3-43d8-a680-9ff917b04d5f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03041e04-8b54-474b-818e-37b6d1e1a8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "910e10ff-2631-4a6f-b218-f3e53f323a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c197856-5cd8-4e1d-ab72-020b8ab72822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "710660d5-92fd-43dd-be7a-aee222d55447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58edc0bc-0e6c-4ea2-84b2-b53ec116d1a0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cabeef-29b9-4239-b56f-64756f5d810d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c307e6d8-4d6a-4c8e-936b-d9067813c323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274ca413-a8f3-4f77-9a2c-dfd40188780f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55c5530b-0d19-49b2-ba3b-45948e859128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b2e715-6ff4-4ab6-9a2a-4c8a32104132",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6a08b1-1818-4507-8704-22b91861d6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3701b47a-0b3f-4c8b-81bd-b2d9bd5eff45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4317da-de6c-4371-ad30-5866c956ef82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8c73c3-2e3d-454d-8e5b-ebf0647560b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01755c2e-3c67-42f5-a52b-bac283783e03",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "802ef982-e5e0-4095-b651-f44cec6fd31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dcc5978-63ac-4062-b230-72761c369061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef475cf-4956-4a35-a945-fd22c9f11e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4b61ba3-5b2e-4650-8a19-0321b1a89857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656307c4-3d28-4e39-a685-ad4425b06b05",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2af87f-8bc0-489b-ac92-2be56a57f68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "365a74c7-b0b8-4839-b231-4c08ad5e0096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c45edc7-36ed-41ba-a8bc-504d844e4312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5505451-4960-40dd-9d95-8700a12fa173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4944066-9f2f-433e-b2e0-490fbf3f5018",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6476e0-a198-4a47-a160-0c2c89e3d3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73595b37-2461-4006-8754-54d859e989fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fca64e9-3648-4c33-950b-cb03efbe7bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f8b649-e306-4b5e-af6d-712dab7c4d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11607c58-27c3-43bc-97f6-148e983bb791",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4548d618-960f-4edf-870c-5e9c9fac7e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09d5f13-8524-4728-bd42-6f0fb256bcb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1447fa0c-db52-46c7-ac5a-8e44683b4de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3abdc8cd-0f58-46fd-9cff-3850300598b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664c239c-b05b-494a-b7df-9b006519f869",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ca5257-0cdb-48ba-baca-d3435abc6c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8115160-0fe9-4154-b8cd-7d3cbbcceaf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c0ff1e-d74b-4bd8-bb95-bb864d6af93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7960cdf6-f982-445b-b0bf-e60a1a5fed55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5e933b-a351-455c-a83e-7ca227869755",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ef93c9-a613-47ba-b985-b68b3fe6ddcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a49c1252-b65b-41ec-9cbc-d0c2afb75c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a621d01f-56a3-41ab-97f0-bf21caaca959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d4dd2a68-31a2-453d-a513-5dc339d246eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c648d0-86ed-46bf-be53-8a0bce2e2560",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6224697-47a0-4cf0-aa62-9e7a2ee3f0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a720a614-83d3-495e-b568-b771e15182d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dba9a06-5ef6-4c65-808a-b3a9051762a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "232a7717-d76f-47f2-8bac-ac7c045a6c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369ae37f-1b51-4f06-8db9-06fa180b4c10",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "787b7a32-278c-4969-aad1-d548a5ef44e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c1db0b8-1ba1-4a68-b9f7-a8d9ea9b431f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d93633-4a91-4083-be91-0023bfa2172b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "711a9589-b550-4a02-85c7-79f3ab226eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7f6065-79a7-4112-9a95-be9e6d167774",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46e193b-0879-4d20-8ccc-6cca8823ac2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547d8694-c4a0-4c8d-a456-3d2406b98b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7c4151-f8d3-40ec-be70-c05f73326a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f39e75a-4c47-410d-bc87-2f3aa4348c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b30b2b-ff3c-48d6-a3d9-1a381b614ff4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b405ad-62c5-4243-aa94-8dbba8c16165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49122d3c-d75f-4b10-82f1-0fc1febee353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1960ed89-d2d8-4574-852c-1227d7e8e59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0852078-ae81-4532-944e-a3ac39a6918e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e844e8f5-ee63-4f3c-9560-b9993ace3e70",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07520d69-264f-4050-816e-49a83811a3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c62d4f-60ca-4b44-8b04-b08a0ed9269e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa681b2-6420-4aba-8189-53c313e12e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e04474c3-466e-4f2a-a00f-1e63bb64017f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e254d7-7ab0-49e3-8397-f659c2aae2fc",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b8e152-7b93-4b0f-917a-a6675af044f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9910a6c6-8620-45d3-9f4b-cdb9f3b83d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c7b3d8-7e65-4d9b-803f-8ee66b1fc6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "999d145f-ace3-4a9a-9838-2e3099e202da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ed8e4c-d70d-4c31-b9c8-15e2f45a87d5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06164b9c-0b5c-4089-88eb-e9ae00c43664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "906f7b9f-bda7-4de8-a57a-6ddc610e8308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a7f5fc-d1ed-47fc-9d95-c4f68153aaff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "09cb78e2-02e5-4f73-9276-7af4b97fdd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f862696e-ca2d-44f9-b6a8-ab368eb33483",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1f4aab-8a97-4d83-8b0b-83166a83378a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a80abaf6-1b9d-403b-91bc-7fbfa608b859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f848f3c7-cb72-444e-aada-f722b2c796f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "196b63c0-3d86-44f8-8de5-0bff7226dd88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201d3a81-8681-4858-831f-0b5b0063e17d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98759b61-74f8-4331-8a7f-f27f65300668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf70f87-82b7-485d-88c3-ac321ce98482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca81a83-1f8a-445c-b067-c31fd2e9a06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ebeab7e-2c76-4d41-b30a-75a3c294e455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f66aa1-c8cb-414c-aef6-4399386df770",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0ecebb-41aa-4fe0-b5c8-bf4aca705b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7709a39-8f33-4561-998f-10e5ae52fd5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0788f3-899f-4d0a-ae71-712a54364ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23c8d8b3-01ee-44e1-bb92-8bbbeb5ddafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae17be22-7043-428b-ac6c-683958300073",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f5c771-90e0-4821-93a1-1b5b10a92c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac663957-768d-4ff3-a88d-37a2f5ca4d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f06e155-2fd8-482b-991d-30fcfda990a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "60077ab7-2edc-4f1b-a2c0-c534f83633a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46143ec-9d9e-4d70-b0e6-a8a039a203f9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631e26ee-acb6-4637-90ee-2ca73be9cc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d77353-4481-434c-93d4-8321caf482ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0c59be-325e-42ac-815c-7836638e29dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba4afe3c-5905-4aee-b78a-f14b03566e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e86490-64a3-435d-bc11-557bfe08a27a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311d151f-3b98-472c-8edd-490233a0e592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be9d2b1b-5ff8-444f-8a39-743dd08fa6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77bfe0d2-fc6c-49ce-93d1-a66d5626ecb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5ce007-eb30-4ca7-adeb-65ef99231ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1987fe18-2cc4-4df7-9742-be99f1ab6949",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e270746-9de6-4fe8-b815-f5e472d669c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a30fc88-de4d-41f7-b761-a4a49f481ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63d0ab9-03b2-4595-bca4-45338233f019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "758dab66-fe9a-49eb-bc7d-137ccc2b968c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432757f0-4f49-4d3e-afe4-dde175cd123d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec844be4-78db-44cb-a8c8-e8763de88586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43c86864-3b90-4291-864d-ead204d478cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3595d44d-b518-4693-a4fb-27ec77827256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e40b8b-8370-4fdd-8bab-29b08ec77899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ceffe6-02af-4dc1-90d7-1bc08907c199",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "447e2d5c-9008-4319-a8f4-06a401ac717b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "117704af-7bfa-4b2d-8966-f318931e8ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b07b169-2260-4a58-b67e-ee1185ee2a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ffaa5b8-d7f3-44a4-b8b5-9ebff607a9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a4dfd9-6657-4928-b552-ccba4e01f809",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd902a5d-57ed-48ff-a90b-8070a49c4563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a347cf-c928-4aa5-a61b-160242cce63d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46104f2c-a051-4822-82f9-158e06bd9e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ecd3d54-1df8-4115-b6e7-c2cf5abeef49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88153494-c0ba-4c89-9a6a-aca4d05ef2ef",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c866c2-940d-4534-8eb4-89766b8f9803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7f421369-ac2e-48e7-9406-6ca83245702c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec33e4f0-e690-4f48-87e2-b541c4cc33db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b69a0c2-84d7-4284-9d81-4d54b7ed853e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a7f3a48b-7d55-408e-918d-294e144670c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "54155bb3-2bff-4a03-98f7-8facdbbdcc8f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a46e26-dbd2-4375-9da1-c2cb5a2acb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32c904fb-43e0-4cb2-8489-5ea0538f84e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae9e29c-c725-44a7-9bd6-0e190feecb35",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "3fb69fb5-9741-4316-9456-f360dced07b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bce1110-a5a8-4bbc-97b2-20eea36ab1a0",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1ad339-77eb-4ea5-be04-a953c2f82276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f0c7b08-54c0-43d2-b928-a3a5227c03b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a32f6b9-0ae6-44cb-a3e5-43246312668a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "f0eb02a9-f084-4915-bcdc-e1c7b85487f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48bd728c-0c21-4bc8-9149-2f2c62412b20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4635d740-ac75-4149-b146-510ba915d3f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3750239f-881a-444f-8149-546a55c0178d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01c02fd0-1ad4-45f3-b418-66f502ad629c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7637924b-c17e-4692-afaf-93e7f98d6aff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3cab11d4-c828-4332-bf57-57a20f1e687a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2c2faf17-354c-4044-847b-4286266a4aa0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c35fb81-4752-4695-8536-54d23d24d3f3"
                }
              }
            ]
          },
          {
            "id": "063156ec-2c6b-4848-b718-3b58e9af317e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d207edba-980a-4300-a744-1a3081ee2a7b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7ee0636-d34a-491d-a6f5-4240e2ac0202",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c034c177-8561-42b0-aa98-92ee7742c5d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "167b2687-f331-43cb-a2d1-3567c77168be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1a1d419a-cbaa-4f27-92f0-e91abbfe8701"
                    }
                  }
                ]
              },
              {
                "id": "40f16823-208f-485d-880f-ec917fb1975a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f48a6bac-7481-435f-932a-0107d0d0cb6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "44dc643b-e59d-4b9e-a9d7-23ba7a507233"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d796ad0a-f126-4be2-b31c-f196166eaedc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8e57cc98-24e6-4c46-a024-a7494971bedf"
                    }
                  }
                ]
              },
              {
                "id": "afe125a3-b466-481e-b892-31924e13da2c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4c6b7cd-04d3-4536-82ab-ba80f1ff9ab0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ac0fb1b-0a0f-4c7b-a569-480429884be3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1d1366a-6407-4ac3-85d6-2f2b87ab4b3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d5150db5-0913-41a2-8244-73c4151f11b2"
                    }
                  }
                ]
              },
              {
                "id": "6b4dc785-8a96-4aa3-9756-e728f5b94671",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75a4d2e0-1b04-4bb4-845f-1525ec6aceb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58ab8159-e170-4bf8-ba27-c57857c48229"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6b02aca-9c28-4af4-9bd1-7bb971468718",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "93199cf4-946c-470b-a76b-f02b2f2653f8"
                    }
                  }
                ]
              },
              {
                "id": "5e25bf81-d773-4d54-a44c-a50293653861",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbd6f9da-efb3-4b7c-ab7a-8cc49f77cfc8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e666c39e-3f8b-4d94-bb59-6045e9d4351b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e87534d3-a14d-4d86-9d67-ea131f8f3497",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8402ded2-10e8-4373-88ee-58c4fadb6c99"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e150fb6d-02d2-4026-904b-f4cef2d34a8c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c7b30af9-b807-4eeb-85e6-1655d5781050"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "07c26114-20e9-4bb3-aeb6-9cbf6f3b0fb3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f3b22dc-13b3-4791-ada8-2865d4920ce0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87f14239-6cfc-4306-875b-bef006bac804",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4301e1c7-bd4e-4a1e-9887-b581c0c895f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5842b23-8f9b-4dd5-be41-2bc5645e2169",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "83076118-46eb-4cb2-a0b1-b23df50c8948"
            }
          }
        ]
      },
      {
        "id": "241acadd-322d-4f70-b133-87a87361ec3b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cdd1ce62-7654-4f4a-8d36-8266e0f48779",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9400348e-80db-4fd3-a811-e258a8ccb0c4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6a743fc0-937c-4982-83eb-cc8aab967b0f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3322e8-29c4-4b64-9db1-ea0044e8d5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5347b777-30da-4077-b384-0193fe20fb65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d558c8b-95f0-4aa8-ac7f-bf61e6cd8b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a225fd60-f629-4795-bbff-d2c27d114cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a5332a-8af6-4c96-8e62-ebeb6899def8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ee638a-e368-44db-8da7-f5cba64fc303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6efdc2-5a7e-43d8-905b-d3bf3831a3fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e0c69c-04f2-4727-9560-84f27fb248c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "68e645a7-9ec2-4397-860d-870a335386ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e66a1b-8514-44a7-b426-81d54763c181",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95dca930-fe3c-4ce9-87a4-fb9d7a44443b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049c6d85-b4c2-4385-be90-5098f8b61bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85f6ade-cd20-4f29-9112-ada8bf234c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fdb225b-3570-43ff-b60d-dd837acde8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51cb3e8-8249-4e6e-966c-01736aaaf943",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643acfc4-c883-4e07-99c1-31729f4c3f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf48c4e-f92c-4b86-8bb0-abe62645912f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158c96c4-ac75-41cd-a5da-f385e5dd3002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e740812-b583-43ae-9b47-472ed22f7912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24225c1e-f6b1-43dc-ace1-4e8941cf61e5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dbc1b74-a947-4986-a21a-0d6d6771a77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa85d2f2-069c-4182-b361-8643058f6f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0766eb3a-e295-497f-8815-6f755794be9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2534fb4-46a2-4007-8a83-a62ad8ec80c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06211489-6529-4887-9d59-b2e8bcd968bd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36098ed-5e14-439f-8b28-437e3d82dc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ff1990-c74a-436c-bbe8-075890ac07de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30125770-89c3-4c91-b4e6-4e06490f1b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c7186dd-4999-4c72-8fbd-f61e75d64b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8bd3a34-4804-4100-9f32-1137182328e9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1142812-50ff-4301-b24c-c5ebe3f455e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f79200-c446-4918-a01d-259ffd968413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9b03b7-5b87-469e-88ea-08f17b448483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c38b1e37-98ed-4faf-889b-07311b241230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7924c95a-d815-4583-863c-652e0da68f6d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08bbec36-2129-4cd1-a2f5-53da6a08ad05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f4e5a4-74ee-4a7d-9ed6-8234db3eb5ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a14f36-616e-4d24-aef5-507829e3383e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40dd9820-5c0d-4279-bac6-7a67bcb54aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75e1624-eaa5-41c9-b197-db6d948f46c4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7965b2ea-984e-42ad-adfa-470e3104c3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f642cb0b-c7c4-493f-9527-e97a6c706caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04bc1c1-0732-4012-be46-97fd5d3eba6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b59e744b-66fd-4e22-9ed5-3ed1282f7eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0a9f2c-60b1-43e5-be8e-250a27d02c31",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043cb63c-cc95-4b98-8156-a1f363a99c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77eac99-2381-4dd1-9922-069b1a8cf67b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f23aa45-8d44-436b-9a34-72ca3a5a70b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9960bb8-4900-43ca-aff9-afac0910b68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a510414-6b87-46d6-9e66-818607f7932f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69c65bd-8f08-4c14-ad94-3f39b6884444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b7d2e7-4dee-4a2c-bf6c-851112bfe508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5a0f62-fc83-4523-9a59-07ac0597aedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "26b180e0-6975-4cad-8487-b9d8e3e714cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d87fdc-08a4-4af1-a22d-e1c35850d9fb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471f0dba-ecc9-4309-a8ed-3744de978a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7ee5a5-403e-46a0-8366-ac643ff9e2b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7da3719-c150-462e-bc8d-91afb07c1286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3f8c479-6461-4bdd-a578-e7442fba22d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d4097f-dda6-4977-8593-d9b4b119e414",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6ed6ec-2c22-4be2-9a24-cfc410c21b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c39a903-34f5-4508-b881-f2a96ee03cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d401c319-7c6e-4ab9-8d4b-aafc0f08c7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a82cbe7-45b5-461e-9ff9-c31971bc47db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c43692-bffc-4227-aa5f-854578486f51",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a458026-89c1-4b02-aee6-c4a0df4dacdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1eda60c-78e9-4a84-a090-2ac9b129dc61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a29f10c-b9c0-43c4-9145-b903c3c3308e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "16c11b68-5f1b-4c00-ae1f-ee6c5f45bf2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88528c2b-7111-42c3-b133-83e5ef681aa3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d99d2e-5c8d-441a-880f-39ca5248e6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3ac13f-113f-41c3-99af-5f45e07f8e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb85cc02-13d2-449c-a632-941c174adcaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dae3491-b33f-40a9-ab32-96978aee2203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bacd7642-f262-49d9-95fe-c70e0af4edf5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366c374f-caa7-440c-819b-548971f6494d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67bbe100-359c-442f-8101-652a6ede6c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4990102e-ff94-405f-bc9d-8806a5810518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c9a0c2f-9a82-468d-9a24-8a076e63fb1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1cdbc0-5952-4cf3-9b93-b41eeb54802f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c6e68f-e15b-4895-8f34-d26f708d1d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c82c4db-03d1-48d6-b146-f8bf595afc45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c23793-b25c-4202-9562-2e836786b99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "af8c4c99-24d9-4ea9-bcdb-fbf6f763542f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6559c4-17b3-4894-be38-71f12cc30504",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ecd6c2-f99e-4f98-996f-ec33ba5260b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9d210c-03e4-4b76-aeee-15c6565fe1ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4d952e-4f30-48c3-8e9f-cdea1aa18f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9796302-193a-4b9a-8542-1ed76d647b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c175e0f-e632-49fb-8a33-42530009b2fe",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354caee6-501d-4c89-8507-a6d9405d0c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af19a9d2-165e-4629-87ea-a92cda4b305f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ee5798-3727-47df-8367-79f130787550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a15ba21-bbd4-4af3-bebf-b7407317ad27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cec057e-313d-4ffe-a8ef-8b581bfa5fe1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1659079-0878-490b-bdc5-f6ed0840353e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "504a0dec-ad92-4273-900e-9d89f23727cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4509761-8a40-4439-aad1-2c740862414a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad0f662e-f61c-4454-b5de-6b624b976fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2b2be4-d99f-4b0b-b1c4-fb9965aaf8c3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90df54d4-583a-491b-96d9-822a9c0c9d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7446424-4c23-45f6-a70a-867463076b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffc5ab8-625f-42b7-8cbb-31a2845e0842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df93b892-3af6-4411-ae68-563154d076f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74b86c7-43b8-4f2d-96ba-824d793a7b35",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdfa134-8ae8-4f7f-b3da-e26d0af9ba48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b733c7-7d11-46c1-ab27-3c3c1284b124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e977ae06-b559-4f88-8a5d-2a93594c5d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "751adb4d-af73-4326-8ba6-b5d96a03d62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e7aece-bae5-42e1-90f2-078313ff2057",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a98174-3d6b-417e-bf3c-504f8dda2303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d076e0-5dd2-4b7e-8b95-98fdf8add945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bba692-43ab-460a-afe9-9db98d9dfb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c770bca-bcd3-448c-b623-1a46e4f5531f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db065a2-509a-419f-ad2b-e71d926ab6b4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0201180-9ee7-40ab-81f4-7bfe052c64a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5c75ae-c1a7-4830-8dcc-829ccce63592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb58c20c-fdd0-4faf-b5e7-acde659981a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e773d714-7391-4316-b1a4-9ce59047e27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68bf040-7a50-41c9-9420-4c571496c30a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01481a71-8e91-4c93-9c3d-1e9b4ff43745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "463f9351-72c6-472a-b67f-c50487126fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a38e3a-c2bd-4712-bb8b-ea88fe8d985a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce874937-a33f-437f-85b0-a37d1b960cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8081528-e193-4c04-8783-cd29ad224191",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef8badc-c75c-4ff4-b0b4-c4526760d0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7950dfb-d02d-4f33-8e85-f8d9acab8e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87feddf-bbdc-4ee9-8961-3cd73691c5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aba97bba-70d1-4ed6-a501-5b86fb87b43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3e8a7d-14a2-41b0-b290-b56feb0982b1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d66109-663c-454b-bc48-77d4b5f839fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb003f2-698e-4fcc-bf46-2f1a3c11c5af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b410edd9-20f3-4772-acff-16d9271f8f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27a50886-5bbf-4e37-8f49-42edd1d7aa94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98566536-6606-4ed4-a244-df46e024b208",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "275e5e40-3f65-4ab8-9027-7d45700867e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7917350f-cbe7-47dc-8b01-3130fe67fa82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a60f22-a4b5-4c1e-82c5-7becbc65f24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a595b99a-49ac-4e3f-bad1-5c14ced7a3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcecab3b-1fc9-4a05-bf00-4e5ca89d2796",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a362b01c-ec73-4010-8d4c-dc7aa803d0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce0aee0-1fcc-40bf-9846-6f71c08ee906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c28e9f-8acb-4c9d-a7a9-45bdb8125c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87cf574a-7511-4c0a-94bd-68870200164e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e09495-809e-4233-bd74-8a3d35a056ff",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c88d58-b431-4743-87cc-035dd38a80c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57620620-5dc8-4f11-9719-5d1c29daef6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86eae11-2fd4-4717-a08b-4eee35235d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b044618d-53e1-4c88-8c25-3e5845a62961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc51527a-5bf3-4e9e-8de5-3048b91c3f6f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e18dc06-7eba-4cdb-b8bb-7f6b39ee953b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b91d72d-04c5-4e69-acde-259f927752fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e135424-e779-4987-9269-2b420de23086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8ce0e2-5c5b-4bb8-be0e-838237979083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69030125-0790-4ceb-9801-9e582e5109a9",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb02d432-ae2a-4649-8b80-45675e0ae9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b0aede-a254-48a2-8a44-4268034d45e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9678e0-2b28-49f3-90de-49056cc554c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "177cfa37-c428-4662-981d-3292b052b990"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "54c5a898-f573-4a07-9c58-4d14b9f1596d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "18179ed7-34b6-486a-af48-8f123f7db125",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eebeeaaf-80e5-4486-936b-5f9a58dedbb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd1e72e-822d-4cfa-9c8b-3504eac1c4ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d52cf16-80f6-4473-93c8-aa347c217dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70132a2c-633d-448d-954d-1f95c34c58fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81ac8d4-bde4-4c63-922a-ed445f3e0077",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c14e94-9063-4f25-895c-6b1ca72d6a8a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "fe9ce7a8-06df-4635-b7c5-29d08809096b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb85066-03fc-49a6-ba36-eb7ce7b23b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29de7f30-047e-4f36-8ae8-6aefe1448a3f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d29b11c-d927-469f-a6ad-422c1d1b1596",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "285904f2-de0a-4f1c-80f0-694ac7d20ccd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a97718b-cf63-4173-bb55-6df01e4f10fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "209cf36a-b8c2-4e01-847f-b2d702d53d73"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "926e2713-b6b2-47e8-bb08-60f77e71ee67",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "711d8616-7f19-4de5-8e89-286dae955e59"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8cb51a5-422c-488d-a436-a53a8374f765",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f7b3762-fcc2-4351-a1ab-308e73d1a130"
            }
          }
        ]
      },
      {
        "id": "444c8f04-b4e9-40de-8356-4437ba1cd672",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5563aad0-810b-4228-8cc3-27384cb6a694",
            "name": "Negative Testing",
            "item": [
              {
                "id": "577d3a8b-4465-4d70-aef0-629e03134925",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4f4a13ed-6ac5-43dc-9db1-0916738ba811",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f086111-486d-4a82-99c5-272e85d083f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56b7f29-48fa-4282-82e4-f0016a202b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1204799-4efa-43b7-b6de-92109b54fd06",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e58d95-8617-4487-895e-017e33f0ead6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc0fd4a-97fe-42ad-bcf6-497b0676501f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5c8704-d308-4d10-92d0-110406031742",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76393480-8b86-4b16-ba64-211874c3310a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e7a8f5-bca6-4e69-b2f1-32e189d7344e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee8c93e-f9ab-44f0-80cf-002ffa62a337",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da6a7ce-25f3-4484-9357-a219ed68813b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe98041-0771-4e4c-a7c4-27802e4ea9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732652d4-75d1-4f31-99de-3406da4a1775",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c592cb-cc93-43a7-98b3-89059dce93b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c4f519-9364-4d7e-8d21-bf7319d07218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3636e503-8910-41e7-9e4c-3748710c8ec3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01df6226-0731-44fd-babf-81faecfefcf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8371e24-f814-425a-b2be-f51d05ea0f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f63b7a-2641-4174-a690-2b8f073d5013",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca11447-75f8-48e9-8887-78e37d3bf937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2034e3bd-d8db-45ef-bf0b-b29b55a4687a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f62f89-9f3b-40a2-806f-eee9bd72c9db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc973f8e-7e61-4e46-9650-45420c5772b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25dd5e3-1108-4365-b2bc-56c7d868a666",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990f15bc-9608-4ae3-bc94-06a4dfbb0324",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e666f73b-a106-4f8c-a131-976137ddb139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1848fda2-70f6-4158-af22-2c7bd6b4d12d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912d300c-44e5-4a9a-9d98-b04761ac04a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c78f103-cf33-4de0-9efa-ac20ddb95cb0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc7494b-77e4-4757-a03e-83fd537bfdaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed544812-be4b-46ff-a5c2-30e955856588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d652ef5d-09db-49d6-bb66-739beecca112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56595894-a0b2-4c45-90f0-5ac3e6296e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1add090a-d4d2-411d-82c2-70b3d087d13a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f0d6ee-e061-4e52-8d46-11a428965ac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0662187-8a4a-4b00-94c5-c57685439a41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b539ecf4-0e7f-487c-92e8-6dd798a6f3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "419e64b2-2a47-4ae3-9d98-a3bf0923517b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede3089e-9507-4e47-847b-66a7ddb14f04",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef064e25-54de-4329-945b-17966c7ebaff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c63d6b-4dd1-4159-8b5c-7573f266d87d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "610869b5-6113-448f-a692-540155c0f1ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f13d6909-2f4b-4b0c-9462-73a1813a8098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99178cfa-6133-4b1e-ad4d-2ca4ce426521",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2f155d-331d-4c82-bb28-2e326af31261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5afa366b-ea07-488c-9c2b-34994303718f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a30535-5d3a-4cb8-a2ab-eec9bd144769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646b431c-acf4-41d2-8578-b49996591ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e19e913-db4e-482a-a2cd-4f595e801353",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e7e64a-e4a4-4895-8a9b-2e19f0b2aaa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a28c7ec-f0b7-4967-9ad4-cd9e86e8f08d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b4f2f1-7c87-4ae7-b325-c896495228bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa33f1d-0c3f-475d-b3a6-48ee1d945be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b19062-47bf-4e4b-a4aa-2fb1775389ca",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82851c8e-46a8-4816-8e70-b9b6f9713ad2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcf6214f-67fe-43a9-a805-a5da895eeefa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bdbab2-80bc-4f7e-8244-fe4f23c69224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b52ee86-629e-4aa0-93d4-8bac8deeff16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671b5ca6-5ec0-4eb6-9b63-744300d3ddd1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70af2527-734e-4d0d-9bb7-c894b91cbc4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d83a529-f734-45a2-99ec-4fcfab6e0f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0a0023-4926-4bf4-9d0f-0937695cff1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a157e79-cd4f-4672-b484-d96fddededcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0cc0389-18c4-4418-aafc-82942fcce21b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de3986c-0d7d-427b-b2da-56d500aba56e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b42a26d2-8139-4463-b06f-cd70c87fc708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea909ed-365c-42e7-af58-e39342171028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa2d16c-5200-42f5-8768-53d74927f429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da307820-8ed3-42fc-8844-98f68a3d01b0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d2d8dc-864c-45d7-8573-847213a03fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3255279a-df33-4f46-8424-f3b07f7c6cc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38423303-021a-4c5c-a7d0-b3463d160740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4709780e-8bcd-427a-a4ce-240c4a055256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e603410-21f8-4fcd-9925-51caee3bd27d",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8916b2dc-f546-4cfe-ab47-39c9afacb95c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d6759a-54d6-4ae6-a4ad-90181d48d2cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0108155-e330-4c21-b195-3e86d6b789fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719bd6cf-e901-4a22-81c4-fe23d66bacab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea91517-a74e-4db4-8bf8-64f42636745d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d104782-2bb2-4e37-b72c-37b0c99835a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f71446cf-3c3f-4651-b77e-796833aab4c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54faf16-b5a0-485b-8ca1-d3c3db0ede74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bceb90f-4610-4845-b445-589071f79d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c92f8e5-5a80-40fe-875d-9664630964a2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af11242-ca31-4248-b64f-94eda87b09b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d25914a-1d25-42f1-bf58-30dd79ca7559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72cccc2c-40db-4c2a-b886-7c6827ac93f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9eacfc4-de6d-4e13-8dff-bbb2d9808ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e48461-aae5-4291-8ec8-3770d90435c0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6dbdbe2-20c4-4c39-a651-652950ee4ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cecb4d12-4b01-4af5-b239-98603f0195f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9a62d9-5a73-4391-a983-ad0b8b68592e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c533bd8-fd83-49b8-928c-dc061c3e89f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98316c4-6c9a-46f0-a77e-d88174a58f44",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76a9abf-bdc4-4238-8933-ac87ff616901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5e127c-6345-4ec6-9b16-a4e0c18cc695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0c51f3-df85-4b30-9646-af17dc330077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d64ed5c-0ba4-4601-bd4a-0bffcbb2b592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18fddb0e-fac2-416c-8881-dfdb2fddb7a5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de85c7d-ef85-4390-a12a-242028823e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df6d6a84-d96b-4849-8304-eb2335975154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6ad6da-02a2-4a98-b6be-ba1d7c91acfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc99c72-a9e8-40fb-943c-c49c861750d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8dab7c6-c85a-4064-b4f1-81445c8bc0b8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135180d6-50cd-4161-8d6b-cf2e8595abde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3849cecb-5e33-4f76-bf57-f8a55eb8255b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "172dd655-941a-467c-bf7c-186372615a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98efbff9-b7d6-41d9-a0d2-c9d16c776ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7945aefc-30f5-41ad-a3fd-523bc39d4e6e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1303c1f2-3c00-4bc7-80f8-fc9e95e0554f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7ff1935-f1d4-45b2-bf0c-30ef3b3bc6ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78cedc5-b8f9-40c5-88b2-9d132b0a0d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2089bb61-2b40-48ff-9600-85e9f581f8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ad6bbf-e6ca-433d-aebb-6d947c950e49",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd199b7-c0a6-44f4-b083-d57942070184",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "619b5bb8-e480-4f88-b15b-37bf2d6c8fd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6362ea03-1bed-4ada-bd09-873e972968a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0923a1d1-2be0-4f72-b56a-7f88eef617ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c3127b-15ad-40d7-959b-7829a3560aa6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c877e66-53f5-4dbd-a3c1-979cee35e50a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5210a97-fc2c-4f3a-9665-76837ed43dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97bf0d1-8a2e-4402-84b9-0457b76b626a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15bd179e-7ef7-4d44-b118-35f356c2fcfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "221a003c-805c-4895-bd09-93fbb318f627",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31eadbd4-868d-4c73-b475-be2da94468d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b609a64-61d5-4013-8e96-2fab107fc946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e286187c-f6c4-476a-b6c2-eb30da246627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba2dff8-c64d-4bc4-a4c2-1d8946393aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e855ec74-6dd7-4c2b-b6a4-9d563cfa0d9e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2b2d5f-6f0c-4cce-b000-d6c1280fe176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501e82cf-86da-4614-80a5-cbb18fed562a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "550b222d-1f8a-45ef-9fc4-ae4afa218f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf91265d-d1a9-4377-8e96-fa8817794e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3eb408-f569-4125-99ae-af49a43aeb9c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06d44d7-f230-439a-80fe-ee9bb35c5dce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfcd15ad-565e-4823-9965-e544992d9e4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d099d34-de29-43d9-bc31-571b0806d143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ecd310-31c2-489d-8d44-98edd8b78d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7a176e-623e-4260-a20a-aa7aa7fdc83a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7b9ad4-ed9f-477a-a9f7-a07586a82bbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51ba8dcf-0ed2-489c-a2eb-9f29a37a26b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2c3dc2-4a7b-41b5-874d-3aefc397da74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8945a072-3c9a-4823-be9f-8c69ddd892dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0061e2d1-f619-44fd-8907-a5212b111673",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c907a6-2966-45a9-8578-4415218b4395",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "554994a4-d158-4944-9781-22bdd56793ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a96fb6c-e964-4bd9-9358-64afb586fbd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41905197-43e4-4f62-bff6-d0aadc24a5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b5b737-c250-46f8-a256-f91ec5b58643",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8037815-91e2-4a69-bf18-e3b44eca0699",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0702f4c9-75db-445f-8dab-90876f9ada2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e68c714-0085-4f16-ac5a-4d31d369dc56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b37fa799-93a1-4d33-8bdd-c1eefcf77e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e5d0ea-ee52-4a34-bf1f-9b7988c8c249",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d510132-47dc-4edd-b79e-9ec3a8c9f005",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc80f19d-a4f5-47c1-9f6b-db214e29e93e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5356495-0901-49da-abd0-cd8db00f283d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d433fe5-b803-44a6-a5d4-8b4a227fcd83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3698fe89-d102-4a01-986d-2792088d11f8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8948073-2f08-463b-87f3-68fce89cef9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "325b2175-f704-45b9-9ab8-ffe9c024637b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad59b47-a86e-488b-88bf-832f4cbc727e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77520581-cac6-4114-aa8c-523d67322f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d428b2e2-cbbd-4abe-8553-85856ef97921",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df6a0f05-7401-4e64-b1dd-7ef3ce05536d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5905aec-13c1-4c91-8089-8fbf95c3df39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc28931-0d55-487d-b02d-9023d60decfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db8705a5-a178-44ef-bf54-9fda02772e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768ae9e0-6b10-4666-b7bf-c5418002ae95",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca3cda5-0c58-43bc-8e28-26a4ccfdbbce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a627e0b6-560a-4d6f-84fc-ae78375b877c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e69255-4d6d-494c-a276-cf1f1efca650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4a8575-b441-4d72-bb45-d7ad073a0414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1d850f-a11b-4f6e-b315-a6c6e133fcf3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be54077a-e400-479d-a792-fc8056aa760d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa32a70-9f3b-42f6-9904-840fafc00b83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "369761dd-1b1d-4f7c-b335-021d9b9912e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d528b73d-84fd-4887-87fd-fd8c91b8fe57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c7c8f8-6fb1-40a4-9533-fa70f978bc3f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c459210-c54e-46e4-b366-bb6c420b69ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b3fdab2-73bf-48d7-95f5-7b96450a71cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd1e8fd-4383-4fc9-ab0d-14094315a4c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9932bc-adf6-4d4a-bd94-4b1063f96123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052b61bf-cbc5-4146-a392-2e9b067132ff",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91fddc3-09f0-47fd-94c7-d1064db8f479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "497fca3f-925b-499e-897f-c4f4a199fe86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4777989-b22a-4a90-9940-f8362aa0c6e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "045a0c38-9712-44e6-a6c9-8eab9cb5a5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22a23eb-1a27-4e14-af87-2bb5dc2fb6d5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67a9896-b8fe-4807-a450-d24d27c9fce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09fd7726-2afb-4164-af4a-6a9eb4a3b582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "749ea50a-8bfb-4e71-9f10-e4d0f5ea1d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5477a395-cd29-45ac-a469-2d5b7ca58819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fcd026a-31fd-40cb-8e5c-a25415c96289",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce76ac8-9737-43c9-ab97-33a7d90bfd4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b3d1d9-5f20-4156-918f-1ec66c90f13f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d273854d-4f6a-4eac-a115-d0d9217cc53e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c1f155-1196-4e0a-a51c-4e026c5d5701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4952cda2-ea18-4309-b0a8-a254a5332eaa",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa614a9-8a5d-4590-83ec-eab9bac70a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5254396b-162c-47cc-ae6a-c97e461e690b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "779bef20-10e8-49be-84d7-7478dead75df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7ff33a-796c-4239-a868-ce707a275bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6dddbf-9405-4d88-9f41-3b3aa865f424",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33fdafab-eee8-4886-bafb-a044d6e63a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e4a540f-60e3-4f65-9d62-21d787d67102"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ec941a-a92b-449f-90fd-5763de0bb38a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "365ec04e-2296-42e2-8501-91db2f473ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596e0b27-831c-4636-ab85-a675b685b908",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271cd2d1-5bb5-4390-93b0-139c17e7533d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172c214c-c16f-49a5-abc3-8b29a3f5e878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff327cad-f435-4838-8df6-2bd36598aa50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df006291-73c7-4575-ba77-a765dc1bfe4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445ea408-fa9d-4f6d-9157-1d0620a25708",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b12598-f9e9-4542-8d4b-1f23c289d11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11160267-0c0e-4778-af7f-30f34312e132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92df9538-0079-43b3-ba38-a0fd90a42131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66cb1cc9-2b22-482c-85aa-2d936851e659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25af0952-873e-441f-95eb-3ac25d4ce4ab",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed416d5-9b21-4fd5-afe5-110eb4a49606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b62617c5-2d97-4643-a624-2ce7acf5862d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3eceed9-f43b-45af-b155-8e682f226fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76bb7aff-aee7-4bea-b84c-9e0d848974c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bae2f02-1ee0-4ceb-9860-94f40824bac0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a69f79-2c23-47a5-a416-0d000345af90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527c2539-a626-4b8e-8f62-b5dd55273a18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0fb80c-5270-4370-aef0-6a4693381331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00122a27-5ad4-490e-8a61-f967c1d973dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6812cdf-98bc-451b-80f9-aab3a875e6bd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ad5a16-0075-4f1b-ad3a-91dd14b5675d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b05311-fbf8-46a1-9205-dcf04472ec3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f398516d-a155-409c-abdb-9cc6bcbf2a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef61c1f-4929-47c6-9121-0b2faf9ceca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ab60fe-cb48-4b94-b135-e12375d8ca6c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af6c898-e270-43cb-972c-3d0d6af5f9a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f315383-3596-4b9f-8a2e-201319e7aa1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58feb8af-122d-4dad-8132-9cfe6e9638eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965f4b04-4efb-422f-9450-319a51bf3ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c91396a-2a37-4809-b6c5-6334fd7ccda1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd03be9-f0c2-4079-a815-7b210d4bad4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ad442e-6a83-4fb1-9622-6dcf02564a7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc762b4-3227-4a55-bb1b-28161eafe4d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720b41fa-7f14-4b21-8cc1-c25a3a836839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9561d9-cc6f-47cc-8a52-67775bd70b58",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c1cc96-24b4-412f-bafa-d15640db2b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0af6a5-b2f4-4def-be88-6e8d8f9461ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2289606f-654a-45db-be4a-1c01011c65bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6e0a7d-ef89-4dcf-893c-db71a92b8cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a73f47b-ef2c-45b6-9698-0c6241ee9a55",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7444e5-5ffd-49c4-9cba-4ef4d3117973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba22e44a-baaa-42c0-8f08-c5e0ca449b0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2be2764-cfa5-4079-83d6-ff14a2514fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e07e1c6-d2e2-4684-a9a5-640934e69366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9795c0-a89f-476d-9db1-1ba9b5e9ad58",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c37505-a952-4176-869d-cedca66fbf83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7716db4c-4802-456a-99ee-fe7864d314d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02bde4bd-b95d-4a11-8833-c1ad35321a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df34052-fa9f-4364-b2fb-d8920cca04ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabb5620-1eeb-4009-9196-b7a667d57e26",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7141b44-8974-43e6-b698-5aaed1e16763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b7a7c0-1ea0-4747-8a31-28e52c3161a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c56b68-bc3c-4d10-8bf1-1e877f2fb5b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abfb8ad0-12c4-43fb-852e-0a2882e9d13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c08a65b-98c7-4d23-a9e4-406892f58800",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3f2c2e-af2e-4aa0-9c70-d8e6b522a316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94656745-5a42-4e53-80d2-84b0e24ec567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae74331-22bc-48b3-8c00-0cfbf305bddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8796f40-11f8-43d8-b98b-8dc2df43eb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b61f56-c46c-4259-9355-6748542aa463",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948cc351-24f9-4be8-b2f9-56e2e77c4593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba66b928-c907-45a5-a555-36e31342b6c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "478d975b-0a2f-48b5-a94f-a162f281d695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30ed0c4-0a4f-4c46-8472-e839d2a5aac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe03b48-3abf-4ba3-bbf1-c2ac600b5214",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed2b522-05bb-4101-851d-cbef49ebb60a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7438d893-fe2c-46d5-8944-74c9687b681c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a256b768-444d-44d0-8784-dd15b7bc5a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c41ab6-db69-44f6-864a-f810cacd9e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa4b8a4-1b74-4598-88f4-748f7765b53e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a7c65f-2a02-4ab3-9b28-c7c2833552f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f0209e-a4dc-4f2f-b0e5-fca83b38c169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d7d11e-b6aa-435f-8a47-7c9cf1c1e7f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62531e52-3ea4-497e-8152-9c5471f7fbad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fa1f20-548d-4c63-a0d4-582c1a0df1bc",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f1ac5c-391b-418d-8994-1a2354b5dc22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6faef84f-fcc2-46d5-80ba-ee55ce4aedf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ed4629-6f66-419c-bed5-c416e9f4bbab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7978332-a870-4365-80c4-3815a19b6980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4df5a49-0d05-4523-89ca-9e2954a2e7c3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f647787d-8db6-4c3e-97af-68a967ec0f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf3428c-199e-4b5c-893d-ef45fbd6780f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f624dda-f571-4f70-9947-f807d5262ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd0cb75-9aa8-4726-9025-eedc83519902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7381906a-1fdc-4332-b1a8-84d1e191f9e2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c002e3f-b3fb-4299-a213-6ff5d1f37126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99aacc0d-147a-42aa-912a-7f90b67e8074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdd026d-13d8-4067-a6b3-71d3dfb04b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b8df1a-9bbd-496a-b377-17733c4a33c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185bebbd-9c10-490e-92ae-aa2c1f13c953",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a59a14f-6ce5-4214-95db-9f6bbf9c816c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762e0552-a58a-4cb5-9c86-ad0afd7b9843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3003e64b-6ff4-46e4-81c6-2b4350f6adc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a18aaf2b-929d-42e6-9bf4-1f959683428c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09456c29-b280-49af-8f32-d868e27de5c7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624ce1f0-6b89-4c42-a9e0-b2127deffded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "705527c0-a828-4106-a6c5-102f7d1ead3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed09b5a-9970-4e9a-9ea3-2debd15ad4de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e9f0a8-53e8-417d-a66a-637bd6dad064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c398d910-b800-4b5f-b0ee-bbcc6a8e42ed",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6d8f8b-6dd4-4731-be41-e14e8d1d6b48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbbf583a-a6cd-48fc-817b-3648c04123e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "597b486c-ca4f-4627-b37e-c81124029203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc7ffa6-ece1-4a1d-9018-484229f14209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ed3086-686e-4750-894a-5f567f597f5d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4fe20e1-e3f3-42bd-8e28-70cc9bcc9a63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55ed7ece-8f33-4743-88b3-40dac6c3466c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed43b712-ac80-49e3-92a3-4c76c51ad2c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a707f07-df93-43d9-8c4c-2db07cc28e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180f0248-ee25-4789-9580-f9bea36c5c8d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e225a9e8-7a01-4751-9107-57bf2b620d0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c81cd47-54da-433a-b628-fe0677303e84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b63a1b3-afb3-421f-a757-bab4c38ee2f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "582c82a8-dc02-4d3b-b2c9-c729601a5a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b29b80-5eb7-4a21-839c-ad78add41d2f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5066a4-a2e9-448e-8b72-cf4b44932491",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "379682c5-7016-4132-bbd6-793625d21c54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf8d060-5eb0-402c-9a92-0ae3821705d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b968651d-851d-4fc0-893d-6ec940ffdb04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21283269-a548-48ae-96e7-a922ec5b2a58",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd93504-3dfe-4a44-861d-7c6f3e3b5bb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb042d3d-a244-4935-a367-7df9f9230cfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "391226c6-9859-446a-a762-e8889b952161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81ff354-ab89-4e1e-980f-d2c9b1c56abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c278a118-0adf-4716-b72d-6094dd9f8194",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425d143b-7df8-4987-99ef-b829474d2830",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f79f1c4-00ac-4229-9363-cfeec10800b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8802809b-6b94-405a-a91a-e4f13fee8c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce2e616-55c8-4aa1-96e3-1ff547b0d2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32f15a2-43be-4db4-9c7f-3476e9abf816",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb7674e-de6d-41d5-91c0-b2cabb4f527d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67de2c53-647a-406c-801a-adabc36c4a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8e354c-855b-4515-b7ca-d7c9058ad3cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661a0d93-5d85-4dee-b9e0-9b6975f6aeef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c764db-c6bc-40f5-a813-b7fb381913b1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba079832-bdfb-45f7-a725-958f8aec014f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4545d2c-8c5a-4e30-8d99-c67c05fa537f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "037aa8aa-6372-4f3b-bb7a-fc91718fd9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd09b3c-3045-4f30-b4b9-91c439e9de98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee85aeda-83e8-4b44-8bbe-f35ad11b4d3d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adaaa227-4913-4b39-8c2b-81b55f22abb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aedc1e5-2f2b-476b-8212-87f0bdb53366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8281c39-b7e9-4422-8daa-42dd977f9f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99d9cdfd-3293-4b6d-8894-0ed57d36f0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c9813b-4f10-4270-9cc2-b08b4ee3fe59",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d346dc-2169-49d1-b087-8a273a27b8a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "923b5ee2-0136-44b2-b1bd-fe3747df39e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1150b7a9-7d25-403b-b3eb-b6f60b037263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ab8494-9277-45a5-82ab-a281f2294a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0b4884-9806-4ac8-9056-301fa77413bb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456c1292-c9d7-4127-8483-bfa8d321cd13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6ef8866-5ef5-42c0-95d2-bfc416d56b36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "809d37ea-bfab-4139-982c-8949f22d071e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a7b09c-330b-4a33-a134-70b1e3ab5013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47349d4b-2ee0-406c-b5de-2adf94462ee6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1134b71d-b1af-4f30-b953-49f6ac16333e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f333907-ea86-47be-a006-aaabd4da2905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62f0fd8-0718-4881-8714-bdc985b848b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2013e9ed-974a-419e-b43f-df055f58342a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba83621-2af7-4b71-ab2e-2ce028382621",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa853f3-022b-4c7c-810f-1762be459595",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1cd7cb8-4acd-47f4-9b8e-bcb8672c296f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0174fd62-20f4-47b3-ba1e-e2641f69080a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ddd389-8dff-4cfa-8a5f-62c41f34339e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f5d6d8-8e75-4c6d-bd59-94fbd3933e47",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a81b61a-cee4-4e5b-a871-54a56fabdd3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37e5357b-c97f-4792-bf9a-6aaba016561d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cb896d-baa5-49a8-a137-6487661579cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd8462e-1f65-496b-97ff-69afc3fd32ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440d696d-58b9-4af2-a884-352c40c4ab8f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c02b54-3627-46f8-b3e7-6f45825874b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eb99a8d-ade7-4185-aeb4-6e32fc99ea03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfd81d6-268f-4ab5-a659-cf96ff0930e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22400f9a-186d-41fa-8c2e-5289d9a35f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99dd318-2013-4de3-818f-0b6f157bea0f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad6e721-a876-4b92-891f-e33bf39c9841",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a87ecff-4588-4611-883b-dc89cdf7bc37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "787bda2e-8530-4ce9-bd69-adc2264c7fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7dea088-6a17-4c53-af5f-9b728650be4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab599236-4dda-4eee-8cc1-a25f44c58cac",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a409f8c4-27f4-49d6-bf35-45c12e1da235",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "805af46f-4d16-4207-8d3e-80468de5f3b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "100ebe46-ca8e-4477-9d0e-cc09e802cb48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174f80ac-c7c2-4ad4-a93f-2588e68db186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd95ae2e-55dd-40f0-9b31-83c9c9175fdb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd22752-291d-4c2f-b7c7-e89ccb1c1b69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5b605c1-8d04-4bb0-bddf-91e832bd081d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1855c33e-acd8-4e5a-85eb-4683da9c0670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "181b0c9c-94e9-4c23-adcd-a189719c2a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4d6ed1-b7d2-41f8-adcc-395e94aa6a3c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9493e956-63b8-41c9-a13a-8f866133f620",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2e9f0f1-3c30-4fd9-96a0-3a99b13e1f5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae9644f-a07c-497b-b70a-a64c3cfbd403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e60aee2-f1b2-4fde-9ee0-4104d1f490da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c184338c-e511-4fc2-8c89-6d5c17b99de0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8d03d6-0836-4502-b281-f60eb2b3fa3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73ba4c14-e0dc-43e0-9ad5-6335d281949f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1a4b9f-6d3e-477f-bd7b-c4049e786bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "041172b5-ab9f-4502-9ef2-f17babb0a0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a468478d-fd54-496a-a2fd-ede09063942a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ed729a-8976-4d0a-af2a-860d24cbad49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "169dbe42-f576-492e-b7cf-df240cf421a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "111caa0e-16a1-440b-884d-e4ee06a832d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c1c036-215c-4c24-900a-299650f0c842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60186cc9-1f39-4966-ab76-e1353b5c5fd3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b91320-71e5-481a-8065-10c78e83b779",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3bcae4e-7b32-49f9-a21b-74b397d64c9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d96ff23-8351-4b5b-a5c3-33580fe6a63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad6c4c1d-69ed-4772-b837-b5ec8475f525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e792db-517d-4980-bab2-64bfafb0a0da",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272b99b4-e0f4-45df-9cd6-7ae40a4e5e87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d39a1568-1589-4f2e-9ea2-47c89e8185a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5615c206-7384-4d74-8c74-d490d4341289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e58acf-8681-46a7-bc42-9ec14d2e3c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416369ef-8afd-4497-b252-d6d9310f91fd",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7423dd50-59ff-4ec8-9308-849c63c3da04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64cf47e6-a65a-4fc3-a80c-b3156ae893e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20bac6fc-67ca-4095-9481-b128bff50420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3fbef2b-b052-406f-9167-14aec3687e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa9f06a-a817-4767-94bf-62f973b8b08f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b88d694-fa4d-45f6-9b3d-b0fc7e412dc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa97873b-12ba-4d4a-a583-b0fc3069ae5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8261e4d2-0b73-4c7b-8c19-9e30c149f0f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "244384b0-8634-469b-99b7-c625ced9de31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3ae13d-361c-400d-a56c-10b814ca37aa",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2142e810-03d1-456f-b0d7-99c71b56c5b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ebf296a-62f2-4c63-a7d0-be41afa9d6a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b9baac-6414-41d2-a890-006d0f42361c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2182ed7-52d4-4e56-a6f1-7eaa98ac9f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670e7492-6139-4bfa-9181-84b87e15e7b8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81364f5b-5122-416a-8225-6c593deae183",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e397a7c0-be6a-45db-9033-84e64b59aad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc384935-f1c3-48a0-a205-857d7a313668",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c02ca4a-3eb5-47e4-8199-675261508b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9be1a2-5402-4961-abfa-36dde0cce39a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a0c251-b69d-4dbf-95bf-87ad75ec5aec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d8e26fe-e0f5-471d-8e1e-774624ec0891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdb418d-95ab-4e2b-9774-9f343a6922ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fbe1235-0def-41a7-b6bc-f3d73e5f0c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a863a6-81fd-42ca-99f3-68f872b29452",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d346dd-a2c6-46ac-b90c-64f3023dbd5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d50ac280-724d-4e8f-9f96-a6b492671928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2744644a-22f0-40c1-a00f-875267e07ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0958d142-97cc-424e-93de-670d16663bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320344a1-3ab7-400a-ad93-61bb0e3f68e9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8ee10e-7fed-43dd-8441-d32cf718a3ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0df3582-b439-4086-98ab-ff8cf620887b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcafc91-524d-4140-83fb-da571ed693f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57899109-91e5-498a-ab58-029a9cacac10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbc5a99-30be-4f1e-9837-66a97c0046b8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d8c423-c262-4a2b-9061-d3ad8e5f0a64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07062fe7-7685-4e62-a458-8e85735e4ab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4af2ef-ad73-4127-abc3-120e55108038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d142c6-3c37-4700-9561-a0510d18e700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76366918-d95b-423c-884d-74093aa55cf9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01a32bb-26cd-47dc-bd49-5f4c3fbd3ee4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "061a4dd1-86e7-4907-9db0-1da967992909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2e3b01-3c84-41f2-9692-a03ffaccb6ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658eff4e-3716-4d52-8527-3ad9e0d7f035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1628b634-8e27-4ef3-8f45-6a1d87343486",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b78e4a-5213-4f25-9991-5cc505e5f1e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ee43705-5c8a-4622-9e9e-bf24efdaa69f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a2b518-d25b-40f9-a9e3-488572896055",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c59b90-b4de-4f81-b1da-807a542d774b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd52626-6a38-4b92-8f94-759a8b8fc662",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce94d2fd-ac4f-4482-9984-8ae3aa05bc82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35a09905-880f-4ba9-85f1-590e259853c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe476948-fbe8-472f-a864-0a4398978112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71eaf075-88e8-450e-ac87-96ea21800560"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c14fdcc1-b76d-4f15-ba78-b2f751d81e4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a98cff6c-7b26-4af8-9a0a-55de9e22b49d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67c9434f-526f-4a8c-bdb8-da945358dda4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa70f1a0-7913-4b7d-8a65-e554d2cbf37f"
                    }
                  }
                ]
              },
              {
                "id": "41d68677-c9d5-4e95-af59-13bf318f3843",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "531bcecf-0013-43d1-baf0-9b7cbfd929bd",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6b7bee-29b5-44a0-8e93-93ae3f372186",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "70deb272-5e5f-4c4f-a8d7-914fb131cb3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b110277-5c3f-4330-b8a6-52d13722fcb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "480f8ad0-fc9e-4231-ba5a-dc9845ec6f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c228122f-ca7f-4b9b-87a4-6e49774227d5",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e9675f-8c1d-4cf2-b861-b01f4b05b5e0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "23615339-b984-4f15-9b10-101c0be0d561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4730e2-afdc-4321-a01d-b2ea75799c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7074fc98-95f0-4ece-9708-1f9f228e1f41"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9c70f74-2153-4fd3-ae66-5271d4e81d82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0782461f-9619-49a6-9d29-8dcc1dffc764"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ecd7de9-b784-40dc-bbd4-407e1712b8e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a666b85-f93d-4df7-8a33-2c84f104b529"
                    }
                  }
                ]
              },
              {
                "id": "c6427368-8cc8-4fe2-a612-d478ce26591d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4f39d75f-5883-4936-90f0-81f75167d229",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae00d89-86d1-485f-b4d2-30e6ba14a71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e39170a7-b5a5-40c2-8e8e-4d6a7164c838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd8d762-4a9e-4195-bcc0-f04541086c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd37ded9-cb60-45b3-a501-41979ab6e91c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6fbde741-5665-4c85-809b-d7c15e9d32d8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8b981f44-1570-4383-9e51-5a82440c8cd7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45e0b5a6-6d25-42b9-8101-df5df1aea018",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b9ca084a-ee71-4d7d-84b4-d2925cc4537a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da50cb96-e41c-4e77-9e99-6d8fa6209d3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84e9b84e-0ef0-4999-9f1d-8ed348c5a517"
                    }
                  }
                ]
              },
              {
                "id": "88b5069d-44cd-42be-bdd0-de1c85f68fa2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2f5ce1e-a225-44fa-b15c-818e506f858a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9d9b4ddc-c4d1-4965-ba26-ee83ac40c80e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df53cb86-0dac-4fcc-876f-64be5e132bf1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed3b9429-fdd5-4b63-b2a6-f55adbae897d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac09ac8b-11d1-4116-8567-cd0b343a38df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6f25a698-e354-4022-b3c1-11ead44f1e8d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2bd6c025-df8d-40f3-b048-eed255ec727d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77df3cb8-7e1e-4177-8635-f6576df7c2cf"
            }
          }
        ]
      },
      {
        "id": "df1bc9d9-6f84-452d-8bdb-8addbaf6cd9e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6aac383f-9d5c-4d91-a595-ed70f78abeff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94b7de21-a6d0-4824-aff0-71a684753b65",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f6085bf8-bef1-4bb1-a05b-882daed9943e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b27f20-d923-498c-b8b6-ded3c7fac862",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a93062bb-63e7-4373-8a33-246972793f5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6427cfc-7c30-4107-b551-3a28974467f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71c7ab4f-2e06-4bad-885c-e30ff1f34e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23f359d-5561-457c-9c21-947734aebe32",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32e057d-46a1-46d3-932a-160b9b2d9f26",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "55e1e117-a703-445f-b238-f9b688e4bd95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3fe5db3-3870-4820-ace7-6870b6744bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86f7e6b3-63b7-43ff-a850-dc439eff4633"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1aeaacbe-b8c6-4278-87b1-5d858832c3ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2671bc63-3984-43c5-983f-e69e69b9ddc9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "822b3b1e-72e1-4e2f-8c77-4cea34738f57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e59c2d2-4014-4da0-9635-a85e1b58183d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "448a35ac-87b5-4267-8d29-0dc6e2b5026e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9e1c19a9-8ada-47bf-916a-19a6857d0a55"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0a94631-c824-4953-a78d-031ad9a1d379",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "205cabed-dbd7-464c-8715-e0f93b8e9b91"
            }
          }
        ]
      },
      {
        "id": "750d4bbb-f60d-4a94-907e-156e85e34d57",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "33b54019-19f1-4c4d-a3ca-81bfe22ab387",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f2a8fe6-8642-4e09-b179-e4e815d379a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "189fda90-3456-4cb9-8484-225f139e4693",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ae605d-c338-4186-8002-961f0465f3bb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a03a7b19-8e98-4e81-88c6-e50123ff14fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb89dbfa-b884-4662-a496-f54ff3e2bf00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27a6c443-d9d0-49d1-b8c8-422c4a6991d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb76e86-dffb-4066-b63f-a375ef5e8759",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67b6021-4a4f-4246-bf8f-d956e7da4c99",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a3472f1b-ac67-4436-89d5-20eaa64e2b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe005b9-c810-4c14-a7d9-18dc817a9de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "763fbe69-88e3-499e-aa4b-14d0a3ecb9cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5680e0d8-f6ae-484d-acfe-7110701cd6ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bc02dc8-680a-42b1-a68f-4f47cd700f8b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b9d699b-83fb-4c31-8b05-45a787e25134",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3706d8ee-3e41-4146-b621-e5f05b7176e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04dc4230-4bce-4a7f-95b0-d6d243c59c41",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c95233cc-2bad-4e18-8ae8-eb318a6ab191"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "910312e9-5208-4ead-bf47-79813d3fa3d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af6b539b-5eb7-4ede-b8d5-007a22fb838c"
            }
          }
        ]
      },
      {
        "id": "134f61c5-dddd-4cc5-8766-340309dcdc5f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "dfad3693-73a6-4d16-bb02-b3cdb1e65718",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e1450f58-35d7-43ad-b9c2-49bc44c5db3f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b84835eb-a741-44e1-9cc4-51e19f3eefbd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece70b24-b9ea-406b-ae64-3dafc8805a57",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "29e84576-7be0-4a7b-9dde-f5962825119f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e9700f-3860-4b7f-a559-78f224456628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "efdc4f76-7811-4e1b-8a5f-a2ade9c03d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990f458f-558c-4319-8fe3-3c94ccfbe833",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27b135e-a684-4905-8ce5-0fd69b525b35",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "91f0bc7e-7051-43a0-bbac-547ae62e4662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4183a5c1-bee8-4b90-bc3d-7b5ab03074d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4abb35d-3c38-46b0-9152-f485b98b1902"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b2e2802-3a34-4a19-a526-7f7f7c7b355b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c0ce818-cb62-4b02-aa7e-cc73bb9426d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "75a93c95-4654-493b-a4cb-08f61fb0bc4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90dacc7b-1e3c-4b04-a347-1139164a14a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6cf2a90-8f66-48a5-b74a-bbb55059d8cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a0285063-1a4e-4430-83d1-7fc70ad89532"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd1dc74b-2739-4229-8e53-129889c5fe64",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5c5d323-5644-4ca2-915d-ed9cc563cdf0"
            }
          }
        ]
      },
      {
        "id": "93111338-7a43-4645-8b1b-6c742f1cec7b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56d19d3b-d8bc-4ea2-883f-3783b1663a15",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df783f2b-a709-4a43-9d63-7531e1d04929",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7ed92b96-1c24-471f-9c01-d8d5a778738e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94fe85f7-51fd-471f-8813-8dd1b651fdce",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd5cc92f-20ff-4897-98e7-aad827a331ab",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 625.4007633587786,
      "responseMin": 10,
      "responseMax": 5772,
      "responseSd": 726.7434129345065,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1674088810549,
      "completed": 1674088984963
    },
    "executions": [
      {
        "id": "56e7e6fd-0245-4055-a039-cdadcebde23b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "02a895e6-579c-4672-ab14-053089320d24",
          "httpRequestId": "fce761ae-14f3-494a-84fc-2612b45aa86a"
        },
        "item": {
          "id": "56e7e6fd-0245-4055-a039-cdadcebde23b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d739d528-dc6a-4b20-aa0f-5a5d50fd617f",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "eb1904dd-54ce-4454-ab16-3204e8a7214f",
        "cursor": {
          "ref": "3cd7d619-ea24-46bc-a1e3-2469bd5796fa",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2a506bfb-7229-4146-9001-f350bc1c8132"
        },
        "item": {
          "id": "eb1904dd-54ce-4454-ab16-3204e8a7214f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "277f921c-7afb-41b3-8309-6fb9669b5edf",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "75a4c9b2-ce2d-47cf-81b1-f06affdb7fe7",
        "cursor": {
          "ref": "2423f9d3-214d-4409-9828-536cf4484696",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "951d07d2-ece7-44f2-9741-9019669527b8"
        },
        "item": {
          "id": "75a4c9b2-ce2d-47cf-81b1-f06affdb7fe7",
          "name": "did_json"
        },
        "response": {
          "id": "4e62088a-5c2c-42aa-b2dd-e0edd1150e92",
          "status": "OK",
          "code": 200,
          "responseTime": 955,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ca7fe0-2efd-4e7a-82da-fd629121a5d6",
        "cursor": {
          "ref": "2d3479e0-95ce-4c5e-bb60-ed10ce9afd59",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "15ef314b-6925-494f-98d8-4f86f3f123dc"
        },
        "item": {
          "id": "94ca7fe0-2efd-4e7a-82da-fd629121a5d6",
          "name": "did:invalid"
        },
        "response": {
          "id": "4182f293-a27c-4c51-a32e-8445c8c937fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1026,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ca7fe0-2efd-4e7a-82da-fd629121a5d6",
        "cursor": {
          "ref": "2d3479e0-95ce-4c5e-bb60-ed10ce9afd59",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "15ef314b-6925-494f-98d8-4f86f3f123dc"
        },
        "item": {
          "id": "94ca7fe0-2efd-4e7a-82da-fd629121a5d6",
          "name": "did:invalid"
        },
        "response": {
          "id": "4182f293-a27c-4c51-a32e-8445c8c937fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1026,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c21e983-cd50-4466-9968-eb87fbc73ef2",
        "cursor": {
          "ref": "2b777d4c-08c8-476a-8cba-f3af632a2c31",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4b6ee132-82b7-4542-aa51-63ce7865abeb"
        },
        "item": {
          "id": "8c21e983-cd50-4466-9968-eb87fbc73ef2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "97ed60c1-c333-443a-a174-35aaab79d4bf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 650,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c8001f-01ef-4fc3-b38c-d90a211bf025",
        "cursor": {
          "ref": "caf3f3b4-6ee4-4cf6-b917-90d9e6ec02e4",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3023f21f-8d56-41cb-bac8-bd8cf8eca174"
        },
        "item": {
          "id": "84c8001f-01ef-4fc3-b38c-d90a211bf025",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9b394839-733f-433d-a039-8cef4ed4b3a1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 511,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35464805-638d-4698-9d36-f6436571c613",
        "cursor": {
          "ref": "91b8dc38-8de4-4ff7-bbd9-fd2c5fa2ac89",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c2931008-aec3-4c64-aab1-f98087317618"
        },
        "item": {
          "id": "35464805-638d-4698-9d36-f6436571c613",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d5d12f16-c32b-47d2-9edf-5c71bec24381",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3e4e28-30d2-4b7e-bbf0-48294197951c",
        "cursor": {
          "ref": "b0f4a936-7281-406d-8b7a-a9190306f508",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4d252252-5984-4242-b537-5ba3a21bb240"
        },
        "item": {
          "id": "cc3e4e28-30d2-4b7e-bbf0-48294197951c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "49f119f1-9de9-4ed7-83bc-f1c7a1b4960f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 496,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3e4e28-30d2-4b7e-bbf0-48294197951c",
        "cursor": {
          "ref": "b0f4a936-7281-406d-8b7a-a9190306f508",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4d252252-5984-4242-b537-5ba3a21bb240"
        },
        "item": {
          "id": "cc3e4e28-30d2-4b7e-bbf0-48294197951c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "49f119f1-9de9-4ed7-83bc-f1c7a1b4960f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 496,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3551bbf9-a512-430d-aef0-1261db1d9694",
        "cursor": {
          "ref": "c1c5759c-b10f-4d67-9ee4-2b3e62c01175",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "18d83bb1-1361-41a5-b150-121006081360"
        },
        "item": {
          "id": "3551bbf9-a512-430d-aef0-1261db1d9694",
          "name": "identifiers"
        },
        "response": {
          "id": "6454fc45-005d-4d1e-a396-a185b622ba49",
          "status": "OK",
          "code": 200,
          "responseTime": 891,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92c926d-584a-45dc-ba26-f8d332a8427e",
        "cursor": {
          "ref": "1b4d96ab-acea-4429-943b-ccb1c2a18a04",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "23cdcddb-3863-4761-99ab-1a660f36bb6e"
        },
        "item": {
          "id": "c92c926d-584a-45dc-ba26-f8d332a8427e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "38c1a0e9-8d49-4ae2-8a69-1677a15dfa5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92c926d-584a-45dc-ba26-f8d332a8427e",
        "cursor": {
          "ref": "1b4d96ab-acea-4429-943b-ccb1c2a18a04",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "23cdcddb-3863-4761-99ab-1a660f36bb6e"
        },
        "item": {
          "id": "c92c926d-584a-45dc-ba26-f8d332a8427e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "38c1a0e9-8d49-4ae2-8a69-1677a15dfa5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7680a22-018e-49c2-a737-dd2a71f3a797",
        "cursor": {
          "ref": "31ba1c1c-9b07-4f7f-a983-663d9cf3fb49",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "00f1a9fa-18b0-45b3-b989-b88a6da60287"
        },
        "item": {
          "id": "a7680a22-018e-49c2-a737-dd2a71f3a797",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f6ca50b5-7d6e-43af-b0e4-ac6f687ebd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3980b785-180d-4e7d-82b8-89ca6facd9b3",
        "cursor": {
          "ref": "6d732f96-429d-4917-9b58-ba3e35ba358f",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6fb28b41-5c35-435d-a3d7-82493d33b11f"
        },
        "item": {
          "id": "3980b785-180d-4e7d-82b8-89ca6facd9b3",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "77cc0d12-12b1-495e-9777-030b08386dfa",
          "status": "Created",
          "code": 201,
          "responseTime": 2676,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "f081808e-64c2-40d9-82c7-13e4c1c8221b",
        "cursor": {
          "ref": "bd8b8cf4-2bf5-4511-8493-c78ef458d345",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6f18660e-1268-4faf-a4b5-3d5b12deb0cf"
        },
        "item": {
          "id": "f081808e-64c2-40d9-82c7-13e4c1c8221b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0b5e5411-c80b-4307-b91d-5c4d6da84c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c362c32d-64cc-4c78-95db-6fb8cc1ce0ca",
        "cursor": {
          "ref": "eb179ef7-7528-4f9c-9716-796802b4eed4",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d2c1bad4-faf9-4c0d-ab2d-e398fdcabfd4"
        },
        "item": {
          "id": "c362c32d-64cc-4c78-95db-6fb8cc1ce0ca",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e9ff93bd-dc88-45d9-98ac-7b6c6b30c6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ef0af1-21c1-440e-a245-94ba1c465c02",
        "cursor": {
          "ref": "c95cb495-0609-43d5-a18b-043be2f1f857",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7979869d-95d1-4ed3-8636-715384dd3b70"
        },
        "item": {
          "id": "29ef0af1-21c1-440e-a245-94ba1c465c02",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bac4f4a5-6a06-4109-8a99-ea342a42926f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0a41d4-d0ae-4428-94e4-9b8fc801c0a2",
        "cursor": {
          "ref": "5c11c834-83a7-45ac-a669-9c98ebef3c52",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1f630e4c-349d-4ce8-8966-bcf0b8d9f6a6"
        },
        "item": {
          "id": "3b0a41d4-d0ae-4428-94e4-9b8fc801c0a2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8702a395-d13b-436e-87d4-092e72f521e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38d11ad-2f14-4783-90f0-2475b617ee7d",
        "cursor": {
          "ref": "c1bead37-ba91-4485-a15f-4b6c57b81bab",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0a89dbd5-65c5-4e8a-a35e-7461c63c128c"
        },
        "item": {
          "id": "a38d11ad-2f14-4783-90f0-2475b617ee7d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7b123f0a-fcde-40fc-a7ef-11c5c792c52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2b3ad0-c20e-4ef4-bd05-be5d4c7120f4",
        "cursor": {
          "ref": "fa1876f8-4142-4e4c-b17b-2f717cd73c60",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a2048f21-d5fe-4025-a5ca-ab3cc78da1e5"
        },
        "item": {
          "id": "fe2b3ad0-c20e-4ef4-bd05-be5d4c7120f4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "05e98d49-7f28-49d3-9492-b4398f16b135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8197e48c-e807-482b-8e2f-fa021d1914fb",
        "cursor": {
          "ref": "9a6066bb-fd72-4331-b6cd-e64ea67f6f82",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "17a10cc5-af10-4596-9f68-b0333467b067"
        },
        "item": {
          "id": "8197e48c-e807-482b-8e2f-fa021d1914fb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "99cca1e3-e0c6-4ab6-9767-d330c31b7988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d2142b-b5b3-47d9-a1a5-6a00af4c8721",
        "cursor": {
          "ref": "b3d1f730-e561-4e51-973b-d0c4fe9b5854",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a547500f-e1b2-4cb3-9949-fc952373aafd"
        },
        "item": {
          "id": "90d2142b-b5b3-47d9-a1a5-6a00af4c8721",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c093c556-037e-44ff-bd22-97cb3ddaf781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83e9a1d-26c5-4ff4-a111-4325f75fa74b",
        "cursor": {
          "ref": "f99bae2b-e14d-4258-a3d5-0474a2756a1f",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7e0d87c7-fb75-4d89-a40e-9f715b1d99fb"
        },
        "item": {
          "id": "b83e9a1d-26c5-4ff4-a111-4325f75fa74b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "217aefe6-ff73-48e2-9b86-f4003b085a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992da228-525c-49a6-baf8-98c4c4481764",
        "cursor": {
          "ref": "46c582e4-76f3-495d-93b3-7af64f98eb0a",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c761e60f-2b04-4efa-904d-b29bb9f40eb3"
        },
        "item": {
          "id": "992da228-525c-49a6-baf8-98c4c4481764",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b8495309-6e52-407d-9825-f1e09f8d831f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57598f9a-0f84-431c-a9e4-7a4a310a6b26",
        "cursor": {
          "ref": "ac10d5d0-2137-4a87-968b-a34646a69519",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1fbef2c7-a498-406f-b402-cd91e35dbd08"
        },
        "item": {
          "id": "57598f9a-0f84-431c-a9e4-7a4a310a6b26",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "d878268e-d8fa-4fcf-895c-c7ff933312fb",
          "status": "Created",
          "code": 201,
          "responseTime": 4604,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "761d16df-dc96-416b-bd67-9b7449a068f6",
        "cursor": {
          "ref": "1d8477fc-41ad-4158-92a4-094665a857ee",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d2618b8c-3571-43fa-b12e-6d398d680d55"
        },
        "item": {
          "id": "761d16df-dc96-416b-bd67-9b7449a068f6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0ccc3f30-26f5-497f-b977-2c7adcf0de2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3998b2-63fd-4477-a912-ff42e2b282ed",
        "cursor": {
          "ref": "b144ece9-f0a0-4db2-9272-f2d845548899",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "27204506-4578-4781-aba0-5ddf1ace2fe9"
        },
        "item": {
          "id": "8f3998b2-63fd-4477-a912-ff42e2b282ed",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f449dc92-083f-42af-8f1c-a779e9658815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011cc52e-b5ca-4436-bc77-fc29b73e1d46",
        "cursor": {
          "ref": "895eda33-c34f-4e4c-8f42-c2913c629eee",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "50fe77a6-394a-444b-a37a-434c3dba5287"
        },
        "item": {
          "id": "011cc52e-b5ca-4436-bc77-fc29b73e1d46",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "87c2e7fb-b0ec-471e-9548-52463e7c459f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8fea0f-07f8-412e-9663-34cf377221a4",
        "cursor": {
          "ref": "4c81a427-caa7-4462-a6cf-c4c973da8cce",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c79665bd-ee97-4bb9-a629-ac65e2a21382"
        },
        "item": {
          "id": "9c8fea0f-07f8-412e-9663-34cf377221a4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e1543488-1fd8-48df-9051-60fc7914db9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1e7ae3-b83e-4dce-8e05-71f7bf9ad0b4",
        "cursor": {
          "ref": "b04fc8f4-3d6b-4b5d-9d70-1ee266e09334",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8c65082c-e947-4dd2-aa93-eac855306627"
        },
        "item": {
          "id": "3c1e7ae3-b83e-4dce-8e05-71f7bf9ad0b4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "352b7b96-b999-4277-8928-c36afdef59cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9616e5e8-9f2d-47fd-997f-bbb4ab36a36f",
        "cursor": {
          "ref": "74dcf807-e7c5-49c0-8bcb-9a0e553178a0",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "35ba7c8f-0af9-428e-8903-ce185b97d93f"
        },
        "item": {
          "id": "9616e5e8-9f2d-47fd-997f-bbb4ab36a36f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2c7441f5-dfad-455e-9ff2-2254733a8028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5721e3e3-88b3-4033-8ad3-ca0b8f8499a7",
        "cursor": {
          "ref": "c9467df0-014e-4d55-bf34-dfea6ea512a8",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f668148a-dca2-4f2f-9eb7-5b8cb9a5fc2f"
        },
        "item": {
          "id": "5721e3e3-88b3-4033-8ad3-ca0b8f8499a7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2d937065-a95a-44cb-b5bc-cbf7e5dbdbb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58169a79-f97f-4a88-90b1-1589a830afa4",
        "cursor": {
          "ref": "e3815e4a-c40a-41c7-9be8-a42f9bccd040",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b3ffcc75-2868-48de-a7b5-58679cadc6b4"
        },
        "item": {
          "id": "58169a79-f97f-4a88-90b1-1589a830afa4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0ee6fcde-3619-4b42-8829-8078514f228f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff0a30e-9921-476e-808d-d203c79cfc35",
        "cursor": {
          "ref": "e587c1c3-d514-4d5d-b167-bcc16fd26777",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0d2a2519-fa6d-4687-b0ae-6af39f498102"
        },
        "item": {
          "id": "bff0a30e-9921-476e-808d-d203c79cfc35",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ccfea996-6b45-4898-ad4f-97c41ee23044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4367a6-a9f0-48ec-9f5c-85b10c2fdf0a",
        "cursor": {
          "ref": "001684c6-6ad4-4211-9388-03c555c449a7",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ffb5fe6e-25e8-48ff-9df8-ab5b20358495"
        },
        "item": {
          "id": "1c4367a6-a9f0-48ec-9f5c-85b10c2fdf0a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f087f78e-4010-435a-bbad-bf9bdd927032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b82905a-2911-420e-a882-21e83f1864fb",
        "cursor": {
          "ref": "acc81a00-7385-43e9-b0f1-dbcd1f2c6cc9",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7bcb316d-299f-4937-89d6-e387475ef2f8"
        },
        "item": {
          "id": "3b82905a-2911-420e-a882-21e83f1864fb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c945b7ee-31dc-46e0-8242-05f82aaae0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e65345-dc94-4087-86e9-b998d9df822b",
        "cursor": {
          "ref": "8bc7bdd6-ba90-40e8-b1c4-a3b93e156d1c",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1c2d86fc-5d71-4acc-8c6d-987a49087d03"
        },
        "item": {
          "id": "21e65345-dc94-4087-86e9-b998d9df822b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c1916c26-2647-4385-9bd9-21ef32fd346d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1849,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "b817a5d1-faa2-4f06-a774-1354a0887a06",
        "cursor": {
          "ref": "a2f6056b-5d39-49e3-a456-e18e94c17a1b",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5715c9b8-55af-418c-a7a2-7df53623eed6"
        },
        "item": {
          "id": "b817a5d1-faa2-4f06-a774-1354a0887a06",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c210772e-7ff2-4e7b-85a2-2c3cba3450f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57339872-e0d5-4c13-b907-3f1a6bf0a0b6",
        "cursor": {
          "ref": "85997c0f-29b4-4e60-8c4b-9fc718594883",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "38873169-d27e-4660-ac29-cc725c791d8f"
        },
        "item": {
          "id": "57339872-e0d5-4c13-b907-3f1a6bf0a0b6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "fa708213-6985-41e4-ba80-bcdd10be692b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f26b58-2cab-4bc7-a6ae-3139e9ee6016",
        "cursor": {
          "ref": "e5fa3536-9ec9-4f8d-8872-77e25a0472af",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a0bf33cd-7ab6-4b26-9067-a1d844f7ed1c"
        },
        "item": {
          "id": "b8f26b58-2cab-4bc7-a6ae-3139e9ee6016",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1973ad36-f12f-400b-b4f6-e1e18c9ae271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a069998d-8f8f-49d0-bb22-7fa7b8acbadd",
        "cursor": {
          "ref": "fd11aa74-ab20-4bcc-aeb3-acc50168f6f4",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "26a07ae7-ae47-4986-8ea8-4481898f5a03"
        },
        "item": {
          "id": "a069998d-8f8f-49d0-bb22-7fa7b8acbadd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "391418ec-68ba-4df7-a918-ba933d8144d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9679ca3a-373a-49ed-bf61-747f2c5e1c9b",
        "cursor": {
          "ref": "2c65ac21-71f8-42ba-83cc-951497c694f5",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "27e69dfb-0c4b-4ee5-bf8f-51e3e335153e"
        },
        "item": {
          "id": "9679ca3a-373a-49ed-bf61-747f2c5e1c9b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ff69daa3-ec33-4702-a141-22a8375e5755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8a1ee2-35d2-40ff-90f5-6ca15f124d1a",
        "cursor": {
          "ref": "9ce958ac-fda6-4eed-aa74-6c2af4cd046c",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c35c10af-2bc8-4b4f-9d92-b806bf45cf35"
        },
        "item": {
          "id": "1a8a1ee2-35d2-40ff-90f5-6ca15f124d1a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fb6b7dff-7a17-48c2-ab48-bee3710b3906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5824c2c8-3593-49a8-8c0e-c268d79cbcfd",
        "cursor": {
          "ref": "f62c9afb-35a6-4f52-9cb3-2d62983dcce2",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "967fdc72-ea61-4fce-8030-a9233ba69804"
        },
        "item": {
          "id": "5824c2c8-3593-49a8-8c0e-c268d79cbcfd",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a9b863f1-c9cc-4b0f-95ff-f97ab0ebd695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fceb312a-12bc-4518-b0c7-915a55269b14",
        "cursor": {
          "ref": "294701e6-2d11-4b3e-88f1-b0bb63fc08d9",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "048d489f-3379-4212-aa5f-f0dc3ec01d07"
        },
        "item": {
          "id": "fceb312a-12bc-4518-b0c7-915a55269b14",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "81cced08-4d7b-4289-9f68-0afc4d3c41bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801c2aef-db9a-4e36-8998-a61186321abd",
        "cursor": {
          "ref": "041a49fe-9671-4778-918c-55fa5c13f3a9",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2ac31e54-2e32-4c8e-b1e6-1f40c1019837"
        },
        "item": {
          "id": "801c2aef-db9a-4e36-8998-a61186321abd",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2e033c48-fa55-430f-8aae-8d1baa07925f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60c91fe-4393-48f5-852d-3c7d09acb667",
        "cursor": {
          "ref": "8f62b68f-0048-4fbd-b72c-7b1ab421de63",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "25213c17-3c5e-4583-a6db-eeb5384d2cf6"
        },
        "item": {
          "id": "a60c91fe-4393-48f5-852d-3c7d09acb667",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d7ec0760-81ca-49bd-920f-b2747524d906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69bfd8c-85c2-4a05-9ed7-88f7b94f68e9",
        "cursor": {
          "ref": "cdf5efb4-e2fb-4f63-a255-3732d06f796c",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "82add066-ff44-4336-9410-3c963e03ef6f"
        },
        "item": {
          "id": "a69bfd8c-85c2-4a05-9ed7-88f7b94f68e9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "95a689da-24b9-4bfe-849d-fc245a1b4331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b453b553-16a2-401d-b2c3-fb9de99b3ac5",
        "cursor": {
          "ref": "3a66e042-b459-4395-8e7e-245922565351",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "29c0b694-55fa-416b-bfc1-4876bfe41c59"
        },
        "item": {
          "id": "b453b553-16a2-401d-b2c3-fb9de99b3ac5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bf59901c-dbef-48ac-8d97-a57bc3688377",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 615,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2730ba45-8625-4609-8a89-cc687f825bab",
        "cursor": {
          "ref": "9594de64-8b15-4b22-aed6-1ebb2d19b6ea",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3a385dea-e4c6-4226-a553-60848bd3978a"
        },
        "item": {
          "id": "2730ba45-8625-4609-8a89-cc687f825bab",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ea4cc229-6bce-4704-bbf8-967ca2ca842a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 528,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "e2486738-0b88-4638-8b88-82f54d7c5d6b",
        "cursor": {
          "ref": "dafaabeb-f9a6-490c-be11-a3d3fcc53a21",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "37e6e41c-fdac-42c8-bf22-e22d04ff56c4"
        },
        "item": {
          "id": "e2486738-0b88-4638-8b88-82f54d7c5d6b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "923f13a4-deda-4057-bcf1-c1962d440abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bd621b-fd40-449c-93f5-37d42bf08147",
        "cursor": {
          "ref": "6fc15712-eae2-474c-a97f-d0e60846ee49",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e335375b-24c6-494b-80e2-0a7cbf8807c6"
        },
        "item": {
          "id": "53bd621b-fd40-449c-93f5-37d42bf08147",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "61a7023c-38a5-448b-9866-9bfe3674a204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd75529-2d16-484c-a0e6-cae4692d6cc5",
        "cursor": {
          "ref": "020c635e-89df-4951-8d75-3855b72522db",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "33610841-0203-4397-b4f3-bda3e11c1925"
        },
        "item": {
          "id": "3bd75529-2d16-484c-a0e6-cae4692d6cc5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4adb2970-65cc-4935-88c1-fa9c61664f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4ed54c-ca31-43b5-a505-2ba2633d21ae",
        "cursor": {
          "ref": "ed242b24-1940-422c-82ed-2f244884c3f5",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "54889d0e-402b-495d-9b2c-1602a7256592"
        },
        "item": {
          "id": "6e4ed54c-ca31-43b5-a505-2ba2633d21ae",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "70eda90f-d759-4457-97c3-6ed8c5bf0760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c548f19f-ea7f-488d-b102-1d3d79af1683",
        "cursor": {
          "ref": "763c9204-c705-4f90-aeae-bba9890dc29c",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f87c6e3e-af93-4331-ba23-21d5241ae578"
        },
        "item": {
          "id": "c548f19f-ea7f-488d-b102-1d3d79af1683",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "17c0188e-ec9d-4f57-b42d-4dc4db97cee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb67c80-713c-456e-b813-4dc7036196a6",
        "cursor": {
          "ref": "972d3972-1255-4804-898b-7ef67838dde8",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "13196439-79d1-4b72-9560-29d57b0aaebe"
        },
        "item": {
          "id": "bdb67c80-713c-456e-b813-4dc7036196a6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f8fcc1f1-43cb-4302-9f99-8250a0d4c9e4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 611,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1c242a-dd91-4d05-8614-14567cd91567",
        "cursor": {
          "ref": "085d3da6-b853-4e59-9068-93f5b622ec08",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "627c3214-952b-4b95-beb6-609bff337211"
        },
        "item": {
          "id": "2c1c242a-dd91-4d05-8614-14567cd91567",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "bef3c210-4abd-407a-b340-cbbee6859433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4172b395-303d-4e0a-bf25-ca1f0d092b19",
        "cursor": {
          "ref": "0cc58b7d-a153-4850-8a42-55cba18caa74",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1398b789-d00a-4d53-a883-07d7cdc47c5d"
        },
        "item": {
          "id": "4172b395-303d-4e0a-bf25-ca1f0d092b19",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f708a5cf-7793-46a7-81d3-8f5dd8fdcc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d522891e-3409-446c-85a0-0e88a3bf2ecd",
        "cursor": {
          "ref": "2bb902c4-8f26-4ae3-a3c6-e4562c59124f",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b42c73e0-79a6-40d0-8b2a-3ddcb40bb062"
        },
        "item": {
          "id": "d522891e-3409-446c-85a0-0e88a3bf2ecd",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "fcea2c63-adac-445e-a7f9-f91996cbae52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44323884-03b2-4517-83d6-49b8a20377f2",
        "cursor": {
          "ref": "08e8feb8-f494-4290-83b3-955886f4d9a7",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c8e0b11b-0ee0-4333-b76b-dfe96976263d"
        },
        "item": {
          "id": "44323884-03b2-4517-83d6-49b8a20377f2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0d03242b-34f0-4146-821a-b6a69d5a5e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb35e9c-5e48-42ef-9e5b-e742604ad7fb",
        "cursor": {
          "ref": "a74a4374-110e-4e13-b987-57febef5567e",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "53fc8830-3e1d-4348-8dd2-7042e1dd3958"
        },
        "item": {
          "id": "3fb35e9c-5e48-42ef-9e5b-e742604ad7fb",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "239c3769-47b2-45cf-9932-6bf76fcc67b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5838ff1b-c6e2-4819-a545-b12880ce4faf",
        "cursor": {
          "ref": "95e8c675-9b3e-49f5-a450-69d7f5267998",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cf1e0349-0dc9-472f-b24e-cd8ab80e5d6b"
        },
        "item": {
          "id": "5838ff1b-c6e2-4819-a545-b12880ce4faf",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "49ad1511-2699-475e-9b07-5526f34760e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab9b005-1c7b-44f7-bf12-de6b3852b264",
        "cursor": {
          "ref": "3b532f61-036b-4c3d-9a29-b44528ec0dfe",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d6258a38-e22f-46d0-8a94-e0acf547bdc2"
        },
        "item": {
          "id": "5ab9b005-1c7b-44f7-bf12-de6b3852b264",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "cd0b2473-6549-4869-a043-ee00cfc2fe49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b33cd67-535f-4f01-9953-54fa1ba80059",
        "cursor": {
          "ref": "a644f4be-e6cc-4f29-a883-d44dbfee83b1",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "54b97a67-df94-43d6-971e-de8dedac8247"
        },
        "item": {
          "id": "9b33cd67-535f-4f01-9953-54fa1ba80059",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d21f8763-c1cb-4a03-b723-810398e66497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f7c9eb-9d99-4e9a-819c-a7d73feb5001",
        "cursor": {
          "ref": "1d78b332-e7ce-4e44-8251-4cb1743c35b4",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5174252f-331b-4d5f-abcc-8980897bb9a0"
        },
        "item": {
          "id": "34f7c9eb-9d99-4e9a-819c-a7d73feb5001",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "241f2d14-e541-4f09-b7b9-abd1d6666761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7a6b59-cd9b-40cd-911c-32234093a90c",
        "cursor": {
          "ref": "af364e4c-2698-4d20-ad7e-dacb369a0f80",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0ab4a1e5-49ae-48bd-9b68-34d0dbe80378"
        },
        "item": {
          "id": "3b7a6b59-cd9b-40cd-911c-32234093a90c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2eb5b43c-05e6-43bf-bbce-1b0edec25233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f966bfb5-fdf2-443b-b35b-2a6842850d59",
        "cursor": {
          "ref": "1f3b8c04-3070-4809-86a9-61c6a8e759ed",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1b12b6d0-299b-4eb2-97be-ee97c0f43cd7"
        },
        "item": {
          "id": "f966bfb5-fdf2-443b-b35b-2a6842850d59",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "eb3cce5c-8c9f-40dd-b319-575a8406312b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 847,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92373c0-a738-4a0b-a2a6-e8b73977811c",
        "cursor": {
          "ref": "ae3e5c68-7363-413a-9227-aeb05625aaee",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "911547e2-9df9-4008-8477-b1faf9d1d98d"
        },
        "item": {
          "id": "b92373c0-a738-4a0b-a2a6-e8b73977811c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3afba9c8-f62f-4cb7-a70f-41b818926652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 976,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860cc982-46cd-4a17-bb56-79fc01636d96",
        "cursor": {
          "ref": "08ac5a91-bee8-41dc-a041-9b448898131c",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4e09bb13-1737-4100-a70a-9d6442075c9a"
        },
        "item": {
          "id": "860cc982-46cd-4a17-bb56-79fc01636d96",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e6481f49-de79-4e63-906a-ef9536b98873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1078,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879df98b-2b26-45bc-aa5d-a683db4e062e",
        "cursor": {
          "ref": "faae3316-a46c-498e-b565-04fce4234df7",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "876a7732-6e45-4bd1-9e43-cc58b8a4de59"
        },
        "item": {
          "id": "879df98b-2b26-45bc-aa5d-a683db4e062e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "51547114-ae15-45cd-974a-6fc0bdbec323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da4ad22-4b38-448d-adde-9f9e9e731b55",
        "cursor": {
          "ref": "b979549a-5fdb-49c8-bfe0-4fd9f5e4ff88",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5d1a3d59-1c55-4174-b94c-907b946ba034"
        },
        "item": {
          "id": "7da4ad22-4b38-448d-adde-9f9e9e731b55",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c976e905-3033-44be-8086-695dff118327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305c6d3f-c362-49cc-8b83-3f2413caf91c",
        "cursor": {
          "ref": "dde5443e-b643-49f1-8fd8-86ddeba3336f",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6dc82b64-861b-4dbc-a161-864a0a8c487d"
        },
        "item": {
          "id": "305c6d3f-c362-49cc-8b83-3f2413caf91c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "62912c5d-e7f2-4d02-9b11-45f50587376b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47472ad2-985a-424e-8a35-c4998628827a",
        "cursor": {
          "ref": "4d6a95e7-c2d2-4baf-9b67-379d721a96f7",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b9f6b2a3-984b-4567-95e1-d3ad8f9aacb8"
        },
        "item": {
          "id": "47472ad2-985a-424e-8a35-c4998628827a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "cb11c077-9526-47ac-a16d-c5f59c47ea78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 978,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b60964c-cd8c-48ed-9cae-76021f4ec924",
        "cursor": {
          "ref": "08a4d996-685a-4ada-a6e4-e8157a326920",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e158a179-f751-40ce-b2fe-1cd216e8cf0b"
        },
        "item": {
          "id": "4b60964c-cd8c-48ed-9cae-76021f4ec924",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "95b0a541-72b5-4d6e-ac79-0b802fdfe1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 974,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abb347a-0c04-4d7c-9172-b223cb3e0142",
        "cursor": {
          "ref": "2e2a33b1-005c-4f3d-9dc4-93a8b316c465",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "beb0999a-dd6a-4c09-a930-82b46e430e07"
        },
        "item": {
          "id": "4abb347a-0c04-4d7c-9172-b223cb3e0142",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e96da755-5ac3-4dab-88e1-5faa6f0c97c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1142,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455eca7a-b733-4f8d-98b2-5e438b0deea5",
        "cursor": {
          "ref": "429b4ca1-22ce-4264-917e-71688b8f48b3",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d95feb95-63e0-4efe-8d0c-935d519865b4"
        },
        "item": {
          "id": "455eca7a-b733-4f8d-98b2-5e438b0deea5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ca25e46b-c22b-469a-ac32-2399774b2bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 979,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d4f3f6-ea2e-45ac-8a83-5139e92d3c5c",
        "cursor": {
          "ref": "7a835d4f-524b-4432-947c-bf82515db38c",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6e71dfad-5b2f-4656-869d-e10417a7437c"
        },
        "item": {
          "id": "65d4f3f6-ea2e-45ac-8a83-5139e92d3c5c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "302fbe24-7c5f-4031-8211-2b8741f9a3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1157,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb5e6b7-d482-407c-9f2e-963e448e5500",
        "cursor": {
          "ref": "6cee23af-8f5d-44bc-b89a-1aa661fe59d3",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e14afd06-4ba3-4ffe-8cad-9bb3898eec7b"
        },
        "item": {
          "id": "0eb5e6b7-d482-407c-9f2e-963e448e5500",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "067ff55f-24bd-4750-970e-1f627e123e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7fa554-b5f3-43d8-a680-9ff917b04d5f",
        "cursor": {
          "ref": "84a69ef7-214e-42cc-a8f1-d2dee57f2c22",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d9657800-1ad4-4134-ac9b-48fb0935d4ad"
        },
        "item": {
          "id": "6d7fa554-b5f3-43d8-a680-9ff917b04d5f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2ea35ae0-0de4-4d4e-9493-395ce63391fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 891,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58edc0bc-0e6c-4ea2-84b2-b53ec116d1a0",
        "cursor": {
          "ref": "98e53347-42b3-46ca-b870-21c83ae6699b",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6a885e87-56ea-4f38-9f06-c2a011b0af81"
        },
        "item": {
          "id": "58edc0bc-0e6c-4ea2-84b2-b53ec116d1a0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f5b944a9-d434-4f4c-a4ef-b0cc8be4c235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b2e715-6ff4-4ab6-9a2a-4c8a32104132",
        "cursor": {
          "ref": "5aa95f0b-3c02-463b-87b0-5ab0a695c8f2",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "19cc3df7-e304-4365-953e-cd08736eede0"
        },
        "item": {
          "id": "75b2e715-6ff4-4ab6-9a2a-4c8a32104132",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e401e19d-a966-44cf-9555-ffe812dd663f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01755c2e-3c67-42f5-a52b-bac283783e03",
        "cursor": {
          "ref": "522fe914-a4b5-4540-9022-838f7041f9dc",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "020548ea-c5f4-4413-8cfe-1cf1fef453e6"
        },
        "item": {
          "id": "01755c2e-3c67-42f5-a52b-bac283783e03",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d6f3ad3c-44fa-459b-a9fa-601163d32303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656307c4-3d28-4e39-a685-ad4425b06b05",
        "cursor": {
          "ref": "b8624497-515d-48a9-80a7-12da7d51eee1",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "870c2c65-2744-4929-bff2-eb7a6ec60eb6"
        },
        "item": {
          "id": "656307c4-3d28-4e39-a685-ad4425b06b05",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7c1f061e-989d-411e-8c3b-39af83ee662d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4944066-9f2f-433e-b2e0-490fbf3f5018",
        "cursor": {
          "ref": "f7c1d89a-2ad8-4205-abb9-cbb68394c7c0",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e18755fd-859e-47c6-ac65-cb78798f8b85"
        },
        "item": {
          "id": "f4944066-9f2f-433e-b2e0-490fbf3f5018",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "dc71813a-67a0-4ee3-8dad-6f5d2069edad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11607c58-27c3-43bc-97f6-148e983bb791",
        "cursor": {
          "ref": "33c290ef-670c-4496-b709-9dbb4fd237b1",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0cf59a14-1880-4d9c-9ebf-b36b2b15a6f3"
        },
        "item": {
          "id": "11607c58-27c3-43bc-97f6-148e983bb791",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1ef092da-b20c-4bfe-a7d5-a53c115ef455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664c239c-b05b-494a-b7df-9b006519f869",
        "cursor": {
          "ref": "0eedcf48-b213-4e5c-9b87-d5694c86598f",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c3368d10-5968-4446-8a32-3c0148d3a58a"
        },
        "item": {
          "id": "664c239c-b05b-494a-b7df-9b006519f869",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6e162fd9-909d-45a3-8dee-4b9494fb0e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5e933b-a351-455c-a83e-7ca227869755",
        "cursor": {
          "ref": "0ca604b1-d26c-4b27-a4f2-35ac22d00f30",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ba04fa89-2410-4069-b045-18373b320f8a"
        },
        "item": {
          "id": "6e5e933b-a351-455c-a83e-7ca227869755",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4f5ea3f0-6909-4d4d-a599-a0c82119c647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c648d0-86ed-46bf-be53-8a0bce2e2560",
        "cursor": {
          "ref": "997f6f4e-4a49-45fa-9c67-d8068c4f62bd",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "494e84ab-aefe-4be9-9d47-dbc31ef5288d"
        },
        "item": {
          "id": "85c648d0-86ed-46bf-be53-8a0bce2e2560",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d57a29af-d94a-461a-b01a-3b71fc983a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369ae37f-1b51-4f06-8db9-06fa180b4c10",
        "cursor": {
          "ref": "217ecb4e-a146-4754-a079-70d16856284e",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f4a1605e-a327-4c88-80d9-83fb36603677"
        },
        "item": {
          "id": "369ae37f-1b51-4f06-8db9-06fa180b4c10",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d8ae1b6e-8e28-4084-839a-99a32917cd18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7f6065-79a7-4112-9a95-be9e6d167774",
        "cursor": {
          "ref": "78e816c4-d50e-49fa-b98b-d80422ccd349",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1ec49c95-8f15-4693-a69c-008dfda1fedc"
        },
        "item": {
          "id": "ab7f6065-79a7-4112-9a95-be9e6d167774",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "00d179dd-ea5f-45de-acf6-282b4858ce48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b30b2b-ff3c-48d6-a3d9-1a381b614ff4",
        "cursor": {
          "ref": "44c9a522-f075-406d-9210-1b8108296e23",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "68d78b0b-dbcf-433b-bfd9-38a68066283f"
        },
        "item": {
          "id": "67b30b2b-ff3c-48d6-a3d9-1a381b614ff4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "01a54ea6-5e7f-40a2-8bd6-df45a8371c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e844e8f5-ee63-4f3c-9560-b9993ace3e70",
        "cursor": {
          "ref": "d8730c20-5eba-4503-b868-364da46654e1",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "15318152-643c-4d8e-9995-7b9e528b214d"
        },
        "item": {
          "id": "e844e8f5-ee63-4f3c-9560-b9993ace3e70",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5150deb8-6239-418f-95d9-73082d345504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e254d7-7ab0-49e3-8397-f659c2aae2fc",
        "cursor": {
          "ref": "2bf0f249-8596-4621-9461-993e61e1f4f6",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a5831723-0fd6-47ff-8fbd-9894696bbc86"
        },
        "item": {
          "id": "07e254d7-7ab0-49e3-8397-f659c2aae2fc",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "42ec4e1c-71b6-4414-8ab4-c3b6244c245a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ed8e4c-d70d-4c31-b9c8-15e2f45a87d5",
        "cursor": {
          "ref": "68d58e33-0f36-4b90-b6e7-1e717a21f858",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "feb57f1e-36c2-4445-8e8b-f0ac860e9808"
        },
        "item": {
          "id": "90ed8e4c-d70d-4c31-b9c8-15e2f45a87d5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bd91193f-ebde-4e14-abd9-63dbf141d6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f862696e-ca2d-44f9-b6a8-ab368eb33483",
        "cursor": {
          "ref": "149bd62b-3429-45da-91ab-5c16b6abf818",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5fcc160a-7d1f-472b-9672-92ab426c166d"
        },
        "item": {
          "id": "f862696e-ca2d-44f9-b6a8-ab368eb33483",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b772f89b-c42a-44d7-a36e-ec7f24bd6426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201d3a81-8681-4858-831f-0b5b0063e17d",
        "cursor": {
          "ref": "c07f7738-e6c0-4c0c-a22b-233dc888f4dc",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "715c8243-c023-4c42-8689-cc7e154cd08c"
        },
        "item": {
          "id": "201d3a81-8681-4858-831f-0b5b0063e17d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "139c065d-d2e0-4797-b75e-ec84f3828c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f66aa1-c8cb-414c-aef6-4399386df770",
        "cursor": {
          "ref": "7ca64342-0302-4fc3-a691-d2a9eb1cad9b",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5125c01e-b3c7-4376-bd1f-7e4909745c57"
        },
        "item": {
          "id": "d6f66aa1-c8cb-414c-aef6-4399386df770",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "69d8041b-f4e2-45ee-a6b6-f9caf8667721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae17be22-7043-428b-ac6c-683958300073",
        "cursor": {
          "ref": "157ddd1a-cbcb-4b87-920d-cbc0fbefa0de",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d98e83f3-59eb-4e13-8bf8-3c71223c35fa"
        },
        "item": {
          "id": "ae17be22-7043-428b-ac6c-683958300073",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f2254d9d-b6b2-47fa-870b-8ffb64a9a3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46143ec-9d9e-4d70-b0e6-a8a039a203f9",
        "cursor": {
          "ref": "1474f27b-f779-4d45-8060-f1dc59be81c0",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "29ad19f4-2368-4b54-8ab7-0f0f16176fb9"
        },
        "item": {
          "id": "d46143ec-9d9e-4d70-b0e6-a8a039a203f9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8a80f574-6b53-4d95-80b9-716fc61a1dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e86490-64a3-435d-bc11-557bfe08a27a",
        "cursor": {
          "ref": "648d4ff0-2b7f-41a1-84a9-7345ffa32f15",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "cd0ddc1f-9ffc-4cbb-8a6d-cb30271f87e4"
        },
        "item": {
          "id": "d0e86490-64a3-435d-bc11-557bfe08a27a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a181d1e7-00d2-4dd6-a89e-f320f733fa04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1987fe18-2cc4-4df7-9742-be99f1ab6949",
        "cursor": {
          "ref": "f131b3f5-0aca-446e-8e86-7c691cce1d8a",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "eb295641-a45b-40d3-94f9-aad91b6249bf"
        },
        "item": {
          "id": "1987fe18-2cc4-4df7-9742-be99f1ab6949",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a66c0b3f-55ad-49ab-8d6b-dfcbd3a3072b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432757f0-4f49-4d3e-afe4-dde175cd123d",
        "cursor": {
          "ref": "9ba45be6-9e4c-4922-8b6c-8875bc8c4ffb",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7b900e18-ef42-4dcf-b681-939385c1b693"
        },
        "item": {
          "id": "432757f0-4f49-4d3e-afe4-dde175cd123d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "97de332a-a538-47fa-aecf-522118cf8dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ceffe6-02af-4dc1-90d7-1bc08907c199",
        "cursor": {
          "ref": "c919595c-1ba5-4f69-bba0-96357264e01a",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9d84eadd-3c7d-4f62-a437-a16852b3fc87"
        },
        "item": {
          "id": "58ceffe6-02af-4dc1-90d7-1bc08907c199",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3c153018-22d6-43f4-926b-7ce871276f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a4dfd9-6657-4928-b552-ccba4e01f809",
        "cursor": {
          "ref": "fde25b94-b17b-4fba-ba52-768fa91bc3e2",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3b008288-4a32-4230-b1f0-7358f6259b6f"
        },
        "item": {
          "id": "75a4dfd9-6657-4928-b552-ccba4e01f809",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "db9d790e-9322-46ed-b0b3-74f350b5a0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88153494-c0ba-4c89-9a6a-aca4d05ef2ef",
        "cursor": {
          "ref": "ae8903cc-fa93-4da5-8aa1-11bbda317dec",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "67017d24-14e5-4624-b61a-2d896631ddc3"
        },
        "item": {
          "id": "88153494-c0ba-4c89-9a6a-aca4d05ef2ef",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "af714280-b9ef-4463-8454-13757f378ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54155bb3-2bff-4a03-98f7-8facdbbdcc8f",
        "cursor": {
          "ref": "4f8b9480-5702-4ce4-91e0-9b86d5684180",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0f30c337-4749-4d06-882a-adc6ca1bd8f5"
        },
        "item": {
          "id": "54155bb3-2bff-4a03-98f7-8facdbbdcc8f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3f6f863d-ecc1-46ff-b6b3-8c776039cac7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bce1110-a5a8-4bbc-97b2-20eea36ab1a0",
        "cursor": {
          "ref": "1b34b867-22b5-46be-82c7-cbda0d50b197",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "84262745-2315-4c84-abd4-519331d4f54f"
        },
        "item": {
          "id": "7bce1110-a5a8-4bbc-97b2-20eea36ab1a0",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "777c7fba-a601-4b55-a5fc-4afeae3cea5d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 579,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d207edba-980a-4300-a744-1a3081ee2a7b",
        "cursor": {
          "ref": "30bb377a-80be-4e0f-90a8-ac8c2d6230b7",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7b43d5da-d167-44ab-ab52-9b16fe74660a"
        },
        "item": {
          "id": "d207edba-980a-4300-a744-1a3081ee2a7b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b775c150-1e97-4f5a-8d41-e3f83db58a04",
          "status": "Created",
          "code": 201,
          "responseTime": 4884,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "40f16823-208f-485d-880f-ec917fb1975a",
        "cursor": {
          "ref": "dc68bc7c-70ca-4612-b4e4-0f42290c56c5",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5ccfb0f2-729b-44be-b0c3-460854f72c26"
        },
        "item": {
          "id": "40f16823-208f-485d-880f-ec917fb1975a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "348830d8-7b96-4be7-9859-ffe0864eedd2",
          "status": "Created",
          "code": 201,
          "responseTime": 4800,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "afe125a3-b466-481e-b892-31924e13da2c",
        "cursor": {
          "ref": "c97a23ae-917d-45ab-92b8-9d364f584254",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "45135a3b-fa67-49d3-8dbf-29ec11bbbc5f"
        },
        "item": {
          "id": "afe125a3-b466-481e-b892-31924e13da2c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "29fbde7f-54b8-422c-92a7-836af0c2c35c",
          "status": "Created",
          "code": 201,
          "responseTime": 4964,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "6b4dc785-8a96-4aa3-9756-e728f5b94671",
        "cursor": {
          "ref": "fa5f7b14-fa36-4e2d-8322-a2d58333d96e",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f09adf58-b16a-4ddf-b996-2f5cd6e73bd3"
        },
        "item": {
          "id": "6b4dc785-8a96-4aa3-9756-e728f5b94671",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "bb3dfacf-1d62-46bb-b5f4-84cbdab8e831",
          "status": "Created",
          "code": 201,
          "responseTime": 4706,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "5e25bf81-d773-4d54-a44c-a50293653861",
        "cursor": {
          "ref": "0312dedf-6321-4a85-9652-bfef3c6dbe35",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e68b62d9-2162-4478-84ca-1b191b64c4dc"
        },
        "item": {
          "id": "5e25bf81-d773-4d54-a44c-a50293653861",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3bef31db-d665-4eab-bd78-786331b9ecee",
          "status": "Created",
          "code": 201,
          "responseTime": 5772,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "6a743fc0-937c-4982-83eb-cc8aab967b0f",
        "cursor": {
          "ref": "3c57b311-4afd-4876-a92c-8cc9769bfac4",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "04616905-3207-4924-a99d-109fafa18f18"
        },
        "item": {
          "id": "6a743fc0-937c-4982-83eb-cc8aab967b0f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "66460acf-a158-44d9-833c-583e81014988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a743fc0-937c-4982-83eb-cc8aab967b0f",
        "cursor": {
          "ref": "3c57b311-4afd-4876-a92c-8cc9769bfac4",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "04616905-3207-4924-a99d-109fafa18f18"
        },
        "item": {
          "id": "6a743fc0-937c-4982-83eb-cc8aab967b0f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "66460acf-a158-44d9-833c-583e81014988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a5332a-8af6-4c96-8e62-ebeb6899def8",
        "cursor": {
          "ref": "e0891a04-1284-407b-9db1-fcbe9a2a7daa",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fdf2d03a-867a-4e7a-9e76-8b4b9e1437c3"
        },
        "item": {
          "id": "e8a5332a-8af6-4c96-8e62-ebeb6899def8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "12a426e2-a75f-47c0-b708-a3831d634147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e66a1b-8514-44a7-b426-81d54763c181",
        "cursor": {
          "ref": "5992b545-d04d-4fe4-967a-3479b45ab590",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2fda97e3-66f5-426a-9752-ebade47650bf"
        },
        "item": {
          "id": "59e66a1b-8514-44a7-b426-81d54763c181",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cc9ddbfc-8a9e-4fc2-afc4-2ee332f72c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51cb3e8-8249-4e6e-966c-01736aaaf943",
        "cursor": {
          "ref": "6ca8e5a4-0818-4fef-88d8-d121d964e1ce",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "00bf2479-30ef-4e34-a616-8d12777be5de"
        },
        "item": {
          "id": "d51cb3e8-8249-4e6e-966c-01736aaaf943",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "77c5cbf7-fbfb-498e-aadd-53e72690ae94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24225c1e-f6b1-43dc-ace1-4e8941cf61e5",
        "cursor": {
          "ref": "a6b49a4e-9bc4-45b3-9747-abf289b405ed",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bb58fb67-7bb6-42e3-b835-f94f600c9870"
        },
        "item": {
          "id": "24225c1e-f6b1-43dc-ace1-4e8941cf61e5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "665381e5-4c34-4d1b-9333-48586aaefe0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06211489-6529-4887-9d59-b2e8bcd968bd",
        "cursor": {
          "ref": "2af4b7d5-e5b3-41d1-b4f1-8cf1512c058a",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "29ccf184-834c-463a-8fbb-022a48d59284"
        },
        "item": {
          "id": "06211489-6529-4887-9d59-b2e8bcd968bd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "475ee1a1-8dcf-4b1e-b768-50e66804cc9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8bd3a34-4804-4100-9f32-1137182328e9",
        "cursor": {
          "ref": "3a61f2cd-2013-425a-a301-7482d5a65f9c",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9e7b9f30-5b15-4b15-951e-7891787af5a7"
        },
        "item": {
          "id": "f8bd3a34-4804-4100-9f32-1137182328e9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "05ff80eb-dffa-412c-8c53-12d7755ace65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7924c95a-d815-4583-863c-652e0da68f6d",
        "cursor": {
          "ref": "8d2c9ebc-4391-4101-be69-662a2329f067",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "62a42f5b-e46a-4a03-814c-65e00f4a135b"
        },
        "item": {
          "id": "7924c95a-d815-4583-863c-652e0da68f6d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a2baec23-38c8-4fa1-aadf-51fbdee6cff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75e1624-eaa5-41c9-b197-db6d948f46c4",
        "cursor": {
          "ref": "5743f71d-2068-47e9-a832-cc7504ee90fd",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6525b5f3-1035-4554-8672-88cf7a3ed459"
        },
        "item": {
          "id": "e75e1624-eaa5-41c9-b197-db6d948f46c4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "81d6853a-6d72-43cb-9592-06c824633a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0a9f2c-60b1-43e5-be8e-250a27d02c31",
        "cursor": {
          "ref": "d190bf60-4773-4754-9e82-dfef33723f5c",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a24fc57c-5205-45b1-bc05-9cabd1b00fc8"
        },
        "item": {
          "id": "ca0a9f2c-60b1-43e5-be8e-250a27d02c31",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0b1004ce-1ff3-4f51-8eab-9836c718e5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a510414-6b87-46d6-9e66-818607f7932f",
        "cursor": {
          "ref": "5f4e8fcd-1b0f-4437-93ba-c00525872e8a",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bcb7423f-c1d5-43a8-82ba-ed3c6b52b68b"
        },
        "item": {
          "id": "3a510414-6b87-46d6-9e66-818607f7932f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7e3f0ee0-5bc7-4d49-8738-3da43beb6ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d87fdc-08a4-4af1-a22d-e1c35850d9fb",
        "cursor": {
          "ref": "596f632c-e990-4f59-842e-566a0f431546",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "49c486e3-a1f7-44ab-a098-d714d2d4fc76"
        },
        "item": {
          "id": "29d87fdc-08a4-4af1-a22d-e1c35850d9fb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bd14f6a7-ec0d-44d9-9434-7246f027b0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d4097f-dda6-4977-8593-d9b4b119e414",
        "cursor": {
          "ref": "21ef44a1-1ae1-408f-9c12-a4e38d58fb25",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2193c929-80e2-4721-a38e-dafa426425f4"
        },
        "item": {
          "id": "a5d4097f-dda6-4977-8593-d9b4b119e414",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e20d93a0-a831-47e7-88b0-8cdc42aef713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c43692-bffc-4227-aa5f-854578486f51",
        "cursor": {
          "ref": "7b602c60-7fc1-4e74-879e-c141a5927053",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5cb0cdfd-6880-4317-988f-9c2760fbc470"
        },
        "item": {
          "id": "22c43692-bffc-4227-aa5f-854578486f51",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f2c65aba-f00f-4d22-b5e8-e94ff3200877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88528c2b-7111-42c3-b133-83e5ef681aa3",
        "cursor": {
          "ref": "067910de-58be-4dfc-906c-e3359fab4e97",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "31408765-8010-4fb6-bbe8-f5658c76a3aa"
        },
        "item": {
          "id": "88528c2b-7111-42c3-b133-83e5ef681aa3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b132c620-a89c-473e-b734-4ddbb14cafe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacd7642-f262-49d9-95fe-c70e0af4edf5",
        "cursor": {
          "ref": "e5ca9327-e6cd-4e20-92db-bc2b03ce2117",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0a0479ef-27bf-4ca0-9b5b-416e6a139798"
        },
        "item": {
          "id": "bacd7642-f262-49d9-95fe-c70e0af4edf5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9a5cc20b-51d1-442b-95c1-5ee3245f1e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1cdbc0-5952-4cf3-9b93-b41eeb54802f",
        "cursor": {
          "ref": "a10bc160-2814-445f-85c4-dac25da4d9c1",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b8503a4d-3418-4820-9e93-b031bad14ea7"
        },
        "item": {
          "id": "1f1cdbc0-5952-4cf3-9b93-b41eeb54802f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "09e0b66c-20b0-4fc8-a14b-f9e621893ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6559c4-17b3-4894-be38-71f12cc30504",
        "cursor": {
          "ref": "c4a8ec96-4597-4ed2-ae16-228996bfa0e7",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "979e39c8-5c92-45e1-bb38-00a36a35db98"
        },
        "item": {
          "id": "4b6559c4-17b3-4894-be38-71f12cc30504",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6edc6093-1dbb-4b1b-ac9b-8dc3e91c8573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c175e0f-e632-49fb-8a33-42530009b2fe",
        "cursor": {
          "ref": "eb9a191b-ca6c-4b63-8d9c-bcedee69ca84",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "18883a77-680a-468b-867d-ac8b73a56f15"
        },
        "item": {
          "id": "7c175e0f-e632-49fb-8a33-42530009b2fe",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d3b2938a-3df0-48f5-99ed-d7fe1d5906c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cec057e-313d-4ffe-a8ef-8b581bfa5fe1",
        "cursor": {
          "ref": "102338c9-7cec-453a-973d-5f025be48f71",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8f5efbc0-d4bb-401a-ad79-7e3df6108f84"
        },
        "item": {
          "id": "1cec057e-313d-4ffe-a8ef-8b581bfa5fe1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7c72deb9-6c19-42fd-8783-724f59ba37c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2b2be4-d99f-4b0b-b1c4-fb9965aaf8c3",
        "cursor": {
          "ref": "1d5ac27e-5517-4c13-a04e-162826f8854f",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c60de11c-39c2-428b-a5f2-5be41f1fd848"
        },
        "item": {
          "id": "bd2b2be4-d99f-4b0b-b1c4-fb9965aaf8c3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8bea2e60-40e2-4741-b531-c4de9c926595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74b86c7-43b8-4f2d-96ba-824d793a7b35",
        "cursor": {
          "ref": "cd6615bc-fc5c-458d-a7ea-ac6eaf90c4fb",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3c683025-4184-4291-9ee4-949b2b9a047b"
        },
        "item": {
          "id": "f74b86c7-43b8-4f2d-96ba-824d793a7b35",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "105af242-b64b-437f-9237-9d7b662cdca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e7aece-bae5-42e1-90f2-078313ff2057",
        "cursor": {
          "ref": "625b865b-b241-48b8-8d66-92d8689245a1",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5115a337-11eb-4fa0-b9ee-c393e21ce2e6"
        },
        "item": {
          "id": "c4e7aece-bae5-42e1-90f2-078313ff2057",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "edf03411-d73b-4e7b-bc01-a1a3f88eea9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db065a2-509a-419f-ad2b-e71d926ab6b4",
        "cursor": {
          "ref": "f776f58b-a8da-4323-8753-ad8adddb8124",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2e1dcedc-c378-49cd-8f1d-185039f4c13b"
        },
        "item": {
          "id": "6db065a2-509a-419f-ad2b-e71d926ab6b4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "575500b9-3067-47b4-99d8-80fd9f1e6924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 839,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68bf040-7a50-41c9-9420-4c571496c30a",
        "cursor": {
          "ref": "b74dff9d-89d5-46a6-94f1-842b9532a85c",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3ccb2d5b-0137-4734-9ebd-695610026e16"
        },
        "item": {
          "id": "d68bf040-7a50-41c9-9420-4c571496c30a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "49f81086-2e86-4419-937c-539d3f005df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8081528-e193-4c04-8783-cd29ad224191",
        "cursor": {
          "ref": "21105bce-195e-416f-8c9b-20df5f393292",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3b51e78e-b929-40b3-b840-8856b7d23c40"
        },
        "item": {
          "id": "d8081528-e193-4c04-8783-cd29ad224191",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "77372984-bafc-4fc8-a5f8-3cb08ed2b8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 940,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3e8a7d-14a2-41b0-b290-b56feb0982b1",
        "cursor": {
          "ref": "77c6731f-8dc6-4932-b58b-9253f928e03e",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d25d839d-db28-4eff-9db5-58caea5d0e5c"
        },
        "item": {
          "id": "9f3e8a7d-14a2-41b0-b290-b56feb0982b1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6b87a3ec-41d9-4386-b0b9-a46e804a462e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1292,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98566536-6606-4ed4-a244-df46e024b208",
        "cursor": {
          "ref": "a5299af8-999d-43c0-8dfb-65df62c6dd48",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6119d857-dd9f-47a3-9c0d-0f7e4bb3e01d"
        },
        "item": {
          "id": "98566536-6606-4ed4-a244-df46e024b208",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "56af7be2-6b5f-4321-9fad-59561c97d0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 992,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcecab3b-1fc9-4a05-bf00-4e5ca89d2796",
        "cursor": {
          "ref": "048b6fd5-e620-492a-a612-012cb9619f41",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "07999ed5-f45b-4c4b-8ccf-e1a490d13c2c"
        },
        "item": {
          "id": "fcecab3b-1fc9-4a05-bf00-4e5ca89d2796",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cc263c1b-4b5e-46b2-91a7-2eca0fcdab4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 845,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e09495-809e-4233-bd74-8a3d35a056ff",
        "cursor": {
          "ref": "86ba9fa2-b64b-443b-a903-f5a1bdbfdb31",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a816c3c8-db2e-4c7f-9d6f-e325c7daba43"
        },
        "item": {
          "id": "39e09495-809e-4233-bd74-8a3d35a056ff",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "41134510-ecd6-4974-8207-43dd0c1a09b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc51527a-5bf3-4e9e-8de5-3048b91c3f6f",
        "cursor": {
          "ref": "1e4de949-029e-4ce1-a333-5f4936d7cfa5",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1d9caee8-9d0a-418f-9fe9-f8871c913f8b"
        },
        "item": {
          "id": "fc51527a-5bf3-4e9e-8de5-3048b91c3f6f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "71a18ed9-7224-48c2-95d7-255974cd1e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69030125-0790-4ceb-9801-9e582e5109a9",
        "cursor": {
          "ref": "403d873c-aca1-44a6-af31-f77c2ee96ad1",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b308d18f-f792-4a66-adca-e8f2e71cb9cd"
        },
        "item": {
          "id": "69030125-0790-4ceb-9801-9e582e5109a9",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9d412e32-2885-44b2-8211-ee11cb16630c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18179ed7-34b6-486a-af48-8f123f7db125",
        "cursor": {
          "ref": "f3ac2f35-c800-430a-8a74-cf3503e02baa",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "db8f3eaf-4373-43db-9fcf-39e8e600aca5"
        },
        "item": {
          "id": "18179ed7-34b6-486a-af48-8f123f7db125",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "323474de-7fd1-4388-a76c-26a186116dac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81ac8d4-bde4-4c63-922a-ed445f3e0077",
        "cursor": {
          "ref": "34d9c41e-49fb-488c-939a-0710aec0765b",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d304a29f-f86e-4323-83e2-a182e30a03ca"
        },
        "item": {
          "id": "b81ac8d4-bde4-4c63-922a-ed445f3e0077",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "d86b6c09-f088-4fb1-9f80-cf20e9f77f2e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 531,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4a13ed-6ac5-43dc-9db1-0916738ba811",
        "cursor": {
          "ref": "52d7c697-229d-46bd-b38f-2dceb3ab1445",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "64e829e5-8cd5-4233-9131-e9c5a2b7d59d"
        },
        "item": {
          "id": "4f4a13ed-6ac5-43dc-9db1-0916738ba811",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a4d2fb51-efc6-42a6-a57b-33b8aaccb276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4a13ed-6ac5-43dc-9db1-0916738ba811",
        "cursor": {
          "ref": "52d7c697-229d-46bd-b38f-2dceb3ab1445",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "64e829e5-8cd5-4233-9131-e9c5a2b7d59d"
        },
        "item": {
          "id": "4f4a13ed-6ac5-43dc-9db1-0916738ba811",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a4d2fb51-efc6-42a6-a57b-33b8aaccb276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1204799-4efa-43b7-b6de-92109b54fd06",
        "cursor": {
          "ref": "682bac08-0ff9-4e33-994f-5ed9091ac51b",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2354c505-ac1a-406d-b5b8-5444982cd276"
        },
        "item": {
          "id": "f1204799-4efa-43b7-b6de-92109b54fd06",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "efd3aad5-1f8a-4db6-a851-78f5723bcede",
          "status": "OK",
          "code": 200,
          "responseTime": 653,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "fd5c8704-d308-4d10-92d0-110406031742",
        "cursor": {
          "ref": "56668d16-db52-428e-96da-d1ec9ca62365",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c61c46b6-e6d9-4001-88b7-070d22fd9d5e"
        },
        "item": {
          "id": "fd5c8704-d308-4d10-92d0-110406031742",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f49501a0-1a74-428a-8ff4-13b36d08bbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee8c93e-f9ab-44f0-80cf-002ffa62a337",
        "cursor": {
          "ref": "22acb3db-8bf4-462c-8e5e-8da159b19c31",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c25d1eb9-4832-47de-88a7-6b24c4ca197c"
        },
        "item": {
          "id": "3ee8c93e-f9ab-44f0-80cf-002ffa62a337",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "48a551c8-b6eb-4918-98e3-c9caa440eb04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732652d4-75d1-4f31-99de-3406da4a1775",
        "cursor": {
          "ref": "d7869e5a-193a-481c-af37-a114c00fd6a3",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "80208e35-5d86-4d0f-bb07-95636ea36ffc"
        },
        "item": {
          "id": "732652d4-75d1-4f31-99de-3406da4a1775",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "bb648192-2781-4751-98ae-ae7364a7d388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3636e503-8910-41e7-9e4c-3748710c8ec3",
        "cursor": {
          "ref": "91419d64-a3ed-4749-adeb-831ce306545e",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d1b5ad17-eb13-4767-8671-e34c0b9e8ccb"
        },
        "item": {
          "id": "3636e503-8910-41e7-9e4c-3748710c8ec3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7d846dc3-8b16-48f1-b608-0989e88f768a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f63b7a-2641-4174-a690-2b8f073d5013",
        "cursor": {
          "ref": "793c8ddc-c09c-4558-bae3-62350ee65a16",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8f5cf7b5-e536-4b4a-a4ef-274fb91b8d5f"
        },
        "item": {
          "id": "c9f63b7a-2641-4174-a690-2b8f073d5013",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "09377e39-e0b5-4b5f-b00f-08098df07d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25dd5e3-1108-4365-b2bc-56c7d868a666",
        "cursor": {
          "ref": "c1628bac-a0f9-490f-bdb8-326eea2dc821",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4e3309f1-21c4-449f-b223-f7501aa19371"
        },
        "item": {
          "id": "f25dd5e3-1108-4365-b2bc-56c7d868a666",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "83b6d408-fd18-43a2-a890-9ed61c14d58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c78f103-cf33-4de0-9efa-ac20ddb95cb0",
        "cursor": {
          "ref": "1147e7f8-6646-4182-a58a-1a84e7202fea",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "953ac7ce-c488-4fd5-8510-20689115da4e"
        },
        "item": {
          "id": "1c78f103-cf33-4de0-9efa-ac20ddb95cb0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2aeaf57c-49f3-4f56-8c2b-4bf6068d016d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1add090a-d4d2-411d-82c2-70b3d087d13a",
        "cursor": {
          "ref": "8879c91c-2038-4ebb-9652-9e89e2f64a29",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5d710622-2ce3-4d05-997b-38a4fc683e9a"
        },
        "item": {
          "id": "1add090a-d4d2-411d-82c2-70b3d087d13a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0cfe7b60-cf6d-43f9-a6ba-8da65a4ae468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede3089e-9507-4e47-847b-66a7ddb14f04",
        "cursor": {
          "ref": "b7b33a19-c8d5-4568-8f9a-16be55e81c3a",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d6f7cb5b-62b2-4a61-8452-45d7d479605b"
        },
        "item": {
          "id": "ede3089e-9507-4e47-847b-66a7ddb14f04",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "24b233e7-0d8a-4c3b-ac82-95ff98913b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99178cfa-6133-4b1e-ad4d-2ca4ce426521",
        "cursor": {
          "ref": "e621ec3e-feb7-4227-b0e5-7c60fbf6cfaa",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bec07f88-bcd9-4974-b57c-a57f2ccaf2cc"
        },
        "item": {
          "id": "99178cfa-6133-4b1e-ad4d-2ca4ce426521",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "89dfde96-a204-40d9-b821-5bd0be22572b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e19e913-db4e-482a-a2cd-4f595e801353",
        "cursor": {
          "ref": "862ab79a-8da2-4a1f-87cf-e56039b89f6f",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1c3fc815-1ca2-4a31-a76f-8558dae6da5b"
        },
        "item": {
          "id": "1e19e913-db4e-482a-a2cd-4f595e801353",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3081d1e0-7c48-42f6-81d4-440f8e2b93a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b19062-47bf-4e4b-a4aa-2fb1775389ca",
        "cursor": {
          "ref": "b244b145-1a1c-4703-9505-837dd5fa8114",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ee0d0f3d-53ad-4bf4-86e3-ae827ae0fce0"
        },
        "item": {
          "id": "39b19062-47bf-4e4b-a4aa-2fb1775389ca",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "835c0150-57fb-426c-8b44-df56ba5877eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671b5ca6-5ec0-4eb6-9b63-744300d3ddd1",
        "cursor": {
          "ref": "32f03a47-eada-47b1-8a9b-447f735934ed",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "756f6f71-278f-4d08-8abe-32a63639dda1"
        },
        "item": {
          "id": "671b5ca6-5ec0-4eb6-9b63-744300d3ddd1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0d43a40e-247a-42f5-a76a-8dc6c5ea0d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0cc0389-18c4-4418-aafc-82942fcce21b",
        "cursor": {
          "ref": "16c4d849-e281-4c07-bc22-cd59791b613e",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "885574a2-7577-4ab3-857c-9f8eb34788f8"
        },
        "item": {
          "id": "d0cc0389-18c4-4418-aafc-82942fcce21b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b3d42adb-45ec-4b39-bfdc-406cc37dfe64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da307820-8ed3-42fc-8844-98f68a3d01b0",
        "cursor": {
          "ref": "cdf55d26-c463-4d2b-8701-14b456a77961",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c3ec8612-ff45-42cc-a533-7955ad9cfd8a"
        },
        "item": {
          "id": "da307820-8ed3-42fc-8844-98f68a3d01b0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "20218216-56b4-46ba-9980-e7368a1d4ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e603410-21f8-4fcd-9925-51caee3bd27d",
        "cursor": {
          "ref": "aa6bacc4-af0e-4417-8fa9-44641594c181",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b986b617-fbfb-460c-ba57-0f639f993679"
        },
        "item": {
          "id": "9e603410-21f8-4fcd-9925-51caee3bd27d",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "b5388e32-23e9-4bcf-adc5-84056a5a20e8",
          "status": "OK",
          "code": 200,
          "responseTime": 2121,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "6ea91517-a74e-4db4-8bf8-64f42636745d",
        "cursor": {
          "ref": "ee96b21f-f64a-4921-9867-2678ec9b1da8",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7121d084-5708-4701-8440-57281e7e0173"
        },
        "item": {
          "id": "6ea91517-a74e-4db4-8bf8-64f42636745d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9198b702-4309-4c3d-930c-2c633e9f7a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c92f8e5-5a80-40fe-875d-9664630964a2",
        "cursor": {
          "ref": "4b798882-2e26-4025-859e-ede580527bbe",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f64a8cd3-84d0-458c-b55b-c71a4611bda8"
        },
        "item": {
          "id": "5c92f8e5-5a80-40fe-875d-9664630964a2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b3fddbb7-e30e-44db-9832-ac0fe2d850e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e48461-aae5-4291-8ec8-3770d90435c0",
        "cursor": {
          "ref": "9f3a6be6-8324-4d09-90d5-f3e32503399f",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "38605562-73ff-49ea-b551-434d4882f2eb"
        },
        "item": {
          "id": "01e48461-aae5-4291-8ec8-3770d90435c0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fc46f9eb-52b5-47c4-b757-a050489dabc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98316c4-6c9a-46f0-a77e-d88174a58f44",
        "cursor": {
          "ref": "7e27ce0c-a283-4867-af04-fea6ff58a4ae",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ae9d5be3-9c9f-420d-acc6-a5d9663ecb05"
        },
        "item": {
          "id": "d98316c4-6c9a-46f0-a77e-d88174a58f44",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5aa513cd-0cdd-4085-ab76-98745c466d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18fddb0e-fac2-416c-8881-dfdb2fddb7a5",
        "cursor": {
          "ref": "1cef66b9-bab6-4478-9f83-23e7a8f263f4",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b3ddbc70-c60a-4587-84d8-5c19bbc9d69b"
        },
        "item": {
          "id": "18fddb0e-fac2-416c-8881-dfdb2fddb7a5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0b5f54c8-ba36-4936-be22-41c75b338e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8dab7c6-c85a-4064-b4f1-81445c8bc0b8",
        "cursor": {
          "ref": "76ce4b1b-3df9-48db-aed5-89f76be33fcf",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f9b7e09f-28a5-4fac-8a11-8960321416c6"
        },
        "item": {
          "id": "a8dab7c6-c85a-4064-b4f1-81445c8bc0b8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "24f0735b-55a5-445f-a9e6-c3e66be0bdbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7945aefc-30f5-41ad-a3fd-523bc39d4e6e",
        "cursor": {
          "ref": "38521cc3-06a7-49f1-9a0b-a5b79e38972d",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "794600ed-fe8c-4bfe-bc86-e8b82c7cd7ba"
        },
        "item": {
          "id": "7945aefc-30f5-41ad-a3fd-523bc39d4e6e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a2b9b61a-2af2-49b7-9cf6-e080038bbad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ad6bbf-e6ca-433d-aebb-6d947c950e49",
        "cursor": {
          "ref": "d3f0b767-2d56-4ba6-8431-e136dcbd255e",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4d5f6774-d105-4dfd-8774-3b7d3b7e4a86"
        },
        "item": {
          "id": "58ad6bbf-e6ca-433d-aebb-6d947c950e49",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f777e739-4226-4058-b1ab-67baae1867a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c3127b-15ad-40d7-959b-7829a3560aa6",
        "cursor": {
          "ref": "b5c1777e-4f13-4525-a11c-633f11d5b2b0",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4c1a2a2d-41cf-4f26-a41a-fd63476e353b"
        },
        "item": {
          "id": "36c3127b-15ad-40d7-959b-7829a3560aa6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e2f26e31-7ab0-41e7-b7c0-e9abb693aefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221a003c-805c-4895-bd09-93fbb318f627",
        "cursor": {
          "ref": "b43ba83f-7a88-48ab-9d2d-0cfd556d4345",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6169389d-8258-42ee-98b7-1d0b6ffe98ec"
        },
        "item": {
          "id": "221a003c-805c-4895-bd09-93fbb318f627",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ba458849-5893-4e3b-9bee-bcb81b908d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e855ec74-6dd7-4c2b-b6a4-9d563cfa0d9e",
        "cursor": {
          "ref": "2eed1d88-7c70-4e24-96d5-d9f4e14ab46c",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ef99a7cf-5363-4dab-b030-ae902901750f"
        },
        "item": {
          "id": "e855ec74-6dd7-4c2b-b6a4-9d563cfa0d9e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1c7dae2b-8eb7-4593-8389-8b803d1f6494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3eb408-f569-4125-99ae-af49a43aeb9c",
        "cursor": {
          "ref": "14db11da-cde4-4fff-b044-06c9b4fc2a68",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4ea33f49-5582-41e4-badf-aa1ee6f463ef"
        },
        "item": {
          "id": "2b3eb408-f569-4125-99ae-af49a43aeb9c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4ed7199c-7124-4a2b-aeaa-3e6f5099d136",
          "status": "OK",
          "code": 200,
          "responseTime": 418,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "7c7a176e-623e-4260-a20a-aa7aa7fdc83a",
        "cursor": {
          "ref": "40813b7d-78d9-40a5-bca8-e8dd18128013",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f91b8d15-08a1-41b9-9146-687bb835eacd"
        },
        "item": {
          "id": "7c7a176e-623e-4260-a20a-aa7aa7fdc83a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "79baa582-900d-4157-bf4a-ba76a117edb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0061e2d1-f619-44fd-8907-a5212b111673",
        "cursor": {
          "ref": "dc6f3894-9776-4b41-905f-827d3e20da0d",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "14117476-4f89-496e-8a8e-6a1ac93ec880"
        },
        "item": {
          "id": "0061e2d1-f619-44fd-8907-a5212b111673",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "73a03b1d-6597-494d-9d98-c3a1559a7b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b5b737-c250-46f8-a256-f91ec5b58643",
        "cursor": {
          "ref": "5fdbdf30-e9de-46b6-8d94-6e20fd738c85",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d29ed7ae-2c9c-4b63-94c4-20f6dc57d8c8"
        },
        "item": {
          "id": "26b5b737-c250-46f8-a256-f91ec5b58643",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "71122ba4-82bb-41c5-ae66-94dd492fa4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e5d0ea-ee52-4a34-bf1f-9b7988c8c249",
        "cursor": {
          "ref": "3a98307e-5719-4680-ac57-52f0b2a0d3e3",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fdd8de4d-30d1-4ebe-be5b-5a5bc736280c"
        },
        "item": {
          "id": "e5e5d0ea-ee52-4a34-bf1f-9b7988c8c249",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b4f21ad2-797f-4008-9aec-d6fe5c772cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3698fe89-d102-4a01-986d-2792088d11f8",
        "cursor": {
          "ref": "e59fabf1-4038-4e6d-beaa-3b1b14aa8fb5",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c1b6de54-fdea-49fd-92fc-796f51c9c4d0"
        },
        "item": {
          "id": "3698fe89-d102-4a01-986d-2792088d11f8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e6d3dd8f-eda9-47c0-9bc3-879c2d1f361b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d428b2e2-cbbd-4abe-8553-85856ef97921",
        "cursor": {
          "ref": "d6ffec8b-ca1e-400f-aeec-a0dd14da5bdc",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "99b65354-b921-4242-bf4b-a452cb85b1b9"
        },
        "item": {
          "id": "d428b2e2-cbbd-4abe-8553-85856ef97921",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c842d3ad-c011-486d-935a-7c2ad346953e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768ae9e0-6b10-4666-b7bf-c5418002ae95",
        "cursor": {
          "ref": "146a34af-f1cf-412b-871f-4e4412a44588",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "43d1a2e0-f995-4f7a-bf34-5f64d2bd8a76"
        },
        "item": {
          "id": "768ae9e0-6b10-4666-b7bf-c5418002ae95",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d6cdd633-5a1c-45e4-95d3-e76a1bc8f3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1d850f-a11b-4f6e-b315-a6c6e133fcf3",
        "cursor": {
          "ref": "954a68fe-7f34-4d33-9d90-2ed9a3d971f6",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "308ad440-7253-428c-8bd6-d6f6de6aa0e3"
        },
        "item": {
          "id": "ad1d850f-a11b-4f6e-b315-a6c6e133fcf3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "196e9074-bf93-4ad5-8a94-9125ab116a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c7c8f8-6fb1-40a4-9533-fa70f978bc3f",
        "cursor": {
          "ref": "7ef208f9-f49e-4028-8985-8be8be632621",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1dadb304-c915-45a8-9ad8-9f8a980c62ee"
        },
        "item": {
          "id": "d2c7c8f8-6fb1-40a4-9533-fa70f978bc3f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "161dfbac-5b35-48f5-a838-f8db27104af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052b61bf-cbc5-4146-a392-2e9b067132ff",
        "cursor": {
          "ref": "7b45da7c-2741-48a3-95a3-667d02af0716",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2d95ef8c-7428-4574-b6fa-504262ef8231"
        },
        "item": {
          "id": "052b61bf-cbc5-4146-a392-2e9b067132ff",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "288012d3-ab62-4dd2-87ef-9d4af572ee29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22a23eb-1a27-4e14-af87-2bb5dc2fb6d5",
        "cursor": {
          "ref": "cb445253-0d88-4522-92ee-49db39e8b7bb",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "91d77dbd-0628-4871-a59c-3927c8c8a296"
        },
        "item": {
          "id": "f22a23eb-1a27-4e14-af87-2bb5dc2fb6d5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "47449151-e2be-49cb-aea3-2a7fb48cd78c",
          "status": "OK",
          "code": 200,
          "responseTime": 506,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "3fcd026a-31fd-40cb-8e5c-a25415c96289",
        "cursor": {
          "ref": "e7bba420-c8c9-4f5e-8035-07a26da2d85f",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6cd75c8f-1199-4fa9-a0c0-2c60926ce554"
        },
        "item": {
          "id": "3fcd026a-31fd-40cb-8e5c-a25415c96289",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "47dc51fa-132f-48e8-a3f4-088a6887909a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4952cda2-ea18-4309-b0a8-a254a5332eaa",
        "cursor": {
          "ref": "85a94725-b292-4f55-834c-3d37e48a1e71",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "15cd4b26-6219-45b9-a5ee-d280de0b311b"
        },
        "item": {
          "id": "4952cda2-ea18-4309-b0a8-a254a5332eaa",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b26952d3-9855-40ac-bd01-9f845f63f865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6dddbf-9405-4d88-9f41-3b3aa865f424",
        "cursor": {
          "ref": "85929dd2-2339-4f56-8000-aad3a31137b5",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b62038e7-34dd-4e23-89f7-0613741af09e"
        },
        "item": {
          "id": "ba6dddbf-9405-4d88-9f41-3b3aa865f424",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c715166f-91f6-41dc-ad45-10a2f00b83b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596e0b27-831c-4636-ab85-a675b685b908",
        "cursor": {
          "ref": "5b3724aa-dcdf-4aef-b32e-7442d4206156",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d621fbec-e387-45ca-b272-d84bc49dcaf4"
        },
        "item": {
          "id": "596e0b27-831c-4636-ab85-a675b685b908",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "de2d13d4-709c-4e61-b5c0-aa108618b1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445ea408-fa9d-4f6d-9157-1d0620a25708",
        "cursor": {
          "ref": "e635f3b3-53fe-4893-b1be-84f973a0f444",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "55249853-1cca-44c7-a929-2a7659f261b0"
        },
        "item": {
          "id": "445ea408-fa9d-4f6d-9157-1d0620a25708",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d299e816-107a-49a7-aec6-329ab5863c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25af0952-873e-441f-95eb-3ac25d4ce4ab",
        "cursor": {
          "ref": "6625f9c0-8a03-4f99-9368-c7ca23985b80",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2427407a-0010-4be4-aeda-da5d5f19a1c3"
        },
        "item": {
          "id": "25af0952-873e-441f-95eb-3ac25d4ce4ab",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4d99d165-27c7-4873-8bab-4bd81782a1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bae2f02-1ee0-4ceb-9860-94f40824bac0",
        "cursor": {
          "ref": "e9c1e226-e77d-4b5f-9ece-64359724acb4",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "805b16eb-36c0-4d9c-9c8d-220c7d87b68a"
        },
        "item": {
          "id": "4bae2f02-1ee0-4ceb-9860-94f40824bac0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d57b5e72-9110-4f82-9b71-f36ef5e63927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6812cdf-98bc-451b-80f9-aab3a875e6bd",
        "cursor": {
          "ref": "2abc39c5-5dda-4073-89f7-bf60742baf80",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c0935ac0-91cc-441d-86eb-3d2b9f646d77"
        },
        "item": {
          "id": "e6812cdf-98bc-451b-80f9-aab3a875e6bd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a6862718-15bc-40b3-9241-64e0f56ba3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ab60fe-cb48-4b94-b135-e12375d8ca6c",
        "cursor": {
          "ref": "b90037a7-b190-4cb2-9033-c7c027722949",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f65b4c2d-a590-47f9-9f4b-8d12a276bdd0"
        },
        "item": {
          "id": "a5ab60fe-cb48-4b94-b135-e12375d8ca6c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "909ccd51-fd48-4bda-9e42-0b035adbf432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c91396a-2a37-4809-b6c5-6334fd7ccda1",
        "cursor": {
          "ref": "996b097e-2e97-45cc-ba97-4e237db10c07",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f7a1b6c5-2a51-48b3-84a7-caa9ff32f6ce"
        },
        "item": {
          "id": "4c91396a-2a37-4809-b6c5-6334fd7ccda1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ab35fa21-27d5-421e-ae0d-b2b0cd82ef91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9561d9-cc6f-47cc-8a52-67775bd70b58",
        "cursor": {
          "ref": "3cd005cc-602f-4991-8d60-2fbbe622d2dd",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "23b56b36-f11c-49f0-9a9b-97f5ffa60640"
        },
        "item": {
          "id": "2f9561d9-cc6f-47cc-8a52-67775bd70b58",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "854035be-eaad-4ed2-8c4a-50aa82fb9e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a73f47b-ef2c-45b6-9698-0c6241ee9a55",
        "cursor": {
          "ref": "20dfb2e2-a8fb-480c-912b-b26eb076ee53",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e380d0a0-8fd7-432d-93af-6a2adbd2d0f2"
        },
        "item": {
          "id": "6a73f47b-ef2c-45b6-9698-0c6241ee9a55",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "342b8a8e-71fb-439d-8124-1dc4a2d626dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9795c0-a89f-476d-9db1-1ba9b5e9ad58",
        "cursor": {
          "ref": "4338923e-9ef0-49af-910d-9943689e3cb1",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6bff8d63-426a-44f5-8a19-b329036f3eaf"
        },
        "item": {
          "id": "8b9795c0-a89f-476d-9db1-1ba9b5e9ad58",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0cb5e2c2-480a-4fa4-bc2e-4fbdf144436f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabb5620-1eeb-4009-9196-b7a667d57e26",
        "cursor": {
          "ref": "e44d305c-3f0d-4e82-82ae-c025a110e680",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a14e987a-be77-4e1d-a460-0245be2add4c"
        },
        "item": {
          "id": "cabb5620-1eeb-4009-9196-b7a667d57e26",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f5060d16-c2b6-450e-81f9-65706ac47fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c08a65b-98c7-4d23-a9e4-406892f58800",
        "cursor": {
          "ref": "4cfe0c8f-8039-4108-ab23-3e4ec75f3d99",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a30c0b89-7fb8-4bf6-934b-352d4e6a048f"
        },
        "item": {
          "id": "5c08a65b-98c7-4d23-a9e4-406892f58800",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "cd0cc58a-b3ea-4317-8e75-181959a3b98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b61f56-c46c-4259-9355-6748542aa463",
        "cursor": {
          "ref": "1ad4c717-f16f-40db-98b8-c566ab33c69d",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "95743a2f-203c-4d85-b904-211f84149720"
        },
        "item": {
          "id": "47b61f56-c46c-4259-9355-6748542aa463",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c3ec283e-2332-40f9-b7b3-0a43b994445f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe03b48-3abf-4ba3-bbf1-c2ac600b5214",
        "cursor": {
          "ref": "45d01316-9fe4-4604-b443-55f42a27600e",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2176a8a7-5ba2-4e52-8556-3d050a76f42a"
        },
        "item": {
          "id": "2fe03b48-3abf-4ba3-bbf1-c2ac600b5214",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5cc5bae8-55e3-4f09-9071-e5a7144f5fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa4b8a4-1b74-4598-88f4-748f7765b53e",
        "cursor": {
          "ref": "d9de9b96-4be4-4861-8c0a-0f6eefe9d8a3",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f6278fe4-0879-4e30-8010-6bd074388715"
        },
        "item": {
          "id": "faa4b8a4-1b74-4598-88f4-748f7765b53e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3c1b5090-f3f0-43c4-b0f8-dc1bea777bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fa1f20-548d-4c63-a0d4-582c1a0df1bc",
        "cursor": {
          "ref": "b8cc3cfa-d4fd-4927-a982-4e08fa656567",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e33918c7-acad-464b-a330-75700499a665"
        },
        "item": {
          "id": "67fa1f20-548d-4c63-a0d4-582c1a0df1bc",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b0bcdfa9-72db-47de-960e-d0d47f1e3310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4df5a49-0d05-4523-89ca-9e2954a2e7c3",
        "cursor": {
          "ref": "ea3bc52b-2ff7-400d-a478-01b4e682178e",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "118dbbea-ad5a-4c73-a1a1-4b84187d3a5a"
        },
        "item": {
          "id": "c4df5a49-0d05-4523-89ca-9e2954a2e7c3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0c065f1f-166e-4a94-b2ad-01a869c3208a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7381906a-1fdc-4332-b1a8-84d1e191f9e2",
        "cursor": {
          "ref": "d2ea526f-edb3-4775-a224-cf85f539a885",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c8d4b561-1639-4b72-8a15-57cec5ba2a6f"
        },
        "item": {
          "id": "7381906a-1fdc-4332-b1a8-84d1e191f9e2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f4c9371a-761a-40a2-a5bb-cccbe7ac703e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185bebbd-9c10-490e-92ae-aa2c1f13c953",
        "cursor": {
          "ref": "07babfaf-3618-4024-b353-15d00f728cd4",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ba34c724-db5b-40cd-ba5a-bd30cc81ed32"
        },
        "item": {
          "id": "185bebbd-9c10-490e-92ae-aa2c1f13c953",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9ab6908f-b22d-4c33-b8ca-fe171e92f4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09456c29-b280-49af-8f32-d868e27de5c7",
        "cursor": {
          "ref": "2abc0867-27cb-4a94-97ad-24a3e32a1afd",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "72961ea5-565a-462f-bd32-2b37106a90c6"
        },
        "item": {
          "id": "09456c29-b280-49af-8f32-d868e27de5c7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "bd174571-2d02-42ad-8822-277216ed565e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c398d910-b800-4b5f-b0ee-bbcc6a8e42ed",
        "cursor": {
          "ref": "cd6c892e-305c-43a7-aba8-75bb885310a7",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "783c3e85-e0f9-4cb0-93a6-8fb36f2234c8"
        },
        "item": {
          "id": "c398d910-b800-4b5f-b0ee-bbcc6a8e42ed",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "32cde8fe-7cdd-438f-a279-1662075a5575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ed3086-686e-4750-894a-5f567f597f5d",
        "cursor": {
          "ref": "ec82a79e-090d-4070-87e7-f44221c3e417",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "518aa5ee-7537-4470-92f2-71fa79970808"
        },
        "item": {
          "id": "d8ed3086-686e-4750-894a-5f567f597f5d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6053d1ea-f89e-4cec-ab73-f3eee31ff4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180f0248-ee25-4789-9580-f9bea36c5c8d",
        "cursor": {
          "ref": "05442dec-b156-4ff2-a18b-99cc59c48277",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7b5970c6-454a-4544-b6e6-198f5e864a89"
        },
        "item": {
          "id": "180f0248-ee25-4789-9580-f9bea36c5c8d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b5e5c9cf-161b-4794-bc94-ade24d4cf843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b29b80-5eb7-4a21-839c-ad78add41d2f",
        "cursor": {
          "ref": "cc4ba3d6-8dd4-4af0-9110-1c7e7d23238e",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "dfaa7ac4-bc13-45e4-8996-7d8495fed693"
        },
        "item": {
          "id": "59b29b80-5eb7-4a21-839c-ad78add41d2f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0317923d-b2c5-44dc-9422-f54ed5ee86ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21283269-a548-48ae-96e7-a922ec5b2a58",
        "cursor": {
          "ref": "596b1e71-fbae-457f-ba7c-685dd98cf9a0",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3318ff61-db77-4ad0-9879-d1cc953930c3"
        },
        "item": {
          "id": "21283269-a548-48ae-96e7-a922ec5b2a58",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3c415ec6-7d11-4793-b0dc-e036832a2f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c278a118-0adf-4716-b72d-6094dd9f8194",
        "cursor": {
          "ref": "4721dfa5-8391-4314-a10b-4382035df6e7",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2836c6ad-c376-450a-a359-06284676addf"
        },
        "item": {
          "id": "c278a118-0adf-4716-b72d-6094dd9f8194",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "caf38248-30b5-40e9-9dd3-603732a27c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32f15a2-43be-4db4-9c7f-3476e9abf816",
        "cursor": {
          "ref": "a750e99d-b14f-4e6a-a557-5b5de5c06477",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "552ddd9f-0ea8-4fc5-ad74-5033b33848c7"
        },
        "item": {
          "id": "b32f15a2-43be-4db4-9c7f-3476e9abf816",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2fa0bd4b-ce11-42dc-8bd5-fadaf95dc14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c764db-c6bc-40f5-a813-b7fb381913b1",
        "cursor": {
          "ref": "f17be5f7-ca14-4198-aef5-4f801a4cb05a",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "79119e64-f1fb-4f58-9935-9e5ca2b97e06"
        },
        "item": {
          "id": "f0c764db-c6bc-40f5-a813-b7fb381913b1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ee636d92-646a-4130-98cf-c3d382b54e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee85aeda-83e8-4b44-8bbe-f35ad11b4d3d",
        "cursor": {
          "ref": "460f8570-eb51-4b20-af5c-e238f70f3061",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4f77d548-2214-4837-8d0c-73539603eefd"
        },
        "item": {
          "id": "ee85aeda-83e8-4b44-8bbe-f35ad11b4d3d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "36f374bb-3684-47fb-9dd9-8d396b311884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c9813b-4f10-4270-9cc2-b08b4ee3fe59",
        "cursor": {
          "ref": "21ec4d61-0330-4b88-b259-ccbe6fcef220",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4e8e5995-91e9-4d43-a814-83fe46f2f235"
        },
        "item": {
          "id": "b4c9813b-4f10-4270-9cc2-b08b4ee3fe59",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "10be5be6-7ca9-4b78-a8d7-5f4354f76026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0b4884-9806-4ac8-9056-301fa77413bb",
        "cursor": {
          "ref": "a8ce4314-049c-48d3-8396-941df774abd1",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3d4f70a4-20fe-4b65-9b73-8e8a0f251d2e"
        },
        "item": {
          "id": "3c0b4884-9806-4ac8-9056-301fa77413bb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "214e5a1a-8e67-41c7-b129-36462afbee94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47349d4b-2ee0-406c-b5de-2adf94462ee6",
        "cursor": {
          "ref": "51cc19d4-df8f-4dbb-979a-e3bda2905a6a",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "740608dd-6851-4144-9ab3-a47ab814e63e"
        },
        "item": {
          "id": "47349d4b-2ee0-406c-b5de-2adf94462ee6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5332297b-84bc-403f-b62f-227e502c1821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba83621-2af7-4b71-ab2e-2ce028382621",
        "cursor": {
          "ref": "91e30031-d7f6-4e2e-9321-b0d0b8f0179e",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9b86f2ba-3d97-47e0-9902-4e6ba1ec7cd0"
        },
        "item": {
          "id": "9ba83621-2af7-4b71-ab2e-2ce028382621",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "52e602e3-c9ac-493c-9dab-01eb8e53382f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f5d6d8-8e75-4c6d-bd59-94fbd3933e47",
        "cursor": {
          "ref": "e9933d54-50db-44c3-8066-0c370257d06c",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9d121d2a-e549-4a64-86aa-767a64d926a4"
        },
        "item": {
          "id": "b3f5d6d8-8e75-4c6d-bd59-94fbd3933e47",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9632619c-0ca6-4eb5-b0ac-b74b9f92c580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440d696d-58b9-4af2-a884-352c40c4ab8f",
        "cursor": {
          "ref": "5aa80c87-7ff2-4c6b-9a2f-4b96743c8294",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "03c5096f-ab7c-4c9c-a9df-1e1f34c8b1bd"
        },
        "item": {
          "id": "440d696d-58b9-4af2-a884-352c40c4ab8f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "27b7a0d9-9c0e-49c8-902c-e1689e1537f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99dd318-2013-4de3-818f-0b6f157bea0f",
        "cursor": {
          "ref": "523297d1-b033-4050-bf0b-a317771d5bf3",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "706b13ae-a4db-4219-8082-fd75336ec713"
        },
        "item": {
          "id": "d99dd318-2013-4de3-818f-0b6f157bea0f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e31b257d-56f5-42d6-839d-1f57024acb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab599236-4dda-4eee-8cc1-a25f44c58cac",
        "cursor": {
          "ref": "2f2fe837-67f7-41a9-aa2b-a4aac759ff90",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f4c5f063-2c61-4db2-ab32-4d92d0c149d2"
        },
        "item": {
          "id": "ab599236-4dda-4eee-8cc1-a25f44c58cac",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "fa2cb85a-ca65-4d24-9345-580d4e73039a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd95ae2e-55dd-40f0-9b31-83c9c9175fdb",
        "cursor": {
          "ref": "1d241aaa-3002-412b-b6af-8b55e55da41e",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3f03650f-bc16-4879-944b-81e7e35b5559"
        },
        "item": {
          "id": "bd95ae2e-55dd-40f0-9b31-83c9c9175fdb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3d35f913-dc47-48a5-acc4-7fee5531fb6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4d6ed1-b7d2-41f8-adcc-395e94aa6a3c",
        "cursor": {
          "ref": "d00e3213-47a7-4acb-8043-1eb9ce3ecda8",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6283ac68-fd10-4d0a-aaa7-f7c8483b9915"
        },
        "item": {
          "id": "8c4d6ed1-b7d2-41f8-adcc-395e94aa6a3c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "95cc7606-1a20-4f4f-9a4a-b424271a730d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c184338c-e511-4fc2-8c89-6d5c17b99de0",
        "cursor": {
          "ref": "59ed0c4d-324e-4e0b-b8b2-031abb292b27",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e8bfd0fa-d967-4e09-9aa4-335e35bc74aa"
        },
        "item": {
          "id": "c184338c-e511-4fc2-8c89-6d5c17b99de0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "43bfd13a-c515-4ab4-8e21-0ba803ff3846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a468478d-fd54-496a-a2fd-ede09063942a",
        "cursor": {
          "ref": "b94b85ad-0a0a-42d8-85e7-952b836f30a9",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8c57e70b-1e85-4faf-b0cd-5541f83d53f3"
        },
        "item": {
          "id": "a468478d-fd54-496a-a2fd-ede09063942a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d5913bc5-fb43-4974-9122-ef40e1c3502c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60186cc9-1f39-4966-ab76-e1353b5c5fd3",
        "cursor": {
          "ref": "1850b5e2-4a94-46f4-88e9-02b95e6e6033",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3967fb84-30db-4c42-a6da-7c661a5e619a"
        },
        "item": {
          "id": "60186cc9-1f39-4966-ab76-e1353b5c5fd3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f2f87eda-ca44-4a26-a929-d7f952434d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e792db-517d-4980-bab2-64bfafb0a0da",
        "cursor": {
          "ref": "fba7b439-4175-419d-91a2-bdf7d2f0e113",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "dcef2c1e-1075-44bb-bdbc-056398148ae4"
        },
        "item": {
          "id": "b4e792db-517d-4980-bab2-64bfafb0a0da",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "435baf31-0731-4eb3-bbd0-17bb6afe163d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416369ef-8afd-4497-b252-d6d9310f91fd",
        "cursor": {
          "ref": "ac3c59b6-8e21-4351-a0e9-fb78e78e2d1c",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3765b079-2013-4c02-9b5c-328e8ba7b892"
        },
        "item": {
          "id": "416369ef-8afd-4497-b252-d6d9310f91fd",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "78d2830f-a1c5-46df-819b-b9adf8d6817b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa9f06a-a817-4767-94bf-62f973b8b08f",
        "cursor": {
          "ref": "7c14cf72-9bf9-416b-98dd-3d2605a7f455",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d5b893fa-5994-45bc-94c9-04fb8a3ff5d7"
        },
        "item": {
          "id": "1fa9f06a-a817-4767-94bf-62f973b8b08f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d6f686cd-7aaa-44d3-8ff6-6e2d17bd315d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3ae13d-361c-400d-a56c-10b814ca37aa",
        "cursor": {
          "ref": "111c430f-3f76-4f45-a76d-6d6e54a00cd5",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9dd177ce-377e-4fa3-893a-69fa355f8a6f"
        },
        "item": {
          "id": "ac3ae13d-361c-400d-a56c-10b814ca37aa",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "73b90872-ac13-4f52-9e15-bd7dabf92d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670e7492-6139-4bfa-9181-84b87e15e7b8",
        "cursor": {
          "ref": "f2582326-4619-4532-8772-632d26d152d2",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "65cc27bf-58e5-4119-9a97-a35d479af266"
        },
        "item": {
          "id": "670e7492-6139-4bfa-9181-84b87e15e7b8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2079dc81-31ba-415a-b28a-2bf51364c735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9be1a2-5402-4961-abfa-36dde0cce39a",
        "cursor": {
          "ref": "eed6c562-df49-4d08-8ea9-98f77562325a",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9520ad31-58e9-43b4-8fa8-0b61166550de"
        },
        "item": {
          "id": "0c9be1a2-5402-4961-abfa-36dde0cce39a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "59b2e276-387e-40df-87ad-c4a48c3582e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a863a6-81fd-42ca-99f3-68f872b29452",
        "cursor": {
          "ref": "5b6fff69-a99b-4fc7-b839-59d4c93d6c31",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ed8cf566-dbb7-4a59-8d79-7b6adfe7b303"
        },
        "item": {
          "id": "c1a863a6-81fd-42ca-99f3-68f872b29452",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "74e724dd-8e5d-4ec6-a256-deffcc24d708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320344a1-3ab7-400a-ad93-61bb0e3f68e9",
        "cursor": {
          "ref": "76da4e62-438e-4048-bd1d-9f44687c6b4a",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1166bc4e-3134-4e19-a5b8-d3c1474cf68d"
        },
        "item": {
          "id": "320344a1-3ab7-400a-ad93-61bb0e3f68e9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b86428a2-d931-4411-af0a-03abea4cd68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbc5a99-30be-4f1e-9837-66a97c0046b8",
        "cursor": {
          "ref": "56d39e3e-f6ac-43ef-9a85-07bd41bc5e7a",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d40004b5-1a3e-466a-9ba3-e64ce9754c47"
        },
        "item": {
          "id": "edbc5a99-30be-4f1e-9837-66a97c0046b8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "69b065f6-4aab-47aa-82aa-7bcc6f626713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76366918-d95b-423c-884d-74093aa55cf9",
        "cursor": {
          "ref": "62482119-0a04-44f1-9f0b-f0e5491323ae",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "59dd6ecd-245a-4f01-83b1-e81e95f24152"
        },
        "item": {
          "id": "76366918-d95b-423c-884d-74093aa55cf9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c7bd0425-a528-4207-9fa2-c89755373c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1628b634-8e27-4ef3-8f45-6a1d87343486",
        "cursor": {
          "ref": "77e137b2-2d5d-40c5-b253-07d331c89d41",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8ebd7c30-accf-4eee-a1ea-70fb227db1fa"
        },
        "item": {
          "id": "1628b634-8e27-4ef3-8f45-6a1d87343486",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ed416a33-ca8e-4ccf-8d4b-68273baf4c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd52626-6a38-4b92-8f94-759a8b8fc662",
        "cursor": {
          "ref": "3f98404e-9143-4bc1-bca6-f3e0ab02981c",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ebcd1972-ea7d-4584-9b33-d6d65352622d"
        },
        "item": {
          "id": "2dd52626-6a38-4b92-8f94-759a8b8fc662",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1180a2b5-4391-45bb-9c15-839fb9e6ab66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531bcecf-0013-43d1-baf0-9b7cbfd929bd",
        "cursor": {
          "ref": "c88923ac-0aee-4617-922d-ceb6a7362013",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1fa83f34-e2ce-462a-9212-3a3e7666cc78"
        },
        "item": {
          "id": "531bcecf-0013-43d1-baf0-9b7cbfd929bd",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0a6d120a-7480-4f38-9a0f-8e8839fab88a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c228122f-ca7f-4b9b-87a4-6e49774227d5",
        "cursor": {
          "ref": "a8815638-a2d7-49b5-b882-1ec4c272948f",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a8bba066-41f2-49f8-a91c-65364e87ffb3"
        },
        "item": {
          "id": "c228122f-ca7f-4b9b-87a4-6e49774227d5",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "a648b1a0-2de1-449d-a48a-613fb8b5e6f6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 319,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f39d75f-5883-4936-90f0-81f75167d229",
        "cursor": {
          "ref": "82bbd7e6-cd8b-4052-9e82-7b3251a85e1d",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c6fa59c5-ceb5-4dba-b746-435fc9ce6ac8"
        },
        "item": {
          "id": "4f39d75f-5883-4936-90f0-81f75167d229",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "12e7fc6f-83bb-462a-adb5-8ad375904cb7",
          "status": "OK",
          "code": 200,
          "responseTime": 414,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b981f44-1570-4383-9e51-5a82440c8cd7",
        "cursor": {
          "ref": "372f068e-ee8b-4926-b72a-b5bab5da0d42",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cf06ef3e-6f38-4827-95c6-1ab1b4960d0c"
        },
        "item": {
          "id": "8b981f44-1570-4383-9e51-5a82440c8cd7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a0d5f292-ecdd-42c0-bae3-ae281f573cea",
          "status": "OK",
          "code": 200,
          "responseTime": 1820,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b5069d-44cd-42be-bdd0-de1c85f68fa2",
        "cursor": {
          "ref": "b0b035a2-edc0-47ed-ac5a-772177dcba50",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "86ee4ccc-0a59-4b99-8179-5f3089b67b03"
        },
        "item": {
          "id": "88b5069d-44cd-42be-bdd0-de1c85f68fa2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2682d371-efdb-4d51-b44c-34fd923b2002",
          "status": "OK",
          "code": 200,
          "responseTime": 1765,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6085bf8-bef1-4bb1-a05b-882daed9943e",
        "cursor": {
          "ref": "dffd2741-6d1f-4283-a20c-9077dbed637e",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4f136a0d-70a6-4ecc-a229-473f2f961915"
        },
        "item": {
          "id": "f6085bf8-bef1-4bb1-a05b-882daed9943e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "35561326-2406-4ec3-92ca-9479a95c7e04",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6085bf8-bef1-4bb1-a05b-882daed9943e",
        "cursor": {
          "ref": "dffd2741-6d1f-4283-a20c-9077dbed637e",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4f136a0d-70a6-4ecc-a229-473f2f961915"
        },
        "item": {
          "id": "f6085bf8-bef1-4bb1-a05b-882daed9943e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "35561326-2406-4ec3-92ca-9479a95c7e04",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6085bf8-bef1-4bb1-a05b-882daed9943e",
        "cursor": {
          "ref": "dffd2741-6d1f-4283-a20c-9077dbed637e",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4f136a0d-70a6-4ecc-a229-473f2f961915"
        },
        "item": {
          "id": "f6085bf8-bef1-4bb1-a05b-882daed9943e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "35561326-2406-4ec3-92ca-9479a95c7e04",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23f359d-5561-457c-9c21-947734aebe32",
        "cursor": {
          "ref": "2487213a-0018-439b-b64c-1a036472c4e4",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e695fe56-94af-4bfa-8042-793fc1873d68"
        },
        "item": {
          "id": "b23f359d-5561-457c-9c21-947734aebe32",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "1ac43294-7e20-4cbc-a4cd-66866edd7f7e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 320,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189fda90-3456-4cb9-8484-225f139e4693",
        "cursor": {
          "ref": "16a76064-c373-40dd-a713-64c57c47ed17",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f129dcc5-f7d8-44fb-8952-00a640641092"
        },
        "item": {
          "id": "189fda90-3456-4cb9-8484-225f139e4693",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7b57c58e-75b3-4a93-94be-f06fee0f8e86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189fda90-3456-4cb9-8484-225f139e4693",
        "cursor": {
          "ref": "16a76064-c373-40dd-a713-64c57c47ed17",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f129dcc5-f7d8-44fb-8952-00a640641092"
        },
        "item": {
          "id": "189fda90-3456-4cb9-8484-225f139e4693",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7b57c58e-75b3-4a93-94be-f06fee0f8e86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb76e86-dffb-4066-b63f-a375ef5e8759",
        "cursor": {
          "ref": "98a06699-9384-435d-970c-a36e9de80cf8",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a4301baf-e79d-4786-bd86-86ba4d095aa4"
        },
        "item": {
          "id": "9fb76e86-dffb-4066-b63f-a375ef5e8759",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "cf3b554f-7822-4f1f-a532-caf56c2c35be",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 546,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84835eb-a741-44e1-9cc4-51e19f3eefbd",
        "cursor": {
          "ref": "d0d4f9e7-e10e-4853-aaf7-61c876f3ed82",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "605d5f3f-a24c-4769-a4db-bfd28e40d79f"
        },
        "item": {
          "id": "b84835eb-a741-44e1-9cc4-51e19f3eefbd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f3fb91fc-e1a7-44ee-9a2f-3dad5b8251ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84835eb-a741-44e1-9cc4-51e19f3eefbd",
        "cursor": {
          "ref": "d0d4f9e7-e10e-4853-aaf7-61c876f3ed82",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "605d5f3f-a24c-4769-a4db-bfd28e40d79f"
        },
        "item": {
          "id": "b84835eb-a741-44e1-9cc4-51e19f3eefbd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f3fb91fc-e1a7-44ee-9a2f-3dad5b8251ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990f458f-558c-4319-8fe3-3c94ccfbe833",
        "cursor": {
          "ref": "38bf12c2-009f-46ba-82d7-7fa64924d363",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "bf4bfc8a-74c4-454b-8c58-02b876d90c22"
        },
        "item": {
          "id": "990f458f-558c-4319-8fe3-3c94ccfbe833",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "27623b6b-8602-4d53-9699-05c63c3c926c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 552,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}