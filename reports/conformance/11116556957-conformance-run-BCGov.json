{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "65936a7a-c835-4058-8690-a9fb0ee265d6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "16ffa3ca-6bbd-487e-ae9e-d3c6fb33447d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c2dd97ce-23c3-4bd3-aa01-96d75132a10c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1f4e80a4-f749-4fc3-a63a-d01e2b2e265e"
                }
              }
            ]
          },
          {
            "id": "83c3de94-be18-4d48-97f3-da47d008663f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "27882790-4b58-41bf-8336-62ab4a75dbaf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "63131391-b7c6-4e8a-b5e4-f4bf4d8d3bd4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8707f88e-e072-4023-a404-991f52de40a6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "743ff6c8-8b83-4bb0-8188-4720e6ddb80a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eea96095-cbf0-481b-a5bb-7d3b2de0f0d9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "921a4206-d821-41ca-801e-6ae5333caf2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "59a10afd-d96d-40d3-a4fd-19b464c24852"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "30cf79af-5817-4b99-b57a-a9e70b2a1322",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ed7675b0-6bd6-42c0-82bb-14ca8c26da8a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "10b4c816-a157-4854-b3db-ee00ea1b09b9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "180030bc-2832-4289-b94a-ffc130d7cfff"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe95a05f-4f0c-45b4-bed1-4e74ef32c259",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c2ed2d12-f801-4cda-898e-c5129c9e7168"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87642443-9752-492f-b017-37e9d834af79",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abea5cbf-b404-401e-bcbb-7b5347ca04f4"
            }
          }
        ]
      },
      {
        "id": "658b4fd3-286c-458c-aae3-f5a879c41d54",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "37c4a5ff-ff9b-45f6-8877-1843f0e59bca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa688fe1-f0de-4c3a-ab90-d4f80fa5d4b8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dc3f5af5-701d-4706-9589-792040f62030",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97ccf11-9c82-48c1-a775-1a2567bf63d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74932160-e139-494c-bb63-8fc81d39e05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1314dae2-7ba5-4909-a4a3-67abd5e67d52",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3507d0-5630-423f-866f-b482b63caf06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8450be21-0f83-4f46-9f9a-37803fab5dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfc6600-90b5-43f1-9962-844fe48506e6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9108e1-707e-4287-a9e8-50b258eec956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee0262f7-1072-4c78-abee-a6d537fc2525"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b35994e6-6c42-4bb9-ba27-683dd9ee4039",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8bb649e7-796b-4c1a-8925-101dbf83e61a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86f4c2f-5ff8-493a-aa7b-836487c41db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be5394e1-5f50-404d-9a6e-31f6c848652d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d5c468-5d32-4e6b-abbb-14abfda8b321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d93b143e-a2a3-4983-aa90-73d65e2ba0ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4e32fe6f-e6da-4d38-a0e1-b919f9af3182",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4c4721f5-0482-4a4a-9a60-7dc943ad7829",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf9e0bad-7013-4c17-acba-c890e99afc82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "412adba2-26bd-4c78-98d3-0df729a87ae4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb45f6a5-4562-4b11-aedc-35bba65d00ff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9e8ae66c-c4f1-47ca-8f9c-beb74aa8345c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a95a09c5-fe3c-4726-9166-52c71701fbae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ec7c2fc-ce25-4a91-aa5b-49370bb4a7ef"
            }
          }
        ]
      },
      {
        "id": "749df972-cff9-460e-a529-6b3c801802d7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1818ee4d-b9d6-475b-9178-d98e107a393f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ad37bf8c-e133-4983-88ae-7e2933cd6e32",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3e4a4675-3788-47a4-9719-144f0b3efb04",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84593003-a171-4c6d-8312-f072f6a6de20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf28edb-69d7-4982-af70-37338998020f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e9c597-c809-4a77-98eb-a41bea2a1eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c27b7ba6-c42a-4087-a3ea-6fcab8a58c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f0fa2d-8ae5-4c23-8071-5fe395cb4aec",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "642c1d24-b33c-4d17-8246-cca14b8fee4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c1a856a-0515-4db8-beeb-6aedd2b1b09b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa691e4-c4eb-49c0-8e7b-a74e55c28e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "691663a1-020a-4678-b8ed-3edeb3b04e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823b4592-c80a-4387-9af6-f8d75599a08d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "116fd711-dbc9-49e8-a6ae-928371f5a70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b55144c-19a0-43e2-8b94-a6246f6d5e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b5f5aa-b91a-4171-8760-99cbabd1b90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3cfcb77-05e1-4fd2-b9a8-46e8df96cb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37e2583-36f4-4ac2-9f65-896472fde4e5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f96594-5a60-4d3a-84f7-38978336a3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac4deab-d70b-401d-9da3-9b138e011132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a050a2-dfc0-40e9-8c28-d38a7846cf4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c8e7e21-5cd7-4eed-9ec7-90b9e3045889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed9574a-9799-45b1-a083-388ac547419d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7366925-78aa-45c5-b727-572dce3bc07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a536b190-91fe-4a30-b7fa-74a1afacd41a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d44504-1177-452a-aac1-a20a78bf96ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "515203b6-4909-4049-b639-c7554187422f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26914e26-8b8a-40b1-b445-fa84843931f8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873b9f31-b117-4a63-83f5-79752334f302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619aa204-81a4-4a8b-a452-66706f6c91dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c089ad6e-bed0-42d4-ac4d-dc5f939ed5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb0099fe-b2d4-4dec-ad1f-3ee3dd8518cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b267e27f-ae67-487c-b2ec-d3ac3cc60426",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eea5681-d307-4965-ba0f-0a9e498d2b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3990bad-8b22-4af8-ac4b-491a8647dcab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5562bb0-5557-4ab0-84d9-91dabb854162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b56bf6e1-4f22-4ce9-9867-5a7477803376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fcfdc0-0f90-4362-812d-7ae8b9db9cff",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63838df4-302f-4812-b213-66453c591060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "504802e9-63a8-4a6e-bc30-fb9e68af3073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa194567-fcb8-4570-916d-a609ce0b66f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a77efd1f-1914-46f8-b683-66c4d66ce2a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38d7ec2-c427-4a6b-9f3a-985c9abe3fb9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5f0eac-678b-4dc0-b054-a1e95da7d44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491ca37a-3c5c-400b-ab23-c0e1ccd0a872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbac122-0c33-417c-a113-f3b115db19df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a234b1f-23ae-44be-a583-17203d0b8b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cd5943-4d1a-4384-8b32-5e63ecf0afca",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da63c43a-6ea9-449d-bd71-cffc2a00d1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd32864-de9b-4ce3-add8-d07adc4f18be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682a5a8f-9509-409d-9a81-a28106d2c514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5382bca3-4c51-4972-b78b-87102c591bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e794ca5-5b47-4641-a9a4-c133fb41ce92",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cd9ed6-3732-4593-b70f-b723212c9439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bdabdc9-8f03-4738-aa81-e8c2ceba4e77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f33e58e-6dd0-4c45-b292-b3287fe8f6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d0ad5bd-6f17-455d-a81f-f5da1e67ab34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c300a5-1b55-4dcc-a699-9b5e1c9456b7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62734941-0e88-4148-af05-83f238ad84fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc125eb-c0d9-4b6c-b993-37c354ecd354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e4270d-83d6-4c48-991b-155f8ff57c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f77fe57-db94-4712-8897-58869c2fd704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8230bf-95f6-4480-9a9c-4718de492801",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095eb7ad-13c6-424f-8491-89fd89cb00e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967ff694-1b5d-4d9f-a193-eb6439edf610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4db473-aac2-4655-870e-071ef32d61cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a528d1a1-544a-4d7a-aecb-968bc907d222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907c626d-b093-4fd6-b4c8-e726d809189d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54490e3-f6c4-4459-a257-47900e9eb657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a397c19-04c7-4c41-bdc2-4412370e9e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe6f330-2a0f-4914-9e35-0f5bff32eb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "415bc473-4579-4e56-9a84-addd5e02dea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedf29eb-d287-4734-9efc-75bd301077e5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d886b33b-246b-4d79-8f59-2fe0a1f50ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e52e10-7b22-4dc3-b9e2-570a596f7808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c699ab8e-db87-48d9-ab3a-4ee41b784f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6941eee8-83c7-408c-9541-1128b2645495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751619e2-f1ec-422d-b0a3-31be0e405d4d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201894c0-e0b7-4a55-bae3-711d6b609bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a9fb4d-81c2-4b6b-b264-57635dbc98fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1bc768-a7dc-40a8-9ee8-22b7ba9e1905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e06f1d1-d4b3-4132-8d6a-bbf7a631221f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e841836-4275-4841-95e0-e24164158605",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08501c7c-3c6a-4adb-ac5c-0c21b49d52d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cdd6db6-f748-446d-aaad-246ad0c7a815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0f10ed-08b6-4d4b-afa9-e36ff5e604bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "979e0cfc-834c-4cec-b435-679aac356b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82789e6e-7e2c-4179-b159-bb06d5353c84",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a918a84-dca0-4c0d-b5e8-010d458cd197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4afeb1-0fc4-4aef-af67-ce19bb9df527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd626b1f-6423-4c35-8c32-83178ef2b6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d31023-fc04-476e-b397-cbba65a616be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf6bdd1-ee99-478e-b318-97a6917b9518",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060d550a-a6b4-4cb8-9c06-10329e4745b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230d3466-2d24-4197-9f43-08b7df9249b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21bb21d-db0b-49ea-abcf-f4ed6a87ed2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81538583-dcba-4f8c-a618-c46eb7fafee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1474198d-461d-4903-bc3d-d6fefe1f5df1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf87c48c-3ee5-4c91-8f9d-67928af1b5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f698f6-0a93-453e-9321-8c3b36c45cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68cb9c6-fd96-4c78-b6d0-359c18c2a7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90580250-4f65-4421-990f-0235c203cc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d2ff6d-3519-4554-8fd5-92e5b9c5216f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd86b6c-8425-44f1-a138-b00dd3aefda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c28b9bb-4874-4762-85b6-c426ca28baba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bfc249-5675-4e41-bab0-585d32a734b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4d9bd9b-dfd6-4b29-b293-ee64e407523b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efff3626-498e-443c-af56-e714a8f54657",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34cfa088-7fe0-4b9b-b5e7-e6a3489b5594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3e1c00-44c1-4964-9a30-388d9163f6a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167ad5ac-c7be-4642-a94b-5e6da9829991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "552afa50-9cfe-492e-bd35-2a9b12fcd6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad1deac-206b-4617-a71c-578aa582818b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706815ef-6b84-4890-8f34-6f0001a55fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e5b77c-6cc1-4a9c-b4d2-5d3823164943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37637a26-d5be-44e0-b815-e79e3556f6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "48fb08cb-3a2e-4287-b699-1705dd88848e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268bfce9-26e9-454c-a841-d59f21376f33",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d90847-a83e-41c6-aa39-512d1cac847e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e99a4cd4-0310-4c4f-82c7-32ea725ee469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2deafc-5a0a-4ab8-9dad-2a03c56a798f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "64ea6823-f40f-4536-ab96-a2a1207d8403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f847b01-08ee-4c96-9ba3-dd8e9ed4155f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25985be-9ac3-4e86-93b5-99d3f8122f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb1cf24-5080-4893-9d69-d72a276cd895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2612c0-26fb-4daa-8848-502925710bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a738ed8-972d-4a2b-9e41-188dfba68b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b95e19-3bef-4cd5-8009-11125d028749",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0eca126-1146-49c8-a217-229486afae58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1da254-1c98-4843-a5b2-3b2e77c35be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000a0d21-28e3-4c3e-8a50-cfecd8a0199c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4655160-149c-440b-a3e9-a9d45cc34dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5631e8bd-585b-4fef-9eff-c49baddd9753",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1d6c8c-d2f0-4040-9ec1-93da35ae1dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e95fde1-5e1d-4b6a-8886-e6420a926922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2636aa7f-2efa-4a4d-8697-7041536ce248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f45ce2e-6b1c-4dc4-a8bf-05d493d1b542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f7c558-b019-4ef6-bc1d-ab3c973cf1b3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4734c1-ee36-46fe-a24d-cd9eab107cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073868da-50d2-45df-9cca-0e41fa463e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693ddf25-798e-47b4-ac71-e6fb12bee624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d993daa-a39c-47b9-8a9d-d42a16353903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee2aecf-0c1e-42f5-843c-4d3c91a3867e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4717fe53-a917-443b-a972-8518cf5ccdeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be06d9d-c429-4d37-8b9f-05661015c55a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c40084-f2f7-41ac-b066-092aa56f10d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef3a3f5-86e2-47c3-9f07-cdf34a2818fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad3fbc1-df09-49d2-a6b6-68f4c509e241",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0979bf-8be7-405c-a0de-0a789343cfce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9b6f78-9911-4abb-9677-02d1900d87c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa12c04-c565-441b-816a-35f172207951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e9a5f8-401d-4dc3-979c-bac58fdecfb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfc4799-c00c-4e83-9e1e-4e4da80764be",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4e09cd-2993-4190-994a-bc3ac1a3bf86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f60e840-0fa4-496e-b347-a0156b076221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb25f2d-d43c-4a3b-9275-6affa115992d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e85f6355-7c6a-41ca-a432-8c6d890b6141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f996646-7bc9-4416-85c0-3ccd719db59e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "953dc13f-8e81-4c09-aa3a-7201f35b708b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6155588-3a00-4f69-b374-db3389d466d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67dd0a2f-b1f9-494b-a060-c707998aed62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89ae3f37-eb59-452b-bcfd-7466c6041fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd7b914-5a93-4123-a0b1-696beab5b295",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b606b5-d3b6-429b-84d2-d5bb805fb62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77bcd285-7133-4e18-a8cc-82b228d7ddae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd318ec-ab44-4e68-bb36-e4ee78e2667c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a7860db-fdac-4524-bb30-3757117b9c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19d3782-8cf5-472f-b7ee-c2ab88f398ae",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590bf666-ab37-42e0-a907-5e5d59459df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f6b6e2-9872-4519-8add-542300be062f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8faf95-022c-41ff-af15-3fe1e1979518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "516c3024-7fa7-4b48-ad1d-f7fdf051c611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a7a720-454d-4b95-878a-2928646389a6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3210e4-98de-4647-869b-a62e08d08584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e7c613-4804-4e6b-b402-2b78b3be3821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380f991e-3dae-4016-8eef-2fb304c9738a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a83aecbf-fab9-4dcf-a96b-807530214ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f89823-c75c-4987-8187-7bafd539e7a1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f9cb3d-4e7a-4d90-affa-b28c45742203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b79b5fbb-d94d-4f55-b2e4-554ff68fe65b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e07d2c-c30a-4998-a20a-60ef80715f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "403f9ff8-26f7-4c6d-b815-6c93fd052c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b9b9c3-392c-419f-b0e4-cd2c7bd0d569",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b095482c-f6c7-4b5c-81c4-5859184106d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bebc570-fe04-41bb-882c-7b132aef25d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c220cd86-03bd-48e3-b9a2-31e0958d9cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f12d3bd2-c525-4f00-9375-cfac1994a443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91df687-a643-4f47-90be-a18fef5f6df9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b1bc5a-9b82-4518-9b9c-16c7a692b5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad867652-4262-486d-ad28-bf373366a555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ff8b96-834e-4ddf-ae97-3bfd5e9a0e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f18fe9d-af62-49f0-9c51-4933b21bd1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac153b4-3360-4fd0-b723-78725a13a914",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b88a423-eeb4-4b02-8d97-9dabf08679ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a46a677-8e2b-4514-81eb-4d0030bc40e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45236449-5c4d-435c-9e31-8b2be866134a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b0fffe4-3d12-4d46-98d0-89470dcede21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123cf5dd-f20a-4f12-8c08-ddd3a41c9add",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "987ccde0-f52b-43e4-af4e-b9b255c5d7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7b3e19-6ece-4ec4-9be4-73ab75743c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f65944-a596-4564-9087-f96c2b8bac33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad59081-4fe0-40a4-975a-9bbe24450e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5901dc-f31f-42a8-8a6d-5ca4770058ac",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d07d0f1-c825-4209-9366-89a21c164167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a7142a-1607-420b-a2af-ae0c6044b39c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa11aa86-72c7-4acf-82f2-66cde3df3cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "77518500-8b23-4272-a99b-37b116fc653d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08adbc6-355e-4221-b1e0-9303a7d87d21",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc74ac5-5382-409e-8d31-cf4314009746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edae18c8-67b3-4ff2-8d8b-267685766f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2229fc96-4572-4d49-aefc-23c615b219b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d722e1ff-84ab-41fa-9c60-0a1f415f7aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc5cd64-720e-4d3c-8e78-904cb11eae51",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd305f6e-ca52-42e7-99f1-541f011e7d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07e74c2-50ca-46a1-99f9-6f64e683fcf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c8cfda-04c7-4615-92b4-9170553cbad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "295af44d-0ad1-41a4-87f4-ed2f206def3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b7cb05-dee6-4307-9476-59c97549a860",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19877612-1593-48d0-b798-81a043890323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6424997-8d48-4a45-ab67-8b58cd8b76ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d635461-d3d6-43a4-882d-395cfb8e01ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "67b2469c-45e2-445a-9912-b85385b96d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3e778e-2374-4353-b32f-7b06c08709bb",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3982dc-4c80-4ddf-b051-2580d20cb1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0413940c-bd68-413a-855a-a6d47cb90456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f3eae6-2998-4da6-bb70-8963e08849f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "54e72fe5-afe7-44dc-ace2-49613adc5585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d187bc-a802-43e0-b18c-197233357a51",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11aa6d64-6db3-432a-8d69-f5844496b047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef26c211-b7bc-42e8-ad97-281571c02d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7bbc13-2e62-42a0-846f-2cd492114671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb9803f-ae5c-4320-9ec9-138b53c06dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8caade99-d1b9-4aa0-a16f-9512083391ab",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ba227e-5654-4b5b-adce-c98b750ad263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec7a8c51-e912-412e-9d01-e6e39fbe8b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37613d87-b059-4f27-8b15-d1f9e7855742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "939dd347-30d0-49dd-a275-40cf45c9c613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1c3209-3d50-4a50-9c22-55037edc4cd0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fe6774-7720-4323-86fa-aa9d5a044ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f6bdb08-2713-4c42-8974-c98491f1a29b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff3179b-4e00-4f69-bc27-d1e41faecf5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19d1ffd9-6b31-4496-b476-d3876972d8c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd6b22f-866d-448a-b1c5-fcde5fc1fdca",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471ce88c-00b6-472e-aa78-f69067d9b214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e5e0fd-ddb7-4849-b197-e623880b7e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06016809-4ed2-4bc9-8aae-98710b5c4da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3527690a-5529-4621-9957-04c8d3a19368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55be85c-5f95-4109-be70-38160d965089",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d77f1db-1b19-4cd6-ba20-d4767bbbc308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544e641a-f027-4b78-871e-0868952921a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7be191a-a4b2-4401-97ec-ab985f0e1900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55f24a4e-4ad4-4320-979d-43e6b78927fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200bec70-c6e0-4b2b-9424-ad74171ec1eb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c71369-9c9d-4a31-8bdc-67152f03a140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9470f1c2-403f-4e1d-be65-f110a28b0812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b72c08-d25b-44cb-a8fe-7c9120019409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a571577b-71e5-47fb-9a95-81852654d878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa29b22-e441-4f00-8475-6d0289ecd814",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e5d294-c89d-4ed7-81a4-7208e1d70ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b46ac62-b7de-49f7-8a96-db3abcda73fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc8b4dc-9c99-4224-9409-41afa208deff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b3d24e9-0f71-48fd-b540-2800ea759517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb011cc8-b7d3-47a9-8707-755e23bced20",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5b8608-7319-4918-8bd0-48f74aba36d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2400c9e0-7f4f-466c-822f-77c974b7b628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2da9a13-6e3e-4e13-8448-d453da418151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b7cce5a-756d-4433-87f2-488aae55cbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7add614c-6073-4f55-a0e7-19d222490ac2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a40cc19-257b-4059-b65c-0fba608d717e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f5b80c6-9a7c-4f1e-99c5-e5fac5f13d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f19474-d560-4cd2-ad88-1f0847065e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "447696a2-b1c9-4822-9487-6aaa8cfd2136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2bfd616-6154-482a-b172-03f1f2245948",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5f376b-311e-4587-b4e7-813f2b02be19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9771bf5-2b97-4e1f-b80d-05a26933d6a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90b6984-552b-49b5-ad4a-7a1301d7feb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5777ac97-6126-42b3-a073-f47e0f6cc415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0208b80-a9b5-492f-bb87-fcfbf168816f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45eb88e7-b0f9-43ec-bd19-6bfedca1e68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f270eb97-9d9a-4ed6-89eb-f423a2610863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fb92b2-4136-41a3-93a9-f27115545156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f7e663-e496-4535-9d0b-c5a2985284d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430e7b39-93dd-465d-83c3-844c7884a516",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65271de1-38a1-4192-a04b-40e60594df09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251258e2-05f4-4696-a6a5-7fcef582e5c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb51a6d0-2729-4d00-a98e-9b60f887e469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2771456-8ddf-487d-a5e2-4ab7d393bec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9dacadd-a3e5-41ff-996a-92d521909586",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc3eb80-e9d5-4275-8495-8be0b0f72567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2725cad8-cd32-4fa2-ae38-c8fff2677077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844c7a85-12d8-4f97-a570-131fe33ec713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "291396d2-a654-4630-8fd8-b9ac354814e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c34276-0e01-4f1a-b33f-15de4237d5e5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179c8e03-f384-410c-918b-5398fa1a84a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e49ab8d-d8f5-41b5-8ec5-0d39b2317a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc896f2f-579c-41eb-9b99-5f9a88cdb999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b869d6e-e685-4872-92df-0fb6bf196caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9531be5-086e-456d-808f-a4ffedff4b7e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa16bf19-9920-4490-bb1f-e1bcf158dd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9569e72-fe48-4f13-aa2f-30e191edc13a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62bdd2a-846a-4646-b91a-f3eb78d91fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ca4b56-9686-4289-bac7-0fc8493dbbe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346845de-e103-4c4d-a537-c1f27144e4b2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77dd095-9b99-4c5c-b964-e6ea04adfd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b5973f-03ee-411b-a9ed-2fd792509025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41964ac-5f2b-47a5-84b9-24051f8366ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4390d87d-3899-415e-9fda-481f37b5439b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d1eb14-cfa8-4749-becd-1e7a4909d25c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2707cdd7-b8e0-4da9-87ed-5eaba3572f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0c4aa1-9125-41c5-a01c-ae7e31daa304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a5abaf-384b-4dac-9d67-5660a4f07024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "73fa3c9b-7a54-466c-9b01-44a8dfea2892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8830c8cd-9a1d-47f3-a173-e023f4c06f10",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f4ba02-7a81-48a5-b5e0-5aba3a9aeefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60519701-72d6-4eae-ac2a-f04ec406f10f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58c5b29-b00e-497c-b4d1-2eccc841ba01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5390f74f-9579-439b-bfc0-386e071aaa97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99dd63a-16c0-4e21-b431-bad1f29ede5a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cdba68-70a5-440d-a990-ae264f4ec3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4132c77-9d40-471d-a90f-28773a21af83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98632866-5130-4b03-b7b4-29875435a724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ac05fd3-5c7b-4e1f-b553-c706fb7bf391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9345fc-d093-4719-8365-9e1de27a3015",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e01ce0b-c83d-49b6-8d9d-2e1bdb2ee502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c78fde90-9e4e-4366-8a5e-64dc8b2e9d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ff3de3-0f73-4a99-9b90-f43814d30fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a761373a-aa35-457d-819e-334b0f6462dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794d4a94-c3a7-4fba-a5f3-5b1ff6346e27",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd429a9e-88ba-4fd0-a7a0-1e82a68a4520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec5a4c8-0f9d-4fb5-ae70-415d2ab4b1f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d694d43a-86a1-4118-b3e7-8984349c958b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2bba14f-58ae-46fa-bd65-75abefcd6f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33862a49-39dd-4b97-8e27-3b8be2c36903",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0427aa7-1a3d-4d71-aadb-1ef68497349f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f2e17f-0b2f-4c83-844d-6ae75d395989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d16f0e-a558-4a9b-84a5-3f13084c33f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed1f3d7-1b7e-4708-875a-69e6ba19f21d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5237bb3f-128b-476a-9348-5fb92bffb7fc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb886bcb-a67c-4c8c-9cf3-fe558e02a3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e99c62a-9c7f-45df-b2e7-5f919d7c1aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc5d0f7-a4bf-403e-950b-a271b6ed0fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "aacf4c76-7c55-4d72-922d-8e20716f4176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a74059b-64b7-4d81-84b6-0a9d666f42a3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733c38ad-62fa-468d-997a-ea76e079f9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfcf1ab5-b087-4f9b-8c12-63f0e346bb26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9a33f5-f629-4d09-b777-c2236d3c4577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c51cb14-2d7d-4d52-8698-d9b9bb253493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8983f0dd-e1d9-4d35-ac46-59ab0991ba0f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918e0253-be17-4ed8-83d6-a432f64d026f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6562f7cb-948c-4cf8-a0ea-b262417b7843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a4f062-17cf-49c2-8287-6ea6d0d52813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdba9d26-6b33-40c8-95c4-ff2ab0a244c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab9eb2b-351f-410d-8aa7-0f221e431fa8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77d59fc-a584-4679-84d0-5570d9f1a488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ad7296-7caa-4b06-8bce-376bef3985af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cedddf-7436-46ee-95c9-154ad743a75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd87cb9d-c48b-43db-a9c8-89ca9fc6c6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de84ea5e-650e-4c3c-850e-a7d4ac28102c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbc2275-9a4a-4d92-a750-913820668f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f0ad6d-d1b1-4cb7-bfc1-81d9fb2f23a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1049313-1fb3-4176-9434-6740a6f18b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb5c75e-d030-437b-beef-7bcb333f7c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bd1f37-d16a-49dc-87e0-dfd3cd8c4b15",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d72c9d9-688c-4275-8e22-2bc6262f1aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870fe03f-a114-45e8-a9d4-9c09107cc1ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb031caa-caa6-4ba1-aa81-a8d3080151c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23dee2b5-9504-4973-98e4-097c4936bc54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d367096-5816-4bef-9a82-985d9195cb99",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "febf0fe4-934b-4965-9603-40b7704b51d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6862272a-750c-4ee9-a89c-539bbd02103b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad66b62-4cb9-463c-8a16-425b9b15f306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "71c9d544-146e-4b5f-9b68-f4310016ec43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860ea6ac-43d6-4703-a767-65dbdf16d373",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19f8fb9-bf72-4c22-b5ff-dbc7fd356c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236ba5f7-f04a-4641-a8f0-509746045694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd82566-f0ff-4e7c-95f5-f958e15978f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "438c7aa1-ac2d-4fc5-89a4-d6831bb641cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03696c0e-95f2-4bf6-916b-1078ad4d825c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d92c712-3e36-4d53-a35e-9642ce59c1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c737827a-53e7-4fdf-9a09-64717bdfaa7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291fe055-bcef-4c85-9727-5ced0e23ca74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad64552-1930-46f7-8f64-085333009de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63cf6d93-d077-45b6-96cd-a9d088637d3c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a6dce8-24db-48c1-9a84-899a5e309c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6512ba3c-bdea-4c8d-aa50-5bbe15994ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16b718c-fd17-4656-891f-b8b0ab82fc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3962691e-bc9c-4c2e-899a-53244e4bf66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17616ec0-d43a-468a-8f4c-16f53e0d8f09",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f325efc-cae2-448c-9965-7352b3503559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea4c3c1-347c-493f-9227-9bcd8ba3acc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532b7420-adf9-4eb8-8a6a-58d75ffee4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc85858f-6f2b-4287-b83b-bf304e415f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82477b83-0b92-4a07-bbd9-ac345e3c0bc5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a12fc2-2403-44f1-beae-835a630ac40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41aebe13-2aca-4cd4-b27c-812d4d6278b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4abcd64-fa02-4548-8913-671d901204a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a698852-b24c-48da-82a0-264ff65f7717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce0e559-6a5a-4c6e-b594-9473a3c11028",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f4163c-79c4-4815-b0b9-8f5735848f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b72a9c5-c279-44fa-b95c-3156981765ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd85fbc3-3660-4a64-845f-00dea6c52323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0103f178-c6d4-47cf-a3be-52f74eba9500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da166744-ba56-4688-9604-bc4ca41115fa",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04935343-715d-439c-99ab-3a91d7ba2dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c17e4cac-866b-4e04-a9bf-5948687127c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3f20d3-4016-43fa-adf0-2cde8975163d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "43b7de50-2cbb-4a87-b88f-628fce3ea867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4b4146-7157-4492-bee1-e2ebf03e98dd",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bf13fe-71f5-44ed-b446-079e25432950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5310f517-58ad-4ec9-997a-f947c9160b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ca9a44-49aa-4e4e-9465-4e6854b22ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d97ef25b-3d6d-4d1f-9c2d-a116408eccb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f8ee7e-1b81-43b3-ba81-a264a4294313",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84000fd8-966f-4c64-9c90-5dbce9e6ddca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae452fd-f6fc-451e-b9f4-361e9df50465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5755a058-c078-4811-8047-2228908f0864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86a3c64d-fd3a-4573-9f80-7af5370941c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caad1f4c-3e53-452f-a72b-267c5b215acf",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab289c01-33cf-4d7e-8720-b9d7e60f4bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb40638-c889-42f2-b6eb-cee0ee385c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010bd9ff-a112-4753-ac1b-c7358cba271d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dba906c5-74a7-4db4-b9e7-f8f4ad215880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f946f262-c3c1-4896-95a4-2a2a8184cd3f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250c9622-2853-422c-b9d1-659396fded2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c67e764-8b0b-431c-8732-b9866d54bada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd81ca3-76c8-4e47-974b-4e34aa0de678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "093d64e6-e98a-49a7-9958-dd009c6fd096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0141e5-138a-4051-8a53-37c0c2537ec1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed315cc8-53a5-4a44-a1a6-6a14fe9dbf97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e32e9f-e4a1-4638-a9bb-cce52ea587ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aabfce0-6691-4122-bfb4-6a8ca85e44a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "844cedfc-9200-4903-9021-e121a59af063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb1c48e-2191-47d2-bf26-d554e50d875c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0baf5caa-43af-4577-91a1-aae509b819bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d36c542-d67c-4d9a-ad24-99185dcbbc7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379a28b1-291e-4135-983c-647e57e35d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e46e32d-f06f-4549-b070-b863847529b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8d4bdc-5eeb-4e44-bf56-e0ddfe774429",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0e947d-1a4a-4de1-9211-8f32def9d7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9219f15b-b5ce-4c49-8e74-44e3f945b8b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0429a839-6fc7-4a40-9107-e17b721fcfc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "69ebb763-e713-4623-b1f0-3b53d24ff716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa56e782-e52b-465f-b1de-b0aaed92a527",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948f0b5a-7011-4cc3-8104-d6f26da7231c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c2d617-8dc6-40db-bbb9-5a64b3d72c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b45110-beb7-4cbf-bd28-63e36e4eac42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a615fff-3df7-498f-a12a-a3b97bc91a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af57fe8-e54d-434d-98e9-17a49b7cdf42",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92586d87-a468-4080-80bd-ed95767f3af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71576de-3031-4496-b4a0-203dc5da4fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35e0768-1f79-468b-8f51-7aaab9a67ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4904458b-5a75-4001-993f-2eff2d63d1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17d9199-b275-454f-bab9-e3a9278b2f3a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b5a529-48b0-44e6-823b-7b7b0bf40f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df26b6fa-5e22-46b7-a8e4-0deaca39dc23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afade0c-f518-48a2-826c-ac0e49db2a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "aae77772-24a5-46a7-a595-37c987a090b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0bfa34-3e36-4ec2-bb37-0ff84e8edd8d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffef4ee-bc2c-4816-958b-e07885758f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "04f26cfe-d7f2-4088-86a7-e81dfcc0def4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a562ecbd-fcb9-4c8a-972a-c49b17fe6c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "19aec2b0-7ee2-492c-951d-c09262961223"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d6dbf729-ba61-4f06-8b4b-295c50008758",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ba3b71d-9cda-4f96-9ab0-7719d528781f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1507de65-2807-4709-96e7-e64cf36f3166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cef8c3ee-554a-4f1d-a7c8-3f016401a64d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c30ecb-047f-4494-a475-8ea0e2ed1dd4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1ec9d23-b842-44d1-a47a-8019cb039c6b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2fab64ef-260e-41e0-8055-2df8df5ad83e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8c37eb2-e065-4d85-bff9-16dc3ede4c31"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf0d15a6-9ac0-4438-856d-cc8872f01e95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa921a1c-cd4e-4d9b-babb-4034f0a0a16e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e2c23d22-4251-436b-8752-7dd9a3ec1725",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a240cb43-b369-4ac2-9533-6f0a00cae045"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "20b6ff34-afdb-4706-be8c-3a1e8202a7a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "38c94e2f-1cb8-499f-8f4f-6619af127dd4"
                }
              }
            ]
          },
          {
            "id": "8840bf21-b950-462f-a095-d40f76c14c33",
            "name": "Positive Testing",
            "item": [
              {
                "id": "74ff844e-8d1f-4e85-900e-6e22eef0a631",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b436c619-4949-4bc7-ac10-b37591f2371e",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8ad646-1a13-448f-84b7-4c9bfdc0234a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6e814850-21bf-4a60-ab99-553d050379b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33daaad0-39f9-4ddc-bf7e-1ab481aa3fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef6ef2c-1e26-4a07-b73e-a3d083483e5e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ca04633c-8c74-4445-b91e-a67c7c894bd0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f39ce1c5-9185-46d4-b013-c012c98d4097",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "95c78597-05cc-4d0d-bf25-8d673c4abb77"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e13d271b-14c2-4855-87ec-62097696071c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1964595a-5ea1-47ac-a6bd-3629288c303f"
                    }
                  }
                ]
              },
              {
                "id": "cb04e163-3aa5-4efa-aecf-84a869ea8aeb",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c9359de-ddb1-44d1-ac06-fd2592635656",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a9fc588-353a-4902-ad3d-e2caf7a96f08"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24194843-c78e-4edf-a9cc-4fa955593aa1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "872994a0-7c39-409a-b1e0-0a5f37a4d01e"
                    }
                  }
                ]
              },
              {
                "id": "4f44bdf0-8cf5-4e6b-bb69-2fbd246a4217",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c382234-8569-4b29-ae63-8c5ac9235a65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6395fa8-4b57-489b-a6fc-c9df36556e59"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "699679f4-636d-4f63-a429-855d4d7b8254",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "94571506-ae5f-4479-acca-ee30cec834e4"
                    }
                  }
                ]
              },
              {
                "id": "f875c7f7-ff8d-4d31-bc45-e8e8d976933f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fd55de9-85dc-4b90-9bd6-718953be5087",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f88ffac4-7f4e-4611-b75f-5acfecf0cb44"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3883cfcb-3d45-4afc-bd10-c025f40cae25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7f1f22d1-774f-4dde-8e0f-8a30a84ae97d"
                    }
                  }
                ]
              },
              {
                "id": "019edd10-3a8a-4005-b347-1ecb568622d1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c0f03d1-e37c-482d-9d5f-589f83dde4b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "98f701cc-99b2-42f0-afb0-4e86b678d0d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3c18eb3-71a8-4376-80ef-47eb7cc3453e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2c6f1f0a-8ac0-4d7f-81ea-e20da63cbd27"
                    }
                  }
                ]
              },
              {
                "id": "6c08ccc6-4d08-4179-990f-2b6315d62853",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d54883a2-e122-4fa3-bdf5-7c78ca57096f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ce00b68-2b8e-4e5a-9cf9-e01c672b99ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7978747-f473-4f53-a63a-e634af3e8a03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9477952d-c500-49e7-8e79-fe6cfb8ac0d2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "319e7c1f-925e-4763-bf50-03e17193b4de",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a16b27e9-71e5-4b2b-abaf-e3b3541d7e14"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dbf13ad0-5696-4294-b8e9-68d6208f1a2e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cff7432b-3ed7-4cdd-bd91-2bca8cda51fc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e454e61-caf0-424d-9428-d08544dcad72",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "bdcda9ea-5b39-4b99-9a5b-266a2d3c2d24"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8535a798-52ec-44e0-be79-0dfc347e3046",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "afe39594-7622-43f6-871d-2c7f54031dad"
            }
          }
        ]
      },
      {
        "id": "902712a1-d787-4065-92eb-df1b028ea7ee",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cbbdfecd-3b76-455d-b264-d82441d08a7a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4647d6d5-5723-4465-aa12-863176d5187c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5fe7ac78-858a-4224-9281-9f79d2668b77",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707ab5d6-b9a0-48cf-8d24-fa0ba9906d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00921d54-380c-42d0-bed6-709fb23b92bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e5abb2-5179-49ab-95a0-0b3b1b0460b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "31ad4767-8db9-4d29-b03c-08a0844c8f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacb2b73-43e9-41af-8165-d4c24230c9a2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e2b8ac-e105-4fac-8cee-4d6e83b341e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c59c2caf-059b-4704-a5af-36939d54fc0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b359dd3-c844-4582-a1ae-a20a617bf990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a322da6-d1a2-4e9e-9e40-50bb1728f7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff99d64-14d1-456a-b34a-c4e8c7ae0b75",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0d3ec2-8d48-4fd9-9bf4-c622bbfb493c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb375b60-60c6-4d9a-9f86-c2efb659a547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9f8382-b301-49c2-8fec-60b6cfed4c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b671b978-f0ac-4832-9dd1-d3e8e8040fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b870d33a-7d16-4ca5-84ec-a8d3a1e9db39",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e4f14b-a5b0-4f99-b649-dca4d93757ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dcac60c-745d-44a1-9e94-afb894cf9194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21253562-bfeb-440c-920c-7ba244b6b05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "307bbd7d-f55d-4cb8-9256-245ef2dbf4ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b762c07a-6c42-4661-a9fa-a7322ef90754",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a5bc9d-5852-442b-82a6-10c569f00302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d5f639-068e-4006-9d72-369ff88054ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff771ff-9236-4129-9e48-43a620ee6e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f70e4f97-8608-4a24-83ef-83ca05736a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7096066b-3fd8-4b33-908d-3d8f8c15bd47",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae1a85b-dec7-4a89-96b8-ed6d03101d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a1e165-7f7f-4467-9571-834df1aac2ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5b62d9-9f08-4232-98d1-9f27b5fcd016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5401f8d6-1825-4256-9f6e-d5c72fbcf026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6894c32d-5538-4804-940f-8237786dcaa2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dee6985-fd9e-4829-bcbd-6f377a38e1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f1d687-07ff-43c2-a1de-4d942ee3e32b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d041a3-ecf4-45e7-addf-513f8296ff35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "97241ccb-dfd9-4c65-981e-9a8645a685ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3072718-d851-4f76-973d-fcc804191d19",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01bf8478-869b-494c-9074-cc4a2cde22ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7906641-58ec-42d3-81ff-3a225efac5fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b398b5ba-b48c-47d8-8ab7-57d3c5e318a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15c3b387-8c9d-4de2-8caf-c6138c49c14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53284a6-05b5-4cf1-a740-2e0f597000ff",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb0cffd-b762-4f32-bf30-4f63607bb331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dacc9431-1836-44a7-ac93-f68fa9638bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfabceb3-a25b-4233-809b-a934582aca7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41c8e7b4-3bce-424a-a6a0-52d26ac51acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bde23d5-a5fc-40bc-b40c-b644e4c03c5e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eefcb88-bae2-4974-bce0-7cebf718f21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc632e5-a3f9-4602-b347-2e3f282b26ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3578f471-6720-49ba-ad08-92272ef4d2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97370f2b-140c-4764-9c96-3d0e21b43832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b25a81a-02e3-485c-84a6-5c7fdbbb0694",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b62803-dbeb-4bff-a8b7-9a09fa28a3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3527133f-c611-4352-a6df-398de6b8f19a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3a7e43-64ef-4ade-832b-af4b2405887c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5f1489e8-ee2b-4246-81d4-746569b71cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915cd418-1d80-41a7-883e-b14db91ec904",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f34dcfd-8e13-41ed-903a-33c5a951bea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f62e943-122b-4a8f-9382-a8a87f7ea053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3f239a-6388-4072-b87d-a8fd27a62807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82290fb5-23c4-4b75-9164-68dd74f36749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ab22f6-e75c-4cc2-94d9-d30031ed41d9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86b98e2-77dc-4b3a-ae43-b31215dbc507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c882cb49-f9c9-44f9-b219-f204a9d99ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606f4f41-2f75-483c-8ad1-bb44b860f121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5cc09ca-e801-459c-9f9b-cbc329e9441f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd19fde-fb0f-4d24-857a-8f3cfd4c4a79",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619c5aae-b4f8-4ac5-9675-b34b7f568443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb4fa94-3ef6-40d8-a820-d148e0fce85f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea38340-2efd-4588-b74e-85f3374767c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "80886a72-cbcd-48e0-89ff-da5347cd9880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d190854-2467-445e-bdda-0a514305bcdc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "302a456a-4a32-47df-b352-36f0614b8fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d6a052-fc09-4c83-a39d-19a152673b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bca24f-2dcd-439c-b9fd-07beebab55e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cab463e-c98f-4477-ba30-1c276a4d5398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49fd14ab-c59c-43eb-95f1-2cf2ddd1ef24",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccaef629-d01f-43d1-81e6-fbace53c61c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0695f1f-4ca1-478b-9c73-f21444d20947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b301a7-886a-4054-ba7d-80e4f6379d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8135d61-d5d6-4cba-9891-603a76c5b1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29346f9-c50f-4664-85c9-677bcfd868ac",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffa6090-36ea-4765-b9e0-d6fecbe8b544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73447cf-eed9-4812-8dd4-aa769f1e0336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed81b5b-7374-421d-b63d-910412f6b997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e44e8f38-0ffb-4c95-8a40-a47719b49972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b740c7-e463-4a10-b7a7-8120aa047d2c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9191aa-8abb-4523-83f9-394e8f10cfa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0686bd2-5015-4850-bd59-9d9f8727a39a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54dd3570-eedf-4413-8af4-6344617196ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2184e95e-09ea-41f3-856c-be5ab9aa7273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d4d580-cc2c-4889-a994-da602bad8e10",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3219cfee-aeba-4eb1-b73f-f5a22c34381d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc83ce98-b1b8-4f7f-b76e-b71f3d55e3dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5da237-fe24-44d8-b69e-69350eb39680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d95427c1-acb1-4eb5-b1cd-9e9e1d46f8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6cf83b-5959-4c74-8fdc-cd1bef3738d5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9772af13-06cb-4298-a9f8-b9582cddddf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cac0386-510f-401f-8aeb-25029d665335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da9b19c-1a5f-468b-b907-27c1a7941709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51e7926b-8654-4ccf-950d-7472cd7c3753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c61286e-c6b5-4ac6-96ed-5c4961ac2951",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20a2fb3-66cf-475d-9424-3d34bb100e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc9cb50f-a0fb-4787-abe0-999174c041d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86db99a1-4c1a-44fc-bb47-962077c503c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20c21dba-795f-4d21-b708-dbe5b89ab774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031f6fe4-5465-41ce-94f2-a9585b676632",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04bccc63-1921-4785-98f4-43a45a324081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ce4ee6-f40c-4a38-8c9a-e7e5080805f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f723c6-b14a-41f8-b1b9-ad458dae1179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01d4b9fe-55ca-4269-9cf9-5520be54c1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c730f4b6-698e-4956-bd65-595244646bbf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ee5dcb-beb4-4d11-92b8-9930799dd7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65701f97-4aac-44fc-b109-765c6d259bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad0b25a-8b32-4bc2-961b-115412bfa223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7aaa7b3-4152-4c90-b8fd-d4c11a427400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d4d8a9-3117-4cd4-9b2b-2531f5d6354a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3a54ed-3fee-4e45-8b98-59efce6b4f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e81f64f-bbdf-491b-80d5-f97827c9601b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51143bf1-f1f6-4970-9a9d-2bff8a0fed7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f663892-b198-4803-b134-6482acb47c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb03eb5-3e23-4c9c-80f3-40cdfc862edd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296194a7-4ee8-47f3-a7c4-58a756e2c376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea27daf1-a22a-4c8e-91b3-5631aad9597a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f027afd4-1cd3-49d8-8ad1-f83fe5cf834a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4383f85-091a-4dcf-ad7a-023723cab628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c8990a-5f2b-410c-8f68-aa1e40b700c0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a401a5dd-7a19-42cf-9812-5773aa8492d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "499c3a1b-cb7e-475a-ba5f-5527bf83e113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20bd24c-1fb2-400d-88b7-9fd0e9281f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e78d6ae8-95bc-4f93-866d-6e483f7a4eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbaa0027-b5b9-4463-a545-21340669b137",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75cdb2b9-bb77-4f06-b53e-9558c553a40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b339dad-358f-4949-ac10-f677e0acce9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc110dde-42c2-45e3-82f8-7dec92765299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4f95a6-8dd9-4045-aafe-deb91bd4991b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4336f1-9e3b-4f9d-80e4-f9d1d0d358d9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcef818-55ff-425c-8a77-b60695d19a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d6dc83-eff2-4f84-bdab-525171154685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e809b9-1922-4bb4-ba19-1c4778fdebbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63b9e36d-4c18-4bf6-9520-e8bb714d15ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec75bf9-3fa9-4293-9652-7368425f98ec",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1893a56a-af2f-4226-b143-cb616850b833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b23a837-6765-4433-80b1-98cdcae74922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c17435-ca75-40b8-aa19-75f51563016a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63d9dccf-963c-45c6-a6b5-0a5699517021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f95d80-1c19-4338-af63-c0917b5b83e7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d42b5b2-0116-49d7-be59-68f0e1dcc3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d63016-bfa4-49ae-96e8-f746dfbb4963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26de7e2f-3a37-46e0-991d-9959399250db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "778057c0-aa2a-44cd-8e88-2ea49133ff60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0db26a-5b77-49bb-9378-d8f22bb2b75e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c855be-46ed-4257-b5e9-23f3961725ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d87d9d87-2035-4fac-a5ec-01259bc47690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7b00f6-f0d3-462d-92c7-0d2db1cbc274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1fc48c4-ff0d-4c37-ad03-cf0473f9fae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b180e3-1bfe-4aab-bb70-f288a95bc5b0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267d1064-f57a-46f6-9ff2-4a3b3c0a93f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbdc033d-5d19-4b45-ac20-ffcbcb5b3ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774c4099-4cbb-472d-bb2e-f3739b56caf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56c53734-6305-4bf8-98df-a7d567b8313f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe4951e-b6ca-40bc-b8ae-89503c86487b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce80c56e-c094-4789-961a-78952c4d8482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1181f04-1eb8-47e0-8ac3-2e71ecf67b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47776151-90d0-4f84-beba-ae1fb50d383a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3846c23c-5059-4c4c-b7f7-ad56cea6f4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2c3e5a-b75f-4d2c-aa18-84d2773c7e3f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f5d470-bcc2-4fd0-b48d-18a201ff9271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da861762-df5c-460d-9764-3ae409c93d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044d2a96-a005-4d0a-bf0e-267a809dbd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a48af515-1d5a-4a99-959c-893f4bb78828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa5abca-7f35-45bc-b7e2-05b9d4d2be3b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cef21fd-a5ef-4e4e-b0ee-cb5443c84821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa21babd-fe27-4817-a548-064010f8ce04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05662057-bbee-4da9-8ae4-e244e60d614a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e991596a-0b1d-4acc-bc34-07e607ba597a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60aeef41-0a56-491f-9df3-9f25f03ccd0a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ec2259-d053-4f50-89fe-ef06f9fec5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f56abce-1ac9-4a5a-9c5a-a020be70cf65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339ae863-b744-4528-afd4-57191b8a9b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41ef6ece-25bb-4d44-9c26-d278d93ab61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa83a8d-ddfb-47f1-9052-b2f51780aef8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17fba548-196f-489f-a3bb-7e224faef2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c682bf9-4d94-4c1c-bdbe-ed277a85c021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f82ddca-a01a-4afe-9260-a9652464414e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6221b37f-6245-4c75-a64e-d1ecbd995b9b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3e7dd02a-196e-42fd-9010-b0fb582bd8b7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "414fdfe2-5237-4c42-8204-2db29b11a3f5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbee7ac-6523-425d-8224-f2cca5528801",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "826f1589-ff2b-4bba-8b01-4a278d98d6dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87809895-bb08-4377-b81f-8a5b82f14c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b311f3b-4598-4513-8b74-8c10ce7b15a4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6cabbb44-1d0d-49f0-a834-549ab863ac98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae6432cd-5bd3-4e58-9f20-59c8c54be037"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "23091660-3638-4ff5-a5a5-1ce11c0ce4dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0a9a333-ffb5-4ae9-815d-fda9740c0efd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a4d6db16-a221-41f3-81d9-ce662c0a1917",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aed07d26-0da8-45c0-8409-cd1d5224298d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a297f8f0-207d-4e7a-9b72-f0927c710f51",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbf0ab9f-d125-494c-8709-1a87ab13cd97"
            }
          }
        ]
      },
      {
        "id": "a33a3d8f-4a91-4ddf-b7f6-f0eea0846b97",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "44cc01a1-b255-4ff6-a8b0-d9f3cf74328d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3308f0e8-70c2-4322-87c5-68b4faa1d119",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3b74e2a4-e16d-4ef9-b411-ef0e137f54df",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10bc8b0-46ba-4612-bdd2-3886087267b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9545f1df-6315-468b-bb0f-1505ec8f0bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87929f3c-86ca-4352-b22d-2e894fe65007",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75537a7-9400-4fad-8f21-e7e9aa4fc1a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a02d20-8f6e-4f66-b1e6-2edcd5868886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdbed2de-58fb-4a97-9a93-1c03d8d66a28",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654f76f3-13fb-4a9c-82ea-58eff927305e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a0c8833-8461-4dfa-894c-d359235ee0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5a4ac9-92d3-404b-af54-c490482d729c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6e1f8d-7ac4-4009-a3f4-8bc0c4d76f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f0a72f-3e53-4d2b-b018-b1ad5aaf0607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0350ed7c-19d3-454e-b067-1be8c3087225",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1e70ce-1c6d-4019-8beb-561a9d5224d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4ac053-f76d-4466-a465-bf46ca67a331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224dfb60-dafc-45b3-b9ea-2d5d56703d98",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2b85da-3f0d-47d8-b422-5f0af4eee917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da82e3c7-7a0e-4369-982f-b1cc08e991dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83b357e-01c6-477e-a4e0-317212d3db4b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474f1229-65dd-44a5-a46c-d4b49e4fb3e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a58733bd-9700-4a92-b564-affa588f46a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "062f416c-cc1b-42db-940e-245399cf814b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "debb3030-a85e-4640-9638-0e54213411be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697df0b3-b405-4d02-bca9-1e8a8b386238",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e180469c-b03b-4176-b00c-e73d256810e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32a396e5-6344-43d3-8ca1-96e8c9095f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5468d1-b181-4a47-91d1-67104e8b6cf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d76641-2f51-466d-9466-b95187c3b60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae6a5ef-106a-4df0-bf36-75e44c0d9383",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11625037-4695-463f-a867-044a9300b0a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba724515-4ce7-43c4-9c06-024ee258ec1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "774185ee-ca05-49b9-8393-6e8e22bce1fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1ed1c1-d3c7-4556-9c8d-22171b9641b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88f10e1-9ca1-4a06-92b2-d506dc70ac29",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f488c62-1f73-44aa-98cf-665b5b8cdf35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3344069-e0aa-4988-bd36-8878bbf74d05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "075c13fb-f550-4c18-9d5c-427405c75673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99d17b0e-e100-4312-be0d-7048145d87ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9911688-90c9-4e19-82ca-960ba9a3019c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ebe882-0655-4509-9086-4b02f5244249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dee4c19-bc06-4aff-a7a9-97a0936ba080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9daaf100-5aa1-489c-9604-a121747a9e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716649fd-9da7-422f-a921-c419816c91dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff32fd0-517d-4fe5-aa5a-21139f0d0ac3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595739c1-c91a-4181-a0f0-f91487f9150e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e2db3d-b31d-4f3a-ac76-5ddf3e71775d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03741009-3c6c-42fc-8393-0f0dfeebd69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a9dd50-ebb4-4e41-aaab-8507613ce7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79b9f42-e43a-4136-ba67-75320bfd8713",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f0d2fe-b736-4df2-9e95-4f2a92c392cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a400c733-956e-4cb7-8372-1385e6ce20fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4c4864-f5b8-4bfb-819d-882d324a9c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15bc67b3-94c3-4ac3-ad36-36f0e5764f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03327a02-bc7b-4081-b194-6ab1e58c14c7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4311e820-f6e6-43f3-a3e0-47374638efb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cb92de3-5bb6-4cc9-939e-6f46bbfb349b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36f33d7-6e14-4362-9fb8-7313a90f4118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bdc74bd-0378-48e5-b677-e5f4f424bdd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec504821-b37f-449d-9a9f-13fd8ec05cd9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9562c697-eb0a-4757-a644-a7190f8a6ea1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f8cbe6d-2b33-4544-bf2a-e64d0e69e5e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72755611-54f4-462d-8e78-a8280e9c14b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0ea889-ffa0-41cc-811d-1822583a94ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f4edba-4506-4edc-9c82-3b22be00a33e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999f8d9b-1b55-435c-8cea-26d700caa212",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3ff4855-ac2d-49ef-980c-7375904eb9bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8204429f-9571-44c9-a412-a55dea4209fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce344f3-a937-4d05-a66f-194a3b83ea92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0cca8f7-2e54-4deb-a954-16739feaf715",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6f162e-699d-4d4e-84a7-11c95211b627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b700c2f5-71de-4ae4-99d2-f1c60c4b2668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c98802-b005-4a8d-8525-82fecab8e523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16761aaa-a8a9-415a-ad85-ef077abf5a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a05af52-1b43-4794-b1ff-db8c13129ddd",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48f8fe6-8ded-4fb9-a9f9-750a6ce25f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280f4cff-fbaf-42de-93f8-d2b425e60d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cf1040-96f7-484f-bee1-d9087fd084b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a0059a3-e4ad-439d-b12d-9fb0bf705123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d6e48e-f319-44fb-971f-2886f5c30790",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00238b16-8c82-4156-bb73-dd525386bfc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7ba987-3065-401d-9682-b76e3947cfd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43993a40-05ea-4e6f-892c-258a6df585b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a807684f-71d3-4357-b57f-ac344c530edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc05f579-fce4-4eb0-bba3-179cbcc2b47a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47eb304f-81dd-4d1c-b49c-4062052b857d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb8c495a-a864-4775-90bc-cb81ae1b03d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f2cc0e-8ac2-4490-8629-f249b5a1c424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f28812eb-c27f-4f4b-946d-79417580a674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa1bfc7-746d-491c-be2f-d6d6470105fe",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc5617d-52c8-4491-ae25-d857b6c6c8cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "653f6515-03b3-481f-9efa-2ff3d856cdd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed31e110-b87e-4d61-bbbf-0728b670be2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac03872-063e-47dd-92cc-eacaae257f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2462700-7cc3-4e4b-b476-20c3d0cbc2ab",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c719c6f-a6cb-4364-b294-16acf29e087b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c054c2-0a22-44b3-b7f8-546171ef4d9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcc06f7-7ee4-4d52-b1cb-4df6e9d7b05d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ae7e1d-dcbe-4365-a936-d03f9ae4db1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895f6625-1119-4cec-934d-6ef963c170a5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75394423-199b-4b8b-a981-26822d57336b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe9dc41-e825-4368-9b9a-2f90b5408eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3045bc8f-b6dc-4cca-b50c-bb68e219d234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c28c85cc-4973-4b0b-aa86-2508a7f53233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21ed1cc-d61f-41cc-835c-4aa3783cb1ab",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6785918b-5f28-4b4c-9615-a3fe1321f34b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa17877d-c726-4359-a930-d57975ade77c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "834535c7-a7a3-4d3d-8f99-578a5882249c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59804bfe-57d0-4e1e-a0bc-8e313c4a00a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450f3cbd-bb95-4d07-8a8b-945905c396de",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28bab688-5281-4047-90bf-088e03939a0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c48fa17-fae9-49f4-a5d2-aaf2e8c7b4a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdeb9976-14ab-4a36-b48a-bd1610c1b09c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d0aff3-c277-4edd-8c0b-b1288d89bba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34756bdd-8976-48a6-862c-0854d72dc34f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb578e2-0f2b-45fb-902d-a33438e0c13d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7894473d-3c4e-416b-8aa4-7f775bb2f0e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dbef08f-b685-4157-b9e4-341080feda00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0fe8954-fbc6-4d53-a67b-5794f9c2c17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ba8081-ab50-40c7-bd6f-8badc919503a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e876dfd-9e92-439f-b024-07d7a6ffc0e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f37ec56-c2e7-4a8d-8e77-fdf25810202b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "587d7019-95af-46d0-a4ef-fe622b6909a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f546424-f8e7-4ef1-b7c1-4aadb390d38c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720ab95c-ff82-42bc-9c9e-839823913d67",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5edd8ba-50f4-4cbb-9cda-d058b089cfbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e6c93f6-4018-447a-911a-a010fd4f8761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8f08a4-0a16-4be0-8403-8b5ffe5621da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264cad26-48b3-46b0-a49d-1060debdda88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0e648c-855e-4640-a1e0-05787ccc8b49",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136d31d7-f725-4f41-8545-2641c2e876b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1d6b532-e59e-4664-ba39-03b0ae3afb47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "347a620e-8c6e-405d-b0c1-fdca1060b273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb548da7-85e9-4f41-986a-f52d5823d49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01425609-a4ac-4319-a8f8-36a1e0d2a5e1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fd4350-596e-4779-9fa8-6e13c8e41ecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fcfa98a-5bcf-49f1-8122-9081d9ea3f35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80b422b-5a96-44f6-90a3-27dcd52eea52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cea75a0-c745-479b-9da2-01b066472579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1087cfc5-6ffb-4b72-88dc-44b03122c48e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c25b214-ee9c-44a4-8c12-dc65eee34b6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c11c19b0-f06f-4b3c-8808-9ce2dc811a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "019e27ef-b4de-4fad-981b-ba5364f61098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a119a6d-12f3-4d53-99a1-7f7e576ae8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f75a539-2c6d-40d9-8830-88ccfbdbdc27",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd43c61-0bf0-470d-9657-242f941b0d72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41c0cba3-002c-47cd-a53a-40d48998bf6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed4e166-b327-4bb9-82f5-c2f91c2ff9c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9711dac6-72d0-49b6-a6ac-b939d18b2637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21edf75-cf21-4e90-973e-4bd727aef29b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b816f3f-b11f-4dd7-85f2-8eee34ee5d74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ada77d2-170a-4395-91a7-d84ae64c4e41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c364a3d-59b3-4f79-93af-a1a268522147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68e8483-ea59-4fe5-915e-0ffbe48799e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98173214-dffc-44ff-9592-78648042417b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27eb7d71-09f2-4639-9440-b70247d365e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f01fde4a-d8dc-4102-8339-e62a07320812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e080e255-696f-4bff-981f-c4f6fb547bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3193457-1f1b-4824-83cd-010d21680183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064ff0c2-b33d-4d4f-9298-7087a8117d5d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6547be-5ce3-4e7e-bfd6-b3f8cda40261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4917ac4-6308-42ba-bdea-1295bad06c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "311f3961-1911-447e-bcce-2ba1f22a794f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b216d0d3-cd72-43d2-918f-9d4e9dcefea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193c3e0c-8f32-412d-85d1-5c9e4caadf8e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f61ba05f-d077-42f9-ba98-d6fb6235559b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd59829c-2dd0-4b34-acdc-b03e9756b35e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "302e9925-42d5-4bbb-b646-6116f2bd9612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92cbb68-54bc-45cf-a5f2-7b913b3dbdea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da86197-1251-48c2-bb21-7e27dadfce14",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698ac5c2-77d8-49b8-acbf-dd1c63ba0551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d8187ce-96f7-4dbc-8dce-72d6725d5aa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "299d3d7f-1e51-4b3b-92ab-6f9910d2e7c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd023133-69a5-400b-9ec1-69086131bc70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5f706c-f178-4259-ba77-e4fdbd6b6bb5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ceb83f-b3a7-4d46-a1f3-37bc5043f2ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8afd8965-ad38-451b-bdd4-84532fde7b8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02349c0f-becd-4b47-a3a9-0e829370801e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "936fd2d0-4f94-4146-b479-4cfad36345bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a09f20a-d655-4068-847f-59b4073a6fa7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9100d6-5e5a-435c-8412-6759154c8c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2c6c7d-d432-47e4-b317-7d2e36496866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b94c6bf-bbdb-4de7-8d4b-4f86cc08e79a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d5334c-08a1-448c-b342-b54bc137acc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044e1ca1-6d7f-47b6-a38b-3044b9a1fc6a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f456ce-d036-495c-88cd-793a32f84d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8095bfb-63ac-4b40-809e-728df4fa2c39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2416523-a49d-4a4a-9091-12e5473fbd74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7acb4765-a392-41e1-973e-1879a00ec511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be29cdd-ff37-4a84-ab0d-5364da9cad37",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafe4412-fb85-4bba-b24c-ec29b61e4efc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce292eda-0084-4528-9211-dc5087d2fafe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd3ade4-7e4c-458e-a4c1-e096feabbf26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82649b0f-8073-4c13-8b78-43eaa87783e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7293c5-ec0e-475f-9a70-87505996ea18",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50452a7-ba28-4419-a3dd-9c2beb0e68b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "042e0c2f-4598-4570-995f-1ed5861c10b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df6453a-d03e-4222-8218-071418ccd3d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e88588-90c2-47b4-9b76-981671fe7cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e9b47b-6f44-4b21-a082-44d88e3c5478",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce004fd0-3284-4bc9-9ab3-ceda16cd7015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d46d6d-7bc8-403b-b84b-2e0907e3bf72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8e5067-6ea9-4db1-b632-94806fe979f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8dba04-bcfb-47ed-a885-50bb2af07c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d663b5b-2351-4d76-899e-66c1c3434971",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94cabe6-2f7c-49e2-a6ff-1ab0fce435f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaba2b53-3245-4924-93b6-831d5a1c3561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2ff341-40dc-493f-98ac-5c0d7b1b05de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b755a9-5633-4668-bdec-c3279ffd121e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eca26ce-b214-429d-ad81-4bbff90780ad",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0675fe35-ef65-4c55-8049-e7bfaddd6afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b6126e-370e-42de-a30f-2a5583b0e07e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c9d994-d534-4637-a365-8123e685e73c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b5bd5bd-4553-4954-9f3b-9861d4b4b023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d881c4b2-c7dd-4279-9eef-e3c90f8bab29",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42af068-4f0e-477b-a527-a910bacc1a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5376acca-5823-4341-b834-c174511b9cbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e9fe2f-bd01-4f23-a7fa-7d8685cc2f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c8c123-a0d9-4915-8790-8672d55a863b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea453b67-dcf6-4467-9abc-c757513c87a9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5dad3aa-f709-4743-af1f-14d6320e1c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a66c3b-5a70-45af-9072-9e8bda96eac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "452ab568-c9cd-41d5-b5ef-6e8d61136287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31f6a78-4d11-4c9f-a395-7d7dc54b033f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70f5e0d-bd8a-4836-9597-bead849821f2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a7bf75-ba5c-4300-ae9b-5a4158409997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89da5f75-13f3-4bc9-bfda-cf2f0536f5ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04763695-347b-456e-9167-bc9a7423410b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94577165-bd06-4beb-a612-e0906c11433a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7efc219a-1255-4df3-942d-984e020f320f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fce1c4-9ae1-458f-bdb6-73cd04603231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c15a2f67-2d89-4a59-bea4-baa8a4e68f5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a202b8a-967c-4343-852c-ca115eebda25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470709ca-6c37-46ec-8211-f946a63c8a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4196b60-2e4e-4c51-bb8d-91deae26bc00",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a89321-b55b-433a-b3dd-1ba8555bd287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3735c4c3-cf6f-4365-8972-1397585d5634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c96b904-1293-4e44-9831-2391387c69db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af0b312-7856-4987-a906-9832d906f60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c781a37-4860-4ca4-b65f-c1e800998531",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd2947c-a325-4846-926d-9003c0c0febd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31da1cba-847e-45d8-9191-ce8b9fc9c361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f50241-2068-4ed9-8a0d-f8ce3532c0fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "418301e6-294e-4bcd-b48b-fc03f4e32585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054a7939-a7aa-4c3e-91d7-0d3e8db3e9f6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c403fd-c329-4f40-a8e0-b085e93eddf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d352f3e-32e5-4a39-b868-3b0548ee05f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc7848a-cd5c-48c9-abd7-bd0c1e9aa956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f8631e1-4ee8-46ff-b555-2bb92e267bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929ef2af-d9d8-4556-8577-7645ac87fadb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d3d6ba-850f-4d55-a99d-968f1f95d069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80fa8fcd-3ae3-4720-994b-26c9a2c59190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "646a20f6-a97f-4ee6-b3a3-07fc2d826dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df151ed5-11be-4395-bb93-42f1e317bed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cab81c2-0cbb-424c-afd3-665a453d94f9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e24f07-d2d9-4dcc-bfd6-be1e7cd66de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4795f07-5f0b-455a-9b16-54f036239129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea445ed-84d5-4905-93b4-de58f46571da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5afa8371-7745-489e-bf50-8fc6e9245234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba986860-d7b6-40e4-8934-4954aafc7b2c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cb3fc8-d088-4c69-ac9a-d02e9f6189c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecde7f8b-9c65-46b0-acce-42014dc85c07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96dff20f-79c1-477a-afb6-b454c012529d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f23d0e9e-830f-42da-8ba8-f17178e92677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2864a35-776e-4994-8df9-d3fa00373687",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfe234e-e304-48b4-aa44-7f6cd51eb81d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fd8269d-64b7-4231-a650-d6af2951e829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18409d75-cdae-4690-b1a6-ae593c70b9c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7549fe6d-7273-4d5f-aa6e-1deacf403088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a7e681-fc30-4324-899e-efb906c042e1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df416d17-fb9f-4d43-8ec3-f46bf79ce637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807d333b-16f6-4ff6-a349-e294459678e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d80898-404a-42e0-9bde-9180fbf36ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58afbf5b-b1a7-49ad-b5e8-189371b93923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b261e8b2-a716-425e-978d-d3a3a4657a63",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e774f2c-c7be-4ec6-8eaa-755878eddd95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0f83d7-564e-47b4-bee2-c4dc8169ccc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf0b095-d359-4156-9ffc-252a76e15e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9effabe-2d41-4698-8e73-623254e97adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455420bd-c847-4371-9150-ee23f367eaee",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441eb20a-fa68-4e5c-a80a-7b4fdc7d06c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b60979-879f-4ff2-b727-a8eef26ea13d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ac0165-056a-4814-a4e3-32cabb247b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9654c3-6ca4-4ecd-a008-e9c742ac719f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd76d6b-1a44-4788-9075-73819a61cddc",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00bdc13-1350-45a2-9085-92f4b924fe1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3004260-5bca-4f9d-ada9-20b9cf7a54a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "691f391c-b0b4-4b0c-8559-e66b02971cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a78cd673-541d-4f77-9f06-fa121deb9134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceeceb3d-03c0-439f-9492-a5eec454c33e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acb5f9f-4f1a-44f1-9927-6d7e4bf3df30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e3d65b-57cd-4dbc-b800-c85db7effebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a66fbd-6099-4ea9-8015-4d4222ad7ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09533014-bafa-4089-82d9-ea7ddf25ed16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949d4cde-e6b8-40a2-ab3d-c9c04a7c23e4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a23659-736f-4da3-a027-ca7adcfd0c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "546638f2-0efe-4c43-befd-2280d0923a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "479cd68a-7f90-48e3-b0a9-1498a2303c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44eed36b-1d01-4c34-802e-11c7337ad8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3259d34-5a5e-4279-b98e-efd65c1c5e19",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327acdb2-7445-4b0d-8f6b-86ae0b0164ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "279764d1-8cb8-4c33-9745-f86e04e16e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d956bc83-9abf-4f17-9103-9fe35817f53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93179ec-64ae-4877-a273-4fd651773e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd618ea0-1c87-4640-9f79-cb94725f78d0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9db1c5-fb62-4ab9-bc72-b3f2dbc82444",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a3084df-e24a-4e21-a9b2-defe4203d718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd28da0-9992-4b97-8379-879e128b78b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92bbcc40-362f-4cc2-b9f0-31f57bd8f314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784658c3-3b70-4f14-9fc3-fdd6959f06c0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46c21ab-3e64-4d5d-91c3-05e44558e5a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55e084ca-6ddd-4ed5-bec0-32a8f7c18740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "269381b8-8913-418e-8da6-4349ff339e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5ceb449-7497-48bc-bbeb-a816cf44a5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb50389-42ac-4ae2-b4b1-4325acfd55fa",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77aba386-8a91-463f-b33f-ebc5223bb7f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6af0d613-1274-4d1f-a806-bfc997d270a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ceeaa8c-e9df-4b14-939d-844aefb0963f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19010df6-d769-4d09-994d-e1a1cb3971cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f013a169-42b9-4232-a784-01460906c9ea",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b425533-f00d-4b18-9ff1-3a5aa77c1fec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bc3d2b3-6b6a-42c3-8543-4b56140fe341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ea7d9a-dd68-40a7-8ebd-7c7c9fd01953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a501e5d-5a73-4247-a8be-3bb30777fab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6891a0-2eaf-4775-88ee-d0be6c40e0a5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6d2a52-fb94-4250-be70-880fc0000a14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5883393c-5766-4f5e-986f-7415bce9b207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85fde7a-6c2a-41ac-ba43-ec80ea7328be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d477a9d7-f9ee-4115-877f-55dc8ebbccad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1654f13-7444-403d-a526-f9edee0a84d7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6b9536-6316-482a-baa2-260cccc66a9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "828c09e8-aa89-4f14-a9a0-6e56030a7277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70566533-88ab-4676-8420-fdfa38e4d9f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca9381e7-8710-4424-9aa7-11dfb1052ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca68f1e5-abb5-49f8-9085-cfb609c4af65",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16d6865-5811-4c41-832d-39265b97ce0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "049cfa9d-0a55-4476-9b44-2e5fc4fde969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6df2039-db67-488b-a29a-d186d486bcb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b2fa0e-399e-464b-a6f7-0efdb26f5d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081fe53b-d914-4632-9bba-b968b324df75",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a1304a-8e79-4a5f-a46e-aa05991c58fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98ef9275-a7a3-476d-af88-3d25c20da3ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69735949-f27c-42c0-937d-d843f0a4e7d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca195cdd-4b38-4e3e-afa6-da615ef710bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f60bf6-c860-4c4e-8778-943b0e4773a3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9aecad-26cd-4591-9854-3ff0da2cf7ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8048df1-605b-4459-b47a-05e6758ef7b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed07b804-f156-49d6-a990-7390d52591b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97161979-288d-4716-828e-4cf2c6448b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd2ecb0-46cd-460f-abaa-a74bb545223d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737668f0-2eb9-4027-9905-67f278544346",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c8300f2-0938-494d-91c1-7d2fa83be3ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0b0087-29d4-4d76-bf65-bdef995da3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520ba588-d488-410e-b69f-2dfabdbf6b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58776d1f-12a6-4b79-aa29-62e342857474",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2034608c-a563-4644-bc22-dcdfd3944172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "295f201e-46b4-444f-a538-4ab5cd903bea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c43d35a-07e1-4e27-9eb4-446425338e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37cd6a68-fd56-460c-a1f1-b362f00ec8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1193fa8c-96a7-4dc2-9266-7847cb7cbd92",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa821d91-533e-4325-b32c-d396825d5a94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfe07475-d56a-4579-ae7a-35230caaa682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a5123d-d684-4236-8b1d-3ee2fc3483f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50762242-cfcb-41fc-ae7e-3a8a3f2c7064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da71783-2303-43e7-bc57-38f677170213",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec21f44-385c-4956-a5e9-7ab33c7ea300",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a6aa95d-44a5-405b-8dc8-9dd59a5d42dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac19e1a3-c73d-400e-8d8c-44a177f2596c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55f93cd-52ff-4737-bffa-4009e9f23625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424709b6-990c-4229-bbf0-e9e33928591a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa12b948-c8b3-42df-a44f-9e467c4d330d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ade3e77-2582-4b84-951b-0788e2cfc9e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45b887c-c138-413e-893a-6e7255b8686d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4328256f-bbc8-4ca3-9213-175c4dd8ec2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e13c375-5d6d-4130-b855-a407d4c9b3b5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae50407-3118-4d72-8d2c-ecbac9148c0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "230006c0-814c-4c60-8982-d8830069a25e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db587fa4-e0c7-4278-bc05-a869856c9952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "344d929f-719c-42d1-8bce-d186ac8330b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033b95a6-fc57-4e4c-baf2-ff214683f2d9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da48653f-bc1f-46bf-b854-d76529bd2430",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5811a581-fb17-42ee-9ba5-4659cf38e58f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a1d8e8-bb65-4f16-a377-3b09855bc4d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e4f7c3-4913-480f-abd5-683da7ccd6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9638e4cd-3f22-45c2-a3b8-976162f0d825",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d651b61f-b265-441d-a46b-d1d62d0f9b11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "839d61bc-3d83-4ed9-af80-c9274f5faee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f227fe1-1031-41e8-9122-ed293e5a5a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b02bda1-98d6-4486-9454-08512e3717eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8483a8e4-3d23-4d80-b65d-9319090df1d9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ab7497-57e9-49ef-8ef6-e4ac3b0dcb24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "177eebba-2a92-4e2c-8fde-62cd8c13169b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59243bf4-069b-42a9-9954-5f943560bcae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9717339-6b4f-477a-b343-c6b9d6340eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f289bf-fa17-4fa0-b7ad-bc924d92be46",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ceb9b4-4ce3-4d07-bc6c-27f9c1c917bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bda5a41-aca2-456e-b978-91255ac7a6c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7d0264-24d6-46d5-ade9-74b46dd5a6d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b5e062-df52-4365-9bc3-cafa5fe855c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db4916f-6063-4822-b155-60a07c543f5e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a1ae33-6362-417c-a66a-a6395a49a870",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed68041e-4219-42a4-89ea-e22fba569fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c870ced8-3e87-4417-aa35-9138a5419416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "564ff2db-c5f0-4706-9c41-b543d6e76509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55f6b79-eba6-4391-9e03-932ddb76e26f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c97f2fe-4fac-4ee2-ba61-a35aa4c2fdbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "903746c3-ee02-4b14-9f6a-eda22101e51f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabe8598-abab-4d07-a65b-b1e75c011ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5efeca98-d12f-4c30-a61d-dc3f54bb40b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81ebc79-bb13-4fee-8692-3ef0d700578f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bf9303-fca2-4c60-9384-0a3903c8d886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "936fa2ff-646c-474a-adf5-ebd36f435cb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4763bf73-d755-4c34-8432-50b4a1cddb75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0635cb02-7950-40c3-8718-5cf963d6cd8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e05550-a118-4f3d-a431-e9a26aeab49d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d70d9e-603a-46fb-94de-f0abf357e5ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2fd880d-1900-44b2-afc9-565e9adb3bf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "917a8c7a-9118-4363-abed-748ebd5a91bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03366d3a-5eb8-422d-9d11-86e5e8c8bab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d28166-610f-44c0-8412-ed1abdfea027",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19075baf-ce9b-49e6-9fb3-7c244f30cc3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d0f77ab-cfef-40fa-b95d-59979fa52dd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e212e42f-a1d0-40ac-85da-fc4a1a126ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc87190a-b5c5-43de-b126-1d4ab1ffdedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4daef74c-d954-429b-824e-804f5406a1d2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2ffffc-4572-492f-88f1-a5b456cdc291",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66996422-ed15-4b75-ad73-79902a1635c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd359efc-06d4-4a2e-b472-dd5e961d78c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b019ff-d8c7-4470-a848-2c129592139d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b8505b-b726-463a-b635-d3fd666bc8c2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90cf2ae-375c-44fd-83ae-19a86ede14f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2be0395-c2c9-4bc1-87eb-a17c45adf9d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a463809c-fc6d-4aa2-8c67-2c892e410d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "481fcd4a-3701-4885-9f4e-4a7fd3b926a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c642b407-c9ac-4bda-9455-8ed61ec6116f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146dd576-c48a-4b33-914a-630c2c3a12e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0febe753-7ca8-4caf-b0f1-bf1de1db4984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0e6c24-2eaa-4579-b8c4-91de8f514825",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90fe2289-3488-4203-a039-2da458ccf1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979edc44-ff22-457f-b346-252a523bc25e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9920b7-6bdc-4803-815e-08ced6500108",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f5d3c27-8a29-4412-9a4d-707c42702c7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db49526d-abb8-48f0-bd17-6b616fac33f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc3519d-206b-4a0b-81e3-9b3b1c98318e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b02e246-5c71-4664-8086-5244b365857b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4350148e-9148-4d05-b811-7b6cb78ddfb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "946f4617-d25b-4a01-a572-3a8968874dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "970e5945-2111-4611-acad-d51162350ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8aed520-cba8-4231-836b-0280d538ea85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511da953-ebc3-45b1-bab0-e4798f35606e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2c6fc4-90d5-43db-b862-a721907487c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae2c64c5-3da9-4989-8132-417c3b3b7f50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a9f18b-5819-4f80-bbeb-ba64a7e4bf7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb5db798-e06a-49d6-b11f-1ef047c4557a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63febe30-8960-4eeb-97d3-3425909015a5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45c3ec9-eaa8-4782-b4ab-3b5c2d465007",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dde27767-0813-4db3-a690-03e8110bfe9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e58a35c-85b0-4a36-9a67-648f9df19899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8abe02f-5087-4738-be13-a2572fbdaa68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6565cc-9fd5-4285-8491-5885c53223f3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d27734-1c44-418f-8e94-2bf0972b3918",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6698f0f2-3aaf-450f-8c59-7bb1fba217d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c841f5-ec08-4163-8773-e96cc7949905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f07a01-8fe5-49f3-aba6-2418a897449d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9eb42e-f08c-462a-adfc-2881fa42bf09",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f50e51b-f92b-4f4b-8ddd-f4f3224feff0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d85c3ed1-fcfc-482c-aa76-c69c9413f205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f585c4bf-ffe2-49a6-b302-f68757b10da9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81751ed-939a-4abf-b374-826f9ec15009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7bdb18-d492-43db-96bd-121212099020",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7681ae26-52b7-4832-99d5-19a3519e1b36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a2c3557-5d75-4dcf-b093-39b4c5534897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "667c68cf-dd4e-41d9-92dd-f072c50c5b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae78e16-552c-4d3d-be6d-f78bff4a39d2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd44d812-5852-4c8b-8023-2b331258df66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3726693-3d6a-4e49-afda-1c6858f3a678"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46d4b1fd-588f-4153-a12e-b77f8272a0f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f28c9fdb-3184-431d-bd6e-7b2cdab29d74"
                    }
                  }
                ]
              },
              {
                "id": "372bf958-a140-41cb-9f52-91550f3e3734",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d76c9046-66ef-4253-b460-bb6f90eeb7a0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef67c3a-138f-4b5e-a8ab-d503d28d5090",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bdc845ad-31fc-4717-b345-40775dc55057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb7ebd0-84dd-422c-809e-156367ad5f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0340bf13-ebe8-4324-a9f2-7affa347b753"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2da0f08-083b-4ab0-a6e6-c0fdaac58c31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83f1a98f-05a7-4933-9bdf-a00e926af5dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "09347ef3-8a40-4db5-bf4d-342138d86c82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06582a01-a291-4590-b73e-ddee40b6cff4"
                    }
                  }
                ]
              },
              {
                "id": "1e2cf87a-e488-4fe4-9819-6833b0135870",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4f3f28d7-150d-4100-9705-e45ae88d0704",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dee21e0-adc0-4127-b915-1db56cdf4290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "53e2625c-68a6-4e7b-adb0-45c9f4aa4844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90e1434-ee34-4b39-9c92-2f76f44e46d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f538585f-c5e8-4dc2-bbef-0b8e0379801f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0786c8ae-f2c3-4f33-bb6a-25d7957317df",
            "name": "Positive Testing",
            "item": [
              {
                "id": "168361de-47b1-4bac-9528-753a5032d13e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6edffcd4-eefc-4bc3-8fab-9f5e58d05678",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6d1db83c-645f-41a4-a8fd-e18809baa0be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8e35586-72ab-458e-9eea-506cb6cf1818",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e08cbde-28aa-4eba-b331-c491636f5fe3"
                    }
                  }
                ]
              },
              {
                "id": "b789d396-1d5a-4784-ad1d-caa5070ee9ca",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f675472-a4a3-473f-ab3b-d4fd15c73697",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cebc00d6-7a26-4fb4-8eac-0ac1d4d3408e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3222500a-d231-45a9-a864-ed896ab9dfe6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd3e7d9d-bbbd-455c-9ce7-c2f32b34952a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb798b4d-fa6c-4ed1-b42c-7ab1a045749b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "06d6b459-c236-43cb-b5fb-5183978f4771"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86ae6935-dbec-4ef1-b00a-f0cb7a657229",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea41e600-9ad0-42ef-a679-5a6eef9927ee"
            }
          }
        ]
      },
      {
        "id": "cd1bbd24-75d3-4cf7-8517-f7cfc171a10b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "44789fbd-3288-426c-b969-4a09bfda2c9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c78b49fe-aaa3-4665-b309-ee1d6d3c35cb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "08b64b8b-2bcd-496c-938c-a3758b81ddf0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cc96ab-d186-4589-b6cc-dac1c31c4aee",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e47c9751-df94-44ca-a343-6a6e9ec26074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34dbcc2f-8a23-4f6f-b7d3-8897c5a9d204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90e34416-c9b6-4f1d-9591-77c77c69c1b4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4301504-68f5-4f5c-b214-6475eeb5f6fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1772dad5-6515-42a1-a85b-02422a539785"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "14af3554-8eb5-44bd-8bb2-df30c85f69e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2135776a-fa61-4af2-b311-2634920dc79f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e567388-0409-4dad-88a0-a24a1b0408cf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b54bcf1f-cdfa-414a-bb5b-2bc79389f489"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a683c66-ace0-41c8-9e39-0d9b54123b9c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c02215cb-18a0-4c83-aa96-a6f44df5d9ea"
            }
          }
        ]
      },
      {
        "id": "b0257dd6-68d0-470d-ad6a-f8b7e4cbb19f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0beceb1f-6e34-40eb-bc13-f4a1a32e8f68",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e20fc04-f00e-468f-9e7b-ef6235a60075",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f8a2652-3e1d-44bd-b4cf-192527e31295",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c556313-a678-4621-a394-aec5df4a0ed7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a136d2ba-7592-45f4-961e-5660788663bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46cee077-3d35-4389-8bc7-6955648610dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bbd1dc8-b888-48cf-a93a-d603177a5d0a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d02b606-c916-4b6e-b582-35735d6da17c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3190cccf-6234-4822-ba5a-7b77fa8e8088"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2efcf00b-3c8f-47e2-8d51-94dfb075d3cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c844c0ac-62dd-4c75-8c7d-02978209b738"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81676ab2-465e-4147-bb03-60caba5f9d0e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "57662600-0f62-4ca4-9a42-8b3028be536a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1aa35920-53f9-4710-a8a2-f5464dbfd7c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d1a11605-40fe-4921-a631-0b74dbb6b491"
            }
          }
        ]
      },
      {
        "id": "4fc0ec86-92ae-4d66-8b36-30af11dbb44a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fcaa87d4-cc8d-43f1-9700-d61671df52ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d2e177a-eba0-4568-9ec4-3d04f2e3a47c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c6e274bb-b24f-49f0-8871-869379f69b6b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e237ed2-9dbe-4513-b28a-a00d5f8cad53",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a2fea5f-72d7-4f6a-baff-7c52160a7e64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22819569-882e-433d-ba7a-a3f0d7ad1271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23225698-9af2-43dd-b9e3-b18a75f03686"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8942f56d-979b-49fa-95c8-a12c4d49c94a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f7efeb0-9af1-4807-822a-a3bf58804201"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2aeba62b-136a-478f-b8ef-c797b9dfd85f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dab0ffd3-ecb4-4060-979f-0b37bffd1748"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b19d378-beae-4c83-af1c-0179a595777d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "351f0000-9bdf-4870-9a50-dca890e1a18b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70886e61-8e45-434d-ac11-bf2c8095f7fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23344f12-cd28-4594-966c-b1cf0643f7ff"
            }
          }
        ]
      },
      {
        "id": "32d06176-0378-4e85-a64a-7df4050ad454",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81f920fc-f535-437b-9bd9-f72f8d125ba5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "710d8694-9ac5-4c5d-b9d6-1dbefb2b2e18",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d591166e-15b1-44ff-8ef2-f9da3706c0f1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01cf7658-e2c2-4ce1-9aa9-5d3c964ff3db",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff15865c-6ec2-47ed-8d35-db309ac8e2a3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 773.0714285714281,
      "responseMin": 11,
      "responseMax": 26362,
      "responseSd": 3966.610070981946,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727743887402,
      "completed": 1727744091638
    },
    "executions": [
      {
        "id": "16ffa3ca-6bbd-487e-ae9e-d3c6fb33447d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4f64f974-197b-4550-b2f8-e3d443c39a39",
          "httpRequestId": "bb9a3962-815a-4f79-9d95-d9919daef2da"
        },
        "item": {
          "id": "16ffa3ca-6bbd-487e-ae9e-d3c6fb33447d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9a0f4341-ff3d-4d3a-89d8-be8e94ab6c1b",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "83c3de94-be18-4d48-97f3-da47d008663f",
        "cursor": {
          "ref": "2c39eaed-40eb-41cd-8532-1008f4d704e3",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "01154a8c-f8e0-4111-ad72-03ba6ae52755"
        },
        "item": {
          "id": "83c3de94-be18-4d48-97f3-da47d008663f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "43c72fd1-1aed-4227-8df5-adcd8599f52d",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "eea96095-cbf0-481b-a5bb-7d3b2de0f0d9",
        "cursor": {
          "ref": "9b8aef2b-4891-4e0e-8db2-b7b1b0eaffe9",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fa166518-f44c-419d-bb7b-90ad0654d690"
        },
        "item": {
          "id": "eea96095-cbf0-481b-a5bb-7d3b2de0f0d9",
          "name": "did_json"
        },
        "response": {
          "id": "24fa897b-656e-4286-acf3-290541d8b4d1",
          "status": "OK",
          "code": 200,
          "responseTime": 466,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3f5af5-701d-4706-9589-792040f62030",
        "cursor": {
          "ref": "ace09289-c135-4867-a789-75699ec51a24",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "71b418a6-837b-49e7-8c78-489db7cc438c"
        },
        "item": {
          "id": "dc3f5af5-701d-4706-9589-792040f62030",
          "name": "did:invalid"
        },
        "response": {
          "id": "ada708ea-9c90-43fd-a2d5-5c56bf14e406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2229,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3f5af5-701d-4706-9589-792040f62030",
        "cursor": {
          "ref": "ace09289-c135-4867-a789-75699ec51a24",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "71b418a6-837b-49e7-8c78-489db7cc438c"
        },
        "item": {
          "id": "dc3f5af5-701d-4706-9589-792040f62030",
          "name": "did:invalid"
        },
        "response": {
          "id": "ada708ea-9c90-43fd-a2d5-5c56bf14e406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2229,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1314dae2-7ba5-4909-a4a3-67abd5e67d52",
        "cursor": {
          "ref": "925c5fdc-1b9c-4280-aafc-0f7c8c80667a",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e4e835a8-3c25-4595-b631-28bba2a3cb8e"
        },
        "item": {
          "id": "1314dae2-7ba5-4909-a4a3-67abd5e67d52",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f9eccb4c-e7f1-4b0e-ba0d-ec81c4380643",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2688,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfc6600-90b5-43f1-9962-844fe48506e6",
        "cursor": {
          "ref": "64452753-9035-48d7-a2aa-b0a0a4969b8e",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ca8314d4-c405-408e-8562-4d630349e662"
        },
        "item": {
          "id": "ecfc6600-90b5-43f1-9962-844fe48506e6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "217ea6c2-daa0-4398-bd14-45b9f19b5350",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2278,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb649e7-796b-4c1a-8925-101dbf83e61a",
        "cursor": {
          "ref": "d463633f-f1b6-45f9-8bac-53faa94da9b2",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b191c314-6607-454f-aeee-e1a821831ae6"
        },
        "item": {
          "id": "8bb649e7-796b-4c1a-8925-101dbf83e61a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "bc0b26d2-27d2-4214-a56c-caf899c61a46",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4721f5-0482-4a4a-9a60-7dc943ad7829",
        "cursor": {
          "ref": "3a8f1292-fac1-4dee-974c-8029e9f011e7",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ae11b6b3-4f90-4c7c-9874-6fc72813a66c"
        },
        "item": {
          "id": "4c4721f5-0482-4a4a-9a60-7dc943ad7829",
          "name": "identifiers"
        },
        "response": {
          "id": "9512a66d-6ec6-4a6b-b4d0-03e3dc0c9049",
          "status": "OK",
          "code": 200,
          "responseTime": 2361,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4a4675-3788-47a4-9719-144f0b3efb04",
        "cursor": {
          "ref": "272f33c6-ec4d-403f-b787-0383136d28e0",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a303d9d2-7da6-4a73-aa51-cb86ebf8da50"
        },
        "item": {
          "id": "3e4a4675-3788-47a4-9719-144f0b3efb04",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2940af5d-1d68-476b-b786-ef357e093ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f0fa2d-8ae5-4c23-8071-5fe395cb4aec",
        "cursor": {
          "ref": "5d9fe2c8-a2a3-4eef-81fd-656edf1fb158",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e50467d1-2cf1-4ecd-ab05-1cc9985514af"
        },
        "item": {
          "id": "c0f0fa2d-8ae5-4c23-8071-5fe395cb4aec",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5fbaedc6-6119-4ad5-92ca-3e419569feac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823b4592-c80a-4387-9af6-f8d75599a08d",
        "cursor": {
          "ref": "5f7771df-c8ca-4120-a106-9ed5b8e52009",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "aac1dde4-2fa8-4549-ad2e-a22aa9942c41"
        },
        "item": {
          "id": "823b4592-c80a-4387-9af6-f8d75599a08d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "07f503c0-5c47-44de-aaa8-be1bbd7942e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37e2583-36f4-4ac2-9f65-896472fde4e5",
        "cursor": {
          "ref": "cb103288-9a7d-48de-8764-4b3e895e7a4d",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d0cf995e-097a-44b2-ad77-9cc49959b030"
        },
        "item": {
          "id": "d37e2583-36f4-4ac2-9f65-896472fde4e5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ea62c479-ef8a-405b-a150-dceee380eae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed9574a-9799-45b1-a083-388ac547419d",
        "cursor": {
          "ref": "e9764abe-fccb-40d2-96ef-41e1f9ea5c2d",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cd15f61e-0ed8-4e55-80a7-ebfa25118311"
        },
        "item": {
          "id": "4ed9574a-9799-45b1-a083-388ac547419d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3dc54eb9-db3c-4e99-9fd7-45af49c50a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26914e26-8b8a-40b1-b445-fa84843931f8",
        "cursor": {
          "ref": "6541f402-7f12-4fe4-8b9e-e15db6df697b",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "81be91fe-1b8e-4c7e-b4fc-5c82eb402949"
        },
        "item": {
          "id": "26914e26-8b8a-40b1-b445-fa84843931f8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "13d9f9cd-e4b9-42eb-8060-94cd4e3bbe32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b267e27f-ae67-487c-b2ec-d3ac3cc60426",
        "cursor": {
          "ref": "755aae48-be5c-461c-8e9c-858cc810e950",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f0faf2bc-c472-4238-b02e-fc377663220c"
        },
        "item": {
          "id": "b267e27f-ae67-487c-b2ec-d3ac3cc60426",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "13cac373-3740-46e1-b7b1-ae923eb3c243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fcfdc0-0f90-4362-812d-7ae8b9db9cff",
        "cursor": {
          "ref": "4248ed3b-4375-49bf-8e80-f7e1b5b52bf9",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "38b6f8e6-7c06-4fff-8a2c-ca4e2e1279aa"
        },
        "item": {
          "id": "d0fcfdc0-0f90-4362-812d-7ae8b9db9cff",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e1293a03-071f-4bbb-aa9d-32c70f016c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38d7ec2-c427-4a6b-9f3a-985c9abe3fb9",
        "cursor": {
          "ref": "ceba49bb-c2f9-47ad-8fc6-827a51f75ea7",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "74e0e661-1c1d-49d6-ad06-ef7ec0fcafe8"
        },
        "item": {
          "id": "f38d7ec2-c427-4a6b-9f3a-985c9abe3fb9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "32fdd44d-aa98-4b37-bb39-c9fe65d25b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cd5943-4d1a-4384-8b32-5e63ecf0afca",
        "cursor": {
          "ref": "c6acd404-d09e-42a6-b8c6-54fc68078edc",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ad2514a8-634b-463f-a404-57f8bf50e4b4"
        },
        "item": {
          "id": "37cd5943-4d1a-4384-8b32-5e63ecf0afca",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c734ad17-6364-441a-bf0c-7cf335615a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e794ca5-5b47-4641-a9a4-c133fb41ce92",
        "cursor": {
          "ref": "67d90fb2-729a-40f5-88aa-b3f2c58f0a8e",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7a55df66-7e26-4717-85ed-4a754086ee55"
        },
        "item": {
          "id": "8e794ca5-5b47-4641-a9a4-c133fb41ce92",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2f840f0b-7063-460a-9fd8-78a544044247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c300a5-1b55-4dcc-a699-9b5e1c9456b7",
        "cursor": {
          "ref": "c9721693-ad30-47af-9d2c-728557b99812",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3f84be69-de35-4897-96a2-a29f4b4616a6"
        },
        "item": {
          "id": "31c300a5-1b55-4dcc-a699-9b5e1c9456b7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b9a94022-b076-4d9e-b028-ed14a168c07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8230bf-95f6-4480-9a9c-4718de492801",
        "cursor": {
          "ref": "1e3b32c8-4571-41eb-9f6f-3c46c0b531a1",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d599e187-2014-4d04-9b90-f8d37e333337"
        },
        "item": {
          "id": "ed8230bf-95f6-4480-9a9c-4718de492801",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "bd186b80-8071-48e4-8528-c33a1e9fa287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907c626d-b093-4fd6-b4c8-e726d809189d",
        "cursor": {
          "ref": "a76d3bf8-47bf-453f-8b81-bfabae6680a0",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1144e065-f944-4e68-b036-6a3d49305e87"
        },
        "item": {
          "id": "907c626d-b093-4fd6-b4c8-e726d809189d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "75382cfe-863f-4f50-847b-c79c29099946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedf29eb-d287-4734-9efc-75bd301077e5",
        "cursor": {
          "ref": "563f090c-6740-4275-b9b6-1b2058451b83",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2b230ca9-3fd0-491b-94a0-74bb9f4aa175"
        },
        "item": {
          "id": "cedf29eb-d287-4734-9efc-75bd301077e5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "12d8c7c4-6df3-4508-9c77-9ba11af7a505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751619e2-f1ec-422d-b0a3-31be0e405d4d",
        "cursor": {
          "ref": "1cea8f1f-d540-481c-a6f2-7a07a3ffa642",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "49012c84-c582-45ca-9e70-27292e4d5556"
        },
        "item": {
          "id": "751619e2-f1ec-422d-b0a3-31be0e405d4d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1dcc189b-b203-456b-9d76-1e74e96ba579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e841836-4275-4841-95e0-e24164158605",
        "cursor": {
          "ref": "2c05d3f7-3557-4ff2-8db2-51a5d8555f20",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "34592a1a-dabc-4a21-804a-76576a43df63"
        },
        "item": {
          "id": "1e841836-4275-4841-95e0-e24164158605",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "925558fc-136d-4d26-b71f-fd1ac4bb3f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82789e6e-7e2c-4179-b159-bb06d5353c84",
        "cursor": {
          "ref": "8d60e85c-a102-4f3d-80d5-3c360b84da77",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "69474035-bb51-4e94-9f62-bace6f3c520e"
        },
        "item": {
          "id": "82789e6e-7e2c-4179-b159-bb06d5353c84",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "921640ab-7f05-41e8-93fc-aeb8c7b7825c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf6bdd1-ee99-478e-b318-97a6917b9518",
        "cursor": {
          "ref": "43642450-08e7-4948-b140-83aef12f1ca9",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "94404dd0-cae0-4f4a-9a39-6e068b70f045"
        },
        "item": {
          "id": "9cf6bdd1-ee99-478e-b318-97a6917b9518",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e43c82b1-4dab-4ebd-93e6-5a7180d0632d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1474198d-461d-4903-bc3d-d6fefe1f5df1",
        "cursor": {
          "ref": "77488ead-c062-429a-9136-33e6f50ea2cf",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8f8e4d3f-cd12-4709-8cd4-07def5024a0e"
        },
        "item": {
          "id": "1474198d-461d-4903-bc3d-d6fefe1f5df1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "97fcf678-da84-479b-9195-48ff8603cd10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d2ff6d-3519-4554-8fd5-92e5b9c5216f",
        "cursor": {
          "ref": "ac7917ab-c43e-4fd5-bcbb-b8ad60a0b9f9",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9f86a46f-519f-444a-8950-cd0c7667026a"
        },
        "item": {
          "id": "55d2ff6d-3519-4554-8fd5-92e5b9c5216f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "716b60e9-1547-42b4-94cf-f4a080988b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efff3626-498e-443c-af56-e714a8f54657",
        "cursor": {
          "ref": "5193cc8e-5232-4e2d-a3a7-07f96c8865d7",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "32e29b97-740c-45e0-899a-d1e54b4440af"
        },
        "item": {
          "id": "efff3626-498e-443c-af56-e714a8f54657",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "58c5b13c-f5d7-4722-9412-77446316f883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad1deac-206b-4617-a71c-578aa582818b",
        "cursor": {
          "ref": "cd5a9669-d46d-42d1-8a76-d78ce451c5c9",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2a78e75e-1da0-4982-aeb6-f42da4549406"
        },
        "item": {
          "id": "3ad1deac-206b-4617-a71c-578aa582818b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cb69349b-045b-4a57-a570-f2785187beac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268bfce9-26e9-454c-a841-d59f21376f33",
        "cursor": {
          "ref": "6e5cd0df-d280-4ed1-93d6-0e9baf6a1514",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4ac77f63-bd9e-4455-8922-6f4ef7238d26"
        },
        "item": {
          "id": "268bfce9-26e9-454c-a841-d59f21376f33",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d3de5b7f-9d18-4f7b-9d5d-656a6a51c215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f847b01-08ee-4c96-9ba3-dd8e9ed4155f",
        "cursor": {
          "ref": "6770d9db-b796-44e4-b06a-61aa5ac8e34f",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9d43877f-ac76-4bb8-94e2-f1c90c441fbe"
        },
        "item": {
          "id": "2f847b01-08ee-4c96-9ba3-dd8e9ed4155f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9eef8f22-9ea4-4750-8ad9-52fa192a398d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b95e19-3bef-4cd5-8009-11125d028749",
        "cursor": {
          "ref": "5a8e1737-c0c4-4a45-b86b-149b542064a2",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c512903d-682b-47a9-b0d3-aa3089a076ef"
        },
        "item": {
          "id": "47b95e19-3bef-4cd5-8009-11125d028749",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "29c1ce70-3820-4d5b-a655-5cdb8bdcde7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5631e8bd-585b-4fef-9eff-c49baddd9753",
        "cursor": {
          "ref": "b6eea977-700a-472c-8820-80c076f0a7ff",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9712997b-6c52-412e-a042-579ff7ae83e5"
        },
        "item": {
          "id": "5631e8bd-585b-4fef-9eff-c49baddd9753",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0be0226a-3f39-4db2-a4c4-67e24078a390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f7c558-b019-4ef6-bc1d-ab3c973cf1b3",
        "cursor": {
          "ref": "febab9a0-fc15-4779-8421-25a78e8724ce",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d0b2b738-855c-4c1b-bfcc-7e2bd5a180d5"
        },
        "item": {
          "id": "50f7c558-b019-4ef6-bc1d-ab3c973cf1b3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "46ac1159-56d7-4efb-ab64-defaacdd4862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee2aecf-0c1e-42f5-843c-4d3c91a3867e",
        "cursor": {
          "ref": "db1942d7-3405-40a9-b737-ea1d9ffee360",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e78b2946-0a8e-483d-9f4f-b94c479f97e8"
        },
        "item": {
          "id": "7ee2aecf-0c1e-42f5-843c-4d3c91a3867e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3c2f47f6-e9ff-450e-8690-27c278a18fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad3fbc1-df09-49d2-a6b6-68f4c509e241",
        "cursor": {
          "ref": "0d9e83ef-4743-4404-b37a-d4694b432644",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "767de40e-401f-478c-90de-596ea8614fff"
        },
        "item": {
          "id": "3ad3fbc1-df09-49d2-a6b6-68f4c509e241",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "70af60b3-bd44-452f-898a-e1e8a0deb3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfc4799-c00c-4e83-9e1e-4e4da80764be",
        "cursor": {
          "ref": "1592bf9f-7b1c-4529-a17a-048d686cd791",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "bed3e34b-b236-4d9a-8d3e-fb8d808073e9"
        },
        "item": {
          "id": "bbfc4799-c00c-4e83-9e1e-4e4da80764be",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1e7ecde5-a7f1-4ca6-a1b0-422dc44ba4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f996646-7bc9-4416-85c0-3ccd719db59e",
        "cursor": {
          "ref": "0c3a38f8-db53-423a-b412-0f3d9e3044ee",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7ffa10a8-bf9c-4b50-a802-39242e744b30"
        },
        "item": {
          "id": "1f996646-7bc9-4416-85c0-3ccd719db59e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "21fd84e6-aad4-4631-a26d-ee4b023de10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd7b914-5a93-4123-a0b1-696beab5b295",
        "cursor": {
          "ref": "2375446a-4ee3-4901-a5de-05cb2fb06d75",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "33e52980-1cd0-4d00-ad3d-b5d9b3e22b17"
        },
        "item": {
          "id": "fdd7b914-5a93-4123-a0b1-696beab5b295",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b7c93688-42dd-4a10-bae8-8aa12f6996d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19d3782-8cf5-472f-b7ee-c2ab88f398ae",
        "cursor": {
          "ref": "f46204b5-e9da-40e9-a1a5-f970f59ee13a",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0a91286f-5486-4d01-ba61-f825a141f496"
        },
        "item": {
          "id": "a19d3782-8cf5-472f-b7ee-c2ab88f398ae",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7258f67e-fba4-4e99-8219-4a7ef0d47d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a7a720-454d-4b95-878a-2928646389a6",
        "cursor": {
          "ref": "05f04aca-0df8-4c09-be93-b4125e6e740c",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e679bf85-d78c-4256-8e50-2b2868f6b722"
        },
        "item": {
          "id": "53a7a720-454d-4b95-878a-2928646389a6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ad953d80-a44b-43d8-936f-3e028421df91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f89823-c75c-4987-8187-7bafd539e7a1",
        "cursor": {
          "ref": "5b09a81d-9c51-4b1b-b070-58d09c67e6f5",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "79a7ac5a-430f-4588-9d94-cc24502d0134"
        },
        "item": {
          "id": "e8f89823-c75c-4987-8187-7bafd539e7a1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8092dc9a-4e51-47ce-95fa-335049e6f5fb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b9b9c3-392c-419f-b0e4-cd2c7bd0d569",
        "cursor": {
          "ref": "01cc921e-f0b2-457a-a648-b98a14b24854",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "53cfe40b-660e-404e-8231-91c5bc10b15c"
        },
        "item": {
          "id": "e0b9b9c3-392c-419f-b0e4-cd2c7bd0d569",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "cd055209-b21f-43da-8d82-2fc64f9336d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91df687-a643-4f47-90be-a18fef5f6df9",
        "cursor": {
          "ref": "7a44ab98-ddbc-45f6-9879-b402f52ee54a",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "93006c70-31e7-4d1c-870d-c43c198a7b97"
        },
        "item": {
          "id": "b91df687-a643-4f47-90be-a18fef5f6df9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "794d4232-19c9-4a34-83d4-5db9a8c9384b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac153b4-3360-4fd0-b723-78725a13a914",
        "cursor": {
          "ref": "42f57f59-e214-4689-859e-182817b1e1d8",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "37b34fb4-7955-4947-8e73-a5de88cca8dd"
        },
        "item": {
          "id": "fac153b4-3360-4fd0-b723-78725a13a914",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "21998cf7-217d-45ea-8758-3bd08e27913f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123cf5dd-f20a-4f12-8c08-ddd3a41c9add",
        "cursor": {
          "ref": "b5582eb9-0d18-4f7d-a9dd-6c057fc4f829",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "125e9e51-3a1c-4004-bff5-3a58e24a3d55"
        },
        "item": {
          "id": "123cf5dd-f20a-4f12-8c08-ddd3a41c9add",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d7b04fea-f8c2-4515-b208-2adca5b2decf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5901dc-f31f-42a8-8a6d-5ca4770058ac",
        "cursor": {
          "ref": "a72374ee-3aaf-4f4d-a372-cc973a0559a5",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d7cfb2f4-fe05-4db3-bcaf-a0135b796815"
        },
        "item": {
          "id": "9f5901dc-f31f-42a8-8a6d-5ca4770058ac",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2e67713e-9f66-407e-be84-10f9d0022f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08adbc6-355e-4221-b1e0-9303a7d87d21",
        "cursor": {
          "ref": "a698229b-9278-4bb6-adfa-8ee91d934fcc",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1479cbf9-60c0-438a-ad4d-6bd1e066e9db"
        },
        "item": {
          "id": "e08adbc6-355e-4221-b1e0-9303a7d87d21",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e4e2b69e-470e-40b6-a88c-c5a37e3cca36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc5cd64-720e-4d3c-8e78-904cb11eae51",
        "cursor": {
          "ref": "6378bfc4-d649-4671-9f84-fdc720acc107",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5443b726-29cb-43bd-924f-ddc9e1240ad3"
        },
        "item": {
          "id": "3cc5cd64-720e-4d3c-8e78-904cb11eae51",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f89f794f-ba6f-4ddb-951b-1197740d47d4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b7cb05-dee6-4307-9476-59c97549a860",
        "cursor": {
          "ref": "058c6caa-2d33-47d9-9969-7a5ddc623f38",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "72571f43-6c69-4397-ba1d-25188ec618b9"
        },
        "item": {
          "id": "c4b7cb05-dee6-4307-9476-59c97549a860",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1161ebd1-e01b-4e4c-a465-d95dab1de1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3e778e-2374-4353-b32f-7b06c08709bb",
        "cursor": {
          "ref": "d4a0ff6f-62e5-433c-8a5a-2b3a3c7a4b9b",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "90293824-2171-4602-8b55-60964c6ac14f"
        },
        "item": {
          "id": "fd3e778e-2374-4353-b32f-7b06c08709bb",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e972998b-9f80-4ccb-b016-430e136f2f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d187bc-a802-43e0-b18c-197233357a51",
        "cursor": {
          "ref": "a09add2d-4573-4150-b016-6baeb97ad421",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a431b826-c4d6-410f-aa41-78c7fc05aee0"
        },
        "item": {
          "id": "92d187bc-a802-43e0-b18c-197233357a51",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "fce24dda-cd54-4ed4-98ec-cb3d16aa9dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8caade99-d1b9-4aa0-a16f-9512083391ab",
        "cursor": {
          "ref": "37c8dc90-14d9-4fcb-a715-c10c52b4565a",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "de294d7e-c2e4-4910-971b-8824a23da773"
        },
        "item": {
          "id": "8caade99-d1b9-4aa0-a16f-9512083391ab",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "287f712e-d217-43ad-b930-9797d096ffc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1c3209-3d50-4a50-9c22-55037edc4cd0",
        "cursor": {
          "ref": "e828ce7f-738a-4265-942c-6aa6b88da8bb",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7f84b4a2-5c21-416a-bc68-07487b01dc92"
        },
        "item": {
          "id": "0d1c3209-3d50-4a50-9c22-55037edc4cd0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "37a3ab00-157b-4573-9c2d-4bd3df7035fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd6b22f-866d-448a-b1c5-fcde5fc1fdca",
        "cursor": {
          "ref": "f6a5ed36-93ea-44c2-a736-8410036debb7",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b0d56761-15fc-42a9-934e-a3e585975057"
        },
        "item": {
          "id": "9fd6b22f-866d-448a-b1c5-fcde5fc1fdca",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "30be2a7f-c49a-4a66-b864-2f1812a8bfac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55be85c-5f95-4109-be70-38160d965089",
        "cursor": {
          "ref": "d5700221-10bc-46cb-9c1a-b475f04bf388",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "961d9013-7092-47f0-b1ff-c386477231df"
        },
        "item": {
          "id": "e55be85c-5f95-4109-be70-38160d965089",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "defb6e90-cd15-4d6f-80b9-11779f7f879c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200bec70-c6e0-4b2b-9424-ad74171ec1eb",
        "cursor": {
          "ref": "b631cd5c-169e-4fb7-977d-c515451848da",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1c2be739-4897-494a-ba0f-2377ebf1b26f"
        },
        "item": {
          "id": "200bec70-c6e0-4b2b-9424-ad74171ec1eb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fb05b72b-40b5-429b-a9a8-4f2549f34ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa29b22-e441-4f00-8475-6d0289ecd814",
        "cursor": {
          "ref": "caaa1058-55bb-4211-a4e3-e52881f47abd",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0a850c2c-deff-4d29-830a-5854c133922d"
        },
        "item": {
          "id": "dfa29b22-e441-4f00-8475-6d0289ecd814",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c14180c5-bafd-4c95-9b37-e13237fdaedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb011cc8-b7d3-47a9-8707-755e23bced20",
        "cursor": {
          "ref": "2f8d32d0-2ddd-4823-921b-969c58e00727",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "29b1ebf6-6c0f-4a62-896a-5a63e181fdf0"
        },
        "item": {
          "id": "eb011cc8-b7d3-47a9-8707-755e23bced20",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d40b0306-87a9-4103-93a3-e8e67fc0659c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7add614c-6073-4f55-a0e7-19d222490ac2",
        "cursor": {
          "ref": "39448077-0b44-43d1-a328-27b9763330ef",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "aa620f03-e897-4d1c-89e3-aa8bdf81c1ef"
        },
        "item": {
          "id": "7add614c-6073-4f55-a0e7-19d222490ac2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0f27dc36-0403-43eb-a530-0a1844e959be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bfd616-6154-482a-b172-03f1f2245948",
        "cursor": {
          "ref": "524ceeed-1d18-42cc-991a-74417d9dc039",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "26a9ae4a-2004-4e89-85eb-c47660287d93"
        },
        "item": {
          "id": "f2bfd616-6154-482a-b172-03f1f2245948",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "72faeacc-eb81-4f31-b9d8-1fcce0d08565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0208b80-a9b5-492f-bb87-fcfbf168816f",
        "cursor": {
          "ref": "f3e826bd-8fd4-4286-b3da-b359f27ae71b",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f9216fc4-1394-4717-90b2-3e3f2660fc50"
        },
        "item": {
          "id": "e0208b80-a9b5-492f-bb87-fcfbf168816f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0a065abf-160b-4389-bc42-4bf40369cc01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430e7b39-93dd-465d-83c3-844c7884a516",
        "cursor": {
          "ref": "3193bc86-9af3-43ce-a196-3dc5af34a2ef",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fe7f3835-39d8-4857-b4e4-d02bc4a6157a"
        },
        "item": {
          "id": "430e7b39-93dd-465d-83c3-844c7884a516",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0f108e49-0cef-4fc2-823e-91cc00d6e5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9dacadd-a3e5-41ff-996a-92d521909586",
        "cursor": {
          "ref": "88e6e066-7f9c-4476-87e4-dc563b4a7ad4",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "704d1a48-f077-42e9-832e-474482b8a9d4"
        },
        "item": {
          "id": "e9dacadd-a3e5-41ff-996a-92d521909586",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ba2851a3-87fe-497d-85c0-cda143d79d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c34276-0e01-4f1a-b33f-15de4237d5e5",
        "cursor": {
          "ref": "0ab86393-1f23-4f70-a7c9-e85155c5943f",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a3ff66d8-60fa-4581-9125-dcd6d8e7672d"
        },
        "item": {
          "id": "82c34276-0e01-4f1a-b33f-15de4237d5e5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3c072a23-5e10-4c7f-8b54-6633788891c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9531be5-086e-456d-808f-a4ffedff4b7e",
        "cursor": {
          "ref": "b0ebae6b-1125-436f-a8bd-0955dc3de656",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "67abdcfc-bfd8-4653-83e4-54209eb49a66"
        },
        "item": {
          "id": "d9531be5-086e-456d-808f-a4ffedff4b7e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f2f4a175-153f-4904-b550-dd513016a6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346845de-e103-4c4d-a537-c1f27144e4b2",
        "cursor": {
          "ref": "88111ef9-67af-4ab2-8bd3-37bcf09c4ffd",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "01db43ba-e29a-4c5a-bc6e-fa02b3bfd7ae"
        },
        "item": {
          "id": "346845de-e103-4c4d-a537-c1f27144e4b2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "35209ce8-ffb4-4f03-b4b8-ed57202d54c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d1eb14-cfa8-4749-becd-1e7a4909d25c",
        "cursor": {
          "ref": "fe7b1a26-b3f1-42c8-bff8-816a32e4ad6c",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4f8b2eba-3c9a-4ea8-b5bd-8caa728430b9"
        },
        "item": {
          "id": "85d1eb14-cfa8-4749-becd-1e7a4909d25c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4ef482e6-2823-4841-8e3f-fc0d4ad0a77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8830c8cd-9a1d-47f3-a173-e023f4c06f10",
        "cursor": {
          "ref": "93c9a676-9e3f-4ab2-8057-477c73dc407a",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "20f57577-6e09-4157-8a13-e316ef245fd4"
        },
        "item": {
          "id": "8830c8cd-9a1d-47f3-a173-e023f4c06f10",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ff03ce94-9665-47c0-b888-0e331e36b367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99dd63a-16c0-4e21-b431-bad1f29ede5a",
        "cursor": {
          "ref": "5190b97e-f1f1-4c94-a42b-039d41be85e1",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ce27e236-620b-4d5b-831e-5e0447555fe7"
        },
        "item": {
          "id": "e99dd63a-16c0-4e21-b431-bad1f29ede5a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "be831567-6451-45e2-bfe7-f08b592252e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9345fc-d093-4719-8365-9e1de27a3015",
        "cursor": {
          "ref": "bce22444-b807-4204-b78f-bd2a332a82d3",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "12683f86-d7fc-48b8-8b34-7ddc3aa8a1ac"
        },
        "item": {
          "id": "fc9345fc-d093-4719-8365-9e1de27a3015",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7d5518f5-2127-4fdd-8a5b-af475b0a1319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794d4a94-c3a7-4fba-a5f3-5b1ff6346e27",
        "cursor": {
          "ref": "52705f8a-dfb1-4a01-b766-7cb86f45bc18",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e7d49f9a-204a-4def-b4ee-4f87e2bb9a17"
        },
        "item": {
          "id": "794d4a94-c3a7-4fba-a5f3-5b1ff6346e27",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "829b0611-53c4-45ac-81b1-c721322fc365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33862a49-39dd-4b97-8e27-3b8be2c36903",
        "cursor": {
          "ref": "7091f466-3eb4-43ee-8537-4a5c1ca3090c",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "df5038af-be4f-4e0a-b07a-dcb368ced7ef"
        },
        "item": {
          "id": "33862a49-39dd-4b97-8e27-3b8be2c36903",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3884b7ca-74e0-44d0-b06c-41d7194ae10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5237bb3f-128b-476a-9348-5fb92bffb7fc",
        "cursor": {
          "ref": "c75f0051-6011-477c-a1cf-911933635a62",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a67a1b54-22ba-481a-8519-ffc6c8a8cb1c"
        },
        "item": {
          "id": "5237bb3f-128b-476a-9348-5fb92bffb7fc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1f132afb-f863-4f29-8cb9-acfc7ab84892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a74059b-64b7-4d81-84b6-0a9d666f42a3",
        "cursor": {
          "ref": "96ebe27c-987f-4085-bfb1-ae24217a53d0",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6bc63af5-70b2-4e87-b2ce-88bc74e46215"
        },
        "item": {
          "id": "0a74059b-64b7-4d81-84b6-0a9d666f42a3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0f57e663-195c-4262-945e-bbd59982b8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8983f0dd-e1d9-4d35-ac46-59ab0991ba0f",
        "cursor": {
          "ref": "b9b0320d-361a-4e10-b56f-96c8cca8691a",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7f252042-f6c8-4b22-a2cb-35f86955b4bc"
        },
        "item": {
          "id": "8983f0dd-e1d9-4d35-ac46-59ab0991ba0f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6f961746-821d-4222-b75d-f8fd9b865c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab9eb2b-351f-410d-8aa7-0f221e431fa8",
        "cursor": {
          "ref": "3e11f210-2827-4374-ab4d-9c20a9236412",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4c15ee26-3be7-499e-bc75-5eebe9df08fe"
        },
        "item": {
          "id": "eab9eb2b-351f-410d-8aa7-0f221e431fa8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "169b15d8-d245-4654-974b-43a5756f71e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de84ea5e-650e-4c3c-850e-a7d4ac28102c",
        "cursor": {
          "ref": "3a2e936e-bd0c-4ac0-bd1e-2ae315dc87df",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5d2de6b5-ffa0-4182-a03e-aa6d16e6b5c7"
        },
        "item": {
          "id": "de84ea5e-650e-4c3c-850e-a7d4ac28102c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7460535d-fc00-4583-8859-5ae19eaf5a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bd1f37-d16a-49dc-87e0-dfd3cd8c4b15",
        "cursor": {
          "ref": "620ba44f-2250-403a-9124-55a583502544",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "06dc7b89-7d0d-450c-8e38-794d741d8be1"
        },
        "item": {
          "id": "69bd1f37-d16a-49dc-87e0-dfd3cd8c4b15",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "674cc914-d8e8-4b1d-9d22-a57a2d66d8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d367096-5816-4bef-9a82-985d9195cb99",
        "cursor": {
          "ref": "9493c2a3-9647-494e-a137-c9dc6f93726c",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5b5d96f6-193d-4bd4-9486-34431f749c02"
        },
        "item": {
          "id": "4d367096-5816-4bef-9a82-985d9195cb99",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "52107e1e-11f5-47f5-ac01-2e3cb5aebcde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860ea6ac-43d6-4703-a767-65dbdf16d373",
        "cursor": {
          "ref": "f0eefc42-b757-4129-9a62-f473f39dac8b",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6fa3dc81-a7cd-4891-b6e0-a6177dd1fdeb"
        },
        "item": {
          "id": "860ea6ac-43d6-4703-a767-65dbdf16d373",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "23bcfb81-7e10-4876-a0fa-cc06af34088d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03696c0e-95f2-4bf6-916b-1078ad4d825c",
        "cursor": {
          "ref": "ee7b8fe0-a7de-446e-8948-19610e7daeb0",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "09ff8657-cff7-4c07-a1b3-b9c96806951f"
        },
        "item": {
          "id": "03696c0e-95f2-4bf6-916b-1078ad4d825c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1efc7d1a-926d-42ed-be9a-157aaa26f73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cf6d93-d077-45b6-96cd-a9d088637d3c",
        "cursor": {
          "ref": "adf11ebb-2c20-4b50-911e-95f1665ac08f",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ebb6bb1c-f80f-4a69-9101-2cdcd355b4b5"
        },
        "item": {
          "id": "63cf6d93-d077-45b6-96cd-a9d088637d3c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ea556fc0-4105-4b42-8dfc-a5cc750d22b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17616ec0-d43a-468a-8f4c-16f53e0d8f09",
        "cursor": {
          "ref": "84153dcc-d5fe-4f71-87ec-13e6edc5739f",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "41583f15-42c7-42d3-a645-24c95edb75e9"
        },
        "item": {
          "id": "17616ec0-d43a-468a-8f4c-16f53e0d8f09",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cfa45392-e0b4-43f1-932c-faa106018841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82477b83-0b92-4a07-bbd9-ac345e3c0bc5",
        "cursor": {
          "ref": "53c66f80-a854-4615-8a02-4d21cd2e0c98",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "195d1d41-7d4c-4f56-b166-8d910fc1eab1"
        },
        "item": {
          "id": "82477b83-0b92-4a07-bbd9-ac345e3c0bc5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c8453564-54c0-4b6b-9ea6-a0c614f00f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce0e559-6a5a-4c6e-b594-9473a3c11028",
        "cursor": {
          "ref": "3f395e8a-d786-46f3-8a95-a6374a79625c",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6e244f99-29c9-4911-a1bd-023209c0b52a"
        },
        "item": {
          "id": "6ce0e559-6a5a-4c6e-b594-9473a3c11028",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cceb2285-1450-4f89-a1ff-bdb41b3a0637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da166744-ba56-4688-9604-bc4ca41115fa",
        "cursor": {
          "ref": "9e759b42-0f44-472f-b846-3a5eab7197df",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8bdcc509-9962-4c44-8f2a-d7bb92f126a8"
        },
        "item": {
          "id": "da166744-ba56-4688-9604-bc4ca41115fa",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7184ec7e-2700-4258-8622-b6fae3fef9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4b4146-7157-4492-bee1-e2ebf03e98dd",
        "cursor": {
          "ref": "ab5759fe-dd80-4561-8b88-0b90a4ec46be",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0cdab02c-81d1-4e0a-a5f6-79122822bbb6"
        },
        "item": {
          "id": "5b4b4146-7157-4492-bee1-e2ebf03e98dd",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1dabe765-cf9c-4702-b91f-fa42a9e83cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f8ee7e-1b81-43b3-ba81-a264a4294313",
        "cursor": {
          "ref": "6cb101c8-640f-4820-9ffe-c9c848392c94",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d66589a3-914a-4ece-b11a-da7b4a215198"
        },
        "item": {
          "id": "01f8ee7e-1b81-43b3-ba81-a264a4294313",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bbdb8b4e-99a4-4c0a-9726-56387f8f7612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caad1f4c-3e53-452f-a72b-267c5b215acf",
        "cursor": {
          "ref": "fb35c648-0607-489f-84af-00288a2d1f0c",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d4bd5154-b7e4-4ecb-9e84-0473975fe6a0"
        },
        "item": {
          "id": "caad1f4c-3e53-452f-a72b-267c5b215acf",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "620e7953-4580-4422-98fa-a7933c5a2899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f946f262-c3c1-4896-95a4-2a2a8184cd3f",
        "cursor": {
          "ref": "a021359e-d4f1-4bba-9b88-38e0fe83fa60",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f582b5d2-6f4a-4343-99d0-bdfa477aef28"
        },
        "item": {
          "id": "f946f262-c3c1-4896-95a4-2a2a8184cd3f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "628dbabe-9068-4154-9fd7-b5b2c295d7e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0141e5-138a-4051-8a53-37c0c2537ec1",
        "cursor": {
          "ref": "ece1db07-f349-4717-b8a2-9dda8edecd43",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "87cf348d-6798-40f6-aa9a-870743e1e739"
        },
        "item": {
          "id": "df0141e5-138a-4051-8a53-37c0c2537ec1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5f48f40a-03a0-450e-ab20-cf0e2b0ecaf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb1c48e-2191-47d2-bf26-d554e50d875c",
        "cursor": {
          "ref": "53b0a3e5-7e35-4bbb-b59c-1820f66c74b5",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "42446b08-f258-4443-8c22-ba0dd9fd3aae"
        },
        "item": {
          "id": "bcb1c48e-2191-47d2-bf26-d554e50d875c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e78795c9-6cfc-4753-bbf5-859dfc719159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8d4bdc-5eeb-4e44-bf56-e0ddfe774429",
        "cursor": {
          "ref": "c68f0e45-76ee-4e16-a0fb-88b09a2ff832",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "069ac6d3-9c6c-4351-9591-54b8c7511a85"
        },
        "item": {
          "id": "bf8d4bdc-5eeb-4e44-bf56-e0ddfe774429",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bf3db12d-a1f0-467e-aa45-33f4a816768c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa56e782-e52b-465f-b1de-b0aaed92a527",
        "cursor": {
          "ref": "adc886b6-15cd-45d0-9baf-7119d12c016e",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "696ee524-1dfd-4342-ae25-ab9a81b1194e"
        },
        "item": {
          "id": "fa56e782-e52b-465f-b1de-b0aaed92a527",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d96c527e-f889-4e18-a03e-cd7dd53f5736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af57fe8-e54d-434d-98e9-17a49b7cdf42",
        "cursor": {
          "ref": "c8ba4f64-5b2d-4ec0-8a6e-198dd2585c42",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bb900c7d-235f-4e12-8aea-172df94658df"
        },
        "item": {
          "id": "7af57fe8-e54d-434d-98e9-17a49b7cdf42",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6ebc65bc-ef15-441e-810a-1bcd35b48f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17d9199-b275-454f-bab9-e3a9278b2f3a",
        "cursor": {
          "ref": "21f8d99f-2629-40e8-97a0-ab85a0364e62",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "39f6cf4b-84eb-49cb-a725-3c61bc1c9f66"
        },
        "item": {
          "id": "b17d9199-b275-454f-bab9-e3a9278b2f3a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f60aef3c-853c-4129-95ee-4632af7a6be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0bfa34-3e36-4ec2-bb37-0ff84e8edd8d",
        "cursor": {
          "ref": "899173a6-559c-4562-9ef4-9c7158bf1adb",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d063b9ef-b854-4f77-b8b3-155508169954"
        },
        "item": {
          "id": "3d0bfa34-3e36-4ec2-bb37-0ff84e8edd8d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fed3834e-14ac-49c1-ac83-14b6eb9207e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba3b71d-9cda-4f96-9ab0-7719d528781f",
        "cursor": {
          "ref": "751d4a41-fa51-4755-bd73-d8e481ed68c3",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c0b4a10d-1374-4c0e-91cd-ac4b4d8a1bdb"
        },
        "item": {
          "id": "4ba3b71d-9cda-4f96-9ab0-7719d528781f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8b0b7994-d1ca-489f-bac6-9000f3a79cfb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b436c619-4949-4bc7-ac10-b37591f2371e",
        "cursor": {
          "ref": "94ff838e-8747-4c4b-a55d-4b8547684c71",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f2019d36-b257-45a8-9fef-60c7d1c46927"
        },
        "item": {
          "id": "b436c619-4949-4bc7-ac10-b37591f2371e",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4bce6763-1394-48a1-860a-c0785ee2ac01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ca04633c-8c74-4445-b91e-a67c7c894bd0",
        "cursor": {
          "ref": "c18165c7-224f-440b-b494-2f6a2c95ccb7",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4b05cad6-9ac8-4eab-a9a5-6c9a131030b0"
        },
        "item": {
          "id": "ca04633c-8c74-4445-b91e-a67c7c894bd0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "28333dde-9d96-48ef-a4e6-c2830b1cc9ad",
          "status": "Created",
          "code": 201,
          "responseTime": 26106,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb04e163-3aa5-4efa-aecf-84a869ea8aeb",
        "cursor": {
          "ref": "23ae6c0b-b4f3-4871-9351-48bc9b21c693",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c29c5366-a328-4029-86b5-35d44e45df0a"
        },
        "item": {
          "id": "cb04e163-3aa5-4efa-aecf-84a869ea8aeb",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5b47eed6-dee0-49d2-8533-52db10b154a5",
          "status": "Created",
          "code": 201,
          "responseTime": 25641,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f44bdf0-8cf5-4e6b-bb69-2fbd246a4217",
        "cursor": {
          "ref": "0d07015e-5f6f-45f3-9e95-28fa16c0fa19",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fc7f4bab-5a10-483d-a57c-9ef2d66adc19"
        },
        "item": {
          "id": "4f44bdf0-8cf5-4e6b-bb69-2fbd246a4217",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7ee95dc8-1718-4d1f-837b-4844a0d8b593",
          "status": "Created",
          "code": 201,
          "responseTime": 25980,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f875c7f7-ff8d-4d31-bc45-e8e8d976933f",
        "cursor": {
          "ref": "dcdee6f5-2562-4e01-80a5-719fb0c7109d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5190c80a-54d6-432f-a0e7-3220180d40c6"
        },
        "item": {
          "id": "f875c7f7-ff8d-4d31-bc45-e8e8d976933f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5297200a-ecfc-472c-a152-256bdbf30dfc",
          "status": "Created",
          "code": 201,
          "responseTime": 26084,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "019edd10-3a8a-4005-b347-1ecb568622d1",
        "cursor": {
          "ref": "a8d632b3-7815-4347-85fe-8634b8cb4f20",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ac8e8a4a-2436-4420-af8d-cad6c0b663f5"
        },
        "item": {
          "id": "019edd10-3a8a-4005-b347-1ecb568622d1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d47f2423-68a9-4b19-a8c4-3143f33e7118",
          "status": "Created",
          "code": 201,
          "responseTime": 25861,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-10-01T00:53:59Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-10-01T00:53:59Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "6c08ccc6-4d08-4179-990f-2b6315d62853",
        "cursor": {
          "ref": "3a65da55-e09f-4001-afd2-289a2bde9d18",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "74dde8dd-cbc8-4dc2-8180-fc79a435aa23"
        },
        "item": {
          "id": "6c08ccc6-4d08-4179-990f-2b6315d62853",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8f838e63-08a1-41bb-aa8e-5278f0cafb2e",
          "status": "Created",
          "code": 201,
          "responseTime": 26362,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe7ac78-858a-4224-9281-9f79d2668b77",
        "cursor": {
          "ref": "1a698b33-93c6-4ecf-8a3e-c8b313d79bb9",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "29a5a0eb-9f47-474e-96de-c6acce2f8809"
        },
        "item": {
          "id": "5fe7ac78-858a-4224-9281-9f79d2668b77",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4bd50dcc-3c1d-4229-8180-93f29cfdcab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacb2b73-43e9-41af-8165-d4c24230c9a2",
        "cursor": {
          "ref": "d399e65f-0d48-4779-925e-59dc16bc51b5",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "786e5ee8-093c-4c4b-b4b4-9d960c009bfc"
        },
        "item": {
          "id": "cacb2b73-43e9-41af-8165-d4c24230c9a2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9e77e87a-7001-4a8f-9bc0-b79342782da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff99d64-14d1-456a-b34a-c4e8c7ae0b75",
        "cursor": {
          "ref": "46f3207a-67b8-449c-b078-812a2ad18248",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a00d7407-15a3-4097-add3-1eba633ea898"
        },
        "item": {
          "id": "fff99d64-14d1-456a-b34a-c4e8c7ae0b75",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "91ee3a9c-2877-4414-9e09-f498d99762cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b870d33a-7d16-4ca5-84ec-a8d3a1e9db39",
        "cursor": {
          "ref": "614fb483-51d2-45c8-b3be-60fb1b68a295",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9c384d0a-85e0-4e8d-ac90-16a93a8eb7df"
        },
        "item": {
          "id": "b870d33a-7d16-4ca5-84ec-a8d3a1e9db39",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7dac549d-301b-4ecd-ba35-8e87b9b36799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b762c07a-6c42-4661-a9fa-a7322ef90754",
        "cursor": {
          "ref": "e29eb19f-ec66-4d38-af0a-de2de360138d",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c8598653-e247-4363-8fa6-2594087198ca"
        },
        "item": {
          "id": "b762c07a-6c42-4661-a9fa-a7322ef90754",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "45da9536-b53e-4c13-bf4d-544f7885a227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7096066b-3fd8-4b33-908d-3d8f8c15bd47",
        "cursor": {
          "ref": "7c5d9217-2277-4dee-951d-1381daab4461",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f8f936d5-925f-4d8b-8b10-b3c170f952da"
        },
        "item": {
          "id": "7096066b-3fd8-4b33-908d-3d8f8c15bd47",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "299d5a5d-a00d-4eb9-8754-35de4260615a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6894c32d-5538-4804-940f-8237786dcaa2",
        "cursor": {
          "ref": "c232ecb3-d57c-4f33-9d8f-cc3957cc2f1b",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0a93c257-05b1-416d-86cc-fbf6c2fd189f"
        },
        "item": {
          "id": "6894c32d-5538-4804-940f-8237786dcaa2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4721c6e7-e89a-4208-abeb-fd0f3d1962b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3072718-d851-4f76-973d-fcc804191d19",
        "cursor": {
          "ref": "a08aab37-c9fa-409b-9a8e-93106375ff42",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "238fa0e4-84ac-4386-8f8c-b798e867a62e"
        },
        "item": {
          "id": "f3072718-d851-4f76-973d-fcc804191d19",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "09bf825e-5ddc-4418-a74d-32d6f13f7bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53284a6-05b5-4cf1-a740-2e0f597000ff",
        "cursor": {
          "ref": "74e69448-77f6-473f-88b0-28784f67f785",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "88b30a28-eadb-4587-8e94-50cccb07aeb2"
        },
        "item": {
          "id": "f53284a6-05b5-4cf1-a740-2e0f597000ff",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f6f1fda8-2abe-4df6-b092-22b421fd6b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bde23d5-a5fc-40bc-b40c-b644e4c03c5e",
        "cursor": {
          "ref": "961c1ba9-3966-4f96-a8f1-7c307bbdebfa",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d72feb04-29f2-45cd-927f-c4ab7902fcb2"
        },
        "item": {
          "id": "5bde23d5-a5fc-40bc-b40c-b644e4c03c5e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bcbd37fa-7bfb-42ee-9a73-f1595ab5cfd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b25a81a-02e3-485c-84a6-5c7fdbbb0694",
        "cursor": {
          "ref": "07be36c7-b742-48be-a249-17baca834942",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d1ce53e9-a274-4ae5-8deb-6d4b6ac8725f"
        },
        "item": {
          "id": "4b25a81a-02e3-485c-84a6-5c7fdbbb0694",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "09d03e7e-41b3-4c0f-a929-171a8a354b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915cd418-1d80-41a7-883e-b14db91ec904",
        "cursor": {
          "ref": "fb9657d6-44ab-49f6-8917-3434a1fef170",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2a4872c5-4fc6-4deb-a61b-bdfd82a6025b"
        },
        "item": {
          "id": "915cd418-1d80-41a7-883e-b14db91ec904",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6718897c-a961-462f-a580-8358cdccddcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ab22f6-e75c-4cc2-94d9-d30031ed41d9",
        "cursor": {
          "ref": "624af51f-f7c7-46f4-8a07-6d388e069747",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "07d4362c-1709-4959-93dd-9c474c79effd"
        },
        "item": {
          "id": "a9ab22f6-e75c-4cc2-94d9-d30031ed41d9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "54fc0505-06a0-432f-b9c1-333786a2d72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd19fde-fb0f-4d24-857a-8f3cfd4c4a79",
        "cursor": {
          "ref": "07f53fb9-256e-4fc6-8ef6-683a6ab6bfab",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "07240b4a-4f4e-42fc-898c-9da9583de9ad"
        },
        "item": {
          "id": "3cd19fde-fb0f-4d24-857a-8f3cfd4c4a79",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bb8729f7-7f3b-4056-b731-4c1618a68f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d190854-2467-445e-bdda-0a514305bcdc",
        "cursor": {
          "ref": "96f75a96-ea62-4a6b-b6a3-5c852679cd9e",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e99c5c46-dd11-4122-8da0-2fab8ba1d2ae"
        },
        "item": {
          "id": "1d190854-2467-445e-bdda-0a514305bcdc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5bcc78f1-8f2f-41fa-93b3-9da37988f678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49fd14ab-c59c-43eb-95f1-2cf2ddd1ef24",
        "cursor": {
          "ref": "8b07c828-4c91-4f84-91d6-d6a4ac02056a",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "80c55780-2127-4f7c-92f1-538dc7f6c04f"
        },
        "item": {
          "id": "49fd14ab-c59c-43eb-95f1-2cf2ddd1ef24",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f34542e9-af82-434b-885b-63ccacf8e304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29346f9-c50f-4664-85c9-677bcfd868ac",
        "cursor": {
          "ref": "f05fc788-54e9-46aa-80a7-9aa76dc7b6a2",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f9a6caf8-c9ba-432c-bd89-6e4f74b9dc34"
        },
        "item": {
          "id": "c29346f9-c50f-4664-85c9-677bcfd868ac",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0ec525da-06c6-49fa-9ea0-034c9a065a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b740c7-e463-4a10-b7a7-8120aa047d2c",
        "cursor": {
          "ref": "5942b0cc-7655-41fe-8b92-7085dcadf562",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f01b6ecc-0928-4531-a0dd-aa3465fbc1a6"
        },
        "item": {
          "id": "75b740c7-e463-4a10-b7a7-8120aa047d2c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b620c97f-2837-4cfa-9de3-89fd04b460b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d4d580-cc2c-4889-a994-da602bad8e10",
        "cursor": {
          "ref": "83f0112d-500a-462a-a3d4-1d086a1b923c",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "72867f12-0d1f-46d0-aee6-9a2ff021fcad"
        },
        "item": {
          "id": "f3d4d580-cc2c-4889-a994-da602bad8e10",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "285f163a-3d2e-44cf-bf60-fbec59aaa932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6cf83b-5959-4c74-8fdc-cd1bef3738d5",
        "cursor": {
          "ref": "6311368d-2118-419e-8296-72f75bbe4cf1",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5d1b4db7-e435-4979-9bb0-73ea938e7d70"
        },
        "item": {
          "id": "2b6cf83b-5959-4c74-8fdc-cd1bef3738d5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "aa2a2750-187a-4a4a-84f1-4ab7c07c1482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c61286e-c6b5-4ac6-96ed-5c4961ac2951",
        "cursor": {
          "ref": "871ec2ae-d38c-49cf-ad1a-1def05862b7f",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "bb0a219e-1417-46fb-b056-deb58e9e10b3"
        },
        "item": {
          "id": "9c61286e-c6b5-4ac6-96ed-5c4961ac2951",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3ab3bada-8fac-40e8-b74d-989e454ab910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031f6fe4-5465-41ce-94f2-a9585b676632",
        "cursor": {
          "ref": "1a5b4686-c147-4d74-9388-45d59c11c33d",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1e5d8f4a-93a0-420b-94c2-15c22e2fe18f"
        },
        "item": {
          "id": "031f6fe4-5465-41ce-94f2-a9585b676632",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "42ddad53-adab-44c7-8459-ff6dbcb5beb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c730f4b6-698e-4956-bd65-595244646bbf",
        "cursor": {
          "ref": "5099cc75-3748-4981-a037-70788ebb683c",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "edb6cae7-e71c-496b-9453-92ba3f73ad2e"
        },
        "item": {
          "id": "c730f4b6-698e-4956-bd65-595244646bbf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a1ae5b38-1193-4375-9f88-52bf6fde6c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d4d8a9-3117-4cd4-9b2b-2531f5d6354a",
        "cursor": {
          "ref": "f9ce2262-fbf0-4b94-b4d1-cadf4e001197",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4fb3d104-c124-4326-aa9d-b5cbd02a9e3c"
        },
        "item": {
          "id": "30d4d8a9-3117-4cd4-9b2b-2531f5d6354a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "de58cc37-cc67-42e8-aa54-088549fddfba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb03eb5-3e23-4c9c-80f3-40cdfc862edd",
        "cursor": {
          "ref": "6009f7fe-26bf-4636-b891-293560b3273f",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9f032e79-883d-4387-8462-2659d4b8d3f0"
        },
        "item": {
          "id": "9eb03eb5-3e23-4c9c-80f3-40cdfc862edd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3e2d9eea-9e27-4c66-8542-01e10307c8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c8990a-5f2b-410c-8f68-aa1e40b700c0",
        "cursor": {
          "ref": "568803a5-b834-4519-a2d5-4f1dc52881f2",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3adc9e17-7b76-4aee-a389-1da5120a0b7f"
        },
        "item": {
          "id": "78c8990a-5f2b-410c-8f68-aa1e40b700c0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e0664995-cb9c-45a3-84d1-62a9deda6cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbaa0027-b5b9-4463-a545-21340669b137",
        "cursor": {
          "ref": "7243c103-2a70-4fe6-8604-9c30139ed363",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "49b751d4-a9ff-47a3-a4fb-03a241c99d71"
        },
        "item": {
          "id": "cbaa0027-b5b9-4463-a545-21340669b137",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "86291599-bf6c-4092-8d8e-248b0adb0eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4336f1-9e3b-4f9d-80e4-f9d1d0d358d9",
        "cursor": {
          "ref": "e1bbc963-f828-41a7-bee2-05d8e02d745d",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "564757cc-012a-4d13-91bf-df1ec5bdcd60"
        },
        "item": {
          "id": "6d4336f1-9e3b-4f9d-80e4-f9d1d0d358d9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b9451657-8682-4fbd-97ee-5ee94e1c3bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec75bf9-3fa9-4293-9652-7368425f98ec",
        "cursor": {
          "ref": "34af8b42-1aa0-4049-b786-eadeced2d42a",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "960bcae2-bc98-4a52-a304-982c84f8fa84"
        },
        "item": {
          "id": "fec75bf9-3fa9-4293-9652-7368425f98ec",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "717ae3ee-0212-4a06-ad58-787f4637456a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f95d80-1c19-4338-af63-c0917b5b83e7",
        "cursor": {
          "ref": "78ab354e-063d-440a-9ca0-1e45bab42254",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "beff512f-c0dd-44de-bef4-e2d4a584de22"
        },
        "item": {
          "id": "15f95d80-1c19-4338-af63-c0917b5b83e7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c0853403-f70f-4494-9a40-5d6571f8a775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0db26a-5b77-49bb-9378-d8f22bb2b75e",
        "cursor": {
          "ref": "2b5bd284-28c6-4df8-94e0-9b4997a0e9f8",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b89ee237-35a8-4f7a-be94-c7954ae0f6cf"
        },
        "item": {
          "id": "8e0db26a-5b77-49bb-9378-d8f22bb2b75e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bfcd1117-e23c-4855-89ee-767dcb56f8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b180e3-1bfe-4aab-bb70-f288a95bc5b0",
        "cursor": {
          "ref": "4d1dee0f-04bc-43e0-ba6b-5443a290c3e8",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f154a2ee-172c-4af6-9da7-7b1e873dcd28"
        },
        "item": {
          "id": "45b180e3-1bfe-4aab-bb70-f288a95bc5b0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "cf5064f5-87e2-4233-80bc-afa1ce0b611c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe4951e-b6ca-40bc-b8ae-89503c86487b",
        "cursor": {
          "ref": "e66db963-cdfc-4523-9c56-8c40671c85b3",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "741ec220-7e23-4113-93dc-f649e23c0f7f"
        },
        "item": {
          "id": "efe4951e-b6ca-40bc-b8ae-89503c86487b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9a935abc-6e61-4729-856e-b288f548925e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2c3e5a-b75f-4d2c-aa18-84d2773c7e3f",
        "cursor": {
          "ref": "71675f42-1732-41e9-af12-52d61c5d7701",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2efdee72-4a96-4507-a9c5-c3382203e5e8"
        },
        "item": {
          "id": "fe2c3e5a-b75f-4d2c-aa18-84d2773c7e3f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a12dbdea-8cd0-4341-bb6a-3265645f4c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa5abca-7f35-45bc-b7e2-05b9d4d2be3b",
        "cursor": {
          "ref": "4a6d19d5-be3d-4833-bef6-4cfde7f0f5cd",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3cacb7c4-c1a1-4ea7-93c5-d3d814f9aa4a"
        },
        "item": {
          "id": "daa5abca-7f35-45bc-b7e2-05b9d4d2be3b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1e1ff55b-dde0-4bb3-b46f-540a04238514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60aeef41-0a56-491f-9df3-9f25f03ccd0a",
        "cursor": {
          "ref": "37fc0125-1eb1-4487-82dc-6ea03355cbdc",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7ab5cd82-338c-4ab2-a49d-01253b22f635"
        },
        "item": {
          "id": "60aeef41-0a56-491f-9df3-9f25f03ccd0a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "de3f4492-a236-44b8-88ca-eb5b28edaa75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa83a8d-ddfb-47f1-9052-b2f51780aef8",
        "cursor": {
          "ref": "e5cdb225-bcd1-4326-a943-222d73e4eb22",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8d105ed0-6b9d-4a36-9348-c0b10c45a30f"
        },
        "item": {
          "id": "1aa83a8d-ddfb-47f1-9052-b2f51780aef8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ae347ca1-528a-4224-948e-77aaf2d2edf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414fdfe2-5237-4c42-8204-2db29b11a3f5",
        "cursor": {
          "ref": "f4290b0d-d239-4108-b315-741e8ab83109",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "759b300d-8bee-4436-9b46-ec091a9c83f5"
        },
        "item": {
          "id": "414fdfe2-5237-4c42-8204-2db29b11a3f5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f770897a-16ca-4325-960a-df3310855b78",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b74e2a4-e16d-4ef9-b411-ef0e137f54df",
        "cursor": {
          "ref": "91f4c726-d543-4145-b287-56ad4ab4935f",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8dae079a-e709-4aa1-bc62-24f7d5227d00"
        },
        "item": {
          "id": "3b74e2a4-e16d-4ef9-b411-ef0e137f54df",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "25546b81-b31c-462b-860f-f978a3a31ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87929f3c-86ca-4352-b22d-2e894fe65007",
        "cursor": {
          "ref": "e2b584fd-7822-44cb-a148-850cba8ea4ac",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "25b06539-8487-4f03-b2f0-a10297a794df"
        },
        "item": {
          "id": "87929f3c-86ca-4352-b22d-2e894fe65007",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "593c2202-73a8-4f47-9807-2bd1c34d4279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbed2de-58fb-4a97-9a93-1c03d8d66a28",
        "cursor": {
          "ref": "54f041a9-2f58-4927-88ab-366835010fc6",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "cc4f16a2-4a30-414c-a212-b5693a7e8fd3"
        },
        "item": {
          "id": "cdbed2de-58fb-4a97-9a93-1c03d8d66a28",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6700b84e-9d8c-4776-91ad-62b038dbef5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5a4ac9-92d3-404b-af54-c490482d729c",
        "cursor": {
          "ref": "9187abc6-a43c-42b0-bc6a-1384f57cba42",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c6edb2cb-644d-4b36-965f-89c2b1a48c4d"
        },
        "item": {
          "id": "ac5a4ac9-92d3-404b-af54-c490482d729c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "78b77113-34b9-4a66-b964-fbe97cda0826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0350ed7c-19d3-454e-b067-1be8c3087225",
        "cursor": {
          "ref": "304172a9-ffc9-429b-bf92-c23088ed9506",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6df53977-ad9f-429a-8fbb-39a669a540d8"
        },
        "item": {
          "id": "0350ed7c-19d3-454e-b067-1be8c3087225",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d2e1e1d8-bca9-4886-9065-16a5fcf92639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224dfb60-dafc-45b3-b9ea-2d5d56703d98",
        "cursor": {
          "ref": "4306c177-ba91-4004-aac1-8baf15c7a5f6",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a76a0cd8-a4a4-4252-9d97-cbafc860f48c"
        },
        "item": {
          "id": "224dfb60-dafc-45b3-b9ea-2d5d56703d98",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cf65b574-5b5d-4da6-917d-29f914df4850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83b357e-01c6-477e-a4e0-317212d3db4b",
        "cursor": {
          "ref": "5cac7427-5a56-4fe1-b2ff-eb639bcff7bb",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "dd1a2e74-b077-4480-97c6-d4c535ef8a6b"
        },
        "item": {
          "id": "a83b357e-01c6-477e-a4e0-317212d3db4b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7857647e-fd70-49cc-b36d-ddd1396876dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697df0b3-b405-4d02-bca9-1e8a8b386238",
        "cursor": {
          "ref": "59cdf1f7-0b17-4b66-b850-73e4f3baa1ce",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "11e30d2e-a52a-4de0-bd4e-954ae9451f44"
        },
        "item": {
          "id": "697df0b3-b405-4d02-bca9-1e8a8b386238",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "20b6567a-149b-4271-bfb8-20b4f8f039f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae6a5ef-106a-4df0-bf36-75e44c0d9383",
        "cursor": {
          "ref": "58ba5cea-c0c8-48e3-958a-c08f9b336d5c",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1681a68e-481d-4179-bad6-cebfe9f95994"
        },
        "item": {
          "id": "6ae6a5ef-106a-4df0-bf36-75e44c0d9383",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e5cf69e3-0181-437c-bf1d-f10f234aa99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88f10e1-9ca1-4a06-92b2-d506dc70ac29",
        "cursor": {
          "ref": "13e65c78-5a52-43da-aaa4-37da502ec46f",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1788ca93-0e1a-41fd-b284-c03b4e778c4c"
        },
        "item": {
          "id": "a88f10e1-9ca1-4a06-92b2-d506dc70ac29",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1e4142f6-9753-42c7-a4c6-fdfdd01f6876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9911688-90c9-4e19-82ca-960ba9a3019c",
        "cursor": {
          "ref": "9fba5ede-e1e8-4e76-9428-3598db4073f9",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c39790d4-133a-4f6c-b696-313787fb6627"
        },
        "item": {
          "id": "c9911688-90c9-4e19-82ca-960ba9a3019c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1ad6760a-77dd-4f3f-8ef1-7afcdf61e492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff32fd0-517d-4fe5-aa5a-21139f0d0ac3",
        "cursor": {
          "ref": "2b5ba546-6934-4d70-a313-d28f6ef0e591",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bd13d2f6-4dc4-4654-bf49-dd1a77b6f075"
        },
        "item": {
          "id": "fff32fd0-517d-4fe5-aa5a-21139f0d0ac3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "36c5e25c-3fec-47d4-9a53-e59db71f0963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79b9f42-e43a-4136-ba67-75320bfd8713",
        "cursor": {
          "ref": "a8e34eab-ae5a-4d27-b0c4-9f851218f34c",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "19512145-b1eb-4609-b05f-4b720d458bfa"
        },
        "item": {
          "id": "d79b9f42-e43a-4136-ba67-75320bfd8713",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0aaf772d-12b4-4c49-b3ac-00acc709af7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03327a02-bc7b-4081-b194-6ab1e58c14c7",
        "cursor": {
          "ref": "c5659021-baa3-42ae-8517-dc7353d548ad",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f10c89a2-617b-497b-80dc-6a45ed4ab006"
        },
        "item": {
          "id": "03327a02-bc7b-4081-b194-6ab1e58c14c7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "800a6f42-0f6f-4ff9-b5bd-c1ca4a64490d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec504821-b37f-449d-9a9f-13fd8ec05cd9",
        "cursor": {
          "ref": "f8e7b115-180e-49ae-92c2-736eb150dca3",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2bbd8f15-1118-44a2-b87e-7c2e8b392241"
        },
        "item": {
          "id": "ec504821-b37f-449d-9a9f-13fd8ec05cd9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "be242aaf-70c6-4954-b4d2-80ec35b15372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f4edba-4506-4edc-9c82-3b22be00a33e",
        "cursor": {
          "ref": "7edca81e-46a1-463a-b664-24614e18f9be",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6f7898c9-39bc-4194-8c44-a4b7603331b5"
        },
        "item": {
          "id": "83f4edba-4506-4edc-9c82-3b22be00a33e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1a776cb7-ad5d-4ff4-905f-a10f41b68ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0cca8f7-2e54-4deb-a954-16739feaf715",
        "cursor": {
          "ref": "993d1324-b913-4b5d-86fc-1860e02b79b9",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "59c17e50-445c-4479-b030-93ea8d34014c"
        },
        "item": {
          "id": "d0cca8f7-2e54-4deb-a954-16739feaf715",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d55c1d3e-a5a5-4dcf-8923-980b36779f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a05af52-1b43-4794-b1ff-db8c13129ddd",
        "cursor": {
          "ref": "20217f56-7750-47f4-91c9-fc4bbb34d9d2",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "60f9c35e-7cce-4c21-ab08-d0c6e99dfac1"
        },
        "item": {
          "id": "2a05af52-1b43-4794-b1ff-db8c13129ddd",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "06a1d886-e2f8-4f46-b833-afae747b332f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d6e48e-f319-44fb-971f-2886f5c30790",
        "cursor": {
          "ref": "dee8cb54-6d7b-4a0d-bcdd-fbec9e816900",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4815642c-9b18-41c5-9529-3bd73b874af5"
        },
        "item": {
          "id": "15d6e48e-f319-44fb-971f-2886f5c30790",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f69f0256-b9dd-44d2-ac0c-218c6714ecef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc05f579-fce4-4eb0-bba3-179cbcc2b47a",
        "cursor": {
          "ref": "6053c0b8-ebb9-4840-9253-81d0136f23c6",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "38b90036-572c-47e8-87d5-cca16f64f08d"
        },
        "item": {
          "id": "cc05f579-fce4-4eb0-bba3-179cbcc2b47a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "36a5fa4d-c5f2-4e0f-bb99-51f0a343d0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa1bfc7-746d-491c-be2f-d6d6470105fe",
        "cursor": {
          "ref": "b56ec64e-b4d0-426b-940c-c633fbd17386",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d38d92ed-6177-44c8-96ba-04e7c111036a"
        },
        "item": {
          "id": "dfa1bfc7-746d-491c-be2f-d6d6470105fe",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7eab4bbe-0dbc-4c35-b2b2-e6fb516bd5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2462700-7cc3-4e4b-b476-20c3d0cbc2ab",
        "cursor": {
          "ref": "3f362867-7b48-4de0-8fa0-520a28e5308d",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0e8fde56-256f-4769-b600-0228b3c03256"
        },
        "item": {
          "id": "c2462700-7cc3-4e4b-b476-20c3d0cbc2ab",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3781676b-14de-44f7-bcd2-4011d226f130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895f6625-1119-4cec-934d-6ef963c170a5",
        "cursor": {
          "ref": "34a3ab38-37bf-458c-9b84-529ac53246d6",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "008af91a-0a61-4b5b-9cc6-dca8e518e7a2"
        },
        "item": {
          "id": "895f6625-1119-4cec-934d-6ef963c170a5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4c0e5e39-0907-4be0-8d37-8c36fecfdaa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21ed1cc-d61f-41cc-835c-4aa3783cb1ab",
        "cursor": {
          "ref": "4f1cded7-cacc-4596-bcbb-a7cebb75c5ac",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b0778357-a4f5-4be4-8d48-bab5aa178428"
        },
        "item": {
          "id": "b21ed1cc-d61f-41cc-835c-4aa3783cb1ab",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "26174790-a1be-464e-930e-223527327e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450f3cbd-bb95-4d07-8a8b-945905c396de",
        "cursor": {
          "ref": "36fa778a-e2a6-4300-9398-1ddd88ac6f2d",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8fa801b2-5ed2-4c43-9ff2-17b9e03909ea"
        },
        "item": {
          "id": "450f3cbd-bb95-4d07-8a8b-945905c396de",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a0843263-c047-41ec-a7b4-56c606ce9521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34756bdd-8976-48a6-862c-0854d72dc34f",
        "cursor": {
          "ref": "e95f9c74-5dfd-4784-a5f9-550ba7de2e1a",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7bd1050d-9e30-4c60-9c1b-51c12bdcdc90"
        },
        "item": {
          "id": "34756bdd-8976-48a6-862c-0854d72dc34f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fa4a1c71-2cb4-42d2-8917-a56a8cbff68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ba8081-ab50-40c7-bd6f-8badc919503a",
        "cursor": {
          "ref": "04c3e130-f1ff-4523-ba3b-dc00cde655fd",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "26c1480a-dbac-4a77-8a5f-46e9ea141d1c"
        },
        "item": {
          "id": "97ba8081-ab50-40c7-bd6f-8badc919503a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7bf2b790-9511-436e-9a52-54cd7cab3e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720ab95c-ff82-42bc-9c9e-839823913d67",
        "cursor": {
          "ref": "c23dbabc-3a61-40d4-be12-cab72e685cb1",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "59914cfe-23e4-4018-baca-6299e3acb6a1"
        },
        "item": {
          "id": "720ab95c-ff82-42bc-9c9e-839823913d67",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5ce3aff5-7721-40a1-abe0-5cf9ef310954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0e648c-855e-4640-a1e0-05787ccc8b49",
        "cursor": {
          "ref": "0d4ce603-9d0c-41e9-b263-c4cbc321d2cb",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b10d793a-ff83-4181-a5a9-110be330187f"
        },
        "item": {
          "id": "7d0e648c-855e-4640-a1e0-05787ccc8b49",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6daa9053-7511-4f7e-93bf-5c05a31826eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01425609-a4ac-4319-a8f8-36a1e0d2a5e1",
        "cursor": {
          "ref": "19b1bd8a-b5bc-4043-9bcd-d861404f8328",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4d049a6d-fbef-438a-8ce7-e746781cdb85"
        },
        "item": {
          "id": "01425609-a4ac-4319-a8f8-36a1e0d2a5e1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8d4c6b03-8d19-41ce-9b16-656d35d75bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1087cfc5-6ffb-4b72-88dc-44b03122c48e",
        "cursor": {
          "ref": "5f15c010-8bf2-4eda-8c28-314bffa765fa",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "56114d29-02c5-40fd-8be7-0b91c63cc54e"
        },
        "item": {
          "id": "1087cfc5-6ffb-4b72-88dc-44b03122c48e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "90e2be21-10d7-4fa6-98c5-d81a84c5f62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f75a539-2c6d-40d9-8830-88ccfbdbdc27",
        "cursor": {
          "ref": "ea3b6838-de1f-4c5a-b34a-aa2cdc5aaa9d",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c857e4bd-826c-4604-bee5-067de6707d65"
        },
        "item": {
          "id": "8f75a539-2c6d-40d9-8830-88ccfbdbdc27",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d62d0e44-1757-4713-bca3-05cfcda1beb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21edf75-cf21-4e90-973e-4bd727aef29b",
        "cursor": {
          "ref": "2658fdbc-6049-42e9-99b2-c7eec762b671",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5929b794-5aab-43ed-aacc-0c0fa11a41ca"
        },
        "item": {
          "id": "f21edf75-cf21-4e90-973e-4bd727aef29b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9149b598-d63c-40c3-93ec-4735860784ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98173214-dffc-44ff-9592-78648042417b",
        "cursor": {
          "ref": "55a9c283-eb6c-4897-a5d7-f7401977fbc9",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0bf674a3-2c9f-4062-92e3-5e0b941055ac"
        },
        "item": {
          "id": "98173214-dffc-44ff-9592-78648042417b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a448af79-9e50-40f6-8e3d-c94c3274b013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064ff0c2-b33d-4d4f-9298-7087a8117d5d",
        "cursor": {
          "ref": "e8a12f67-b8f3-4c67-b9cf-38b16f4260e2",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d3bb8be8-a82f-4c14-8523-3f223b394fd9"
        },
        "item": {
          "id": "064ff0c2-b33d-4d4f-9298-7087a8117d5d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e687985c-04de-4121-b5c7-503ba434682d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193c3e0c-8f32-412d-85d1-5c9e4caadf8e",
        "cursor": {
          "ref": "2aa68edd-5834-46bb-92e5-dd02c093f2e3",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b58cbea7-f2d3-4e53-86f2-7566092e8d64"
        },
        "item": {
          "id": "193c3e0c-8f32-412d-85d1-5c9e4caadf8e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "27b46b64-83f5-4fc7-acc5-ade56a809aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da86197-1251-48c2-bb21-7e27dadfce14",
        "cursor": {
          "ref": "90f7693a-e9e8-499a-a0a3-2e5de1815a18",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ab93b5cc-fe9f-43c4-ad73-af507b58b86e"
        },
        "item": {
          "id": "7da86197-1251-48c2-bb21-7e27dadfce14",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "234934bc-39a1-401a-bea5-1c4059064120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5f706c-f178-4259-ba77-e4fdbd6b6bb5",
        "cursor": {
          "ref": "636237fc-91b2-477c-b629-8799f5f28d11",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4b60d7d7-8cb2-48fe-8ec4-dd40db728cbb"
        },
        "item": {
          "id": "eb5f706c-f178-4259-ba77-e4fdbd6b6bb5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "38afa798-7e4d-4551-a209-5e94bc275ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a09f20a-d655-4068-847f-59b4073a6fa7",
        "cursor": {
          "ref": "2204e673-69ea-4e67-a9b8-835996066b42",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "85106d66-2249-40d1-a985-6e9cd3cc73c0"
        },
        "item": {
          "id": "7a09f20a-d655-4068-847f-59b4073a6fa7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8d162e08-6984-4b84-896d-ac059ed3ea28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044e1ca1-6d7f-47b6-a38b-3044b9a1fc6a",
        "cursor": {
          "ref": "6a05469e-7a4c-4a29-a6e5-f1431dfadbbe",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6356446b-f48c-4a9c-98fb-5efbd773bdc9"
        },
        "item": {
          "id": "044e1ca1-6d7f-47b6-a38b-3044b9a1fc6a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3e3b801a-dc6d-41d3-8ae1-826de4bca6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be29cdd-ff37-4a84-ab0d-5364da9cad37",
        "cursor": {
          "ref": "bd81885c-198d-4029-abd2-5c8bffafcfe4",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5fd4bb4a-1fd8-4572-bf15-f5c5aeac79d3"
        },
        "item": {
          "id": "4be29cdd-ff37-4a84-ab0d-5364da9cad37",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "50d4821c-4ca4-4f4b-95e1-0c80104cc380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7293c5-ec0e-475f-9a70-87505996ea18",
        "cursor": {
          "ref": "0f19abb5-1566-4430-8f0a-0c9086d401c0",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a885df6b-9a87-47cc-a97f-3abd80ee4051"
        },
        "item": {
          "id": "4b7293c5-ec0e-475f-9a70-87505996ea18",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9b17554e-8238-43d0-b4fb-41d43c7e4b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e9b47b-6f44-4b21-a082-44d88e3c5478",
        "cursor": {
          "ref": "7a8db1f7-beb7-492e-b1bd-748df07de335",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e075f3b8-08ad-4316-ab71-ec8735a8fabb"
        },
        "item": {
          "id": "76e9b47b-6f44-4b21-a082-44d88e3c5478",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "56ffadf6-8236-4cb8-99c9-f6e27d902b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d663b5b-2351-4d76-899e-66c1c3434971",
        "cursor": {
          "ref": "1cad9d1a-5b29-4496-bdd8-8c7648c7b35e",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "cd398d1b-ab40-429a-8f4c-0cec7a2f5594"
        },
        "item": {
          "id": "4d663b5b-2351-4d76-899e-66c1c3434971",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "efbdc173-f755-40a9-846c-f32c0160241d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eca26ce-b214-429d-ad81-4bbff90780ad",
        "cursor": {
          "ref": "6decbee5-3325-4120-8c00-b214a785ff4d",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "99b76fc8-1793-469b-805b-08ad8ccd4e8f"
        },
        "item": {
          "id": "8eca26ce-b214-429d-ad81-4bbff90780ad",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "038e949e-ddcc-4450-bb50-6a6f01a081d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d881c4b2-c7dd-4279-9eef-e3c90f8bab29",
        "cursor": {
          "ref": "ecbe54d7-152a-45ef-8d4e-210cd95d426d",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cc14c071-9d2a-46e5-aad9-2791d45dc7d3"
        },
        "item": {
          "id": "d881c4b2-c7dd-4279-9eef-e3c90f8bab29",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "dc16ae43-351f-4584-b29f-675673941258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea453b67-dcf6-4467-9abc-c757513c87a9",
        "cursor": {
          "ref": "c6e1983e-8b05-41d2-b472-db8fa53c85c0",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "39d1c952-4426-42f6-8c61-ea3adbdc947c"
        },
        "item": {
          "id": "ea453b67-dcf6-4467-9abc-c757513c87a9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "366f8a7c-3a48-4e72-b8b5-a5d9a56d5e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70f5e0d-bd8a-4836-9597-bead849821f2",
        "cursor": {
          "ref": "7e87eb1c-044c-4af9-8855-a88237d8b0b6",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "60249aa2-21ec-4e0f-8541-469a4b6b973b"
        },
        "item": {
          "id": "b70f5e0d-bd8a-4836-9597-bead849821f2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7ba1db4e-dc38-40ad-ac0c-c4a85c830ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efc219a-1255-4df3-942d-984e020f320f",
        "cursor": {
          "ref": "551c15d9-df79-4fc4-8bdf-6db4a1a64e94",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e49bae1e-0b05-4e15-9e45-f88402d59024"
        },
        "item": {
          "id": "7efc219a-1255-4df3-942d-984e020f320f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8e86af31-8a34-4b02-a8ee-262cd072917c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4196b60-2e4e-4c51-bb8d-91deae26bc00",
        "cursor": {
          "ref": "3a263e27-9b52-4240-9f9b-84f8c875bc47",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "906bf442-4a2e-4a0c-9cf7-a3a6e9ff227b"
        },
        "item": {
          "id": "b4196b60-2e4e-4c51-bb8d-91deae26bc00",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4af35d44-d7f8-4a7c-8dae-052f2f8c6b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c781a37-4860-4ca4-b65f-c1e800998531",
        "cursor": {
          "ref": "beb8f0de-3748-4903-8e3f-ba819314ea16",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9a3abe87-032e-4180-89e9-a7e9d0d76931"
        },
        "item": {
          "id": "9c781a37-4860-4ca4-b65f-c1e800998531",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d9c8f410-849c-41a8-940e-6a323c370852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054a7939-a7aa-4c3e-91d7-0d3e8db3e9f6",
        "cursor": {
          "ref": "2ceaed7d-ba5c-4972-afa2-102ef7e463c6",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "581fb9b1-fa32-476a-95c7-581fe4bc7c3a"
        },
        "item": {
          "id": "054a7939-a7aa-4c3e-91d7-0d3e8db3e9f6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "eccc6156-1713-4876-ad18-43861dce058f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929ef2af-d9d8-4556-8577-7645ac87fadb",
        "cursor": {
          "ref": "84111bdc-b7b3-480a-a283-d8b4e0ee7c74",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5ac05dc2-52a6-4786-88bb-224b9c80ae0b"
        },
        "item": {
          "id": "929ef2af-d9d8-4556-8577-7645ac87fadb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e58c859f-b7b4-48ce-9b59-3ee2231d1e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cab81c2-0cbb-424c-afd3-665a453d94f9",
        "cursor": {
          "ref": "47c749ad-4e02-41f0-9540-8dc6443a4b05",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b9e8a896-4483-4875-921f-faa900607c16"
        },
        "item": {
          "id": "4cab81c2-0cbb-424c-afd3-665a453d94f9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5e0ae20d-84df-463c-9264-2a7407f1382b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba986860-d7b6-40e4-8934-4954aafc7b2c",
        "cursor": {
          "ref": "00195c4a-492d-4f20-9e07-8dd1c38254f1",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ba4a271c-713c-4279-9c31-f00a3c42ba1f"
        },
        "item": {
          "id": "ba986860-d7b6-40e4-8934-4954aafc7b2c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c30fc2e6-a82d-418c-bb63-b88be7901107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2864a35-776e-4994-8df9-d3fa00373687",
        "cursor": {
          "ref": "835adc22-4988-4555-8045-70e92ab9f549",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a27b7c3b-d342-44ef-812d-c5f35afd184a"
        },
        "item": {
          "id": "c2864a35-776e-4994-8df9-d3fa00373687",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6d2cbf4a-8f05-4f4f-b4a3-8ca85cbe310b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a7e681-fc30-4324-899e-efb906c042e1",
        "cursor": {
          "ref": "d2c44a19-c07a-44f0-a886-c394d28d834b",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "de5551dd-1c48-4c65-98d4-20660164d834"
        },
        "item": {
          "id": "30a7e681-fc30-4324-899e-efb906c042e1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3d203b12-37db-4cf0-b5f5-de77467cc5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b261e8b2-a716-425e-978d-d3a3a4657a63",
        "cursor": {
          "ref": "ee290242-9876-458f-a549-92292d888739",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "244ff5cc-ec54-4603-bb0a-4198cebf13fa"
        },
        "item": {
          "id": "b261e8b2-a716-425e-978d-d3a3a4657a63",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "de52c6e5-52b6-4da8-b014-eefe86d25ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455420bd-c847-4371-9150-ee23f367eaee",
        "cursor": {
          "ref": "c6d90116-6e72-49b4-8b26-0749892c7b5c",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a3e7e7af-5cbc-4b15-b918-787884832513"
        },
        "item": {
          "id": "455420bd-c847-4371-9150-ee23f367eaee",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ad3c020b-fed6-4593-b0df-e9af113a6836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd76d6b-1a44-4788-9075-73819a61cddc",
        "cursor": {
          "ref": "442170fc-d4b2-46af-995d-ef4e8b1a0e0a",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b76838a7-2227-4324-9ecc-772381988046"
        },
        "item": {
          "id": "5dd76d6b-1a44-4788-9075-73819a61cddc",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "55f9507f-be20-4a01-b495-29fcf40b86d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceeceb3d-03c0-439f-9492-a5eec454c33e",
        "cursor": {
          "ref": "97ab5fa6-5013-4b0b-9c53-67600a696abd",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "aa3057a4-c797-401a-bc2d-0f2765e4522d"
        },
        "item": {
          "id": "ceeceb3d-03c0-439f-9492-a5eec454c33e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "50a37023-1e68-422f-af77-4fa4ece064be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949d4cde-e6b8-40a2-ab3d-c9c04a7c23e4",
        "cursor": {
          "ref": "cf8fa72f-057c-4c5f-99ae-24d5e46b5221",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fc02ac13-ae34-47cd-bb8e-aac21fa17707"
        },
        "item": {
          "id": "949d4cde-e6b8-40a2-ab3d-c9c04a7c23e4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "99ea5cef-6ab7-4b0e-bed6-10b25b910afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3259d34-5a5e-4279-b98e-efd65c1c5e19",
        "cursor": {
          "ref": "a770b5f7-9dd4-4e3f-b386-c410b1594ee5",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "16693748-c893-4d85-9f4d-24a2ea452c14"
        },
        "item": {
          "id": "d3259d34-5a5e-4279-b98e-efd65c1c5e19",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c8abbfbc-6868-46e8-8880-bd62d2ba0dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd618ea0-1c87-4640-9f79-cb94725f78d0",
        "cursor": {
          "ref": "931ec7f5-a020-412e-8035-0f2b2909bcdf",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b82a63c7-267d-4809-a460-24a1a8f547d5"
        },
        "item": {
          "id": "bd618ea0-1c87-4640-9f79-cb94725f78d0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d1a93610-dfff-4ffc-837a-0b706913c0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784658c3-3b70-4f14-9fc3-fdd6959f06c0",
        "cursor": {
          "ref": "4333b9b2-af31-4c57-b183-448ec94bc7c4",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2fea208f-1a6a-4c31-884f-f54a4f67cd35"
        },
        "item": {
          "id": "784658c3-3b70-4f14-9fc3-fdd6959f06c0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f150be56-2e45-4436-a085-a44dddb80295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb50389-42ac-4ae2-b4b1-4325acfd55fa",
        "cursor": {
          "ref": "a479cab6-9725-40c5-9220-dd9ed93de8d3",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4e0b1f8c-b711-4ce6-9a44-26bc705f1ffe"
        },
        "item": {
          "id": "ceb50389-42ac-4ae2-b4b1-4325acfd55fa",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "794e3947-7a5b-4122-b558-5d634cbb452b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f013a169-42b9-4232-a784-01460906c9ea",
        "cursor": {
          "ref": "6c0d404d-aaff-4fb7-a61c-f9e0bb870c07",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0484b5c4-f7be-4a58-b50b-ba4e83ae0b20"
        },
        "item": {
          "id": "f013a169-42b9-4232-a784-01460906c9ea",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "84aed205-49d5-4f13-8208-dd994e180ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6891a0-2eaf-4775-88ee-d0be6c40e0a5",
        "cursor": {
          "ref": "89c5542f-8f3f-47c0-b628-33f6741dd908",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "69878bb4-594d-4242-a07c-f8292b7dde7e"
        },
        "item": {
          "id": "be6891a0-2eaf-4775-88ee-d0be6c40e0a5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d14080ab-a855-4297-82ff-5237eed8d092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1654f13-7444-403d-a526-f9edee0a84d7",
        "cursor": {
          "ref": "943efce8-3cad-423d-9cd6-622d482d7754",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3bb048f6-7161-40ae-90e1-037cf2a936d2"
        },
        "item": {
          "id": "b1654f13-7444-403d-a526-f9edee0a84d7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8a2ee98e-7a60-4692-827d-4a851cfb04ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca68f1e5-abb5-49f8-9085-cfb609c4af65",
        "cursor": {
          "ref": "1b0e8ef7-c486-454e-aed9-6cc381bc6933",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2c43aa67-2378-4ef5-80d7-4e9df91ecf02"
        },
        "item": {
          "id": "ca68f1e5-abb5-49f8-9085-cfb609c4af65",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e2471876-03a9-40f1-be32-1fe144777d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081fe53b-d914-4632-9bba-b968b324df75",
        "cursor": {
          "ref": "a26ee445-4e1c-46a7-83b5-7843cb6c852b",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cec3920f-e71d-46e7-8d67-6218056a1bd1"
        },
        "item": {
          "id": "081fe53b-d914-4632-9bba-b968b324df75",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "edd1b68e-7fd2-43f7-932b-f76c58166782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f60bf6-c860-4c4e-8778-943b0e4773a3",
        "cursor": {
          "ref": "fdfee4e4-e080-4a61-bfb7-68d9c3ec1238",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "42fb124b-1df1-4703-8b2c-1712b910dda1"
        },
        "item": {
          "id": "d5f60bf6-c860-4c4e-8778-943b0e4773a3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6bfdf37e-da8a-48c0-9770-b24aa5e22994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd2ecb0-46cd-460f-abaa-a74bb545223d",
        "cursor": {
          "ref": "8de71de4-908c-4bb2-a393-a679e3b5ad8d",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c6986454-6c73-4528-ac0f-2bdf79b850cf"
        },
        "item": {
          "id": "1fd2ecb0-46cd-460f-abaa-a74bb545223d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9d843d62-5ab5-4c7a-9ce7-e76239a6c76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58776d1f-12a6-4b79-aa29-62e342857474",
        "cursor": {
          "ref": "ad367a21-536a-499d-a7cc-2e087e8f80fe",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0eb9b1ad-76b9-4465-a015-101a176fc612"
        },
        "item": {
          "id": "58776d1f-12a6-4b79-aa29-62e342857474",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "63b446ad-014f-473c-9192-ce2b059f0def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1193fa8c-96a7-4dc2-9266-7847cb7cbd92",
        "cursor": {
          "ref": "033337ec-e7a5-4b9f-9766-9b849dbc3fe3",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2825f7a4-e3da-435c-afc8-c001f468cfde"
        },
        "item": {
          "id": "1193fa8c-96a7-4dc2-9266-7847cb7cbd92",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "394459d2-880b-4a96-97ca-799c8b10e82c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da71783-2303-43e7-bc57-38f677170213",
        "cursor": {
          "ref": "f0305ef1-45bc-43c5-9217-bd672aed7a89",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "47605af3-ac89-4a6a-9dfd-143529e17e95"
        },
        "item": {
          "id": "3da71783-2303-43e7-bc57-38f677170213",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "017c3456-279c-42fb-9c24-2ae7d88e1d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424709b6-990c-4229-bbf0-e9e33928591a",
        "cursor": {
          "ref": "8a90eef9-4644-4f61-8dac-502112d645c7",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "39eb2aa1-4786-4c86-8531-48629b2a69c9"
        },
        "item": {
          "id": "424709b6-990c-4229-bbf0-e9e33928591a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6f050d4b-c0e2-4ca1-92de-3f841d46916f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e13c375-5d6d-4130-b855-a407d4c9b3b5",
        "cursor": {
          "ref": "eba75ab0-1ffa-4648-b427-bc1ac5b27f5a",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b3a87d7b-86d6-4015-93da-f4208c0a7e8a"
        },
        "item": {
          "id": "2e13c375-5d6d-4130-b855-a407d4c9b3b5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "366e67b9-a54b-4fc9-abf0-8e0e28b9d79f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033b95a6-fc57-4e4c-baf2-ff214683f2d9",
        "cursor": {
          "ref": "e2401775-2647-43d1-a58c-234dd618e104",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d260d11f-2244-46e0-879f-ba942bca155f"
        },
        "item": {
          "id": "033b95a6-fc57-4e4c-baf2-ff214683f2d9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "834e317d-aa12-4585-b9ca-5daed86f9ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9638e4cd-3f22-45c2-a3b8-976162f0d825",
        "cursor": {
          "ref": "5f27e7cd-98fc-4107-ae9f-e4ed07792b72",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ea35dd72-5fd2-42ea-b266-0e983264a405"
        },
        "item": {
          "id": "9638e4cd-3f22-45c2-a3b8-976162f0d825",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "017aed0d-cb07-4d26-99f5-7d6e510f1084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8483a8e4-3d23-4d80-b65d-9319090df1d9",
        "cursor": {
          "ref": "d57665ab-619b-4a88-9c65-fa1a0ba42c4f",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d2266042-0c51-4a2f-9c1c-35f1082006f1"
        },
        "item": {
          "id": "8483a8e4-3d23-4d80-b65d-9319090df1d9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "373e3f24-bc25-401d-90e7-4b8ad2776cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f289bf-fa17-4fa0-b7ad-bc924d92be46",
        "cursor": {
          "ref": "fa92d99f-c306-4903-a3db-285ec005ef01",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "37774678-e2e3-4f15-81b0-2afaa16a087c"
        },
        "item": {
          "id": "77f289bf-fa17-4fa0-b7ad-bc924d92be46",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "70838967-8913-4536-b67c-335a734c5cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db4916f-6063-4822-b155-60a07c543f5e",
        "cursor": {
          "ref": "aacf2d9d-2083-4429-9ad7-7b759a3b512d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "44ccf563-eb0d-4eda-819e-e4285a3a015d"
        },
        "item": {
          "id": "5db4916f-6063-4822-b155-60a07c543f5e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8fcb77a7-9251-4657-b5e6-991c3d114e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55f6b79-eba6-4391-9e03-932ddb76e26f",
        "cursor": {
          "ref": "7d58ecd5-b840-40e1-99ad-376c5efa8541",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "da733c35-d777-4bdf-84af-bbd4e27c0278"
        },
        "item": {
          "id": "e55f6b79-eba6-4391-9e03-932ddb76e26f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d0f27df6-9a38-4f78-b006-74bc4bcd20ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81ebc79-bb13-4fee-8692-3ef0d700578f",
        "cursor": {
          "ref": "8b159495-e784-41e3-804e-8d9028291b3e",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "169d9fa8-3153-4619-9364-79395928b515"
        },
        "item": {
          "id": "b81ebc79-bb13-4fee-8692-3ef0d700578f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "323e0c73-9158-4784-9e60-ba8198a3c891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e05550-a118-4f3d-a431-e9a26aeab49d",
        "cursor": {
          "ref": "3ea7a09a-da4d-4b6b-a34a-72e3ff88e74a",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2ac3574a-1fed-4aae-bc15-bb3e0bfcb9a4"
        },
        "item": {
          "id": "e7e05550-a118-4f3d-a431-e9a26aeab49d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4c9d36fd-593e-430c-8c88-40acf1d91956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d28166-610f-44c0-8412-ed1abdfea027",
        "cursor": {
          "ref": "ba18804f-c07d-408b-b989-179c6aaab3c6",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "42dfdbf8-25fa-4e18-bc84-0cf9729d63f1"
        },
        "item": {
          "id": "80d28166-610f-44c0-8412-ed1abdfea027",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e9efc2c5-6876-44b2-9c28-2f22c155ad56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4daef74c-d954-429b-824e-804f5406a1d2",
        "cursor": {
          "ref": "442ce755-123e-4832-b1bb-956c2e538799",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "dd06a14d-4607-4110-87e6-836759360637"
        },
        "item": {
          "id": "4daef74c-d954-429b-824e-804f5406a1d2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a555cc31-24f6-41eb-8f17-0b331f6d6981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b8505b-b726-463a-b635-d3fd666bc8c2",
        "cursor": {
          "ref": "84858a14-c4af-441b-90a1-7cc4f8bab413",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "aa5d9b0a-89ef-45bd-9588-dea6cac291c3"
        },
        "item": {
          "id": "a4b8505b-b726-463a-b635-d3fd666bc8c2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "03c92be9-e4e1-45aa-8bf1-1c5499d30112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c642b407-c9ac-4bda-9455-8ed61ec6116f",
        "cursor": {
          "ref": "cc1983ff-0d65-4aa9-af72-1ad5c7a5894b",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "96dbd407-e2c1-43cc-874b-8e0f10658f23"
        },
        "item": {
          "id": "c642b407-c9ac-4bda-9455-8ed61ec6116f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fa86b8d8-de38-496e-98e9-8e0ccf32c104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979edc44-ff22-457f-b346-252a523bc25e",
        "cursor": {
          "ref": "9a1afc5b-ae30-492a-a6bf-3a5b22c9c533",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "68497dfd-f544-430e-b128-1d04ef208d95"
        },
        "item": {
          "id": "979edc44-ff22-457f-b346-252a523bc25e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "90602bbe-617e-4ac4-b206-1299dcce4da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b02e246-5c71-4664-8086-5244b365857b",
        "cursor": {
          "ref": "f5cd74a5-534b-4b99-b004-bbb0df4fc043",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "34fe8016-ed79-444c-8e28-a0a1888c110c"
        },
        "item": {
          "id": "3b02e246-5c71-4664-8086-5244b365857b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a3a3298f-3ae8-4405-8699-e36fbc7cb305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511da953-ebc3-45b1-bab0-e4798f35606e",
        "cursor": {
          "ref": "be198391-ca8a-4075-aaf7-0c73b4470f8a",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4c57430f-ae45-4b3b-94fa-23fb8df91625"
        },
        "item": {
          "id": "511da953-ebc3-45b1-bab0-e4798f35606e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "324460d1-2de9-4f11-9d45-15d621ab2586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63febe30-8960-4eeb-97d3-3425909015a5",
        "cursor": {
          "ref": "37fb3ff6-fec6-48ae-a738-a14342da68ed",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c6377f8f-b4f9-4e75-9edf-73f46eeeecf7"
        },
        "item": {
          "id": "63febe30-8960-4eeb-97d3-3425909015a5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b9233314-50af-4375-98c9-37e4dbee01ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6565cc-9fd5-4285-8491-5885c53223f3",
        "cursor": {
          "ref": "086c2191-ff8a-4c6a-9ef9-720414585893",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ee0d8a18-d597-4235-bc0b-bbca352f7abf"
        },
        "item": {
          "id": "2b6565cc-9fd5-4285-8491-5885c53223f3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "bf952315-86dc-4706-b66d-804dfb217ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9eb42e-f08c-462a-adfc-2881fa42bf09",
        "cursor": {
          "ref": "4fd2daa1-6574-4b29-b4da-42f4f3fd7d62",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "705e46c3-a01e-439c-a474-2500a2cf1c8c"
        },
        "item": {
          "id": "0a9eb42e-f08c-462a-adfc-2881fa42bf09",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "118fe8b1-91fa-446d-8358-2b4cc0f6c062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7bdb18-d492-43db-96bd-121212099020",
        "cursor": {
          "ref": "a2676175-2e4b-4671-8ae6-30e595b36cae",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8a84ac9b-e3fb-464a-bdd5-193a1eca049b"
        },
        "item": {
          "id": "2b7bdb18-d492-43db-96bd-121212099020",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "775294b0-3cf1-40cd-916c-5666ce3f444d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76c9046-66ef-4253-b460-bb6f90eeb7a0",
        "cursor": {
          "ref": "10cba088-7e9d-458b-989e-4e7b9c8eca6a",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f297c87e-339c-4ba4-91f6-78137ba3ef6f"
        },
        "item": {
          "id": "d76c9046-66ef-4253-b460-bb6f90eeb7a0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7857f282-ff1a-4d04-b445-ef8f236aaff7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3f28d7-150d-4100-9705-e45ae88d0704",
        "cursor": {
          "ref": "c9113adf-4fb8-4cf2-9377-f0596ac2719f",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "716a0ee9-fafa-428e-84fb-abb784c5702f"
        },
        "item": {
          "id": "4f3f28d7-150d-4100-9705-e45ae88d0704",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "772564ef-2d0f-4b87-b103-aba644e96d47",
          "status": "OK",
          "code": 200,
          "responseTime": 2367,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "168361de-47b1-4bac-9528-753a5032d13e",
        "cursor": {
          "ref": "2f8578f6-59c5-48aa-8be0-db33bf8b543e",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e6981e7d-fce7-4164-9b39-4f80bed41205"
        },
        "item": {
          "id": "168361de-47b1-4bac-9528-753a5032d13e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "aad32fca-04cc-42ff-b246-6ec19099d4e9",
          "status": "OK",
          "code": 200,
          "responseTime": 3802,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b789d396-1d5a-4784-ad1d-caa5070ee9ca",
        "cursor": {
          "ref": "91eed3bb-2311-4b40-b999-fa177b3c4039",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b0d4f9f1-216d-4f96-bea7-79229dddd656"
        },
        "item": {
          "id": "b789d396-1d5a-4784-ad1d-caa5070ee9ca",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "78895606-a03c-41c3-9776-a46713dcc5a7",
          "status": "OK",
          "code": 200,
          "responseTime": 3565,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b64b8b-2bcd-496c-938c-a3758b81ddf0",
        "cursor": {
          "ref": "5b916a74-a255-425c-9bc6-7d83d558b290",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "97d69306-6bc0-4bbe-b799-490199c423f7"
        },
        "item": {
          "id": "08b64b8b-2bcd-496c-938c-a3758b81ddf0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c9efae82-9a82-43ec-8383-f090aa509b18",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b64b8b-2bcd-496c-938c-a3758b81ddf0",
        "cursor": {
          "ref": "5b916a74-a255-425c-9bc6-7d83d558b290",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "97d69306-6bc0-4bbe-b799-490199c423f7"
        },
        "item": {
          "id": "08b64b8b-2bcd-496c-938c-a3758b81ddf0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c9efae82-9a82-43ec-8383-f090aa509b18",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8a2652-3e1d-44bd-b4cf-192527e31295",
        "cursor": {
          "ref": "2fdb03f0-18ca-4d18-9475-9f46ea70cc41",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1a17783b-1827-46b5-a437-01b0eef91165"
        },
        "item": {
          "id": "7f8a2652-3e1d-44bd-b4cf-192527e31295",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ed61ce1e-58f3-4b87-97ab-fb15f83b03b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e274bb-b24f-49f0-8871-869379f69b6b",
        "cursor": {
          "ref": "35faedb4-05b8-4ee0-b474-0bb698420ada",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7cd3940e-c7e1-488c-8eb8-65317d53903d"
        },
        "item": {
          "id": "c6e274bb-b24f-49f0-8871-869379f69b6b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3529b339-31ef-4580-9225-63750042564a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}