{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "14c688d9-bc51-4efc-a5e2-6a9875277a5c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "60fbe852-be8e-40d0-a05f-fe2b552f4a32",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "63573b43-596a-4fd2-b744-bd4285baa088",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d47f5b77-6e4c-428d-8b93-288e7485dad6"
                }
              }
            ]
          },
          {
            "id": "7db9a680-fe48-4d09-acbf-0e4c90beffa4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5667005f-28aa-4a09-9a62-e3c9f47bef12",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c7635456-5561-4497-8caf-59977e006511"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cdb16a57-8452-4730-9056-cc96e9504def",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f3c27146-e0ec-47dd-a458-7f21afed4e08",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3ed49696-f566-4c0c-a1b3-624e34861488",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e52e325c-b477-487d-8ee6-f4fc6dde5b07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06eccfa0-bcb8-4df2-bd95-1f54c6408bfb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "21909190-a2af-4745-8986-d44eb9c18692",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "302839e6-e6e9-4908-86d3-b43e007eb637"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "76713032-9ab1-48ef-8c7d-732a476cfd91",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ad8a7456-2267-4159-b5b5-808a6e78e8b7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2cb2e11-b0ff-4f7e-a798-d42ee67d3752",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "24240c09-7edd-4a22-9872-51ca9a72c9fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95f831a1-5af4-49f2-ac76-f5f634aeecb0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3ef13b5d-be3f-464f-ae20-e73c7ffa612a"
            }
          }
        ]
      },
      {
        "id": "efc7e66e-8cf8-4be3-a841-3d4b875830aa",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2babd1b8-5e9b-479f-84a8-ff533366077d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "76f00c14-519b-4fdd-9d8a-3db7432463b3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "09f476cc-8306-477c-8f59-debb663a5322",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821b513f-289c-43d4-8dfd-65a7571be6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57ccec9c-0c0b-4db7-84e7-8ec1ec35eaea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6668bbf3-3222-4c2a-8b18-4c380fce2601",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0097a1-d727-4770-965b-fa3ec3997a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aed75007-c739-4a54-bb24-1dd6a6fc5baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82463cf8-7f4a-4b46-8227-09446a4eb5ad",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d2e44b-59d7-4490-bf7b-c4b613da0c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1fa02211-f504-486b-b6ee-8950e5c94f07"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1e752a6c-043d-4ddb-b438-6e622f26cbf0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "758f590f-5190-4b06-83f0-31734e8caad5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b26530-173c-4d5e-a704-bb9d7a4077b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d77f89f6-1f04-46b4-995f-8ba3f939486b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4269a616-748c-4948-88a3-3f64c15be317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64850151-fb15-4bbe-b37e-7565a7742868"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "24a1e7a9-d502-4c11-ad6b-ee28b834a944",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eaf6a73e-d62c-498f-91e4-c34d2e7b1ffe",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "763b07d4-17cf-4ebe-98fd-e11c2a8aa32e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "832b02a2-1483-4e79-afd6-be74761fe65a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e98d05d2-b905-41c1-8b08-a1411852478c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "effa33de-3b70-4ddd-aec4-a70da9395b41"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b60bb4d-1ab4-4a38-b899-5f1e09231b93",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ec4a1665-d535-4e88-896d-1a823cce56cc"
            }
          }
        ]
      },
      {
        "id": "b435c7d9-ed58-4df6-bc8c-6e3e5b5322f0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f1686008-43f4-43e4-91e9-820b8582b4c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52a17491-8258-4409-aba3-edd08b234af8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d537ad28-f752-4c23-abd9-9f174af6b87a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce9da92-bde1-4057-83fc-dfc981230762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cf79e1f-d529-40a0-a679-ad16f6b7d26b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4bdbef-946f-455d-89ce-8f5df7c656a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62b044e9-2abd-4d12-9616-c584bef8aa17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b90087-2ce4-44a6-a158-0cee4b2ca9ec",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6fe2eb-3697-45d8-a92d-7eb72d51b9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ddd264f-b569-4ac2-ac42-e0bd2826a652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c34c99-cb66-44c1-9c83-51450513179d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4e9cb6d-7783-4428-8946-b9fd84137cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e68c84-efb9-4b30-99fd-6ecef2d76aaa",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793db7d2-08a9-4289-ab26-362a9523e5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd48e1b-80a0-4d20-9740-08d535563143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9a1f48-f79a-40fa-84a8-8332aa855fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e67a701a-ef5b-40b8-bdf2-a3f4276b4f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcd381a-7cf9-4376-bd74-28377f2019fd",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b89f7e0-7cdb-42c1-99c4-4885151e6cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b46269eb-0146-415c-9018-428a08d31781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621bc840-bbf4-4e46-9b8f-fedc7d7bcd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88e436c9-7f97-4207-aaed-392fc507d6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed640ce-dca6-4242-89b0-cdc77699f8aa",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26d70af-04bf-45a8-a617-dfbbec0ae552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ae8d77-bc37-4a09-bdcb-7ee202a6a8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f848a741-f40e-45c6-a0bc-5569d51f9e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82a17941-0332-4ee6-900c-48758cb57265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b45156-b95f-4ad4-9fa6-a451fec7c2ab",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eeca050-ca65-4a58-bd1f-8c158247b542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc856f74-7f5e-403b-a085-def86e90f266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3aaa55-62b9-4c93-9753-67cfe51986a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57eea4da-e2e9-47b1-95de-4063819f5ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd4c584-aae0-470b-9ff3-8062c9350090",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "781d37e8-88e3-460d-832d-b47b44e61f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772b0b69-04ff-4d87-9236-fac3a17e9164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b285f86-0ec3-46f7-a96a-583aa7579af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14f54d47-fc90-4c36-8a65-d920607c9974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457e91ff-9c4c-4978-9250-9998b4e14dcb",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56496af7-852d-465b-911a-27797c707500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c91cbb7-b5e5-4462-ac3a-ccdfd3c1dca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de38b0c0-60ac-4395-a861-8a3691321c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "838efe2a-6204-4734-87ec-a63d8c927026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b765b5-d9c5-4f35-95dd-7c602e442146",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea5284a-0f28-43f5-a70b-2446b50d1ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b3cbf5f-06b1-4fff-a62c-21f8224f45de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44681d00-d671-4ed2-b92f-e64ae8f460e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8624f481-bbb3-4b1b-b62d-6e396678162e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239bd636-beb5-443e-aa26-dab26ac2f13e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a34d09-f596-4fe8-9ab2-8812bb9747e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7f643f-c1b1-426c-9a27-a479dab73944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8023f66d-1165-4599-817d-c5fc9457f103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "155017d5-c90b-4f42-8306-da64630932a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f78d2a-7fa6-4584-9e6d-b1b36eb2646a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "128c774c-99ff-438b-ae33-d182d331ccae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0890d3-817d-4f4d-8e30-70589d85daa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a17442-ad77-483b-9428-61ad7a722377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d2dd86c-bdc4-4b3c-ba4f-9fc100bccdaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9885cb9-be54-47ae-bb26-723eac8b06f6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae708a7-c171-433b-b0b5-e230d2d04bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af885ac-3d85-4304-b766-e4179081cf83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e9242d-fc2a-405a-9306-726a86379ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "572fa770-fa7f-4b33-b700-3a60d02f25b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0544a14-a08e-43b0-adda-e9643ee13a82",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3420686-7fab-486e-bb42-ed352d05eac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdbfb0c0-c8c4-421a-95d2-8c1d47216481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c912eb0-1b93-48ce-beb2-9fa878c9f645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "790de551-45b2-441e-bf4d-a917b7124106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d04301-09be-4c9a-8f7c-97092da9760e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c22cbd1-a395-4b41-b2fb-9861a5370de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e484ec8-4355-491b-8d32-0126249dcee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0cf35d-b2fa-4044-883c-adbcc528b285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d908c238-987e-420d-9456-ac3ab6ae5e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fd6bcb-58bd-4ecd-a770-89d5efa9fd3d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cae5a1-fb21-48eb-9f15-385ffd440f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e428f1e3-0aa3-42aa-9175-c67b0f83f1c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466f7334-6ec4-4cce-acf6-f602ed0f1120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0cf231a0-93ed-47d7-b85a-bb03f30cdb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9c1949-683f-4cf2-af57-fff2fac87eae",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a55ecab-00ac-4f90-aa9c-77928ebfc62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f6c2bb-c034-4600-930b-dcfac3c7fdc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09d43d2-0c63-4b93-a384-74a60d3c7581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4535e96-067a-4d81-b684-ade1767137a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fad92b-1249-4a5a-80df-bea928f40a12",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8f32ec-ccd6-4044-b0cc-c8c7e0784d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d479b2-27ea-43f6-963f-ef19f805d60b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5fec9f-8d44-4a15-a44a-f95decbc53ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eccc4577-751d-4438-8930-340fe1abad69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e0cf61-1c5e-4532-b503-df8dac5a37b8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efcfe17-4b39-47df-a912-b0e319f7d41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba6281c-477f-434e-ad24-03c93bef2bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212128a5-c48d-4dcc-812a-781b31be3afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "060ef161-91df-488e-a2f5-137e3ba29639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c27eb70-c0f5-439c-ac03-bd5a34b791f4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a73f10-65e0-4b5a-b9d0-e5df5fafb019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "560ec1e1-6e8c-476e-aed4-edc276b9e98e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681335bf-b091-4532-9e97-53818d253f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc414669-add8-45e1-b693-d612c27b983f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20aef02-2104-45cc-95a3-0e8e5c1e83cd",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6611397-bac3-42a8-8093-ec036b9bc273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c512d0-9d1b-4081-8629-f20f88bf0262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725f4f53-4762-4f9d-abaa-baf1322b9f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3341913-4602-4f9a-a73e-7deacd9f9433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1de5c37-60c2-49f4-aaf7-6a58208a2aff",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc485db-91fa-42e8-89c1-8bd4e56ab20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7c4449e-8c33-4f4a-bae8-b1f311e510da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1746c431-eeae-474e-98e3-8e94cf2cf8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14c3efe8-7566-4f1b-8b5b-9cc75e68c7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca55da3-9551-421a-9068-bfa95c205666",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392a5460-5060-4b92-944f-0fb30c97333d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f8b0cb4-b11f-4ee7-8b07-f44a96228e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da28adc4-1d17-4d16-b6e4-e5ea3074f088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a951002-3258-438c-99d0-06727f56ca07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7de27ce-ee88-4440-818a-db24d96256e8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6705543-b2cc-4156-a3c7-d921b113a773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "594bb81d-f9ec-493d-9ac6-df544dbbf3c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70bf80fe-91c3-4097-ae64-1cd16094b86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d8dc6d0f-194b-4155-92b2-aec95ee82ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a98dd2-b10e-4387-bbfb-f581e89dff72",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169c5763-58b7-4036-8a04-07d9e4a88e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c27e891-c9ae-4f35-b9a1-7692b1953938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c103cf31-adc1-4b1b-a719-d846668bfe43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d885bb3e-5178-42f5-ad7b-c0fe1562c583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52d685b-58b4-4c5c-9409-a6ec347c724e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7695c80-09d3-4ed5-817a-2c7dcc5d7e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d03a54-d5f5-49f7-b21f-9c546bb73187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822645ff-6460-4934-8b36-e0f3114431eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e795d824-06e6-4fdd-9820-40284c8241a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e0917a-17cd-4b0e-bb5d-c483de719102",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6097052-3020-4b04-9763-f65827abb9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b7af026-4711-4b99-8f66-feabcceb9ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b3b61c-8d11-4646-990d-c4b48979eec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "17a2594b-25bc-4de6-9900-c73ee6af78aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0d3ff3-2974-434c-a2ce-a98cad224edd",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f3038c-4b8d-4486-b8cc-0549ef6882e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac7087b-6624-4855-bfd8-7def2089780f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a363ce2-ff06-4019-9fa0-6be725d823de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea7455e1-97e0-413a-bd0d-7e47883f5cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be18c37d-b001-42cb-a81f-32417d23bf70",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68003b3c-2cf1-4e7e-87da-af137bc7db65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d6c789-eef3-43de-889e-25cbef5d89ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41796d3-b0cc-4efd-a270-af66cefd5e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "66458468-ea80-46eb-93d4-11d4a6571756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35879656-063c-43d6-aea3-db00c96ad804",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2ae340-034d-431e-91fa-a053554f80b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc824f2-e0b2-4b3b-97d9-783ef7c207a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36c0f41-d1ba-4cd2-959c-c11ed3312634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8adcd93-8aeb-4280-8a44-f9aa24529082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38bb5fe6-699f-4e3a-82e0-301978022663",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951e409c-a2f4-4a9c-b7d8-7f5d7c43e268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e0d1833-13b1-4e6b-8d5a-62edc8625758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87e2e2a-8389-40f1-ab73-9bf0b830b18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "992892f5-f8e6-4af9-bd7c-ad4a05c7a623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d0813e-8edd-48f3-8300-51c6c5e03ef2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "443b6878-8280-43c9-b511-3c0b75019ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7019d6c9-d6c8-4b3c-9b68-0aa336f8adf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbed3cb-f9e2-4858-9313-1948697a812d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7d213d-902e-4b20-b0e4-172d0e363c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da31a4ef-b2b1-4580-ad42-d671364d2daf",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13b0e24-a956-4039-a956-bbc32d3609c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15b69dbd-a4ad-4495-8111-1ed0d8941cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6884e496-6cc8-478c-b0c1-eba122cb3ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13f9a38e-5cac-461c-b09a-e7af3a1de824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8945cd-0d19-4d17-a7a5-f13d4de73405",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7325a5-e809-4f83-945e-e5681315e552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ad2cc9-8ea3-4f59-b997-10f599289c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e853511e-2667-4565-b895-883f03aed7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f05a17-c9b8-4c62-959e-63323233b311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85c8c47-024c-403c-bacb-4e3a281b508a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbd1c26-0003-4f91-a4f9-e91088547012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2682dfc-a6b3-4e26-80e7-9931ec2d1259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853a5605-ed8b-44c0-bbf0-2f59d4dfa5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25f2e115-c7d4-41f5-b00f-9164a60beb3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c2fc38-fdfa-4ba1-9689-534beecbb600",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "903bee86-4cfd-4a0b-8f51-e04257baa30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c94367c-ccf0-4d81-ba77-d5b409e6a09d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d86a061-9761-419c-a3f1-cc384b2c18a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c1fffb-2c83-4c4b-8a92-892593ad530f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1104624f-d9fb-4ef3-b8ae-e2c02420c474",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb6613d-a94b-47f1-805b-eadc2dda7b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2ff9aef-14db-495b-b076-3bd6d2dd00d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb39208-28a6-4325-97c5-10b9851a71f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1cea4f11-dfda-4323-a2c1-1dace321fe0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b07155f-e06b-43a6-bac2-e51313e30bbf",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6987ce-03d9-4111-9364-51052ea5dfcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab4b6bb-161c-4e35-90ca-b7a80b369d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd38b400-48ca-4ca3-b060-78c6bc770d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80f61dce-c108-4103-aa12-a2b0dfe5e4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23aff5c7-a7fd-4e66-8fec-3ab9ad70b861",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7e91a8-a97d-4fab-aaff-3eef9f2b516b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e2cb597-49c6-45cb-b118-098f087e7a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94df4cf-b549-4d2a-bf65-8ab0faf29083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f70ef1fd-3ba5-4907-951d-dadb9de5b55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32fe370-bb6d-4363-a144-61032644bf70",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79d88bd-12dd-40d2-8a91-60651da0304e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252db305-f2eb-4d81-aa06-664746053f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319c1768-1cef-4b50-96c9-1eaa55dd365d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8211b251-8936-4ead-ba85-62b894bd744b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd4676c-bcb1-405c-ac18-32a3f11e6363",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3865687-5c2f-4e96-a3f6-cc92a5c9e6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3be855b-f882-44e6-9b98-25bcc8835cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb493ecc-1efc-4b1d-a4f2-ec679d4f67b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a92e5145-c165-4ad5-8930-9904bbd0df59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a42510d-a57f-4946-a5c5-63bfee8edba0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "146829c6-232f-4f01-bf8b-ef6ed5e4b136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294381e4-3899-4bea-a1a0-7fcff0950cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbcbfabd-282c-4bfe-b069-9344f45dc74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3542413d-e28b-4c4f-ad63-d2d68f949c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cca7215-9a90-45f6-8ca6-3d8a05b52c77",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4f3ed2-ae55-4f8d-811f-2bbf7d0d525e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8823c01-92e8-4726-afd7-1050f1b27968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa57b623-b7d9-4620-9e3c-a22d90a90054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "727c69ee-acdc-4676-938f-b766a46a4c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f91fbc-a859-45ad-ba35-b8c8ae5722de",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa3a820-4b9e-4938-821f-ff342f58366e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc6efe47-d78b-4c60-863b-7f2fbe8e7552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe30c14-9e45-4d6d-ac15-52b8617b4c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b8bd786-d31a-47ef-8829-41147b6a9543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5de7940-0f48-460d-adcf-60ca4900040b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f0dc76-a1bd-4772-bdaf-958bda7ccde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad09a84e-5c63-4433-bfb7-bbcd0295b28f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073fb3a5-d8bf-4207-ab14-3d612012d29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf366e03-41f1-4513-8461-05034d329d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cefdf20-75d1-4d62-ab45-623636bdd705",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b127d5-000b-4c20-8256-f22926f6d8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "717b8237-200a-485b-9303-cec3fa3d3d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f08f96-c8df-4ab2-a680-88451c511b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee36197b-f8dd-4022-b930-c7c144b0a474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be752783-3a40-44c0-a711-c32a389db9a5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ecfda30-b22f-4d54-bf23-dc179c45cb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "839b2f73-4ba2-43dd-9f31-52e8cd4f30f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3b17d0-8a30-4299-947e-a60d1c0c2700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55e3f7f2-a207-49fb-8794-184f75538afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd01855-4e1c-45b1-a672-e6cf980641d7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b83c812-6436-4794-bc9b-a8e4975b1ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d93859f-7fcf-4924-85ff-58cfd89ab729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4c9fdd-40a2-49b6-9653-2867c9c50fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8094b659-c2c4-4813-b360-020bb401ad90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09774e63-b8e1-401c-8ac0-f726edd63ed7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb93cf80-1011-4a7e-b6ce-14c086ba33d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c24ad44-6dea-424e-abc8-0c1d0bbdbac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13923028-5e95-4670-ad59-0b21923ed4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "720b6b51-8664-46c6-9f5a-76e49b64d29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a5dd33-d5d9-4384-913e-ae8e03f1796f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a88b7d-0e10-4358-bacf-4c9bcc5570c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33243394-4c0c-4477-94e7-02713b2b0894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f832c0-664b-4ccf-9b69-8a00be7077aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "34b48130-fb8a-490f-9ea7-fd9a38ea6597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472147df-177b-42dd-8cab-9c97ef3afa5f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09437bf-59ae-42c0-ba93-01df248c02d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2001ae56-949c-48f5-891b-db485f318494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1937c8-06b0-49ac-8bf1-cfc862a1b2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9701aea-191d-4a09-9042-9ba1194b6445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92d923a-297d-40fe-9fe0-14da2e8a3555",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2351011a-7d2d-4b61-985f-a44e427d3d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9829fda-9222-4c6f-8b93-a3280a21ab4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c4da95-3ad1-4299-9956-7f5ca8092ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "396ec1fa-87bd-4062-864d-ee3bdb71d8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a9159f-ae53-4426-b2c9-b4c7f9e0288d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be83f988-a98b-485c-a935-4d85a6614812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "752594c0-f8ea-4d61-af05-549bdf129fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399369b9-d7b5-41b5-b79b-bd4071806ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "66a1a4d8-6282-4c64-b6bc-960179f18b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2de458c-3bc1-4b09-880a-717de541b218",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cab788-4423-4db5-9236-e2c131ae357b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2bb8ed-4208-4fed-b360-ac04cbda6c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c960ef61-afb8-42c4-b8bf-ea7e4aca9562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf06ac4-911d-456a-935b-fd8ffe5f6046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423d0bc4-52ac-4ac2-a54c-f3039543bc43",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "857ea3f6-ddfd-4e1a-9833-94d0129917b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25958cbf-9996-4b5d-a10d-9f1a217609d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1cf45ec-63f0-46db-88a6-9c6debb8bc86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28114b80-fbd7-498f-b029-b828b65dfc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442453e8-0574-4885-bc2a-fbcd7c850638",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f17123f-7157-4d98-9cc0-078f3e8d8a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcebe507-bfaa-4489-9800-7415276c150a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5867205-9572-4375-b088-c597c164b808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "079b35cf-2cdb-4231-9faa-b02af481f4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44640ab0-d4d1-4dd4-90fb-0b87fb0331a1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c161e01a-b265-4b28-b3a8-7995a097a246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c70590-7d39-4498-b671-faea9d555874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38862a95-107f-465c-bf0b-fd6545e74539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "33266c8a-31e8-4bb9-99e6-26e950703624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f09fb4-c505-488a-89c0-986157915069",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6431a42-edb9-45fa-a658-78a3d43dc4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be23e27e-3b78-4e44-8156-3bb47f0ba005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16a91b7-70b2-4db1-8167-9d48e078ffa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bdea7e5-87f0-4ecd-846f-60773c82dc9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ab805f-62e8-4253-93f3-9d0d8fcdc5e2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c173a5e-b125-4d86-bf99-f6a26f1d8fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d85328c8-feba-4329-b942-8099570e6d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98cafd44-1c7a-4dc6-b16b-2e1bbbe55855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "155702b7-a272-45d2-a70f-7ed01dc30d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa2d0b9-69c8-4e2a-9daf-ec1291b7fc4a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f0888e-0ad2-4ba9-b681-18b70bb16d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d9f91bd-465c-49f8-a32f-559c2663e0fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af299178-9405-4555-a472-9bde37d1a95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "82922b2f-597c-4f92-bd19-16e01c153470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97961535-788c-4d1d-8b6c-2e3508de7422",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "993e3a5d-3529-46d3-b3de-f565ec8a088f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92efd0c8-c779-49fb-92f9-54ad56987f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8407c9b3-aed1-42e0-8ab0-6b0270df43a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "84096118-9ec2-463e-a8a2-32762c044b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18218c4-8346-4c4a-9f4f-b64cee8ff90c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbd1055-fcd2-42be-add7-5489290b7eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e36ee3-b5da-4f79-bd41-cffa0c7a6bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63557378-1b2b-47ce-a507-02ee468ad8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "649a84bb-63bf-4b45-b92f-7537c35b656c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad80b32a-51db-4105-8630-231e4fed196c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14f01d4-4f4a-4267-8ca1-b2f46bd36b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "627b0ca5-ac9e-4d61-a7bb-44e2385494b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0c69b8-f525-4d1a-83f1-779812b7541e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "02fe60d5-0fca-4abe-b4af-703bffed9c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56e5645-08c1-4f91-8dea-f80d054dfba0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8093ac-c97b-4f3a-912b-394add8a1da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de3c8a39-5421-4022-9cd5-68894756de73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a65615a-64db-4c13-ab7e-8d784d9c2769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "09e35c25-51ed-44e5-bdee-5a385db2b847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196b7b37-4663-4278-b8bb-72341c21f88c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00963c40-3276-4409-a674-422715abce6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b758b8-73ce-4bf5-b7aa-b30764d96618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182578d8-c327-4879-83e1-a1aa341e7f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37398339-1cd0-4dca-a395-e7b2bb3c275f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ad0165-52a4-42b9-9d9c-569481753963",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fc194f-d317-483b-bb42-80223f6b3643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c73bb7-f397-4af4-9187-86393e05a577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7412a92-35c7-40fc-986d-6d1f86aba2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fcb0df1-9d23-43a2-a6d7-a73cd928e769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b68b676-bd13-4644-8995-b51045a6f30b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1ca3aa-bee3-4b63-ac1c-be07b30578dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad663a3-f86b-4953-a92a-91ec0289d0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daaca096-9ff6-4668-96e9-d779092d2ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90e0871c-d10f-4b4d-8fc4-c2cf4ce9d70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca45fb89-a13f-4de7-b30d-73c762cb5dd0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381b984c-d10f-4603-8283-103875457b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5072e8-7589-4047-a82d-95086398545b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752fd445-6cee-4488-baf3-c96fad75ec02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b6dc30-b693-44c7-92a7-7616c27453f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45ab1b7-7a67-4fb5-b039-00237721fe95",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a679e63-744b-4e8a-b94e-315959afceba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa5eecb-df84-43c3-b0a0-f3fa842b3640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c4f1ab-7513-4ad1-8b1a-b1a60a370d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4186f68e-9a08-4c62-ac57-81bbb0668d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2224dd4f-1af7-4364-bd64-55f2f5153b49",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28467cbc-e276-4143-9c80-db72c13054f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb700f1-2f2f-47ed-b465-60a0ab1f51d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01f2c59-25f7-4149-bb8b-659f67dea762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f344788d-ef2a-4bd2-864d-88de253465ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8493f9-1743-4ae8-b98e-4fa76ad97cf4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649ce19c-91f0-4add-a192-05ba32893422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43601981-c845-4cfa-9566-dadb17b4ade5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27400b87-94d8-4f7b-b8b9-bafb3549742c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47cf3db5-44f2-4985-a2a0-5defd5d60da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ca012e-f6f7-4872-b318-59a133f69eac",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8adb9a21-b078-44cb-b240-27ad11b8d3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a5d917b-ae96-41e9-aa75-e205236c702c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1cfbce7-71aa-418a-bd33-656f0e81670f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09a69c4f-9ff6-46c1-8578-fc04d703dddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb3783d-1916-4d80-9420-1c99e5e2b58d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8420d27-6c6f-4cfa-aa0b-d8fd232bb5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7b9918c-ee00-400f-ac3b-f938d00e5f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c7a818-263f-491c-abe6-09a1ea9f56ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "035383e0-238c-43ef-b8f7-d1d0c81bc644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3c6fdb-b1db-447f-bc15-50298a6c208d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbddd8e-a154-422d-9c8a-b2d09f15c507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af99699-b9d3-4524-b70c-9e3c50320434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65d5b88-0784-42a2-a5b8-baab3d908c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0a3556b-82bb-4973-9677-899452a1f5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524b08a4-ab41-4c0f-8404-fc446268af57",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9938f6-9cc6-44a6-8ddd-a34c43104156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4005deab-1a22-4f97-b150-55d49e208f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd97d999-a7f3-466b-86cf-dd8a546f57f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9783286b-bb57-417f-b53b-5ef01a5074e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d20fbd9-26f5-4450-8b76-f7653b84ed70",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfbba67-0c77-4246-8ad5-c7e5c11827ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a74691e-66cc-4c74-af2c-5c7ace354252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7c0c0a-0057-46e9-b99c-64ec612e933f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "de078ed4-4820-4fd6-8ca5-09b8745aa09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b1e66b-7d85-4871-8f4c-eedc3d8ffb7e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99d3330-06f4-4971-ad0f-121b0fd66e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4360e2d-1caf-4619-a898-3d4298e1370f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30615bcb-9c84-4930-b363-dbb2cb4e4f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0db7b30-285c-4d08-8c77-be84b06fc805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ab399b-b205-4a68-8dcc-3f7b6dd039db",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67580e04-890d-4034-a182-f7eb11b2354a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee37f1e-01df-4195-b51d-f5025f916c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7bfa80-5f25-4061-8b2e-ee1bdf08b5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "259ab100-7165-4b76-9bf9-6cbf5f8950c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b55adc-205b-4057-b8b5-8d9f6108a3d3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdde2a69-b715-4d7e-855e-8929020b02cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ceefe53-689d-45de-b694-b3761a93cd44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f8cf9f-615d-4da7-b271-b2459a71155d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3304a44d-3b47-4f6b-9294-5fab99bb59e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29cf62bf-881d-4f76-9317-389eff184c95",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "433372d7-96fb-4ac6-8ba0-7c30506de97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc78ce7-fd57-4cd5-8dc0-31e10e72a732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1326ab2-855d-4cb5-909c-b53b73ed4f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93fe86d0-1cf5-4c36-9dfc-2228c09103bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c7f70d-92c2-41ab-ac46-1ed357d4adf4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f211657-3855-4696-b8fc-9a84a4a9871f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38db7dc3-669e-4cab-a5fd-aa35d8436732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e86f437-7689-47f1-8aea-946beb128dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9427ab3d-1712-4e65-8de4-90aa386c4906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c13c7b-6bc3-4dd3-b0dd-02c1264615f2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cff700-4366-4af5-aef7-daf133916a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f3e0b9b-01fa-4f8d-baaf-0e9adf412e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36a8cb2-1eba-4917-bf21-84e7bdecbbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d28a258-d1ac-4ec3-ac38-68ccbe9fb553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcffdd64-1bb0-4ad2-ae6f-4c2520661229",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1075cf-5788-4351-ba87-3b0884360792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838caf2d-81c7-4554-95ee-0833d8699f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e6ed83-b251-46d2-a369-3adccda6fec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5bcbf51-c317-4e69-a9e2-672f2f6375d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457afb5f-aed9-4c8e-9ad5-37c80e87f4b9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e268eb-9464-4e3a-a966-05ecc54dfdb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6051786-d9ed-44c1-8514-c6c812d7de6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b9c785-3bf5-4d40-81d8-253cfa66d8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e74ddd6-3b7e-4485-816e-b90baddbc46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d21343-1fe1-4050-9a2d-5b5f6d8201ac",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6f0730-1093-4ece-8060-555f421ddfd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184d9ba7-5b7a-4dcd-8bfa-c49d74ac0a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e819d026-2702-4016-bb75-516e9193bf8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04177c73-ba69-432a-aa3a-bb12a6c9231f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b06cd3-ef38-47f3-974a-3fb363935309",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b56acb-79c5-4adf-aa47-422f47790052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a383b508-a69b-4cca-a395-4258aadaa103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795e243c-e350-4f6d-9de6-4dd60b06fb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b30de37f-3ebf-452f-a30e-eaa111ece3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c507e6-23e4-4dfe-808d-21a9f1c96df4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756ad2fa-6f16-4e60-95f7-7393bbb02c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "178cd384-2bc2-4579-a3b2-e8377e01c8e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f645f42-4c94-4b4c-b2fe-bb4859b8138b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "48ecd78f-2b15-4de0-a3ec-1abfe32cc482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f913fa4-788e-49d1-84f7-648eb24c2b81",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c2dde2-e7d8-4e10-b19a-7f956236efda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d17c1fa-d519-40ac-a5e6-aae318916b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fa7b64-5ab1-43f1-a1a2-0b2a3e7bc07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a837012-4738-4adb-9b6c-a71db9c1ae98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435bbfd2-1d85-4f47-868c-068346586101",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09bc0a4b-c573-4dbd-a02b-2f10a5a3a846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce361bd-53ee-418f-9603-f16e48ff1655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18903a19-9478-494a-95de-3259e9ada5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a84ec6f-d8e1-40c7-af64-9680cc770e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228f6aad-d6b4-4fa8-8edf-2dece08930d9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7680ba94-669a-4c3a-bc29-589aa1def5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "747502cf-f2bc-42a7-8211-5d0876a6a5c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df6ad4c3-891f-4e17-be03-1ccd5c32cbe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "801bd8ff-7566-41b5-bfc3-506e8ef8b694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d7fbef-3215-47cf-9b45-2c512f0f329e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743a0534-3f67-43bb-95c0-31766c0dbd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f24b65-d657-42e3-82ae-9ed7fb8574d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa207f9-630d-4714-955f-8afaaee59570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0789613e-68c8-4bb3-8fde-bfe10616e7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754cd20e-e650-4285-9a4b-a4921ad68bfa",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08170d66-7956-4399-856a-ad2ebbb2ebd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8bc0c98-4b6b-4cc6-b218-e1cd1b1b042f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc36aedd-d925-4550-96ee-c452858328b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9fb5190-6b88-4239-a1a4-d400c56406fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460ee4ab-b65e-4773-acd6-66bc07a622be",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8c5837-45a1-4089-b8d0-61c8f841eb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "dcf8c94a-c79b-4425-9c59-8e205c25d749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a280006-cde8-4257-8a03-bce40b6a5059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a9948c6-362f-49ef-be40-b56023096833"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c98c4857-b771-4229-a219-34ec9d5707d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f8cebcfa-899b-41d0-8e2e-c88eb2f99fb5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d255f8d2-3934-4e65-b8c7-8c7f9cd77c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73ce5bd4-2707-4263-94da-e5da417b96b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da3d1d7-82de-45d0-ac39-6cf5bfeab42e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca97bd30-d204-4b93-928f-405361dfa1c6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11ac1550-142b-49e7-9134-8444f45ca9b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13ccc788-4ef5-468a-a0d9-da4b62cdbd83"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "267fd7b7-6991-4c33-83c4-0d58e56c00b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c02f75fa-93e5-4652-b85f-71a84081a682"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cba9de39-19fc-4657-8002-5b7605fafb89",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1730efd6-72b2-4880-99fd-bab595e77c03"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ce3bfe12-10ab-40ce-8269-1631775197be",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a484a5aa-3a5e-49e7-b136-fd440c42cc47"
                }
              }
            ]
          },
          {
            "id": "0bb531d2-4ca3-4af1-841c-7856d05a6a74",
            "name": "Positive Testing",
            "item": [
              {
                "id": "edd6f104-27e8-4f2f-ba8b-6b53ed83526b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "249766e4-a3da-4a2f-9a4e-6b91f0ff36e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f877027-6488-463a-bd7a-fe68aa264541"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "004b17f2-f8ac-4b73-b8f9-f30f7716b1bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bd9b143f-fcb7-406d-9d97-e75a8b18dade"
                    }
                  }
                ]
              },
              {
                "id": "c425cd88-4c0a-4f00-b409-300505bad8ee",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "127275be-f655-4082-b03d-714f2b5ce04f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "342fb728-f195-42db-b40e-ac7a40afc72e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37b668da-5072-4ab9-98ba-dacce5a32d0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5beca5de-f311-4e45-a5fb-a7917cc01b39"
                    }
                  }
                ]
              },
              {
                "id": "2a599bdb-55f8-4a1d-8164-2182292c8fbd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55bde077-cffa-4896-ad46-080b619f9313",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "557f7cb8-db47-4ef6-bb37-a4ca6ad7d5a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a7e103f-8c73-4774-99b8-dc65053e1ecd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3ee0c47f-72d5-4a15-8417-100079694386"
                    }
                  }
                ]
              },
              {
                "id": "d21c78a2-4374-4c26-acfd-17b43802d022",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3dfc6656-e902-41d1-9321-aec71d6d6320",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7722b668-e0cd-4006-a217-d18262ca8cf4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2090bd36-aa9b-4b82-82db-400b96137b9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fe28dc37-88f1-45d2-9b2f-1189908724d6"
                    }
                  }
                ]
              },
              {
                "id": "81d90b49-6332-43c0-8798-364c01452c35",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93ca8e6e-3c8b-4621-a33b-342a667ab64c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff775e81-8de5-4f34-9c93-8c0cc7619083"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7b4d654-a599-4ae1-bc44-4dbe62de228a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "76d70f50-607a-43f1-928e-024f8d0603b0"
                    }
                  }
                ]
              },
              {
                "id": "dbbe0f91-9ab2-437c-823d-16267bee4938",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ab59a2e-cfe6-45b0-b92f-b59aa8015441",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a20379f-f600-4502-b138-cc5ec0fc3919"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8dd49e4-0118-4d1e-b5ea-8adb67c4802c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b94d25f1-ef3e-40a5-95cd-3b48c31ece34"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "90e8d237-aa65-48c4-b213-11ec4c0a7c33",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f3a6cc9f-6267-4698-ba3f-5f965e7a060c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "201946a1-1552-4758-8786-e8b1006d0953",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e31d0e21-0fbc-4ce6-8a48-0fd5d71dea27"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f0110db-0947-42c6-92da-fb5a3b66ae26",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c96eab79-ab7c-4f31-9e1f-0ea6a1c849b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b10ebd9-d57b-47bf-9aaa-a58be7fd741c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc477064-81bd-45b0-9e3a-9bd9582b1bd3"
            }
          }
        ]
      },
      {
        "id": "8962d1d8-81c3-40f9-bd6a-3a1aa3dae1cd",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "da83016e-bff1-4e7f-9986-b955ab95d690",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8edea139-7974-45d2-aa06-c9cb61a1a484",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6b8d63e6-95bd-4f12-a1cd-e1f175533088",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a750ab2c-b702-4d81-b82f-a10b0c4f5581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e1726e-caa7-4167-b60f-31c81d42f640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b52ab8b-3e83-4d14-97c3-5239aae5b7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c496c2e6-f95b-4848-be7e-6fa54da90089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07e9541-4d8b-49c5-ae93-0f111f1eac06",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd03ee7-4e81-4f23-98e6-c3bff71fa991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a0a4a1-0600-426f-ad55-c456b9e57fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e603628-7d0e-40e5-90d4-b34d95cccc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa70fd7b-a9fe-41b7-9401-c7835ed6aa18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5addf5c-d12e-4aae-ad0e-74d1f641ea2b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7386fec-b343-4002-a5cf-72748d60a504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271fccce-57d1-40eb-ba36-4e0e161f8952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5d366e-f834-414d-aeca-4526b5325a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92260080-b383-4044-b8c5-ae399b864f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498ee1fc-ea75-46ee-831b-2a3bf87a91da",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef671d20-4f0c-4f37-b589-68c102ed8617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "896eda85-27c0-4fd9-8ae4-173a196305f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461ac9ff-3165-4cd5-a61b-2721cd5a4068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd281cfa-1983-4521-99ad-bb51a58a47ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5633214f-ed47-4f94-8616-a67fc2f8d73c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d6290b-8621-44b4-9a71-7553328c4828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a25508-e131-4e67-b13c-879a834abb94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de542e04-13f1-4a77-a297-57c1f406b1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df3582ea-e7c5-4b0c-b283-cdb80194770d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c239ae0e-4e5a-4e22-b20b-fcfdcfb2a137",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca11bd27-b15b-41a4-bebc-aa62a70ff682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d244a13-0913-4210-b464-5297a297be30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c0da28-67bd-46bc-bd1b-cefc542365af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7561435-8f73-4b8a-bb71-6a7b6694cc85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8431c10-ffde-47b7-a330-d3f440b7097f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad67de0-51d9-40f7-a112-e0f748245ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46058e07-8f01-4e0d-9920-376a0478d21b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351ee893-4741-44d6-9a4b-37e0a30baa98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2fde00c-6030-4e08-9d10-2cd851077bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308412d2-69c3-4b38-a2ed-0832c6350a57",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5facb48-7b74-447d-8b02-2cbae2afdd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc760ac5-afd0-404e-992b-00e67ab131e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438eb0bb-407b-4f87-bf22-f4b2d1c6946b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a740cfdb-d546-4d45-87df-a129e1b30d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fac9598-3151-4e91-bfba-6a89c050403d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1070d4-fd71-4d27-9602-51015c5273e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9db101e-ea8f-416a-8a03-c2c410f115f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ca9273-625c-4736-8826-948b73d2e683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eda08593-85ac-45a6-8344-c5efc60b1332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6676d621-e4eb-44b6-8df4-833243542971",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46cb5b33-ad31-411f-9e14-1e9c3854411a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee581757-b020-4cec-91e7-fe8d3f8734a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc22f4a-b8d4-4c9f-b9a2-9962f232c086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a1c4b18-0cbb-4d51-8469-1d975eb45e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2c1e86-77e7-40a4-b27c-e3e1aee1c2e8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ed8d24-0c2e-4f97-9344-d3c75885c399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a73cfb-003e-40ca-a218-169e39fdee6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc94fec1-f073-4881-bbad-f0522e94995a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8b15d6e0-f6dd-436b-a671-9c1e91d8ea62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccfeb04-98e1-4e32-bea0-656913318c67",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8ad4c2-fb9e-45d0-bba9-69081ee65153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3453de-a2cf-4f3a-8762-b633f0f40af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccecacde-3ea3-4d21-ba84-4390bc7c6c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac1eeb0-f36c-43d4-bf55-a3cda15faf9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5b41ee-3a5b-46b4-b913-920223441098",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec824d4-ce97-4239-b27c-4d53fb3faf9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0259b374-daa7-4bf9-bd77-f2549ffb365d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2a8b45-27b0-4f53-9510-5cd69275a4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b89d1b-8152-45f1-9d85-d3dfd20e868e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61da771d-de11-42e0-88f4-5e1525e7dcf2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6c4718-620b-43b4-87a1-1ab90c450237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc66a955-cab4-4460-b12f-a5e3b26b0ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acdfed73-da85-4476-a54b-77e556be5af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "05a48865-a5a5-43e9-a344-5b7f005eab7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80fcd5d6-57e3-4fbf-a9e5-cd1b2d4edc08",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2793f7e6-010a-4ee6-bc19-a4fb4b3a03ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6693812-1a4f-4952-b6d0-97091eeac5d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36627f7-3b02-4cd9-be31-6990a8f6d4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "932f8117-d6a7-4b5a-bb8f-c4975878c33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79404db6-fae0-4125-9163-57f135a4da94",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80faf73a-3a5d-4acf-a371-4095587f0fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ad3a17-f468-47f0-89bc-4c1334102c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c84c703-24a8-4439-96fd-e65e58416fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6917da75-99ba-4b5a-ac63-8e1c69c1915d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7bca9f-24bb-42dd-a348-ecb4f69e2d52",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2055ff33-5704-42a4-8a07-46bd55a96231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0caa4b-8760-4027-be1b-9c196d97ef1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b6ece1-25d6-428d-b6d9-6fb61afac847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9c8a9bc-ed01-4016-8cbc-bfa8cde82cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd346d00-bc55-4173-ad40-02e0ab47e80e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcb62b6-d5f8-4a63-a58f-ed651ae80e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9550070c-fde1-4d52-b0be-4c09456bbcad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5273d6f-6b93-49dd-95d8-3b0507c2459e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "32328102-c07e-46f9-af95-ecdac2d2a8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0592918c-a1d0-4947-810d-2fe1de24179b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ededc68c-9839-4e85-a729-6f10f2d0df6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5621d5c-a455-406b-8309-87650f3d4fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780a2509-2301-4b75-b6e5-f557a0a4297d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6155ad4-75e0-418e-94a5-68e09f08f7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3ca52b-d645-459d-8a17-af9a28d6bbb1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70e4b80-62b7-4fea-8177-0ec72f3582ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85362956-039f-48a2-a7ff-e098eb319e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e083484-c43d-4c68-83cd-8433f2d087cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9065d844-851f-42eb-abef-2b60b472c419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113f4a6e-7272-4b49-af70-56c74cb7997d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86928efe-ed63-4ec0-83ed-aee6b86486c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c870ae5f-392e-429f-8e7e-afec835f15c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810f3f2c-6ea8-41a3-bb56-040502af95bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "432ad8d7-e813-4cad-826f-8b7ac64455c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c89fcb1-26d7-4b65-a140-a8d2ee65887a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1122b4f5-2766-4126-b35e-b1aa02d33f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6658f1f8-fd11-40cd-911c-c842e2836aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5370bc51-0136-468e-9ece-2b2c21683c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48e11238-9745-46d0-a780-1ec994fc1615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5d58d8-4cfd-4668-9eca-e1cb8ef49de7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835da982-7b3f-4448-b4a2-fb53f3a00bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2cc7555-c5ad-46b8-832f-4d862b7944cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430f43cb-4a59-4488-8233-e3b9d8deeb8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb1df6d3-674a-4775-b9f8-cf3474d092bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e280f81f-fd63-4e60-82fd-fa0bb26ff0b1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5359e6ad-b4ef-4fce-8d3a-c3f5b73682ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0a6549-20c1-4fd4-9f9b-9604d8856c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe56ef3-7871-41ec-bddb-4a5086af4d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b09c8527-3530-44b4-a08b-316cdf229083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977d5f93-35e5-4523-9678-7f09573b5fcc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d76658-1223-49ac-9cc8-b59be6226dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44aa5f1-bfe9-4e33-84ef-90240944dfa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3a7d88-54a0-4b79-a126-4e844a3fd6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a59ab3a-b955-4cee-8291-9ed1f3963305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52559a0-9af2-4083-8d1e-81c5d25238ce",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39533b8c-e354-4be7-bb5d-daa14863aae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d54083b-c4b2-408a-8f1a-364d9f0fa136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7105f6-8abc-4feb-a1c1-cb964af6f080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a1f85a0-c3b0-4691-bf83-fb4553421a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d1275f-4868-47e4-8bb9-3ac284147001",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f9d253-1c93-4212-b5cb-43304d305bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107f4714-8422-4ce0-bebb-0ed01bed8e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a4fa7b-89ee-4a09-ae71-dc16e05f1130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c33ffed-77ac-4872-94db-a32aca603c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c903f76-018c-483c-b142-91a94dc644e5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1793ac-b666-4542-a925-791a84de7584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75558f04-4073-4d64-96e3-3877cf7d5dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1f2a64-c054-4d72-9779-a34a03f74b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18d336ad-cfbd-418b-b28b-ccd0c4a4dc9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1378724-e590-4295-8d38-815ee4df3222",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe9a022-6ba8-4f33-a4b8-abe6bdf5f1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b4b5a0-f669-4177-b506-1faedca77c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450e3862-0d25-44ab-8ca3-b26669cc22c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c965920-571a-44ef-bab8-ea7a2acc0360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6771a576-663c-4ba6-8e6e-a0c7f1516a24",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fbd3be6-8948-43de-9956-94f48a5ea50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee5d7c2b-5325-43c2-b9fd-c0d5c453fbc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195db76d-931e-4442-b716-c55c139e49da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18ff605a-2195-4c5f-ad2f-d6ee3f0fac8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244a0170-5ccc-4baa-a448-ba028c845011",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5ee4cb-0512-4f60-9414-e2ceb5af9c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "665a5f01-3189-446a-a213-d5f1fc8be067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e7fccc-f912-4e5e-b16a-6f38fe08e801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe523f91-a19f-4ebb-9352-4209be01450c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b88c630-5858-4789-9554-34e25bd27d59",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c7a1ab-3ec3-45fe-8188-b0f0164f8994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b41a750-104b-426b-8cc5-d059f8acbc5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815269fc-d3e3-4be9-979b-42dd894c55ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92ad8668-8a6b-42c3-b2f7-16e2c8b23b65"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a7d8ddae-7724-402d-a221-74ddab6bc15d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c94f945-ea8b-493b-9809-b7e7736f4936",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ddf9024-e763-43c5-8634-70d666f26945",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "51c2727f-6100-4ef9-8c8f-68ae06d55455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "894e89f2-bd8e-4513-afb6-ceb377de4c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62fc4205-a102-4699-ada5-491f0ac5d161"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe256724-dda9-48ce-bff4-793c50ebc1d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7c81aab-99ea-43b2-ade5-da8a8187867c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "781ef39c-e2b1-43ac-b7a9-5634185dbe5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6cc20f1-90a2-4e89-b77d-a5248872180b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6fbe5caf-6d93-4d01-8f2c-9910656c8f13",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "be4124fa-abcd-41a4-a1ee-c450a1079125"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91941c5d-a8be-4c0e-b46c-248675143aba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6320abb2-38d4-4dca-b652-359949fdc9c8"
            }
          }
        ]
      },
      {
        "id": "6128f58e-39c3-4507-8e73-64a0f84341e1",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ef31c48f-12a4-4937-86bc-47f3a8692362",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d0806e2-8da4-4a7c-a236-87e5fa1b180c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "54e30a5d-3965-4c93-8848-4118fac0d1bb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81b8b2d-4548-4feb-bd2c-c8f61540f6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11f00a7-409c-474f-985d-5d944fded663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b2cd19-3459-41de-819b-ae64b358c367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c828c9-eb03-445e-9704-a36a877101d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56311ee1-4ab1-42c4-8474-e94bcbb23c35",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6c08e0-5565-4b1b-8493-eb80690cabb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fce7ef9-e997-4402-b1d0-d52ed2f0f728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2877578-e0d3-4511-90c8-be07a5e450d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed690b3c-c046-49a0-a577-70e1f2cd1aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35712c62-7973-4672-9d15-7deac3a06cd0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a43d134-71ea-40c2-bf6a-1d780eb61f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "010899a7-ae5f-402a-a3b9-7f4dce57069c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5209d4b0-5271-45c2-a640-d333076f6371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14e75871-6cc7-4f4d-b723-59cfac7558b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76bfb2e-6030-4885-8d78-88ee6f8d64bd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5110d46-3c4b-40da-bcdb-d44d9b2f5c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf55d3c-27d6-41d7-b3b4-78f003fbb3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7905c748-a57b-424d-9b9f-f309ff2380e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce08d076-c537-47d5-9dc1-b43067812e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2224754-c0d1-4d7f-ac84-2a439da4feb7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1738d5-8b16-45d1-ac7a-0521919f4ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c3b4ee5-b62e-43b2-a676-0b0b618250ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0346a7-e150-450e-b177-7122a93827bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b518a8de-bde9-4e3d-98de-861fe0016b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68d8e66-dfce-4e43-be28-8ab011765983",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6eab2ce-61c6-47d1-8602-85ab0a9bba7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d953887e-e1b1-4495-b502-f02abb6b157e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e129b926-aebd-42d4-8912-0aecde8e00a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa44885-a7b3-49fa-bf08-9b427d31fb6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11053c2-7a90-4a7e-a1c2-abd4b83dcfdf",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb4f6a9-e989-4f65-8fc8-226155f74342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4f33c4-43b6-4383-94b6-b1178f182655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6577295-2f11-4c2c-a836-63780543c57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf087fe-0013-497e-9637-f2a9712f8065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5580c88d-8246-4ab3-ad45-96e09e94d6ee",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123350d6-8d7b-49c2-a10f-cc8f90fffbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d9be78-a503-471c-9926-380c88537b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0176e0b-3a8d-4fdd-99af-196fca8a7a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92091ed0-dce8-47ca-843f-1b3a01c03deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a76a9d9-d98b-4b97-84ef-60aa4d0984e5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31edb410-5bc8-4039-b3b0-11b5d7f8fa54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ead5a89-84ad-4ad9-b70d-47b79de0ad53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a626e07-ce35-4d07-834b-6219373c1c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1366b786-cfaf-4b33-a87a-77747ae21c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271ee447-a6a0-422c-847a-bede1f359854",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c8aad5-ede8-4038-a372-49924b1ada6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04cfca04-8b19-4bf6-8796-82b4a75e19ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5be277-1ba8-42ba-be7e-cfffb8710496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80be0791-1ef9-4d4e-ab2a-7ab1580a7704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef0d444-cd79-49ac-85e8-d34728f621af",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79be49da-bded-4aa2-90f3-4307dd6f744f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60eee4e0-6e5e-4281-a4cb-a95171b0d312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b365bdb-6014-4cc6-bca4-8e94497a83db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "14efbcef-bfb2-4825-8875-bb40c0449580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adab4b4-900f-4868-a68f-0fbf2344311c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57be591f-0237-4344-a34e-aefc35f7cc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de36d896-952e-40f4-a74e-a9a87ec892d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b9aa46-fbbe-49ef-ab74-3352e5de658a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da88586a-bf1c-4cb2-bf84-51c1ff307b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3b9791-52df-4a96-b811-5c5bb46be422",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87926b49-5747-45e3-83e2-c3e17b551912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dad2047-bdb7-46aa-b717-f5f67bd1986d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cd5827-acc8-40e6-86a4-f664f231f983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5222df8-3992-4a1c-9aaa-041b76c1408c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db31cf5a-49f8-43dd-8168-554e40c3e475",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5900a6a-d731-4361-a3a7-ff3155047357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf48563-2e00-496e-a423-b259e421645a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60283c3-3f17-4636-b210-22995be22f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e00bb666-4c05-45a7-a97e-b1618e97b68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd7ada3-64bf-4523-a6e8-313348f74611",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b2fdc0-fe38-4144-a5ef-d4a19748f1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1d5437-3986-4b0d-a2cd-612cd3535ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681ff86f-2a24-4072-9aee-c3dafe3a8292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3c3278-c8ca-40e9-ac28-c48ca0d92f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214f83ce-f1c2-4275-bd0d-1520591e855b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5306c60-02c4-48f5-8e14-161d0a6462a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c87437-55a8-4f6d-86c6-867116999144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77f5ce5-5a55-49ac-90f0-143615811619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac4417e6-f3be-435a-bcd0-36cc93b77f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ddf0f13-fade-485d-9df2-eb842fb5b151",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527c553c-f40e-46b1-b96c-554e62740ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf74295-e4ec-4327-abd6-e47055a3ec7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c90a4b1-e7fe-4c81-8bca-d54c6296c8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d059ca3d-916d-43ff-8a4f-2c0cd3f486a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa9d0e9-c4c9-40c2-8d22-590d73702dda",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d37fbf-eaf0-493a-a000-1ce8307bf203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451ee962-5712-424c-bd57-340f5e46e89b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffc1ab0-6c59-48bf-8768-5b174215c5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf5151e-736f-43c6-a5ca-52ddbbc4cb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e795d5f-6578-4e09-a772-8e68bdef9c6a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2436921-19ec-47d3-bf45-55c900e4c746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e72214-5e21-426f-a339-80a0a05f1d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1c1c5d-eb1d-45f9-81a6-438295600930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09d0fccc-54e6-4eed-9c40-a0e0864a77b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7408a6a-8d38-44c1-b263-8130f334169a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34727462-fd5e-403b-aa3d-0af6b8c31cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d70e67b-e59e-40c6-aaec-3205c577a8c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1cac68-3e2a-40d5-92b6-00aba485ed0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a715530b-192f-41a9-bcf5-09ae4228d5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fc9bf7-719c-4e10-b204-cbbde92c68ff",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20dd85d3-2b24-43a8-b8cf-400ea756dbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9fc982-d999-4d8b-a41a-9c1eb351922c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bc74a7-894d-41bb-9b5f-7d15ff5634e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad2108c7-78ec-4bc3-8fce-b7541af7b4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d62acc9-c444-4d77-9264-bdf8ee5987ab",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c3567e-6980-40d6-83f2-5620e131ff8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a73125-b5ea-4e42-a177-eb69fda11398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caab628a-f24c-4863-8b1c-7671f42fc3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef7f8215-7454-4d9c-84b2-ce469e252969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0aa945-722b-49fd-b64a-e283a603c666",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0d1d16-f7e3-4c84-adf1-7e18ab86ab47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf73dd65-6aaf-4666-9220-189203899f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d82150a-6588-4edb-9e5e-ef502de65ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b45fa70f-56a4-4a7b-a274-4079ada2a894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9b31e2-949e-41af-a58d-c80a52a8f4e9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d037ef8-ab3f-466b-9159-91ce20a7cf5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e664022-4405-4426-8f44-d8f9585c8e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f54dfe-8969-43ef-abdf-ea9a52cb3e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04e60fa9-ac1d-48ad-a65b-212be67f8d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ccfa96-0a11-43e2-9003-68817f386fdb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ae3df8-c084-43a5-a9ef-192461af300d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb749e7b-adc7-4be4-8907-0c0ebc48fac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd742f1-29b8-4265-bab7-0b3bafde11b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0444cb02-f9a2-4270-89d0-e88ba5ea620d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b193c70c-6a9d-40e1-a7f6-569e2dc3dd67",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c27b0f-e131-47ac-9be8-bbdaf9699e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9a69ee-9a14-49b6-bc50-421226342f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bdcec1-664f-4880-a08c-f2ef022a28e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07ccad83-89db-4674-b1e2-bdab21af5cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272c8b59-8ce5-4bf8-9230-f81deeaa6bb4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89368225-76e6-4e29-9362-671bed8e730c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57f33f8-9301-43ce-87b0-fdd4f061e5c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413b951e-0322-442b-bf76-b98a198357be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47a67a3b-61a8-49b6-a39f-896fe3d84fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea48c92-93c9-43e6-8d3d-d740a3656828",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "befffea5-c5d6-4bb6-a75a-744c9a16688d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ebe6917-6286-4d49-bc5c-bd10ccd62c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bcbdc48-d3be-4623-950f-558457df2012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a1230b-9ab7-4fae-887a-4cfd17fe1990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf8e94f-dd1a-49cf-9643-0fe199362a8c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594d9ac3-b04b-4eca-8ab9-51336cf79d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12547d19-79a1-4332-97b0-c4aa2911e5f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f940091f-84a3-4b09-b94d-c2af502d1eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bee6ccf-6f7c-4b03-9568-d3017deccb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef70901-0394-45b1-8734-384d2fba046a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0f1262-579b-4f74-891c-a02381e4c952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ea26f6-b51e-4980-8bf1-02b7e22cdcfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda9898e-ce42-42ca-b39e-53425110c31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bdcaf78-6eea-436f-ab82-af26dd04ee0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66f3a4a-b769-4437-baf6-8e288516a60d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "166857e7-eca1-461b-a662-63b5e08e12a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3d11ce-734a-4561-8a23-e9a818353817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191520c5-ad64-4cea-865e-598faf310ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db67b082-cf9c-4952-bb43-2798c378f731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f495946-37d2-4f5d-ad33-7201b5868641",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d64e61-909a-4361-8bbb-6fad6809c34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6bf5825-917b-4f26-93d7-1d57b66e2365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db66c55-857c-4c62-bbdc-a035c9d68f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a7412d-c31f-4c55-a089-d348767e5c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874d926e-9025-4752-954f-a306657132f9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af73a4e3-7a1d-46d1-94c5-aa0ec1662c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd785ef-54e6-433e-b3f8-f252798c0d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62103657-b66a-4086-88c3-335bbba36c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96c87f5f-a31a-48fa-b342-aadb8ce7fbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcacaaeb-5839-4187-bf21-71dce71d1fd9",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a1872f-c924-445e-b5db-380c36bd3480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00a8cbf-fea1-4802-821e-af4bf6d29683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0826ded0-ec93-48e8-a5c9-e59c02167cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96fbb48b-5926-458a-a115-85e631d4a3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7491b900-ec74-42df-968d-b79129a77bf4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b6b7a5-1428-43a4-977c-1e8ebacafde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113c62a5-abdd-4c7d-bd3f-2bda3a8c3878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37461124-15ef-4f47-9024-a5038547a357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f81c4a27-8aa2-40bf-a062-38086b374c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72407e7e-a383-47bf-90ba-4eeccbe68ad3",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b62a32-41c4-415a-b285-4fda05636239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ddf1e7-d04b-4e3d-b2f4-ac0480b0f237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5907902-9f66-4785-be84-c4755092f994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "630b7837-5878-4866-a7e5-fb644d44ff3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a44057-5180-45f5-ab8f-9115b9559522",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a3a7ee-c730-4e56-a27f-8ac951c39b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d28aa38-4f0f-4a8a-ae29-a06d02a2afd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc2c7f5-17f1-4532-bff7-18441e917659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "155f7729-9179-4867-a738-225fb55ec99c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9fd99a65-4a75-4d0f-8ea1-1a0258e7e4b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af0959e3-8449-4c95-9b65-f78034401cb8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d5eb17-1336-4825-ba80-5fd4acb2bd55",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "14557dc2-767d-4d30-9d00-18c87c5d86b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "028f5adc-3e09-4a47-bd79-1411c96eb547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0036dd21-6420-4702-9318-6838d8c0f2ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03680d69-ce56-4163-8cea-dc6d33125e95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4128a0e-70b9-4241-ba34-48f6e9697d60"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd0ab1fd-ae5c-4a6a-8fc9-a44e8b6eba20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5123494-4dbd-4dc2-8fa7-5912ba3fce5a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7776de06-86d9-4e0d-8145-cd45e42bb2df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4fcad5f1-1a8d-4a68-ab65-4e8685b5b5dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "995cf594-aa32-4dc5-a659-a1b7bffe7c45",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04868bfb-9ccb-46fd-9af4-589d4853da99"
            }
          }
        ]
      },
      {
        "id": "7adc8c21-5a4f-431c-a9fd-3f09b2428a31",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "dde78d36-82d6-4081-9edc-cbc10e7ebdf8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d79bfcd-80ea-4e90-97a7-4cc52635a78a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "17aacab8-1cf7-4f49-8680-871f4d75f388",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd49408-2bd5-4462-bedf-26b229e3964e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b06ffc6-e146-457c-a3c5-d863ed6db878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406275cf-f69d-4c90-98d7-d12ea8822fb0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212b16fa-01db-4e70-9110-5632b6cf91dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc7933d-9a35-4701-82c5-4951cb104388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e343fb-076c-4696-b557-6b8a69f1da8d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07da418f-f55c-440a-9b9a-7656a9d08c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7abbedc-6fa4-4a84-b1bb-72dc37c02d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d143af1-dbd4-40bf-b06e-9af3d018e54f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d135aa-d721-4d0a-a545-b4f6a76d6481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202685a1-5c43-4cc5-b4b1-5c5d83d5ba74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8a62bb-9899-40ef-b4bb-5149728efbdb",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c767da-d7a9-4bf5-9388-3174a97a9526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc80e73e-b272-4712-80fb-227adf991dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2c760c-bf78-486a-a415-18705c830e20",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac22ce6f-3150-445c-805f-378ecfd54149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3fad352-5458-4bab-be76-10277d98c841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febd78dd-da2a-4ad0-97a5-c05b9eb623e1",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fad43ce-5de0-48b3-926e-bc333413ad35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261e7146-7f3c-46c5-9bcd-d8f9c097dba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33937a1d-4682-47f7-8817-aadc7ffeea2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9139de99-0366-4687-9896-88a0926fb011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90450cb-e3c5-468b-8e76-8f3efa07efb2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaffec2b-04a0-4e89-804b-bdfbc6558d15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4606d209-e004-42e7-bc83-cc614f3e790c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fca103-a377-4835-96e6-406500ce29ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e9a9fc-e47e-4cef-9829-ba390a52da94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe104c6-5ad5-4fde-adf9-aa503f8eefb7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c427b36-253b-4577-9f70-515f1b52c731",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53ab7041-d60e-4833-8732-f3a80fbd77eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c097f3-baf1-41dc-8490-cc13998a3a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df650eb-73e1-42de-bb05-b6e91840116c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c042117f-f8b8-4a2b-b27d-6fa9a6d4508e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79120888-f51e-4e96-838b-fef15c6b0914",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10022725-a276-4026-be2c-a0fa2fe3cfab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09087480-ec18-48f9-ada4-6a84f00bbba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1db3af5-2aac-4237-8956-ca4e3a4c1930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e902a7e2-0637-43fa-bc16-de7a79be3230",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99721ee-e8a7-442d-a5e4-030576687d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efcbd749-e1fe-4035-8e4b-b2c0567085cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8735731d-6e04-4c20-8057-6df96935480b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29be94c6-c97d-4cbe-b96c-b4db62776f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e21329-b3ff-499c-bf2a-35baefbb3577",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ed1128-70e1-4984-b816-a428e093200c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca2b3d9-4b10-4130-993e-b200ebfe2993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e457e44d-7efd-4d95-b5c7-0abd35b65d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d60bb7b-bec7-461e-a1db-f89ec8b29a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cde8d04-8ca9-464d-8582-3234435d85da",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d6c242-6e48-4412-9fec-04ba11bf1fd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af205f3a-6fb4-41ef-8621-17ca76fb529f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7d1848-cc80-4b4d-bfde-b282bedf0fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1248a9-3ab4-4069-82b8-4e5008a96f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b30293b-ca42-4bed-afd4-6133000cd176",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943b1618-f735-4ff2-bbf5-ac5ead318ac8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb16a633-1a59-43cb-a9ba-c1ee37e82921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fe8e22-f91b-4c00-aa36-88bfddd19019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbcf712-d60f-483b-84ec-1e71878671c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad00ff5-5f9c-43ea-84ba-20528aa4966f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52652ab5-00a9-4aae-b7bc-afdd1106f283",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53fcfd81-272c-494d-b6b7-a0fcc56802a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "671ba00e-c26b-40dc-943f-42b360b11e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96873579-e8d7-4a63-a073-48b577a94964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05347fb-085c-4487-86ed-e72e6503e50c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987b9c1b-2aed-4e68-a871-405671f3aced",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3a04a62-b661-4be6-85b2-279dae388ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "595098b5-6ff5-48fb-b084-608677fc0672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b954af7-f8ff-48a1-a71e-1c7d1337d508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc76fe2f-6e7a-414b-b274-5d2846d93c8a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760e0948-4a15-4a49-a320-01365cd13da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03faafd9-54d1-4a1f-86ed-99daab4e1cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "903d421d-28e0-489e-be65-ae14c16afc0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "276c4d90-4375-413f-9c2e-587c4dda3866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265fd04a-4e73-416c-8417-3e88a3f43f9f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fb2570-1f47-4cff-852a-bcdcc914effa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8eabfc-a644-497e-9943-4505cb425da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1f391e-a798-44e7-83c0-4f932d882788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51957a03-8962-4878-bbf6-67445e620457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d3862b-8dba-486d-bbba-067da3ad75b4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac93a05c-f6cb-41ea-9df2-c6445bc2e5a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13db694-b07e-4ea8-857d-8753d7a9fb98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc946b51-1565-4d3a-861f-fcf1b8a54f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b93e1161-15e9-4570-b48a-6647bcfe2b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e053983-0a53-4aac-8be5-0d2d7e2b517f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d40ff6a-0e35-4764-b9c6-da5aaf04c7e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c65ada-be88-4e72-9302-830b8f5cee60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9dca84-c675-4e9d-9bde-1d420cd412df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "916c6166-c47d-4b07-b538-0e495ae3a462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1d56ff-0d6b-49ce-a125-5611f28d7327",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b65bcf4-775c-41d4-8541-339647db97d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca83ec7-a7b9-48df-bd00-c3d037b68f2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88d6aaf-b833-4eff-8ae6-cb8a63b619ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6849237-63c5-4c1e-b7e3-97acb9c2694b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317941b1-67a7-463d-9d15-51e32c04a6d4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896bd68b-4843-45d0-b0d2-11dd46695737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147ea0f2-06da-47f0-843c-3e2142951ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7e362b-2b63-4f86-8dfe-05d2569f262c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c7da31a-75a8-4f3c-9c92-1e8617a578e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477a8504-3741-4708-909d-83a0da3a110c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1707ac9-1cdd-48d1-8875-f428c2e905d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2bbddf6-d41e-43d4-9f19-f98655c6298a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5567196-2eb5-49ac-8270-df5262622071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4b2d5e0-072a-4629-94ed-bf62efda743e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa5acde-2de9-4e1d-a585-5c53706dcc2f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437d0dfc-521d-44b5-abd0-21713365b0a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92d30946-9ca9-4809-a154-b14c72b8166f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b9ed35-b46a-448f-abff-b0401229a916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710c110c-5880-4653-b610-014a7f885c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6e1582-94d2-40aa-88b7-ebd04beb2dff",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247da2d7-a0d5-45f7-9228-8137f7622910",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01d88e4d-7d44-48ba-909a-8a873cf05c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7abb0b-281b-459d-b2de-2a186f55c0e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6229d27a-cd07-42f1-97f7-14df832d1de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563065a8-5fec-49cb-a45f-83af9cf15cb9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f167a8-b36d-490b-b138-1ec319da56fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fabbc829-1702-46de-ad98-2ade4c2ac8af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafee2e3-fe81-4fdb-9bd8-fbab97b4ca7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b92b907-284b-4fb4-b890-60c1971f805f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d015753-99c6-4728-b704-d1cffee489dc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e766e15a-5d24-4d3d-b270-a5574b604c9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "936913c8-f271-45a4-8625-8b7fdee61e63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bd908d-4496-4b82-b1fa-a67499a317f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a80b35-7ef2-4e7d-b8d9-1517acb4343b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d8075b-502f-4838-8628-c8d410041e63",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd3fea4-09d1-4988-b4ed-81dd4fa27bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7233f30e-54fd-4b4d-b5d1-086d3cd11522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43391e5d-450d-4d15-bf88-102f1408c11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac346cc-1b0f-4d09-b081-19e4f72d0a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff4de3f-8e58-41e8-9fa4-0b8b4ff3ec2d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8aeee33-5d34-48ba-99ec-2d9d0138b66a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4abf6fee-51da-498d-b00a-5f0efc761758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f7bfa3-533a-4a78-81b4-5f85c6614739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c014a7b-944f-4f5e-8fab-d720e8a7286d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aace1a7e-46ed-48d2-96df-dd36249f9eed",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3746f6-1cb8-45cc-a0fc-e24683521cf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7152b46f-771d-4bd5-b423-6777b9b50614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bd8353-ad2c-403f-8fe9-14dcc8d2b786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41b5996-0ef4-47d6-90c0-cbd3eb795133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf2de88-09af-4d42-94e6-fd4246965470",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e356a376-10e3-4f2e-bb00-3432cd64c150",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51a6b819-a60a-45aa-9c17-783abd279837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "593f4e99-34fb-4e51-8d01-03d8f1a317e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57614220-8580-45d6-a3b4-efd6792ab256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3386fa4-1681-4b83-a30a-cde2bf6dd1e1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87946bf5-03e7-47c6-840a-4be715e5e5fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "940d9975-c7cb-4e1e-a015-3bbafc63abb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1b329e-68ec-402f-bee3-e47938b0e773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe6a96d-0ea7-4f86-b002-1776e462e514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e76e830-6138-45c3-9357-5817ada043f9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89708141-b114-4424-bfff-68228022f140",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f1e603c-fe33-4bf1-b053-d7c9748064c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a44f2de-5212-493d-97d5-efdba86df4fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3172fa73-2372-47a5-acfb-1bfee3fa2bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990ed0f0-ea3a-45fd-abc4-cc80c271c624",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e1badf-0475-4905-b9b8-e41e4866979c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df1e95f9-519e-4812-8958-bed710e696c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c07b72-80df-44a4-891a-63a59394947e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b8b699-bf94-49ec-8398-4856ec28e0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526aefc5-c990-4cfa-9470-8ee73c64dc81",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5e7762-cb84-43a6-8955-8ccd43c895d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9637e2a0-c3b2-428a-a836-110fa6fed998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468bac07-c074-4212-93e8-04c37cd912a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c44b1bef-480b-44f2-87fd-1ae871962d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a327a55-0fd6-4a7c-a5e6-65cdcdb111bb",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16a28cc-add7-4f9c-953c-01a92427bf30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b284b15-9068-4739-9df5-2aa3260c7c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f2ef1c-7ce8-459d-80e1-140d22dd24cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e3e36a1-474d-4ddf-b3db-6a4653f341f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08179e1d-c2bd-4e52-a36c-d992c29a4982",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd51cf3f-aed1-44bf-82e1-1b6ba0fa7ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bec7b82-c699-4ce2-92f0-36ca1e7093e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dffda6ad-3064-415e-871d-f51980051508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89cf2e1-02fa-4a09-a5bd-05a527746316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3608a910-dcfa-4c21-911c-488f2703dcc3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8667aeb3-4895-408a-9ba7-b64ef79ceb74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cebdbcc-cba7-4504-9484-d3094dcc1536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23de8cf9-3f64-441d-bbc6-a33053dd121b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd6d523-abe9-464f-b875-4e86fe65c77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf8a8ae-edaa-4595-92a0-7ead96fced54",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541f1149-2e4e-4c2f-bad7-fcca324973ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1349ecec-f30d-4cb5-ac06-fa4ca4bb3eb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4bb6f7-b56e-48dd-8eac-a57928c5999e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a19273-4076-48a6-8696-a3495ebe03e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4fa6b8c-3148-4436-92b5-aa9c369860d0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8526ef41-445c-4c40-afb7-0ccc43fc9edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67870dc4-cd5d-4baa-8192-bd62cab4b064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f7ce6e-8e1f-4747-a1b3-8cdd8e62349c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c68780a-6d00-4e5c-a643-20aa912b69cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9eac2e-01fe-459d-a5cd-225b1d810078",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32908e9-63c1-42a8-883a-633efb88cc9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5d4702-a5c6-4b2b-a1f1-b77e7957b38b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e4f7a7-f60b-459f-bd0b-72d32576ac09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2540f3ac-316b-4061-b800-2c30c37c2e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ba4df4-c490-4407-957e-c7bda8cd9d9b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e92814-46d9-4c06-90c5-32c359121160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c699b275-2542-4919-82cc-6c7c0f356bec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4dfe033-69b2-4727-8395-7446287d6bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1570d096-346d-4300-b700-f79ba0b38503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9dd5520-1402-4032-a1d5-b70edc8467f9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0016c0de-8735-49dc-9082-fd4f4700f103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6eb5187-1f72-46ab-b08d-9c77dffd82a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ae050d-dd08-4c5c-8017-ef784e641095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da5d564-526e-4d56-9cae-59ae34b53bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ed19e4-d3cf-4192-90fc-ff4fcb57035b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84b55d6-ffc6-4d0c-b6cc-3410c23ef7a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "011e319c-fc6f-4bb5-9efe-e972bd6a940f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5abea46-df43-4f61-ac1b-fee1e35069ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb5ec47-8806-4aff-bfd9-547d5a1c1699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce864b6-f701-4bec-aa70-5b1f06279586",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28579e7-64ee-4de4-beee-89bc9e7196e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c53d496-9276-4fa2-9be3-6eb3ed1618b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d59bc5-754f-4e06-8e9f-fcfdf199aa77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a8f46c-8ff9-440d-a0d2-fe3b4da7929f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9906983c-c61b-4017-90bf-5103434f8eab",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48856694-e1cb-4ddc-9639-402cf662129f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7613631-1600-4986-9509-e1db4bfe9c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e768fa1-ee4b-43c8-8bc0-ba4f76db4b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a06150-b869-47d1-971a-a6d0adc8f7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340e5e23-f3b0-4e51-a430-d83be8da4b20",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11315ab6-4ed7-47e8-88db-c437a1e05faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edbe151e-bd19-46e7-995b-8cc331cbf260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "557d6204-8081-44be-a695-dc7dd388b57a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc2fd7d-c005-475b-a3e0-52acfa787ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1278c87d-74a7-434c-998b-5a0e3b1a9e43",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302094ce-c39e-4359-9b1b-524ce2c0304c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b22451-0147-4b99-ae18-edeca3d0a546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6649bdfc-4e2f-4e68-a282-5bf3b8eae5fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "419ee522-7ce0-420a-ab7b-1d05f02a9184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c8eb15-eecc-451e-9565-85a94395d396",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8915237-cfcb-4f71-ab80-2d9f6a7ce32a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a189ab41-4ec3-4b02-8097-f8bfc02a7276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad26ff67-9fd9-47d7-8470-1258adb4e206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f13ed8e6-6ed5-4e5d-b304-74acf5d1f06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf93aefb-27e2-4cfd-989a-0254923d5e5f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0395dc4-985c-4b6f-a142-cb32a1237914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e84863a4-9ac0-4a68-bd73-48c3228b7eaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbf6cb1-f006-419a-9c35-bec14d8ee680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "647ecdfd-f771-40b5-9e62-2728e3463a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3672d5c-c26a-4a0e-bd8c-cb828768da81",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31276c8-7cda-4d41-a1cc-77ff6b9fec66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "496fcb40-ec5f-42bf-a903-4ff84e93b691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b4603f-2d5a-486e-b248-bdf6d3cfae43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de66e5e-b958-43d4-a1ab-0ca67e4a89e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3eea4a4-bc7b-4ed9-9c3d-c3019784f24e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a3a10b-c931-43ac-89eb-1cf1062a05e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9024bf7-d625-4825-8ddc-683c44c2fc2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e38643b-3a58-47a2-86eb-f22660c97ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db1bc459-0786-4852-8f57-e57516a14e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b489e007-646e-4cd7-bd60-161c47b67dc4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00774902-7087-4995-af18-4e1eb9e7af42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d55d2f-29b3-402f-b2fb-6b80d1f755b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36dca4f1-b04b-4bdd-95b9-15f5cc181f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf508e57-ac7d-488b-8486-a013d8f911fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5347c3f6-cd15-4457-8fad-41ed169cb3cc",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01dd1656-e058-4d4b-9420-521d66236bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b11b28-7014-4151-9808-c189aa43d3d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63147001-de3c-4926-b43e-c3a278398983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a739b56-dc46-48d5-ad63-c7ed357d4ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9195525a-6ce0-4da5-a843-d9bf58882b35",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7284335-7486-4f3e-87c7-02a143f326d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "177f4287-9923-4c4e-82ab-047cb04b9fee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3adef972-149b-47bd-8c18-f13392b68118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf2ffd95-3853-4317-9b52-2acc4578fcbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec342332-bda8-4560-a8e6-c40e58f60870",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e409ed08-4cc0-4de5-83d0-476eb241a77b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f5eda0-92ce-4376-8d31-7aade92dfebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9ae8d8-d5ed-4443-b712-7935a993b75c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "215635a0-eb5f-4736-927c-f2de4f3e3702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e68866-35a2-4982-84c7-33556b925644",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82bf0221-10c5-4e00-9b0f-06f2e24b210e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "943c4a43-25eb-4bdd-ad13-fda4a3a1a420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe07a6f-507a-4746-a554-8f73d55fb93f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bc423ba-66e2-4912-89b3-401a090c6383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f9d9cb-e506-45b5-8f81-84d9ea2dcf20",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a82574-45a2-44ce-b61d-9a3aa45e556d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f7cf1b-ae70-41b6-8091-350c75032fc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34555c7c-11fe-4013-9f33-3008ef107ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5abfdc41-cc5a-40e3-8fcb-155d47acaa28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b522bc-f315-4729-9095-fc5e14ab0869",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96c9f07-790b-4f0b-a192-b2fd29cd9de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f426cb5-4234-4199-b9d9-c66cec4d8586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1640f8-5895-40b2-b160-5e4a467b3546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a07ceca0-d4cc-4967-b944-4d53b38d708f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63faf568-2315-4a51-ac1e-33f65bf756cc",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee661eca-074f-4c34-9840-291195fd3cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae82464-56f9-44ba-9154-c883b97237a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73c85f4-9bc7-485b-9f4b-4343bf3919a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49a8e9a7-a1aa-44d3-b102-ae6d2fdb29b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ab26e7-f5a4-4109-90fe-56438d259f1c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b74c4b-7666-4d92-8799-826275c608b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f629d07e-8450-4f75-b482-f9f15ec019a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3bc6d50-0e40-4fa9-9c18-e40fcde3b323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e6e3121-2568-4e45-a2cc-ce9a7a730ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e065d14-9ade-44cc-9502-add5dffc675e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba25c422-35d4-4db3-b700-9310ce58b3ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1b0afe-f212-477e-8820-c2339e2b384a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33e3c48-5f94-4fba-a840-72805fd253f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8195bacd-30a7-4a00-b19a-4c58f37bc880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14452aa2-9f74-4b7a-9d31-e7ebf6fdb40c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710af8b5-1015-42b3-9499-264d6d4cd3c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1fe93b8-c1f1-4b13-8b94-fadc2e8ecfd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa70098-c0ae-4bac-8c6e-3ffde17b53b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "994ff430-24e1-4ffc-b0d8-8a9fb6d4bb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c598c496-c3cf-4df2-a5ae-3d8c8242fc7c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4fe9db-cd0b-40d7-b393-1324becc7028",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "560ed3ba-bf1d-45b8-a740-839d249cb72a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1b1a3c-13b5-4f0f-b3ba-02b4a510588b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de0fc24-3182-47e0-b7f8-43cd0e3471d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0754c4-2f43-4da4-9dbc-9b9444916c57",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf93c16e-a0c8-40f2-8674-710ea7b52382",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afb5d7ee-a74d-4c14-a5f5-2defee24d024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01dfb146-a155-4d61-8e84-ba8807d48de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e546e87c-7c0e-44db-a66c-6c70a12669aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0da9afe-3f84-47c9-85d0-36f1873ddd97",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497c6185-05a3-4d69-b637-67bc0376e8f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4152ea19-7a5e-4725-aa17-09d8659a006d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6c1aca-8e70-4302-aa3b-5463af893b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e7c04e-79a4-4b4e-8169-1dfe365f53b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf5d15a-35a8-451f-a56c-c5f27fbac660",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da767efe-fdfd-4cb1-a7c3-a5cb10d0a26f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4371fb6-58fa-4f18-8d56-48b4c45ab691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70d77db-b5cf-4f11-8b9b-908cf22f3033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26341a1-759a-407a-b16a-1f4b307edb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6983baf3-ddbc-4856-bec0-5601d7eec7f6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ccfef8-1f4b-4c5e-8d28-a169254c6372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db09805d-66bb-476c-ac87-95b66886b48a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a38e5c-0266-45e5-adc2-51bcc519d0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11759125-b8b3-4966-8d18-de9923df2b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b95a9f5-64e7-429b-8e94-b6d107a86916",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4ba37e-0e59-4204-867c-2d277cac3115",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4f3cb81-4a47-4131-bad5-0214b9b4e945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4a3bab-65d5-4434-9367-53534f8b4415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22149950-5932-4935-b85b-d3ad3f192ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499c2cfa-4855-48cc-9781-e51ee247f968",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f97b6d-be80-45e0-ba63-42304208fafa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf09f4e4-01e0-48c3-ac02-e712c5316b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7fb5b8-65c4-4025-b2ea-309be546495d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59771818-a7ac-4d77-8b6f-3bfe2404bd79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ebacc9c-551e-43e9-8115-47740bbafec9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f81280d-6ba8-411a-b5be-c919ef65a9e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "688099fd-e5a4-4bb0-b3ca-4f422b1cb2fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5fe4de-45ae-450c-8632-4d4e8ccb305c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71174004-5015-4678-af9f-7bcdfdf7fbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a475c9-de2f-49a5-8e95-8cda71f10eef",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae53cd9-3922-4207-b858-7ee8d0831c99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38477cd2-6aa0-4ed3-a4d6-236a10f8c0f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fd3403-4122-4787-a39b-0c7c7c273456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310f6cb5-da2d-4e66-a569-9eb604f8b4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa055c1-115e-4024-898d-bd033ec14e0a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f607cb-175e-4b0f-b509-dc7e4e1eb1c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e29eb4e0-9fc9-4b57-8daf-40452bee27a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b87997-5852-4c3d-b2be-474dd998607b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac65216-4ada-4d26-bfeb-93f1293b04d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44c1774-c940-4cde-99a1-acbff14caf10",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e0ede3-8ecc-43f2-a4b3-17c3af75109b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72d648eb-af3f-4892-b4dd-ef661cb8c307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65acdd5-aaef-48a8-8d80-49c2849b96f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d37d0e-784a-494e-894f-ec06f4651307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c72b4d-3e29-4f25-8f55-bf70c4069056",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ba1499-a108-4914-a6a4-7f5d22948bd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2538b31-df78-4945-a188-7617d205cfe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4fa6ff-fe02-4363-9d3e-4475dde6d378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a9e4ff-dfee-4288-88bb-b0833c6e479f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5447144e-ea4f-4f73-a141-98cf6c0fd8b9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c35937-0bbb-4f22-a8f4-3f1c0ac36efd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "296f26ca-2011-4a91-814e-a52d77bece6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fede4c-6b79-4239-8a52-6f97ce34b31d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bfe49c5-23ef-4f7a-9d40-0ebc86c8ab52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4813ab65-6ec0-4f4d-8cd5-0edf3caae0c7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0b5fc0-2fe1-4660-b7e4-4704c1eda4d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e406fd4a-4088-413d-9b16-2d260272654e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a044e1d7-352c-4868-9676-e6c652e9959b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a70bd36f-d700-4675-9b18-2a32fc2f1f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e48502-fb7d-47a7-8650-c93ca9198b43",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14747e87-51c5-4138-ba8e-ae4c5345c295",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bef6745-5e31-4bda-8598-3da7f76699e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "127f8a7f-802f-4ca5-8fcd-1a328cfe58c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f92ed10-ddfb-4257-9be0-5c07379e0410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b792c958-85a8-47af-9d3b-4b1d8541ee65",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724cc189-34e8-4c6a-ab9c-ffa37f82d54e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d541f7b9-9b9a-411d-a13c-50808e58aac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65d9b3f-b246-4495-b808-eb8b3ec61c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f81e090-cf0a-4733-a3fa-c8254d50477e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564cd687-46b9-410e-8099-bc4f521187d7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7cc269f-f284-43a6-8044-70806d74cad8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9391fd42-fa0b-4a2f-b215-7a77c64d6596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ef78d2-8f4b-407a-abaf-9cafbbaa33f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed47bb6e-b95e-4801-8932-b9b2ccbc79b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38227ad-508f-4ad2-85f7-c474210b66da",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c553b074-8948-4aea-96d4-9dbc4fbc0538",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d21ecc0d-4b9c-434b-a37c-0e48e02d752a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f1e473-c476-4b40-8a59-8be9b83ae71c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b34e9a-ff85-454a-b23d-97767aed12c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8486de5b-01f2-4f8f-a8b7-0fcaa9e0fbe3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a3a14b-89e2-4524-8389-2a29ff92a3f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f490f8b-b629-4e05-ad6e-7c7fa431da5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d611a9-d4f4-49a3-b586-e0a42ac40d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dcfbf73-acdf-4c1e-800c-a249dc99f7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6da238-118a-4cf7-ae7a-0944b59684b3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f298e43a-e1bb-4070-9f54-ce8b206224fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30185af5-ff6a-4731-ad28-9f557e6a4d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b874feba-495e-425d-aba6-95cb8ea4da5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edfa0159-f775-4ebc-8b09-7434e872c006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f440c3f-47d5-4825-bf60-81ce556226ea",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10844e9-7603-4ecc-af68-ea211d39c4a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "797a5fc3-8cbb-45ea-b0cb-2c0129d41a2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b4f553-b8c5-4f31-bdb7-4786baa7edc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04ec8cd3-5abf-4ebe-b71d-ade1b2d761fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65baf506-fba9-4079-a9ff-62621230cab1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94395a2d-8d6b-4b83-9f39-ae544e03587d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f7df7f7-cc03-4c8a-be49-336305e3f2c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37649ed1-1520-43b9-b71b-29038f3ea109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8bf9210-f03e-4a28-8224-26a283580ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6816cdc9-1379-45f2-ae77-d37481a1d111",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e80c01-e29b-411c-b761-1e42cb54a4b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e22dc28b-5311-4644-b076-9acd12c5d05d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4e3366-1465-4695-b988-664637900688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f7b875-04c7-48d4-9e4e-603e616aa634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa83f2b-5bdc-40b0-bc54-92ab54f36c4d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d74a610-a69d-4df7-9a7e-293c2466c8d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c71725c-f6d3-47e1-87b6-1818c07a640f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e98213b-3993-47ab-9336-ef644d920538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20269627-c296-443d-8433-bec81e503816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335fb9e3-afc8-4827-94f4-af3fff62b6e9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e394120d-38d0-4926-a0a7-9aa745779203",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef3337e0-8764-4caf-9ba0-3c8129bde7f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "838f3d64-7f03-4ec1-a3ad-b37539c4d799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c1cdb85-feba-4416-9c95-b3c05ff4ac19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08dec606-ca20-4923-b297-fced339902ea",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27226b7-bf92-4dbc-824c-504bbe30bf3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dcbd522-8489-490a-a738-fdc13482c279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d750fba9-7e36-4854-96c1-5b7bab8b3e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "782c0a10-66b3-41de-abff-31de0e8d2210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfe17fd-a9ae-42a6-8d76-8c2e270fa6ed",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265c7f16-2726-4936-af9e-3ebfa39aff3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d29fbe49-dfbd-4861-8b75-cee3440dd064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8fca19-2c2a-4e76-93a9-2652129452fd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19eab243-9f32-4691-a75a-90d2650a095e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18d38f7-9a46-4d6f-9ff4-72ee046989af",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d38b19c-bf88-4fe0-952a-42cca84df0a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c9b622e-225e-49d9-9507-9f0cb1397a84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6438d6-c32f-4f6b-8723-87f94eddc6a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e0a60c9-be06-415e-a75a-e5d76bcf9673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e51d90a-f8c6-4355-86f2-19ca8766fe46",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6879d93d-9434-47b8-a28a-ee7474fc945e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa39a42a-fccb-4070-b6ab-8683b6fce0f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9347e97e-9f41-4ec3-b6c9-51b2a620d18f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5bfc4a1-b06c-4fc0-8eb7-cbc1fc0536a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46ded89-a19a-4dc3-94c1-f0da15616fed",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29900d93-f63f-4b93-808a-b79246813372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f19e6dc-d8fb-4021-8bdb-2a8b1d0659f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dab366e-c67c-4671-9ee0-9cadd747636e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7bd349-1671-4ed9-b5fc-59ba0a886a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16aa318-02bd-4423-8448-b76f7921e9fd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b60a47-c426-49d6-8c7a-f0983cba4875",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f3c39ef-6f47-4ed7-9600-46d9a80c7f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4867001e-f382-42ed-b29f-38dde5d05144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d76aa1-e513-438e-8f7a-f82a98e33e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6479286-a803-45ef-bb10-714b2b050e1a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a54216-eda3-4c7e-bd68-d202d4c51d14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6539ede-ced3-4538-945d-cfdcf93b9398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d91794-63c7-4f33-a85d-7e25025c85ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e07b7198-da0f-4ef2-8c3a-9e907f872cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce331ea7-1ec8-4849-ae02-72c52754650f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2df5b7c-a451-4916-b5fa-c3a4aa7c306a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfb1d532-e364-4696-b0bb-a9e312d291f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce149d45-5600-4637-a7fe-74fb508f9bda",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d7c41d-8247-44c7-a06b-9a647c3dbf20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0539b6eb-1537-45a1-9bdb-d2605d7807dd",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8405f8c-e3b7-4f72-8f30-1d12cc39b966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be919849-492c-43dc-ac2b-c42ce68fb078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "786f0e57-24a9-4fbc-b4a9-6118b3aa776b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "362357d9-315d-4d7c-ac0b-ef59cf13fcc9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a0b2233-682a-4dea-a827-e22a44db3535",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93033999-6803-42d7-8283-c47251f50e5a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "03789dad-0221-4b48-9c89-ca1809ff8da5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c517d370-4ff7-475f-aec4-63ae6777d590"
                    }
                  }
                ]
              },
              {
                "id": "5485a719-79aa-4616-871b-7b4cf26e16b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8bf46d63-8b62-4e53-8eb8-c5f9eef5eaf9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0439d0e2-76ee-40d6-8bc9-07e94fe0578e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "234710a9-22d0-4225-95c8-ac6c60671b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c858781-f99f-4f30-ba04-18838258c080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09beec17-5d46-46a5-9120-f1b9155007e1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28a5b851-7e4b-4606-bcb2-46b8cdcbcc00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d75ecfdd-1bff-49b8-bd57-96c8bc4234aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b097d291-d39d-4074-bdd9-d12bd8f5c14d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64779b0a-086e-44e6-839d-673fb3f2143a"
                    }
                  }
                ]
              },
              {
                "id": "a7b8e54b-24c1-4d09-a4d3-b82df57d056d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7a3dc5c8-95d3-4d4a-a8e4-7dbde95f4855",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2a59dd-5287-4231-97c7-702a6626c859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8500ad3f-2210-4282-8e92-f1511a0dc080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80b8c81-df0a-46d6-8e9b-ec79de586597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef2bf2a-aead-4b41-a04c-8a50c657f5c8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2e951be4-b9ff-48bf-92ec-3298a7b00ed7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "717dd0e1-5746-4a43-b426-7e18cf88cacc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "209e1026-3d55-46d1-87af-dc5d342c3936",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b45a54df-dfbf-4aad-9999-a60166021a55"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f10f0681-9e08-4455-9437-efc94ac1e834",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80bcec85-6d64-4f0c-a6ae-e3b54498f13e"
                    }
                  }
                ]
              },
              {
                "id": "81761302-0bbc-4bd5-a1e4-b4dd926113ca",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b680bef-e984-42df-b4b0-bf38c9746850",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "daeaef91-9eb0-421d-b7d2-9d7542986797"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3eb53d8-ca6a-4966-9ff1-92d3b3ed1858",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4d1516e-0df2-4177-b505-f0126ed9f9a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d90adcd-f0a1-4066-a433-429b7f662f9d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "af2dfa68-3b49-4f2d-a90c-6f455a2f694f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c6e1da0-7d8b-4479-a353-55b6f07b7729",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0e24aeb-8081-4b86-a470-9b6580b81bb6"
            }
          }
        ]
      },
      {
        "id": "9ddfdfc6-b5a0-43fe-ace4-cd5692effaf4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5c28e16d-b32a-42c5-b565-e74353c07fa7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6f264cfc-5dcd-4edc-8a6f-cc60c51b408e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1f3c602e-d226-43be-bb2b-f41f9e97210f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33744b8f-803c-4474-99c4-e8a93a5d1d25",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d1f85cb8-e9d9-4ee9-8871-9cb454ecd568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19da149f-e436-4aa0-8a25-3afe87981efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84ec53fd-489d-4212-bfa4-061bf4535f2c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "971ab4a3-8396-4fd9-a14b-17be30374172",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b9d7824-83a8-41db-a315-3b74df09bc56"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8015b578-4562-40bc-b977-a1734a58c342",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1c638a3-cec1-43a0-a1a9-c006728699f4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "940a8c66-e332-4ece-a0a3-8da604564a98",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "970a11cf-3a93-4557-b831-675cc5735e06"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da42a5e0-3463-4361-bedf-161ea3a3331a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f643673-c4a8-484e-9546-a1957e8e6192"
            }
          }
        ]
      },
      {
        "id": "7493b03b-959e-4f9e-8b2e-356d27a2e566",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "401c8343-f7a1-4328-a3cf-92ca41164c90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c6f1e2ad-00f2-4a30-9507-d16cfd0336a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c74b7eaf-d820-493b-a982-8eede288b0d7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe7d17a-b1b4-4781-972a-f6e1b0687884",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67bb2fe7-ebf0-44ff-b232-eb0be3ac2962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec02ed1-4b35-4230-9625-14ae7e6f870b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2796b67-84e2-4de6-a262-f927ac23aa6f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "178dc4e0-96be-4081-8a24-79a81e79db20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f20411f-c71f-4700-8e9d-f82187cfdfc3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa351afd-9b5e-4751-90ee-b78282a9bac6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7239eca-f5db-4794-add3-ade7f126c10d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c126a213-71d7-444b-a269-4331a5f25639",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "588f43c9-194a-4681-ab3c-28c599e1db7b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2c84e98-09dd-4f06-9417-1c2bf7ed234d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b4b210d-90aa-483a-a51b-d815fd59fe7a"
            }
          }
        ]
      },
      {
        "id": "d1795688-4e20-4169-b920-40aa76c6749e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "962cab5d-7c2d-45d3-865a-b47609dcfeec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f826915a-c1ee-4ab6-8bc9-e5b8fac20182",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c28ffd65-8ebe-45c5-b377-6d3133625dca",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8431fc0-95e9-413d-b9d0-d61886bc1c00",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dddbb65d-e2aa-44e6-97e9-b399801d756b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fdfba8c-7c14-4f90-8573-4f90b93617d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70c0ab31-2773-4172-8f1e-3fa26e54f589"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "734d2444-3937-4905-b4ff-4a0c88edfdb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "222298ad-0104-4769-84fa-15d742abeee4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "15b87ee4-c24d-414a-85d7-a31566d82bd2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af37ac1d-bd0d-4502-8d4e-e8e51e9f87e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a51e5814-afcf-418d-a9d3-b76e02373daa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c3bce79a-a859-4783-b716-50a8907b4ec3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a0cc33a-f3dd-48ec-b3fe-a527e9dc89d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eed5ae18-7bd2-4fc0-a234-8ec151d8e2a4"
            }
          }
        ]
      },
      {
        "id": "e7f34cd1-f1ee-4be9-a8fd-7c95e625d7ec",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9de3479b-25d1-4ef1-a809-0ca176c53861",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "346ae6f8-3a6b-4366-86ee-47d43e35ee72",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8185f2c2-89cb-4713-aee6-1c9f86d05e5e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d97b413-baba-4585-b9e6-ea9b6c8dde45",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0aee7140-028c-4e85-813a-1d53ca1721eb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.411971830985915,
      "responseMin": 3,
      "responseMax": 235,
      "responseSd": 16.097064654093874,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696379638837,
      "completed": 1696379653147
    },
    "executions": [
      {
        "id": "60fbe852-be8e-40d0-a05f-fe2b552f4a32",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "01cd8701-03e0-48f2-ad2c-e0c9069ddc82",
          "httpRequestId": "467041f8-1ef4-4024-b6c2-bc46437d675f"
        },
        "item": {
          "id": "60fbe852-be8e-40d0-a05f-fe2b552f4a32",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d6b9bd51-8141-45ae-812e-8cb27bd1237f",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "7db9a680-fe48-4d09-acbf-0e4c90beffa4",
        "cursor": {
          "ref": "a095e648-d2cf-4d47-bceb-e6ce7aefdd5a",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e54e63a8-3a8d-428c-8ac4-8121ff078f17"
        },
        "item": {
          "id": "7db9a680-fe48-4d09-acbf-0e4c90beffa4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a988d996-4f95-4337-8201-6e119134dde7",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "3ed49696-f566-4c0c-a1b3-624e34861488",
        "cursor": {
          "ref": "42b54b54-de4d-4450-8c80-f03d21c5daf1",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2850290c-e49a-4258-89f7-36ae33c894c0"
        },
        "item": {
          "id": "3ed49696-f566-4c0c-a1b3-624e34861488",
          "name": "did_json"
        },
        "response": {
          "id": "a7e7d4a6-c5ab-4534-a0b4-ba082ecdfbd2",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f476cc-8306-477c-8f59-debb663a5322",
        "cursor": {
          "ref": "8d25e791-4344-4f46-a8ca-01260f2e90a4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fb9c0479-20a2-4e8e-bb9d-47aaae91729b"
        },
        "item": {
          "id": "09f476cc-8306-477c-8f59-debb663a5322",
          "name": "did:invalid"
        },
        "response": {
          "id": "fb174b1b-5f83-4ee9-ba88-c2d06c8e0d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f476cc-8306-477c-8f59-debb663a5322",
        "cursor": {
          "ref": "8d25e791-4344-4f46-a8ca-01260f2e90a4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fb9c0479-20a2-4e8e-bb9d-47aaae91729b"
        },
        "item": {
          "id": "09f476cc-8306-477c-8f59-debb663a5322",
          "name": "did:invalid"
        },
        "response": {
          "id": "fb174b1b-5f83-4ee9-ba88-c2d06c8e0d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6668bbf3-3222-4c2a-8b18-4c380fce2601",
        "cursor": {
          "ref": "a222f4ae-bbf2-4850-8920-726accfff8be",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "be301c42-e29d-42a4-aa51-5dc197a179b2"
        },
        "item": {
          "id": "6668bbf3-3222-4c2a-8b18-4c380fce2601",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9c7a39b0-2318-454e-9097-f4f220ef962b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82463cf8-7f4a-4b46-8227-09446a4eb5ad",
        "cursor": {
          "ref": "f8e10476-6ac2-4612-b151-416516f62ce3",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9727c7f0-0602-42f1-af3f-2b8de662e671"
        },
        "item": {
          "id": "82463cf8-7f4a-4b46-8227-09446a4eb5ad",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a3a90c92-ba48-4b28-b50b-07e82677883b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758f590f-5190-4b06-83f0-31734e8caad5",
        "cursor": {
          "ref": "dcfe10bd-befd-4878-a1e1-48d0a733fb93",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6e016c8d-2edc-49c6-9813-04bf32068161"
        },
        "item": {
          "id": "758f590f-5190-4b06-83f0-31734e8caad5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e2a53489-8c3b-4386-a727-d8a428617552",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf6a73e-d62c-498f-91e4-c34d2e7b1ffe",
        "cursor": {
          "ref": "fb3e8eef-cc56-4eae-8a16-beb11c0fb870",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "08c29ad9-b56f-4406-aa2c-505ba98d6d37"
        },
        "item": {
          "id": "eaf6a73e-d62c-498f-91e4-c34d2e7b1ffe",
          "name": "identifiers"
        },
        "response": {
          "id": "355f02eb-8b03-46a9-b5d8-78b835900f8a",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d537ad28-f752-4c23-abd9-9f174af6b87a",
        "cursor": {
          "ref": "5a0f0a87-2d5d-4e40-a184-dfba4c3c3928",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6cf0f3a1-93f2-46e1-b93c-63b39f90cfc0"
        },
        "item": {
          "id": "d537ad28-f752-4c23-abd9-9f174af6b87a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a0747d7f-ef54-469c-87d4-0111eddfebe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b90087-2ce4-44a6-a158-0cee4b2ca9ec",
        "cursor": {
          "ref": "4764f9ac-4496-42de-8890-d9f3ec52ba06",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e96f7fb5-116b-4165-96aa-07fc503f15a9"
        },
        "item": {
          "id": "a3b90087-2ce4-44a6-a158-0cee4b2ca9ec",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a428ad95-3663-4fe3-a3ee-4ea1d62004d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e68c84-efb9-4b30-99fd-6ecef2d76aaa",
        "cursor": {
          "ref": "b7704ad9-ebbe-4a39-8f21-0461de131b4c",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8553c88e-2d58-40b6-b555-d5daaaca91d1"
        },
        "item": {
          "id": "15e68c84-efb9-4b30-99fd-6ecef2d76aaa",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2cfc7f2f-6320-4ba3-a083-132dac9661f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcd381a-7cf9-4376-bd74-28377f2019fd",
        "cursor": {
          "ref": "c081e4b0-4890-47b5-8882-2e6b06756165",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a8a50dea-007d-4758-b313-3557a17a5787"
        },
        "item": {
          "id": "0dcd381a-7cf9-4376-bd74-28377f2019fd",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c814fa3b-7627-4280-8fd4-88899a868e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed640ce-dca6-4242-89b0-cdc77699f8aa",
        "cursor": {
          "ref": "edc8315c-a63a-4f64-967f-9487905c9a94",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6f5aeb79-90d8-4b14-813c-6eb6bd016a08"
        },
        "item": {
          "id": "0ed640ce-dca6-4242-89b0-cdc77699f8aa",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "236c1f36-ebf5-4c9b-a5e1-0f0efb8c358a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b45156-b95f-4ad4-9fa6-a451fec7c2ab",
        "cursor": {
          "ref": "8795dc29-c03c-46c8-a626-5c25d2b19ade",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "41e256a7-7f59-4195-98f7-146eb32e4a36"
        },
        "item": {
          "id": "c7b45156-b95f-4ad4-9fa6-a451fec7c2ab",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7e2eb6ae-039d-4af2-b152-d2a9f4cd001c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd4c584-aae0-470b-9ff3-8062c9350090",
        "cursor": {
          "ref": "70288dd7-7553-4995-b2ba-f2cd1c543021",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "dc3530f5-28a3-4471-ab09-e6556f86d9ea"
        },
        "item": {
          "id": "2dd4c584-aae0-470b-9ff3-8062c9350090",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1218319d-8d44-4468-9f8a-2a0035217d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457e91ff-9c4c-4978-9250-9998b4e14dcb",
        "cursor": {
          "ref": "d9f60eec-dbb1-43e2-9397-8bf1ac624141",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5ad48ddb-b088-445e-8e54-6fe024a78cef"
        },
        "item": {
          "id": "457e91ff-9c4c-4978-9250-9998b4e14dcb",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3803846b-0255-47b4-af24-d55bdf5cd675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b765b5-d9c5-4f35-95dd-7c602e442146",
        "cursor": {
          "ref": "e0c80e60-c41c-4cd3-a0b6-3a5150b3bb79",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "02c4fc75-dc3f-4675-b1ef-bcebda05c896"
        },
        "item": {
          "id": "90b765b5-d9c5-4f35-95dd-7c602e442146",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3912274d-bdf2-43e3-b095-10633f7c28b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239bd636-beb5-443e-aa26-dab26ac2f13e",
        "cursor": {
          "ref": "fb6f6fe4-d3af-4e31-9c67-fde5bf64fa83",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2ae39cc9-8c83-4593-b999-4f99b90866d6"
        },
        "item": {
          "id": "239bd636-beb5-443e-aa26-dab26ac2f13e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1a153565-99b6-4cca-8905-1f23e5b41bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f78d2a-7fa6-4584-9e6d-b1b36eb2646a",
        "cursor": {
          "ref": "212e8b7f-8ebc-4f75-ba18-7bb84516b308",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c39ea6b2-808a-4e1c-8a52-fa71510e1445"
        },
        "item": {
          "id": "e9f78d2a-7fa6-4584-9e6d-b1b36eb2646a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9e6754fd-f53d-499b-a005-d45a8e52c6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9885cb9-be54-47ae-bb26-723eac8b06f6",
        "cursor": {
          "ref": "0c452756-54b7-4d24-992b-5a5da7fb33fb",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "519dd354-6730-4da6-8d94-f2de1ac02234"
        },
        "item": {
          "id": "c9885cb9-be54-47ae-bb26-723eac8b06f6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a5cdcf7d-8f28-43f1-9d27-02af96af28ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0544a14-a08e-43b0-adda-e9643ee13a82",
        "cursor": {
          "ref": "f7d47ccd-ecf3-4fcd-b6d7-a33e1c4a54e1",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e4fcf4a4-33ff-451f-93aa-c5c7d282bb32"
        },
        "item": {
          "id": "f0544a14-a08e-43b0-adda-e9643ee13a82",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f43897e8-1768-4a99-859c-aead33d42780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d04301-09be-4c9a-8f7c-97092da9760e",
        "cursor": {
          "ref": "7d77bb31-20ba-4014-b6ad-5c4b7d9ad027",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "32adc3a7-4608-44b5-b6f8-93c2dcbd3d96"
        },
        "item": {
          "id": "d9d04301-09be-4c9a-8f7c-97092da9760e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0e7fc059-7015-4c17-bbfe-81690324f08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fd6bcb-58bd-4ecd-a770-89d5efa9fd3d",
        "cursor": {
          "ref": "e3ff8df3-e4f6-43a2-a45f-beb10f254e8d",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e2e8b003-006c-401d-9b19-5d4a32b53a1b"
        },
        "item": {
          "id": "f8fd6bcb-58bd-4ecd-a770-89d5efa9fd3d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8d9b76f2-8404-413f-a74a-4ec0779beeb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9c1949-683f-4cf2-af57-fff2fac87eae",
        "cursor": {
          "ref": "52e2f560-8259-461f-bef9-4f56ec0a9016",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a634a8c7-3b77-46a0-ab98-559712c4f76d"
        },
        "item": {
          "id": "ba9c1949-683f-4cf2-af57-fff2fac87eae",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "de62b8da-6379-49b5-8bf4-10c38fd363fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fad92b-1249-4a5a-80df-bea928f40a12",
        "cursor": {
          "ref": "b127e1d1-f551-4607-981a-b663d2ca14ab",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4135c821-9040-4f49-8d58-aff420f2b217"
        },
        "item": {
          "id": "23fad92b-1249-4a5a-80df-bea928f40a12",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8982611f-1c0b-49e0-9c62-f67533241199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e0cf61-1c5e-4532-b503-df8dac5a37b8",
        "cursor": {
          "ref": "a427fdf9-562c-43cc-b60d-0313cfbdca73",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7716b22e-1aa5-46f2-841c-9754a959087d"
        },
        "item": {
          "id": "15e0cf61-1c5e-4532-b503-df8dac5a37b8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8940e210-77e6-4753-9dad-a767318d3fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c27eb70-c0f5-439c-ac03-bd5a34b791f4",
        "cursor": {
          "ref": "b0344790-f577-4a1c-990f-bcc986c92ba4",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "889d9a03-7f10-4321-ac27-ac03b831da0e"
        },
        "item": {
          "id": "7c27eb70-c0f5-439c-ac03-bd5a34b791f4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c99e36f4-7846-4764-9a40-0963410bb907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20aef02-2104-45cc-95a3-0e8e5c1e83cd",
        "cursor": {
          "ref": "551a79b2-4efd-40b4-87cb-0cfe51ff5bc7",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2de11f14-84e2-4cef-a5f2-2c53a887f927"
        },
        "item": {
          "id": "a20aef02-2104-45cc-95a3-0e8e5c1e83cd",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "80c60b7f-e2a3-44e5-a3c8-0aece3faefaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1de5c37-60c2-49f4-aaf7-6a58208a2aff",
        "cursor": {
          "ref": "c70b020c-dad2-4618-ade1-b5b6f7e31c88",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "876c1192-51e9-4f7f-877a-955d50b536ce"
        },
        "item": {
          "id": "c1de5c37-60c2-49f4-aaf7-6a58208a2aff",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e5b3a651-98a7-439b-abac-5742056539d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca55da3-9551-421a-9068-bfa95c205666",
        "cursor": {
          "ref": "b1b8d5a9-a87d-4b90-bd33-7be6be67146c",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "995180cf-9c3e-416e-b721-f879e8138e84"
        },
        "item": {
          "id": "7ca55da3-9551-421a-9068-bfa95c205666",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "590d00c6-15bc-494a-a6ba-ececaa25965f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7de27ce-ee88-4440-818a-db24d96256e8",
        "cursor": {
          "ref": "e3420c54-56b5-46b4-a6f2-c3378ae6c2ea",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "333440fa-f55e-4f4e-865c-fe9c06f47929"
        },
        "item": {
          "id": "b7de27ce-ee88-4440-818a-db24d96256e8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0024af64-6648-4379-b308-0668e2578336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a98dd2-b10e-4387-bbfb-f581e89dff72",
        "cursor": {
          "ref": "68741489-8a65-4c45-990c-5f802525e61e",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f938d544-aefd-4f88-876c-4efb11c79dee"
        },
        "item": {
          "id": "34a98dd2-b10e-4387-bbfb-f581e89dff72",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b9c7c470-a6f9-46f7-897d-263af3dc7679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52d685b-58b4-4c5c-9409-a6ec347c724e",
        "cursor": {
          "ref": "8399d671-171e-4a25-8322-9fe24a0ba17f",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5e516953-c178-4c8d-85b9-bafa3a0f626c"
        },
        "item": {
          "id": "c52d685b-58b4-4c5c-9409-a6ec347c724e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "443ae14e-b719-4833-8997-21b9e9ad48f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e0917a-17cd-4b0e-bb5d-c483de719102",
        "cursor": {
          "ref": "ddf90932-3959-41f4-a821-a96c8dda7dbe",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "665a2f7b-4bcd-481d-becf-b9deca3e60eb"
        },
        "item": {
          "id": "18e0917a-17cd-4b0e-bb5d-c483de719102",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "432da0cd-8fc1-4fc6-991b-1575a617b221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0d3ff3-2974-434c-a2ce-a98cad224edd",
        "cursor": {
          "ref": "08287566-9abc-46b0-be0b-5220738a010c",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "92c9034e-3d85-4d92-9ba8-e6a8346b1f9e"
        },
        "item": {
          "id": "8e0d3ff3-2974-434c-a2ce-a98cad224edd",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4dc6e060-6b4d-4b57-a6ca-bd66ac68b0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be18c37d-b001-42cb-a81f-32417d23bf70",
        "cursor": {
          "ref": "a121d704-c2a1-4731-b85a-9f793525627a",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "15852d40-03b8-4f33-8372-9d8df2412753"
        },
        "item": {
          "id": "be18c37d-b001-42cb-a81f-32417d23bf70",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d0bf509a-dc52-4fc2-b680-5fafdf0afd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35879656-063c-43d6-aea3-db00c96ad804",
        "cursor": {
          "ref": "beab0eea-7108-4ad8-be73-7d01dcc29312",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "90b129d0-ba7d-483f-b8ba-ac7ce41d416b"
        },
        "item": {
          "id": "35879656-063c-43d6-aea3-db00c96ad804",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ced8d9b5-1118-4396-9e28-62f5c997caa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38bb5fe6-699f-4e3a-82e0-301978022663",
        "cursor": {
          "ref": "7b9bfaf7-9b90-4a79-a5d6-aa91b6d228f3",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "dd923ab1-9382-46aa-94bb-ac7fb838ee89"
        },
        "item": {
          "id": "38bb5fe6-699f-4e3a-82e0-301978022663",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "79345227-2730-4c7f-934e-10dc58df7d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d0813e-8edd-48f3-8300-51c6c5e03ef2",
        "cursor": {
          "ref": "4df8f143-0b5b-4d4f-8e86-25edf9c82d28",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "74462258-ae5b-4759-82eb-45d23dcce190"
        },
        "item": {
          "id": "64d0813e-8edd-48f3-8300-51c6c5e03ef2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c0a5b003-3900-4cc3-b031-f90280b2fd3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da31a4ef-b2b1-4580-ad42-d671364d2daf",
        "cursor": {
          "ref": "9f6915ab-714e-42b5-a3df-03d9cfab2552",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2c1e68df-9ac9-4f24-88a0-2e6462fc268b"
        },
        "item": {
          "id": "da31a4ef-b2b1-4580-ad42-d671364d2daf",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "34348b86-9e08-452e-864f-4a39459ddc2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8945cd-0d19-4d17-a7a5-f13d4de73405",
        "cursor": {
          "ref": "9ee3d778-cf4c-4043-b500-893dc5e77359",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9d388abc-59f2-4398-80be-6f9a4ac2b755"
        },
        "item": {
          "id": "5c8945cd-0d19-4d17-a7a5-f13d4de73405",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b30f89f5-935f-4fd5-a585-4f57b5f13ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85c8c47-024c-403c-bacb-4e3a281b508a",
        "cursor": {
          "ref": "c04da205-4417-410c-9ef2-07fb0d0c34b7",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8b6f33be-049a-4791-983d-7b865c6577ae"
        },
        "item": {
          "id": "d85c8c47-024c-403c-bacb-4e3a281b508a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "573fe623-b2c9-46bd-9cca-895e9291a95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c2fc38-fdfa-4ba1-9689-534beecbb600",
        "cursor": {
          "ref": "5443fb20-e6f4-4a0c-96e6-94aebd92bd9f",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7d1dc18b-113a-4c63-8c4d-cb047c1ca3b0"
        },
        "item": {
          "id": "71c2fc38-fdfa-4ba1-9689-534beecbb600",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9ceb7c32-55db-495b-b588-c5ae59b4ce82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1104624f-d9fb-4ef3-b8ae-e2c02420c474",
        "cursor": {
          "ref": "ddc72846-7426-41d2-8a0a-5653988c98c5",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "537b664a-cbbc-4c25-8520-ff3fd7a09475"
        },
        "item": {
          "id": "1104624f-d9fb-4ef3-b8ae-e2c02420c474",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e3ec4c0b-ef3b-443a-992a-f577ad738f36",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b07155f-e06b-43a6-bac2-e51313e30bbf",
        "cursor": {
          "ref": "33c25289-7bef-48d6-8d74-6e0c445d05e4",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e4605cd5-39a0-4639-bb10-5433cc85132a"
        },
        "item": {
          "id": "6b07155f-e06b-43a6-bac2-e51313e30bbf",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "960f587b-62cf-4818-9200-cefd28bc4b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23aff5c7-a7fd-4e66-8fec-3ab9ad70b861",
        "cursor": {
          "ref": "9d1713ed-b953-4c17-b1c5-b8584014d7da",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9f626e94-959b-4361-bce2-269ced7a0342"
        },
        "item": {
          "id": "23aff5c7-a7fd-4e66-8fec-3ab9ad70b861",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d0783b92-4cb2-40dc-adec-783a0287d596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32fe370-bb6d-4363-a144-61032644bf70",
        "cursor": {
          "ref": "a4ebf834-1134-45e1-b104-c9e45a62244d",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c227879e-87dd-4b00-9610-ab8afabc1d19"
        },
        "item": {
          "id": "e32fe370-bb6d-4363-a144-61032644bf70",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "417954fa-731f-4276-9d22-eb9e86a287c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd4676c-bcb1-405c-ac18-32a3f11e6363",
        "cursor": {
          "ref": "dd32eb0b-2bce-4561-9ffd-a66c2f64f43b",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "be494847-1e71-4265-baf9-5c698915baf4"
        },
        "item": {
          "id": "efd4676c-bcb1-405c-ac18-32a3f11e6363",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c13d22c5-4fb5-4931-b54e-1731377bf16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a42510d-a57f-4946-a5c5-63bfee8edba0",
        "cursor": {
          "ref": "6b0770c2-2a93-44ca-87d4-c4ceffdf3dd4",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "958e0aec-db21-4002-92a5-ba43cf0d3cd8"
        },
        "item": {
          "id": "1a42510d-a57f-4946-a5c5-63bfee8edba0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d4cdcb5f-fd43-4ca4-839a-ff1bce8b75ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cca7215-9a90-45f6-8ca6-3d8a05b52c77",
        "cursor": {
          "ref": "c025a461-9cde-44c6-b2b3-ab8778ebe02b",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fb5699a5-4749-4354-8cd2-bef51985e64e"
        },
        "item": {
          "id": "0cca7215-9a90-45f6-8ca6-3d8a05b52c77",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d32186b7-ea12-4525-a54e-b5ff1024cb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f91fbc-a859-45ad-ba35-b8c8ae5722de",
        "cursor": {
          "ref": "ee8bca62-03ea-4869-9234-508330f48c2e",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d1aeee21-c705-4d25-9ced-058d061c3750"
        },
        "item": {
          "id": "87f91fbc-a859-45ad-ba35-b8c8ae5722de",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f564d69d-2dde-4151-9b24-2907d03d6659",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5de7940-0f48-460d-adcf-60ca4900040b",
        "cursor": {
          "ref": "9bbb70f7-a6e9-4724-bdfd-581e52ffa0b5",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8967db2c-4675-46ec-b4f9-1d587fb09693"
        },
        "item": {
          "id": "a5de7940-0f48-460d-adcf-60ca4900040b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "57b7a7aa-7dd9-4627-a333-38a9bb6eff0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cefdf20-75d1-4d62-ab45-623636bdd705",
        "cursor": {
          "ref": "7bcf2fdb-85d4-4e1c-bf1f-71e5109a0d8e",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2b38393b-e305-4da4-8b27-336144a9d5bc"
        },
        "item": {
          "id": "5cefdf20-75d1-4d62-ab45-623636bdd705",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "29999916-77a2-4f48-8377-6b3f6b51e836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be752783-3a40-44c0-a711-c32a389db9a5",
        "cursor": {
          "ref": "8cab715f-3174-4d4c-9fe1-5177fe487efc",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7f06b5bc-0af6-464b-b244-bc2d540f3f6c"
        },
        "item": {
          "id": "be752783-3a40-44c0-a711-c32a389db9a5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "28c025bc-f2ed-4fd5-b3a8-2495ef929d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd01855-4e1c-45b1-a672-e6cf980641d7",
        "cursor": {
          "ref": "b824f537-a50f-4a25-81b0-9d541b4cb131",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ca5b7138-fa1e-4fd1-85f3-6a59d174773e"
        },
        "item": {
          "id": "ffd01855-4e1c-45b1-a672-e6cf980641d7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "81f10b5e-06ab-4f09-9c70-236bf66bb2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09774e63-b8e1-401c-8ac0-f726edd63ed7",
        "cursor": {
          "ref": "dddeb7b2-0d27-4c5b-9cc0-d3f5e2d7c531",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "56109d8d-6804-40e7-befd-963df4b92c10"
        },
        "item": {
          "id": "09774e63-b8e1-401c-8ac0-f726edd63ed7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3ba5a102-d4d0-4f2f-a270-af457150fd4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a5dd33-d5d9-4384-913e-ae8e03f1796f",
        "cursor": {
          "ref": "79c5e9be-2b2b-4cf6-b98e-3907812066ff",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "73e8039d-cf60-40e7-bc2e-0fbefe51a6b1"
        },
        "item": {
          "id": "62a5dd33-d5d9-4384-913e-ae8e03f1796f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e10d68a3-217e-4428-8c51-878788d831cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472147df-177b-42dd-8cab-9c97ef3afa5f",
        "cursor": {
          "ref": "4434ae2d-a813-415f-baf2-5b09a13d91af",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3ff0f399-e4ae-4013-afdf-3f229fab70f5"
        },
        "item": {
          "id": "472147df-177b-42dd-8cab-9c97ef3afa5f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fb78a1e1-583d-41c5-b73d-a39e28776271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92d923a-297d-40fe-9fe0-14da2e8a3555",
        "cursor": {
          "ref": "3c2c0e52-0e5b-49dc-8947-8c96a921f2f8",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "76b30562-61cc-42c8-970e-c2361581e266"
        },
        "item": {
          "id": "d92d923a-297d-40fe-9fe0-14da2e8a3555",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d2d2df8d-c045-4003-9273-684675d17dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a9159f-ae53-4426-b2c9-b4c7f9e0288d",
        "cursor": {
          "ref": "28dbd793-0c05-42c1-8951-87ff8b121998",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d6244c57-f866-42f2-a049-536a0db898e3"
        },
        "item": {
          "id": "75a9159f-ae53-4426-b2c9-b4c7f9e0288d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e5f447e9-d9db-4a78-bdbc-af9c3675e885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2de458c-3bc1-4b09-880a-717de541b218",
        "cursor": {
          "ref": "727a3568-dafb-4405-8392-f88378ce9ef4",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1034604a-8799-461f-a476-2900785ef5b1"
        },
        "item": {
          "id": "e2de458c-3bc1-4b09-880a-717de541b218",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fa9256c1-804b-4551-8b82-16d2501c8da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423d0bc4-52ac-4ac2-a54c-f3039543bc43",
        "cursor": {
          "ref": "f3307e95-2db2-405c-a548-e692faa12c33",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4f93bb88-d292-48e0-a740-c4919f32b491"
        },
        "item": {
          "id": "423d0bc4-52ac-4ac2-a54c-f3039543bc43",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "beae6c3f-ae91-4c81-9b60-f20b1327f9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442453e8-0574-4885-bc2a-fbcd7c850638",
        "cursor": {
          "ref": "42033e19-77c8-41a5-9d14-64a191a83e71",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "65d1b772-18b2-4820-8436-7dcfb3716f00"
        },
        "item": {
          "id": "442453e8-0574-4885-bc2a-fbcd7c850638",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2992931b-e3ac-4d4e-822c-5312f1e27c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44640ab0-d4d1-4dd4-90fb-0b87fb0331a1",
        "cursor": {
          "ref": "b8b54cf1-0b1f-4d31-ac6b-3274b3a1ae6c",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5ef49554-446a-46c7-84bd-beb8ed65dd32"
        },
        "item": {
          "id": "44640ab0-d4d1-4dd4-90fb-0b87fb0331a1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3557a222-d470-4b2a-94a1-a541f07be813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f09fb4-c505-488a-89c0-986157915069",
        "cursor": {
          "ref": "7786b0ea-e198-44cf-ad54-280c935382b1",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5acaecf6-2eee-4eb3-b0ae-4cb2c86328a8"
        },
        "item": {
          "id": "91f09fb4-c505-488a-89c0-986157915069",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "872a473a-2f73-40a8-8ae6-18e104269184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ab805f-62e8-4253-93f3-9d0d8fcdc5e2",
        "cursor": {
          "ref": "012504f9-1503-4893-858c-9ddcda94f7d2",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "544f03f3-acc3-4550-88d2-6c9cee09f2c7"
        },
        "item": {
          "id": "c3ab805f-62e8-4253-93f3-9d0d8fcdc5e2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2cda0e61-71a5-4e22-9edb-334e99fc9382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa2d0b9-69c8-4e2a-9daf-ec1291b7fc4a",
        "cursor": {
          "ref": "9283e8b8-a0b6-4e7a-8dd0-7b98ad3f38c1",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "985515e2-d1bb-40d5-bcc7-ba8e8f07624a"
        },
        "item": {
          "id": "6aa2d0b9-69c8-4e2a-9daf-ec1291b7fc4a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "dc3938f7-2f5a-464a-95ef-d4574e41aa21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97961535-788c-4d1d-8b6c-2e3508de7422",
        "cursor": {
          "ref": "c4b87bb9-2325-4e4f-b080-71a30a24bb8b",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4c0da299-0506-4141-8b70-d2f664e7bf66"
        },
        "item": {
          "id": "97961535-788c-4d1d-8b6c-2e3508de7422",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c36cf407-8aca-46c4-a9ca-6ccf68f8df2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18218c4-8346-4c4a-9f4f-b64cee8ff90c",
        "cursor": {
          "ref": "779d935a-a45b-49d2-a502-996e0819011c",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "dce64c22-79dc-4749-8d72-a5779aba691f"
        },
        "item": {
          "id": "b18218c4-8346-4c4a-9f4f-b64cee8ff90c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "43a7488b-7bd8-4c68-b97f-4e2640ba627c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad80b32a-51db-4105-8630-231e4fed196c",
        "cursor": {
          "ref": "6d4279e2-813f-4149-8c6f-ed4b1a01c249",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a533f1e4-e60b-4db1-8139-d57970bfc59f"
        },
        "item": {
          "id": "ad80b32a-51db-4105-8630-231e4fed196c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2abce78f-ed6d-45a9-b286-c8d327ede39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56e5645-08c1-4f91-8dea-f80d054dfba0",
        "cursor": {
          "ref": "38f6bc7c-c51e-4f53-b9e3-4ed46f77cf05",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c010ca5f-e34e-464c-b26d-d8b1351a8b11"
        },
        "item": {
          "id": "f56e5645-08c1-4f91-8dea-f80d054dfba0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "272ef54e-0c0a-4a99-bbbb-0c8b3a97327d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196b7b37-4663-4278-b8bb-72341c21f88c",
        "cursor": {
          "ref": "2af6edeb-bb50-488a-b5e9-fc9b25000db9",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "dd275b5c-ce1a-4cef-acdb-f40186d748d8"
        },
        "item": {
          "id": "196b7b37-4663-4278-b8bb-72341c21f88c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "de7010f7-6404-401a-a87c-87f846b14fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ad0165-52a4-42b9-9d9c-569481753963",
        "cursor": {
          "ref": "44794c17-1a5b-4d9f-b4cd-5555bb1b7192",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "489d05e5-20bb-4d55-b469-19506b6a0a88"
        },
        "item": {
          "id": "33ad0165-52a4-42b9-9d9c-569481753963",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "be16636c-877d-4765-9d58-b1911ed2df67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b68b676-bd13-4644-8995-b51045a6f30b",
        "cursor": {
          "ref": "58b0cbc1-4431-4716-af9e-e57701aa84c3",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "318a180c-a14e-485a-8ce1-ee86d7bdcbf4"
        },
        "item": {
          "id": "5b68b676-bd13-4644-8995-b51045a6f30b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "338c0867-d307-4e98-ab42-d516fd508a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca45fb89-a13f-4de7-b30d-73c762cb5dd0",
        "cursor": {
          "ref": "18505954-821c-4c92-af3b-b90be79e492e",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d1c597a8-12e9-4643-ba72-25e9324a9e7f"
        },
        "item": {
          "id": "ca45fb89-a13f-4de7-b30d-73c762cb5dd0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7a91aa3b-9777-4546-beb7-43ebd543dcdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45ab1b7-7a67-4fb5-b039-00237721fe95",
        "cursor": {
          "ref": "2b5f2392-2bd4-4843-9d81-3fa39728e2fa",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f996c15d-4599-4853-b38e-77fd9fb35f90"
        },
        "item": {
          "id": "c45ab1b7-7a67-4fb5-b039-00237721fe95",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "66f46438-b1ce-4903-896b-2d4a3869ab2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2224dd4f-1af7-4364-bd64-55f2f5153b49",
        "cursor": {
          "ref": "b649616b-7bac-4eee-bf32-cb49339a63b3",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d7da4d9b-02e0-4ebb-9640-9d257be611c6"
        },
        "item": {
          "id": "2224dd4f-1af7-4364-bd64-55f2f5153b49",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ea64f743-6ad2-4b19-8a40-0f68e4ccc8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8493f9-1743-4ae8-b98e-4fa76ad97cf4",
        "cursor": {
          "ref": "d51f18e8-b13d-4f76-8386-8d4f36d63e29",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5dc11cac-a498-45d2-86c9-4a258949a557"
        },
        "item": {
          "id": "9b8493f9-1743-4ae8-b98e-4fa76ad97cf4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b4af42c7-d860-4af9-a695-2a0a312bbb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ca012e-f6f7-4872-b318-59a133f69eac",
        "cursor": {
          "ref": "0838567b-e29f-4eb8-8eba-9052ba6b6dd5",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cfebc93b-1ac2-4d49-8701-85bfd5cd6f42"
        },
        "item": {
          "id": "c6ca012e-f6f7-4872-b318-59a133f69eac",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ca2151b3-1c4a-41f9-8329-0c0615844017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb3783d-1916-4d80-9420-1c99e5e2b58d",
        "cursor": {
          "ref": "9f50d189-6c5f-4b6c-9cd7-6c3909e889a3",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3d78b9a6-1694-4c04-86c0-b928763f734d"
        },
        "item": {
          "id": "8cb3783d-1916-4d80-9420-1c99e5e2b58d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c0f76fee-3c03-4272-a594-b08a5c172518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3c6fdb-b1db-447f-bc15-50298a6c208d",
        "cursor": {
          "ref": "e5bd9ff4-8d72-4b8f-be4e-2f78fb104f4f",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9ebe4ed9-bcbc-467d-bc80-da858d3c63c1"
        },
        "item": {
          "id": "bb3c6fdb-b1db-447f-bc15-50298a6c208d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d57d6375-95ad-48d3-9bcb-dafc1d895a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524b08a4-ab41-4c0f-8404-fc446268af57",
        "cursor": {
          "ref": "ee45e1e7-8e4a-4ca6-9cd8-eff2cb340fdb",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "985010cc-d7f6-4a90-894b-fb3838a54789"
        },
        "item": {
          "id": "524b08a4-ab41-4c0f-8404-fc446268af57",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "52eeb31f-4293-466c-9e94-608a3cbf6548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d20fbd9-26f5-4450-8b76-f7653b84ed70",
        "cursor": {
          "ref": "94dc555d-9a2c-4ba9-b1f6-72eaf2e2855d",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c4ab8a87-345f-4928-8353-4d01df03d384"
        },
        "item": {
          "id": "3d20fbd9-26f5-4450-8b76-f7653b84ed70",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a78f10dd-459c-4e3e-91f4-5178972137ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b1e66b-7d85-4871-8f4c-eedc3d8ffb7e",
        "cursor": {
          "ref": "976238c1-6493-4ed6-a919-05eec280f82f",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9b1dab3d-b40e-45f4-89ba-c8be1f3df550"
        },
        "item": {
          "id": "19b1e66b-7d85-4871-8f4c-eedc3d8ffb7e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5bfb45d6-1e5a-4fd7-bdfa-96d3f1a637a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ab399b-b205-4a68-8dcc-3f7b6dd039db",
        "cursor": {
          "ref": "3c577085-f66c-40af-a8ad-b22a6e181509",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f068a230-4fc1-458b-a214-dc41741e2f53"
        },
        "item": {
          "id": "51ab399b-b205-4a68-8dcc-3f7b6dd039db",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f3ebd879-1937-447a-9f85-5fc6a2fb3687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b55adc-205b-4057-b8b5-8d9f6108a3d3",
        "cursor": {
          "ref": "a5a081d6-a441-435c-b96c-19445ff11882",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6e74ab66-9b72-45e6-bd77-efec2c1f9b4a"
        },
        "item": {
          "id": "86b55adc-205b-4057-b8b5-8d9f6108a3d3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d43f0ef8-61ec-4a9a-be8a-130db698bb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cf62bf-881d-4f76-9317-389eff184c95",
        "cursor": {
          "ref": "b7d835f9-cb7a-4115-9d10-ce690e31907a",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3357c213-8d29-4c82-925f-6e8395c3e99e"
        },
        "item": {
          "id": "29cf62bf-881d-4f76-9317-389eff184c95",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d61a2a90-bc9f-44be-8c70-881fe3f9b40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c7f70d-92c2-41ab-ac46-1ed357d4adf4",
        "cursor": {
          "ref": "3b07961d-b0f4-4151-a22a-a03373cb4c4e",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7e2c6c08-c53f-4352-9aa1-686fea563a8b"
        },
        "item": {
          "id": "74c7f70d-92c2-41ab-ac46-1ed357d4adf4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b2710d83-b119-4ea4-bb7c-e1cf2ded57d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c13c7b-6bc3-4dd3-b0dd-02c1264615f2",
        "cursor": {
          "ref": "aaf55a44-bce5-4d7e-a10a-7bb32624997f",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5f0e3b98-4a77-4ced-860e-fbd9d8c7f248"
        },
        "item": {
          "id": "16c13c7b-6bc3-4dd3-b0dd-02c1264615f2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b0afe536-9923-451a-bb1c-eef64e4f9e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcffdd64-1bb0-4ad2-ae6f-4c2520661229",
        "cursor": {
          "ref": "1dc30c2e-06f4-4789-af86-026e5abc0714",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fb1967a6-6554-4bd8-96ee-ead3793874d6"
        },
        "item": {
          "id": "dcffdd64-1bb0-4ad2-ae6f-4c2520661229",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "38db0cc8-11a2-4a4b-9e4e-a9fe4c59bc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457afb5f-aed9-4c8e-9ad5-37c80e87f4b9",
        "cursor": {
          "ref": "ae7bfdfb-066d-4c2d-8e53-e8767fa605f2",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "716d4f02-12ff-4701-ad06-db42c403ca57"
        },
        "item": {
          "id": "457afb5f-aed9-4c8e-9ad5-37c80e87f4b9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ae771777-d275-474d-8f75-23b0568ede1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d21343-1fe1-4050-9a2d-5b5f6d8201ac",
        "cursor": {
          "ref": "b5f515eb-ce57-401d-b2fc-bddc53728349",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c3fe4e5e-2690-4560-acdf-bc72cb941cb2"
        },
        "item": {
          "id": "b4d21343-1fe1-4050-9a2d-5b5f6d8201ac",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "db6f8a4e-0234-4eb3-a5e7-a7156b653574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b06cd3-ef38-47f3-974a-3fb363935309",
        "cursor": {
          "ref": "c77a7fd6-65d6-4cf4-b201-c9878bb71060",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "64a0cecc-41db-4436-ab76-d89cc1d37383"
        },
        "item": {
          "id": "67b06cd3-ef38-47f3-974a-3fb363935309",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "13e0d024-16d9-4403-b77a-40194202bd5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c507e6-23e4-4dfe-808d-21a9f1c96df4",
        "cursor": {
          "ref": "b2a84dd8-e375-43d3-9a25-4d1b2395f1c3",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1a3bd42e-666d-492e-bb65-e1559abfe5f7"
        },
        "item": {
          "id": "32c507e6-23e4-4dfe-808d-21a9f1c96df4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "253dd703-2e0f-41c2-91d2-5ad8ded1bc2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f913fa4-788e-49d1-84f7-648eb24c2b81",
        "cursor": {
          "ref": "63e377d5-6c01-4946-a6de-e3bbbf9e3b8a",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "14f8027b-6b95-49dc-b82e-de811c4bd8d1"
        },
        "item": {
          "id": "5f913fa4-788e-49d1-84f7-648eb24c2b81",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4b6f5fc5-a695-4812-8c69-8e1aa2f4d058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435bbfd2-1d85-4f47-868c-068346586101",
        "cursor": {
          "ref": "2250fcba-bc1b-46cd-8853-1d79041e3782",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2cf84cfa-6746-4eeb-9232-a7b0dc96f975"
        },
        "item": {
          "id": "435bbfd2-1d85-4f47-868c-068346586101",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "133ae80c-3ae3-4a71-a958-8cd08d298662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228f6aad-d6b4-4fa8-8edf-2dece08930d9",
        "cursor": {
          "ref": "e970952f-6819-409c-beb9-a3388cd65522",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c48d2408-1dcd-48ac-b32a-e1bc6deb7242"
        },
        "item": {
          "id": "228f6aad-d6b4-4fa8-8edf-2dece08930d9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3953a26d-afd6-4825-826f-3746ae116af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d7fbef-3215-47cf-9b45-2c512f0f329e",
        "cursor": {
          "ref": "9bd7e74e-1be8-44ed-a172-0d9d07ac78d2",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f612ee19-5ca0-47e7-bfa3-cc6e7a2363ea"
        },
        "item": {
          "id": "d8d7fbef-3215-47cf-9b45-2c512f0f329e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "20d88a0f-0033-4345-8fc5-776414e1cadd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754cd20e-e650-4285-9a4b-a4921ad68bfa",
        "cursor": {
          "ref": "40b0fff3-1ea4-498e-958f-3818a819b5a1",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0185163e-463a-49ea-b2b5-d3042074ba6f"
        },
        "item": {
          "id": "754cd20e-e650-4285-9a4b-a4921ad68bfa",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c0699d03-a8d8-45d7-8f49-5910059c8e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460ee4ab-b65e-4773-acd6-66bc07a622be",
        "cursor": {
          "ref": "2414d33d-15e7-497c-8489-95dccbbd5344",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d62f20e0-729e-4880-9d7b-486529e840da"
        },
        "item": {
          "id": "460ee4ab-b65e-4773-acd6-66bc07a622be",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "df800df2-3e2a-4afa-abe2-e5c6fec634de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8cebcfa-899b-41d0-8e2e-c88eb2f99fb5",
        "cursor": {
          "ref": "dd64aa8a-fa50-44a7-b66b-c3b7b9a4605c",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5a1c386a-7008-4e37-95d3-ccd99dd759c7"
        },
        "item": {
          "id": "f8cebcfa-899b-41d0-8e2e-c88eb2f99fb5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "99981884-dbb7-49da-b201-4bcd3bd5231f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd6f104-27e8-4f2f-ba8b-6b53ed83526b",
        "cursor": {
          "ref": "203a2e07-da28-4599-a0d5-0d9581f85650",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b5b48c15-45ed-4f4b-b698-4485f51e7c38"
        },
        "item": {
          "id": "edd6f104-27e8-4f2f-ba8b-6b53ed83526b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cdcd6f63-065c-452f-989e-4c5fb11157a4",
          "status": "Created",
          "code": 201,
          "responseTime": 31,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c425cd88-4c0a-4f00-b409-300505bad8ee",
        "cursor": {
          "ref": "bae73453-b0c5-415b-8a56-d6ea99816e3e",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "604a61d8-4fac-4a68-9099-ac7607622628"
        },
        "item": {
          "id": "c425cd88-4c0a-4f00-b409-300505bad8ee",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "96683133-ff33-4995-a5af-2bf7f9c10192",
          "status": "Created",
          "code": 201,
          "responseTime": 63,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a599bdb-55f8-4a1d-8164-2182292c8fbd",
        "cursor": {
          "ref": "fd96f71d-3182-4dd1-81e1-c1eecb2efbef",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7794726f-5d8e-4e93-8bac-7070212b97ce"
        },
        "item": {
          "id": "2a599bdb-55f8-4a1d-8164-2182292c8fbd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a913bd74-6cb2-4eec-9a37-c8210f403998",
          "status": "Created",
          "code": 201,
          "responseTime": 73,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21c78a2-4374-4c26-acfd-17b43802d022",
        "cursor": {
          "ref": "d4f007ea-7566-4b7e-aeb8-1f7e77b2e732",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "711f4d15-d424-4ee3-9a9e-4433a8faa613"
        },
        "item": {
          "id": "d21c78a2-4374-4c26-acfd-17b43802d022",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "dd645005-f86b-4b1f-9cd9-71c57d5a27db",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d90b49-6332-43c0-8798-364c01452c35",
        "cursor": {
          "ref": "bc4b2385-d4ae-4469-9fa6-b1c3b7410eb8",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c3ace1a4-cc64-4cd2-a75a-c508fd7df8b1"
        },
        "item": {
          "id": "81d90b49-6332-43c0-8798-364c01452c35",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "701fa8f9-4309-4519-9295-2d4ce74c2d23",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbe0f91-9ab2-437c-823d-16267bee4938",
        "cursor": {
          "ref": "85ed851c-7d80-4a6c-9342-7331e12680a3",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "2780d8f7-71d8-402c-a96c-fb190e042200"
        },
        "item": {
          "id": "dbbe0f91-9ab2-437c-823d-16267bee4938",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "97f7c1c2-bc37-4a36-a698-a88f1a964872",
          "status": "Created",
          "code": 201,
          "responseTime": 31,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8d63e6-95bd-4f12-a1cd-e1f175533088",
        "cursor": {
          "ref": "5d8cbc8b-fa19-44ca-a7f2-b1ae88030f83",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7c7e5a83-216a-480e-869c-f15014cc6304"
        },
        "item": {
          "id": "6b8d63e6-95bd-4f12-a1cd-e1f175533088",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b0bb9623-e792-462f-a249-beff32c67d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07e9541-4d8b-49c5-ae93-0f111f1eac06",
        "cursor": {
          "ref": "64b3cedf-4969-4887-a934-36d38d2c7bf9",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "11795802-bdf8-4e4a-9bf6-8f3f5ba45e92"
        },
        "item": {
          "id": "c07e9541-4d8b-49c5-ae93-0f111f1eac06",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "09fd791b-8be0-4ea9-85ce-f7b219a67509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5addf5c-d12e-4aae-ad0e-74d1f641ea2b",
        "cursor": {
          "ref": "77799167-b335-4a87-b428-359a9c9ae455",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b1342b13-f18e-484d-ba00-5ba273b862db"
        },
        "item": {
          "id": "d5addf5c-d12e-4aae-ad0e-74d1f641ea2b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4c144bff-1dfd-4e97-b6c0-5fec73dac7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498ee1fc-ea75-46ee-831b-2a3bf87a91da",
        "cursor": {
          "ref": "1e28a94f-f938-4d8c-9395-6703684b2f5d",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1d262cc4-5ddb-4b9f-9a96-f6efe828e0d0"
        },
        "item": {
          "id": "498ee1fc-ea75-46ee-831b-2a3bf87a91da",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a3fbe103-f173-41e3-b9b5-67ad87b09648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5633214f-ed47-4f94-8616-a67fc2f8d73c",
        "cursor": {
          "ref": "893232a7-06cc-45a8-aa50-89a2d3489329",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "795d2ad6-486f-466b-92e5-d5fe5aab5b14"
        },
        "item": {
          "id": "5633214f-ed47-4f94-8616-a67fc2f8d73c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cf5e441c-8191-4560-8f22-e0bdf04ec931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c239ae0e-4e5a-4e22-b20b-fcfdcfb2a137",
        "cursor": {
          "ref": "a58ba756-f49b-4ec4-ab48-515c046a69a5",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ee2db676-baa2-48a8-9943-eb0ebd0988e6"
        },
        "item": {
          "id": "c239ae0e-4e5a-4e22-b20b-fcfdcfb2a137",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "02eff7e6-9757-4950-a427-1cc38204ab3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8431c10-ffde-47b7-a330-d3f440b7097f",
        "cursor": {
          "ref": "fa92409b-6870-432a-aefe-4758595df571",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ebed453d-e17b-4057-aae9-0181d08a45cb"
        },
        "item": {
          "id": "b8431c10-ffde-47b7-a330-d3f440b7097f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1466db35-ef1c-4b8a-9583-6a5e255f115f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308412d2-69c3-4b38-a2ed-0832c6350a57",
        "cursor": {
          "ref": "d2c6a6a5-becb-4d24-ace3-e6643c6d1a47",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6b316ea3-91f4-4ee3-86b8-46fa7fa7f72e"
        },
        "item": {
          "id": "308412d2-69c3-4b38-a2ed-0832c6350a57",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ca2ddef8-0aa8-4489-8ab6-f8a0b1212f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fac9598-3151-4e91-bfba-6a89c050403d",
        "cursor": {
          "ref": "16c53e26-e257-4d03-ac92-f41bd31f94c0",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "60e84cb4-5ce5-4a3a-9ec8-aa61eb0843f2"
        },
        "item": {
          "id": "0fac9598-3151-4e91-bfba-6a89c050403d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ece12d47-cce2-4887-ab3b-100c4d855036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6676d621-e4eb-44b6-8df4-833243542971",
        "cursor": {
          "ref": "f1ee1d5f-2747-43cd-a898-08e88adfe37f",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d347cde0-7395-4ed5-9da0-91fa324e89fb"
        },
        "item": {
          "id": "6676d621-e4eb-44b6-8df4-833243542971",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d85786b4-b200-4f2d-a1bb-f309021d19bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2c1e86-77e7-40a4-b27c-e3e1aee1c2e8",
        "cursor": {
          "ref": "e33a6005-6bfb-4600-8841-de0e2c039177",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1547590f-a94e-4d9c-a6d9-d5c23a661bba"
        },
        "item": {
          "id": "8d2c1e86-77e7-40a4-b27c-e3e1aee1c2e8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ce32cf23-3906-4079-a500-8a0a364f21df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccfeb04-98e1-4e32-bea0-656913318c67",
        "cursor": {
          "ref": "7fc2869f-d60c-49e3-b50f-3759ac5371ee",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7e67ded2-3a91-4386-99da-19b5ea6b51da"
        },
        "item": {
          "id": "5ccfeb04-98e1-4e32-bea0-656913318c67",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c9568753-534f-4674-aa6c-e6eadcf767f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5b41ee-3a5b-46b4-b913-920223441098",
        "cursor": {
          "ref": "f4c82734-2912-4141-9127-340cf0837f05",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9bf6f539-33d0-4627-ba6c-dab0b2bbff6f"
        },
        "item": {
          "id": "8d5b41ee-3a5b-46b4-b913-920223441098",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "eaefac0b-2035-4d8b-8579-177d4c808315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61da771d-de11-42e0-88f4-5e1525e7dcf2",
        "cursor": {
          "ref": "266cb986-3859-459e-868c-dd60c009f319",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1ee78b14-1a42-4325-89fd-a3f1bc934c8d"
        },
        "item": {
          "id": "61da771d-de11-42e0-88f4-5e1525e7dcf2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bda3969c-e13b-4820-a9bb-b2a790ef2640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80fcd5d6-57e3-4fbf-a9e5-cd1b2d4edc08",
        "cursor": {
          "ref": "8bed64d9-ea05-4697-9b75-ed48003ba6ff",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "381b538d-3e0b-43fd-8cfd-250298cbff49"
        },
        "item": {
          "id": "80fcd5d6-57e3-4fbf-a9e5-cd1b2d4edc08",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "706d0da9-ca28-4286-9fb0-d886a07d1f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79404db6-fae0-4125-9163-57f135a4da94",
        "cursor": {
          "ref": "02b3fdc0-90f0-4328-ac05-61f9b6c72f25",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "dd3c5fe3-8e59-4916-9737-1117166e36ff"
        },
        "item": {
          "id": "79404db6-fae0-4125-9163-57f135a4da94",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3536669c-4622-44f7-bea2-9d8b9fd0fab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7bca9f-24bb-42dd-a348-ecb4f69e2d52",
        "cursor": {
          "ref": "17279469-6794-44c6-9ffc-85391808d2b3",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "40c120fb-948d-4fba-8761-3fe65aa76182"
        },
        "item": {
          "id": "3b7bca9f-24bb-42dd-a348-ecb4f69e2d52",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6d35f141-0e4f-4d4e-90b4-f4f934ed94c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd346d00-bc55-4173-ad40-02e0ab47e80e",
        "cursor": {
          "ref": "95230542-4e43-470d-94ab-7516f471cc2f",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c28898b5-36f6-424d-949d-a0d4cc747322"
        },
        "item": {
          "id": "fd346d00-bc55-4173-ad40-02e0ab47e80e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dfca482b-d45f-4371-8259-0d074c52f6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0592918c-a1d0-4947-810d-2fe1de24179b",
        "cursor": {
          "ref": "6c1cc1c1-15f6-43d6-bf6c-24c6709229c8",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "00e0f0af-39a2-4e87-ae17-26da751e9a75"
        },
        "item": {
          "id": "0592918c-a1d0-4947-810d-2fe1de24179b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d7dccfb8-6422-423e-b4d6-ec3b4b5608ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3ca52b-d645-459d-8a17-af9a28d6bbb1",
        "cursor": {
          "ref": "45a5a22d-aa38-40ec-994c-9d09af9b7d56",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d6892700-a913-434a-818c-650a86801f18"
        },
        "item": {
          "id": "7c3ca52b-d645-459d-8a17-af9a28d6bbb1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fc617599-0ae1-476e-a340-08fa22b252eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113f4a6e-7272-4b49-af70-56c74cb7997d",
        "cursor": {
          "ref": "557a2ad7-7a67-47ea-b536-3c88d1135dd2",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "33b8f857-9cd6-4151-9b22-63c4d3cb552f"
        },
        "item": {
          "id": "113f4a6e-7272-4b49-af70-56c74cb7997d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e6fdf0e1-79ec-4511-929f-52e405ccb128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c89fcb1-26d7-4b65-a140-a8d2ee65887a",
        "cursor": {
          "ref": "459578d9-64af-4be5-8438-0cfa3aad3fe8",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "59d19a33-b244-4898-8622-b8ed7101ac7b"
        },
        "item": {
          "id": "0c89fcb1-26d7-4b65-a140-a8d2ee65887a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "78fc408e-991e-49a0-8788-184df41fb519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5d58d8-4cfd-4668-9eca-e1cb8ef49de7",
        "cursor": {
          "ref": "2f3f8fca-8baa-43ad-b5f6-9dd705f18a71",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "72cec213-8d53-4213-9615-b09fcecceb38"
        },
        "item": {
          "id": "ae5d58d8-4cfd-4668-9eca-e1cb8ef49de7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e57d0917-8ce4-40d9-ab19-1a5cebe74cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e280f81f-fd63-4e60-82fd-fa0bb26ff0b1",
        "cursor": {
          "ref": "b5ec7f7b-118f-4865-95f3-0cf5837f888a",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0ca8946e-3150-41e8-a361-038c754325cf"
        },
        "item": {
          "id": "e280f81f-fd63-4e60-82fd-fa0bb26ff0b1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fcf6787f-d90c-49fe-86c6-7974f80ab3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977d5f93-35e5-4523-9678-7f09573b5fcc",
        "cursor": {
          "ref": "be87aa69-721c-4a05-90ef-5932fcdeb298",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3a11f9c8-e17f-4c3c-837a-e7c044434947"
        },
        "item": {
          "id": "977d5f93-35e5-4523-9678-7f09573b5fcc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6e825327-ca9c-4c52-b779-65c4d319db01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52559a0-9af2-4083-8d1e-81c5d25238ce",
        "cursor": {
          "ref": "663021b2-922f-4029-a326-b65519c71c36",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1c5bdaeb-4a6b-4c04-895b-fb6cdc7e94f0"
        },
        "item": {
          "id": "e52559a0-9af2-4083-8d1e-81c5d25238ce",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bd80c4e2-eb9b-4b4f-8e6d-3a49e3347d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d1275f-4868-47e4-8bb9-3ac284147001",
        "cursor": {
          "ref": "a1836e8a-b641-4558-8713-df03cba0ad79",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e297bd36-169a-4888-8720-3dbe544411fe"
        },
        "item": {
          "id": "83d1275f-4868-47e4-8bb9-3ac284147001",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b37d905b-5246-40b0-a677-b344dfe36170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c903f76-018c-483c-b142-91a94dc644e5",
        "cursor": {
          "ref": "d14afcc1-1ae3-4fc0-9476-c5620470f233",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "afed70d5-ccd3-43aa-b059-23048f447d82"
        },
        "item": {
          "id": "2c903f76-018c-483c-b142-91a94dc644e5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "388a7661-6ed3-4ac1-b066-72aab8925d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1378724-e590-4295-8d38-815ee4df3222",
        "cursor": {
          "ref": "72439340-110d-4d37-bd11-0866323ba24a",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ebc7f6fd-647e-4e89-9025-7a2d9047e4e0"
        },
        "item": {
          "id": "e1378724-e590-4295-8d38-815ee4df3222",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0d43bce9-8795-4394-9977-4454a82b866b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6771a576-663c-4ba6-8e6e-a0c7f1516a24",
        "cursor": {
          "ref": "4482aa7d-791a-4e49-a045-a9966e29ed33",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9fe873cb-d8cc-414b-b3cb-28a105426422"
        },
        "item": {
          "id": "6771a576-663c-4ba6-8e6e-a0c7f1516a24",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b5efd7da-eb87-4e0c-8f7e-4679da5e8f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244a0170-5ccc-4baa-a448-ba028c845011",
        "cursor": {
          "ref": "e9497e74-568c-49c6-8720-f14b4b8c8804",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "61e8ba82-61f9-4979-9ab2-364b094d4ece"
        },
        "item": {
          "id": "244a0170-5ccc-4baa-a448-ba028c845011",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "68fe9df0-8331-40b3-8bc6-62f9eb4723fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b88c630-5858-4789-9554-34e25bd27d59",
        "cursor": {
          "ref": "a8386799-dbfd-4506-9400-c106f6ef3d83",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "383b7bfe-6cb0-405e-8997-1b166fba3976"
        },
        "item": {
          "id": "9b88c630-5858-4789-9554-34e25bd27d59",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6cf977d7-b446-4366-8ddc-dc3c206d07af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c94f945-ea8b-493b-9809-b7e7736f4936",
        "cursor": {
          "ref": "c81e32a0-a9ab-423e-9ec2-808cbfb61b4f",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c5286ebe-f303-4ac2-a139-59e805cee1aa"
        },
        "item": {
          "id": "8c94f945-ea8b-493b-9809-b7e7736f4936",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8a36e2f3-f62d-4026-b90e-7c165bbe460c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e30a5d-3965-4c93-8848-4118fac0d1bb",
        "cursor": {
          "ref": "c44707a5-433c-464c-8d14-ee9429623d3a",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "aeaa71e9-7b9d-4022-8991-aced286781dd"
        },
        "item": {
          "id": "54e30a5d-3965-4c93-8848-4118fac0d1bb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9391de2f-f5b6-4175-8f4a-eca4b267e86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56311ee1-4ab1-42c4-8474-e94bcbb23c35",
        "cursor": {
          "ref": "81aee8cc-75d5-4fc2-921a-afb49abd91b6",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0f61fdb6-cdf3-4f0b-866e-22f71f56c7d4"
        },
        "item": {
          "id": "56311ee1-4ab1-42c4-8474-e94bcbb23c35",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3d453670-3bda-4381-9636-e0777d7ac6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35712c62-7973-4672-9d15-7deac3a06cd0",
        "cursor": {
          "ref": "83eb2a59-5f6d-4269-a27b-93a6bc2751df",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7d30b81b-9523-478d-ba65-fa48ddbee4cd"
        },
        "item": {
          "id": "35712c62-7973-4672-9d15-7deac3a06cd0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "700b354e-ea24-4662-a3cd-12b6898c3844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76bfb2e-6030-4885-8d78-88ee6f8d64bd",
        "cursor": {
          "ref": "738d8e2b-94f5-4c01-b513-697d6b057459",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "078f97b9-8714-43ee-9dbf-a1b16963417e"
        },
        "item": {
          "id": "a76bfb2e-6030-4885-8d78-88ee6f8d64bd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b9d35a38-b610-4718-a866-35dba1abfbd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2224754-c0d1-4d7f-ac84-2a439da4feb7",
        "cursor": {
          "ref": "c274dceb-d3f9-4424-a87f-9798af30ea9f",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5888ecbc-85e7-4baf-ac7f-0f3bfb192023"
        },
        "item": {
          "id": "e2224754-c0d1-4d7f-ac84-2a439da4feb7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "98bec920-b5f0-4c44-a63c-8858c35d860c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68d8e66-dfce-4e43-be28-8ab011765983",
        "cursor": {
          "ref": "26984b82-7cbe-4294-9cfc-3e0d554a4c57",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f6f87fb1-a351-4d7d-a419-1e82f8298ab5"
        },
        "item": {
          "id": "b68d8e66-dfce-4e43-be28-8ab011765983",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7c32335e-e7f5-4f0a-9686-52ee930426ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11053c2-7a90-4a7e-a1c2-abd4b83dcfdf",
        "cursor": {
          "ref": "7a38afda-6cec-43d8-915c-427a2e1ed0b0",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c77c0b91-e387-4a52-98fb-0d8f29049d16"
        },
        "item": {
          "id": "b11053c2-7a90-4a7e-a1c2-abd4b83dcfdf",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b1b785c0-a08b-4be4-9b92-41ffbf95b1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5580c88d-8246-4ab3-ad45-96e09e94d6ee",
        "cursor": {
          "ref": "2d359200-d0d9-4db7-829a-02ddb0846ba1",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2813f070-2345-42fa-b583-891f22ab781e"
        },
        "item": {
          "id": "5580c88d-8246-4ab3-ad45-96e09e94d6ee",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "42a8c622-7319-4479-9a61-428027ebd205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a76a9d9-d98b-4b97-84ef-60aa4d0984e5",
        "cursor": {
          "ref": "af66bae2-27e6-4666-a8c8-c570f19a14a5",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2ffa6d2c-485e-41a6-8e93-ba7343ecca6b"
        },
        "item": {
          "id": "3a76a9d9-d98b-4b97-84ef-60aa4d0984e5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2879be0a-022e-4a28-8444-5afd9b90b73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271ee447-a6a0-422c-847a-bede1f359854",
        "cursor": {
          "ref": "3eb68fbb-f74e-4c5a-9c49-4e9685445bb9",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "348c36b6-3a6d-4a6d-8736-f4a1895e8d3b"
        },
        "item": {
          "id": "271ee447-a6a0-422c-847a-bede1f359854",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5d6fbc36-bbcd-43b8-976e-76d41c1d3346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef0d444-cd79-49ac-85e8-d34728f621af",
        "cursor": {
          "ref": "ec7e81f5-0719-4ce8-a7bd-c52c7239dc5a",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a97b7a4a-949f-4b05-b290-9bb06d780377"
        },
        "item": {
          "id": "bef0d444-cd79-49ac-85e8-d34728f621af",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "93faea8b-b620-4c20-9c37-84e97ebeae44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adab4b4-900f-4868-a68f-0fbf2344311c",
        "cursor": {
          "ref": "b56b3bb4-c63e-43c8-abb2-35b065c16d91",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "823e6ac0-a9ae-4cf9-810d-a4c4705c4451"
        },
        "item": {
          "id": "2adab4b4-900f-4868-a68f-0fbf2344311c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "644a0680-34b0-4ec2-9018-ac308259c7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3b9791-52df-4a96-b811-5c5bb46be422",
        "cursor": {
          "ref": "db893d84-16e9-4783-9d9e-087c4d6ef4d6",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6f86c51a-5e7d-4c77-bdb7-a8f81873f31d"
        },
        "item": {
          "id": "2c3b9791-52df-4a96-b811-5c5bb46be422",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "06281b64-3955-4208-acd2-954a60058578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db31cf5a-49f8-43dd-8168-554e40c3e475",
        "cursor": {
          "ref": "d9e56296-5776-4c9a-8e23-a1af026f9918",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "db5d3db2-78dc-43e3-a6fb-d89000f8c004"
        },
        "item": {
          "id": "db31cf5a-49f8-43dd-8168-554e40c3e475",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bf2ceef5-4817-4494-bdaf-3f8a4b3bb53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd7ada3-64bf-4523-a6e8-313348f74611",
        "cursor": {
          "ref": "944f6382-7250-45e3-8ad0-bff93c69a25f",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b87344ad-5825-462d-bd7a-acadcca385fc"
        },
        "item": {
          "id": "9fd7ada3-64bf-4523-a6e8-313348f74611",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4dbb7dd9-647f-4bc8-b21c-44a2e60c5a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214f83ce-f1c2-4275-bd0d-1520591e855b",
        "cursor": {
          "ref": "82993ef5-b4e6-48f5-a131-f35c64b1482d",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5ed15751-c4ea-4f46-83f3-d6d0d50b41f1"
        },
        "item": {
          "id": "214f83ce-f1c2-4275-bd0d-1520591e855b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e9990446-0845-4f41-9dcc-547115d43237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddf0f13-fade-485d-9df2-eb842fb5b151",
        "cursor": {
          "ref": "db1198c0-298b-4240-8ddd-dafc3c15addf",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f89511c1-6bbd-4c2c-b014-207b76538cd7"
        },
        "item": {
          "id": "6ddf0f13-fade-485d-9df2-eb842fb5b151",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4eb77c99-0902-41a2-9d9b-5f581408fc2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa9d0e9-c4c9-40c2-8d22-590d73702dda",
        "cursor": {
          "ref": "4478964d-bb44-4f13-abc6-5b0a3bf4cb69",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "77b81655-dbdf-4157-94da-20c4119c837c"
        },
        "item": {
          "id": "7aa9d0e9-c4c9-40c2-8d22-590d73702dda",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "30b6813a-075f-4cb3-9b3a-b07c59553041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e795d5f-6578-4e09-a772-8e68bdef9c6a",
        "cursor": {
          "ref": "23979281-5d95-446d-8898-b53dabce324d",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8410fee3-8d63-41d5-a3e4-1b586748a836"
        },
        "item": {
          "id": "0e795d5f-6578-4e09-a772-8e68bdef9c6a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c8ffd263-9f01-48b0-80b9-af26f021d46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7408a6a-8d38-44c1-b263-8130f334169a",
        "cursor": {
          "ref": "b41e400f-8fd0-4339-88da-51d5c2d314ae",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a257944a-aa86-4700-935b-435cef62ae2f"
        },
        "item": {
          "id": "c7408a6a-8d38-44c1-b263-8130f334169a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "271f266e-e0d8-4505-bd69-d25aa38c2849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fc9bf7-719c-4e10-b204-cbbde92c68ff",
        "cursor": {
          "ref": "a78480e3-618b-42c0-a352-890faf7d1bef",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1070de1c-17f3-41d4-9914-0827d7ee05a4"
        },
        "item": {
          "id": "29fc9bf7-719c-4e10-b204-cbbde92c68ff",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "662c9d57-3a39-4227-b4de-6df968a95e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d62acc9-c444-4d77-9264-bdf8ee5987ab",
        "cursor": {
          "ref": "073f55c6-ae61-482c-a27f-18e95679baf3",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f415e4ca-8744-4c3d-ba8f-4f8277d8ee3b"
        },
        "item": {
          "id": "9d62acc9-c444-4d77-9264-bdf8ee5987ab",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c1f292ca-1ee8-46c8-b3cf-49a8b19f55bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0aa945-722b-49fd-b64a-e283a603c666",
        "cursor": {
          "ref": "960d62d4-d0b8-40f2-8ce6-ab33c8ba60cb",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1bca1351-1bcf-4d07-ad24-2c46d0b3139d"
        },
        "item": {
          "id": "9c0aa945-722b-49fd-b64a-e283a603c666",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "72f6d55f-b33e-4aa0-991d-aac817156332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9b31e2-949e-41af-a58d-c80a52a8f4e9",
        "cursor": {
          "ref": "5886fc5e-e127-41ea-9928-20beff10a91b",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e855cd53-ceed-4f01-81da-780bd024a5f0"
        },
        "item": {
          "id": "3b9b31e2-949e-41af-a58d-c80a52a8f4e9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f8d81dae-d9ee-40ac-935b-d73a09a2270c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ccfa96-0a11-43e2-9003-68817f386fdb",
        "cursor": {
          "ref": "40c3af1a-d223-4cbe-8984-5d5a8ee3d3f6",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "93482b4c-b64c-4143-90ce-15ae5134f803"
        },
        "item": {
          "id": "e2ccfa96-0a11-43e2-9003-68817f386fdb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d48a54ab-c77e-4c48-9107-4223d771816f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b193c70c-6a9d-40e1-a7f6-569e2dc3dd67",
        "cursor": {
          "ref": "cb7f72d1-292e-47ae-9f76-a3f637230317",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d8a7b1e9-c45f-4a5a-a89a-dbdbaa699724"
        },
        "item": {
          "id": "b193c70c-6a9d-40e1-a7f6-569e2dc3dd67",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5a5d58ff-2d3f-49c0-b0cb-59f01f9b993c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272c8b59-8ce5-4bf8-9230-f81deeaa6bb4",
        "cursor": {
          "ref": "62378fdf-bdeb-417b-bc02-85de58c4ac28",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8ddc9a4d-060e-4b04-8ae5-57ccb0f4d354"
        },
        "item": {
          "id": "272c8b59-8ce5-4bf8-9230-f81deeaa6bb4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "eee7f066-ff6c-4a30-b5ea-23c79a5c89e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea48c92-93c9-43e6-8d3d-d740a3656828",
        "cursor": {
          "ref": "687bf8d7-846a-4bd3-9093-ec8dec2075a0",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "274d00f4-7775-4e38-928a-2552a77f0a43"
        },
        "item": {
          "id": "eea48c92-93c9-43e6-8d3d-d740a3656828",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "51c1d8fb-1d3d-4b4d-977f-a32299c62eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf8e94f-dd1a-49cf-9643-0fe199362a8c",
        "cursor": {
          "ref": "65523e8c-29ce-4a21-9d84-ae1fb2ea708f",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "824b3d21-dc46-4510-9f8f-7910ed55d82d"
        },
        "item": {
          "id": "eaf8e94f-dd1a-49cf-9643-0fe199362a8c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "843de3f1-a993-47fb-a240-0e8928bd1d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef70901-0394-45b1-8734-384d2fba046a",
        "cursor": {
          "ref": "a02199d8-f1f4-4254-8f52-a8defc420421",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8b68ed74-6d6c-4035-8a22-30efe322f686"
        },
        "item": {
          "id": "4ef70901-0394-45b1-8734-384d2fba046a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3cbaf8be-d3d3-441f-a71e-f5236474b482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66f3a4a-b769-4437-baf6-8e288516a60d",
        "cursor": {
          "ref": "420dbeee-37ff-4237-9183-5c5d4484f4b7",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8e7ae70c-92c8-41de-952d-82b33557a748"
        },
        "item": {
          "id": "e66f3a4a-b769-4437-baf6-8e288516a60d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "eaca7e9c-e67b-4e14-860c-8014ee098d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f495946-37d2-4f5d-ad33-7201b5868641",
        "cursor": {
          "ref": "0b8fca80-c557-4115-a71c-125293873147",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a11cc2c4-f9f0-418a-9944-be4b982c582a"
        },
        "item": {
          "id": "6f495946-37d2-4f5d-ad33-7201b5868641",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4b457c28-50fc-40e7-8ec3-de3ed2eaf0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874d926e-9025-4752-954f-a306657132f9",
        "cursor": {
          "ref": "8c464b8d-559c-4852-9cb0-c17051a29489",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5a8a6ecb-731c-4330-b31a-9cd7bb5570ee"
        },
        "item": {
          "id": "874d926e-9025-4752-954f-a306657132f9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c95e0921-ae94-4b75-8202-5bd156bba508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcacaaeb-5839-4187-bf21-71dce71d1fd9",
        "cursor": {
          "ref": "ec674a89-9c71-4ba8-a35d-9653069497dd",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4ead250c-bd4e-47bf-928f-2b13af1ca5e3"
        },
        "item": {
          "id": "fcacaaeb-5839-4187-bf21-71dce71d1fd9",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "32c66b8c-8f86-429c-8254-633eff631e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7491b900-ec74-42df-968d-b79129a77bf4",
        "cursor": {
          "ref": "4abc0329-c844-43b5-84b1-d13c57b0df93",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "924d4665-3b05-4bf2-89d2-ffa353d93924"
        },
        "item": {
          "id": "7491b900-ec74-42df-968d-b79129a77bf4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6f31d8f3-f2be-43a7-9485-6e33ca8ab87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72407e7e-a383-47bf-90ba-4eeccbe68ad3",
        "cursor": {
          "ref": "ca84c0be-44b5-4c11-9093-40c4ac54f0da",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2c24efb4-e8f4-4e14-a746-0a7d1c355454"
        },
        "item": {
          "id": "72407e7e-a383-47bf-90ba-4eeccbe68ad3",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "752db6ba-2d05-452d-8041-b1adf4ae32a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a44057-5180-45f5-ab8f-9115b9559522",
        "cursor": {
          "ref": "34c82326-2976-4421-a341-9f25d5a20ea6",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "19c5645e-1c3e-4878-91ae-5c709731cc99"
        },
        "item": {
          "id": "08a44057-5180-45f5-ab8f-9115b9559522",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "493d4339-0c61-439b-b28b-05f03e3f86df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0959e3-8449-4c95-9b65-f78034401cb8",
        "cursor": {
          "ref": "3a44d710-16df-404a-ba74-c8fa8d0a0041",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ad6e1c1d-6af3-48a8-8792-044b6cd388a8"
        },
        "item": {
          "id": "af0959e3-8449-4c95-9b65-f78034401cb8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8e9fbdc2-e399-478e-a5ff-e24f3427e343",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17aacab8-1cf7-4f49-8680-871f4d75f388",
        "cursor": {
          "ref": "e62ad2ae-af23-4651-b6fd-9c7ddcfd3e49",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "04fdebfd-a0dc-4f53-ae1e-074ee698fb4d"
        },
        "item": {
          "id": "17aacab8-1cf7-4f49-8680-871f4d75f388",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bb2c5bc8-b01c-4af9-9585-243088e21eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406275cf-f69d-4c90-98d7-d12ea8822fb0",
        "cursor": {
          "ref": "56d8ee64-6eeb-4d0a-9621-3c12063b902d",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f708def0-df4e-4210-8f2e-05e3ed191c6e"
        },
        "item": {
          "id": "406275cf-f69d-4c90-98d7-d12ea8822fb0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ad87fd67-f09f-492a-a7ef-6a53083a7359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e343fb-076c-4696-b557-6b8a69f1da8d",
        "cursor": {
          "ref": "96278946-b797-4f63-a73b-7bc3e5a24ecb",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e8b05e06-825c-4ea2-a553-6d5f128133f5"
        },
        "item": {
          "id": "a8e343fb-076c-4696-b557-6b8a69f1da8d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cfedcb2f-d116-434d-8e50-ada7851d0aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d143af1-dbd4-40bf-b06e-9af3d018e54f",
        "cursor": {
          "ref": "97f94a6f-b23d-4653-8767-4508842819c8",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6eca8c4d-665f-49e2-943c-cdae33251a17"
        },
        "item": {
          "id": "6d143af1-dbd4-40bf-b06e-9af3d018e54f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e98cffd0-d63a-4b80-ba71-051ba02deee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8a62bb-9899-40ef-b4bb-5149728efbdb",
        "cursor": {
          "ref": "96fb417e-f059-43d4-895f-36a6b9345870",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a400d784-8079-41fa-aac8-c035c8b5478c"
        },
        "item": {
          "id": "cf8a62bb-9899-40ef-b4bb-5149728efbdb",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b82ea489-19f5-4168-9d69-b01e80d3629d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2c760c-bf78-486a-a415-18705c830e20",
        "cursor": {
          "ref": "7034067e-7c0f-4a73-a852-a1500473144d",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "cdf5d9c8-0c06-45b9-b0d2-ca35d86fc662"
        },
        "item": {
          "id": "ce2c760c-bf78-486a-a415-18705c830e20",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "372bc0a0-3e2a-4cb2-906b-38cd64f51ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febd78dd-da2a-4ad0-97a5-c05b9eb623e1",
        "cursor": {
          "ref": "66670794-5e15-4ec5-8098-82d9224e2985",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a90663a6-5695-4e16-8116-babfd1ab0fc9"
        },
        "item": {
          "id": "febd78dd-da2a-4ad0-97a5-c05b9eb623e1",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5ef79a8d-79d3-4a0f-bf4e-fb73093b8141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90450cb-e3c5-468b-8e76-8f3efa07efb2",
        "cursor": {
          "ref": "90eb8517-1025-45a2-8a54-077e41e72215",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "95afd7bd-9f19-4c1a-ba75-7027f70c9da9"
        },
        "item": {
          "id": "e90450cb-e3c5-468b-8e76-8f3efa07efb2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b58ccb4b-fb27-4a74-9fcb-d6ae54deca0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe104c6-5ad5-4fde-adf9-aa503f8eefb7",
        "cursor": {
          "ref": "e77b6650-f0e9-4acb-84bb-91ec6020f452",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "16d00027-e8c3-4ec8-a6e8-e2b21b17e7b2"
        },
        "item": {
          "id": "0fe104c6-5ad5-4fde-adf9-aa503f8eefb7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "86f5d3b1-97a8-4f2a-a1d2-c8584015a528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c042117f-f8b8-4a2b-b27d-6fa9a6d4508e",
        "cursor": {
          "ref": "d5d8580b-d79d-420f-a72f-a118068e361a",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b16c7e69-151e-4695-a157-68f249683eda"
        },
        "item": {
          "id": "c042117f-f8b8-4a2b-b27d-6fa9a6d4508e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0f0dcff4-2e41-480a-b06a-1da02ed65366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e902a7e2-0637-43fa-bc16-de7a79be3230",
        "cursor": {
          "ref": "93b3132d-4525-4115-bded-9882a7a5bca7",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "26aabbad-d230-409c-9517-f4f1b3172dd4"
        },
        "item": {
          "id": "e902a7e2-0637-43fa-bc16-de7a79be3230",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4138ebfa-7b6f-4970-8623-96960d60aeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e21329-b3ff-499c-bf2a-35baefbb3577",
        "cursor": {
          "ref": "fdc19246-9910-4811-8ea4-161c5b77b00b",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "387b28cf-98d4-4acb-9ccf-146dcc8ff91b"
        },
        "item": {
          "id": "24e21329-b3ff-499c-bf2a-35baefbb3577",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ed20bfbf-8747-4094-bb2a-9b73ce72f4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cde8d04-8ca9-464d-8582-3234435d85da",
        "cursor": {
          "ref": "968cf781-21bf-4c45-a8b5-e503b08ff34f",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3c229a83-07cc-420e-9db8-9905f2b6dc12"
        },
        "item": {
          "id": "2cde8d04-8ca9-464d-8582-3234435d85da",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "67af8e92-bf97-4d71-ab87-55c6bc163546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b30293b-ca42-4bed-afd4-6133000cd176",
        "cursor": {
          "ref": "140d35d3-c619-4dac-86c3-46a2a70abe01",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3801484a-2719-418e-bb3d-23414067e2d6"
        },
        "item": {
          "id": "5b30293b-ca42-4bed-afd4-6133000cd176",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8ab43708-5276-4f25-a071-b01043ea7241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad00ff5-5f9c-43ea-84ba-20528aa4966f",
        "cursor": {
          "ref": "82bad70c-1d9f-4283-acfd-15c015f645e8",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a78f9c09-dd3f-4af7-b1a5-879a0271d817"
        },
        "item": {
          "id": "0ad00ff5-5f9c-43ea-84ba-20528aa4966f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bf6aa81f-fc1c-4ad0-b01d-18f04c33249a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05347fb-085c-4487-86ed-e72e6503e50c",
        "cursor": {
          "ref": "53e4068c-6953-4a59-9ec0-59fb6a6dec93",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ea67d931-73f1-4edd-8a96-64dc27f63dcc"
        },
        "item": {
          "id": "f05347fb-085c-4487-86ed-e72e6503e50c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9fb83bdf-db48-4867-b98e-d028ea90d13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc76fe2f-6e7a-414b-b274-5d2846d93c8a",
        "cursor": {
          "ref": "37796018-49c2-4bee-bade-a186987b2ba7",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b46d65cc-eb65-4afc-bb97-d6fe5e2b803e"
        },
        "item": {
          "id": "cc76fe2f-6e7a-414b-b274-5d2846d93c8a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d65ee7bf-3bdf-4b10-96a9-93b89d06ce4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265fd04a-4e73-416c-8417-3e88a3f43f9f",
        "cursor": {
          "ref": "8e586e12-154d-4f83-9be9-d2318ed6169a",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "fd39f639-d660-47e7-b437-91d32e08e3cc"
        },
        "item": {
          "id": "265fd04a-4e73-416c-8417-3e88a3f43f9f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "dbf4600a-c540-440d-8df7-c1e5d90960c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d3862b-8dba-486d-bbba-067da3ad75b4",
        "cursor": {
          "ref": "694f878b-10ff-4042-93fa-6407df15b5d2",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b460f813-4f44-480c-9898-828e742e380b"
        },
        "item": {
          "id": "f9d3862b-8dba-486d-bbba-067da3ad75b4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d1a2dcd1-491d-4823-b00d-676a74397ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e053983-0a53-4aac-8be5-0d2d7e2b517f",
        "cursor": {
          "ref": "d21641a4-be25-4493-9646-cf8ea5b279cd",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "636c7f45-314f-47b0-84cd-bc369d1efee2"
        },
        "item": {
          "id": "6e053983-0a53-4aac-8be5-0d2d7e2b517f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "380d954a-2213-4187-aede-dbc68999a0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1d56ff-0d6b-49ce-a125-5611f28d7327",
        "cursor": {
          "ref": "ad110f0d-f6b5-46c9-a812-b27549ed5b03",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "015362e4-8b71-490d-93aa-73d29f76edd2"
        },
        "item": {
          "id": "4e1d56ff-0d6b-49ce-a125-5611f28d7327",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5fa34779-306c-48eb-99a9-e9944ca6e094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317941b1-67a7-463d-9d15-51e32c04a6d4",
        "cursor": {
          "ref": "03c5d6dd-a574-489b-8c48-0a6c8410453a",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6005b1e1-6a8d-4a9a-a1df-1ca947a6eaa5"
        },
        "item": {
          "id": "317941b1-67a7-463d-9d15-51e32c04a6d4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "86cb0c9f-0f09-4ea4-8fae-865bd4fa1dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477a8504-3741-4708-909d-83a0da3a110c",
        "cursor": {
          "ref": "8e2fba4e-383b-46bd-b65c-8af8dcb4af0a",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a1961014-e9ec-479e-aedd-b94a394f661d"
        },
        "item": {
          "id": "477a8504-3741-4708-909d-83a0da3a110c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ab3964c7-70c2-4368-b94d-58da9402f63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa5acde-2de9-4e1d-a585-5c53706dcc2f",
        "cursor": {
          "ref": "b837d7b5-1130-42e1-bfc9-2751c86ca1fc",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "59fb926d-3b25-4aef-8ec3-696041268f90"
        },
        "item": {
          "id": "2aa5acde-2de9-4e1d-a585-5c53706dcc2f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c754fd6a-0d78-4c58-955a-bba363c8deab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6e1582-94d2-40aa-88b7-ebd04beb2dff",
        "cursor": {
          "ref": "b05638d5-0aeb-40cd-90d5-1007c57c0510",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5d3e0aa1-158e-41a2-8076-b6248f211f0e"
        },
        "item": {
          "id": "ea6e1582-94d2-40aa-88b7-ebd04beb2dff",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d31c3f7d-d4b6-4b04-85bb-2194302d52fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563065a8-5fec-49cb-a45f-83af9cf15cb9",
        "cursor": {
          "ref": "81833136-f9e1-4b16-b2d1-bb3299633e04",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ce390d8c-1614-4428-92a1-a43b2857acc4"
        },
        "item": {
          "id": "563065a8-5fec-49cb-a45f-83af9cf15cb9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "77bdf3ce-f383-473b-b64c-2266da78fb6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d015753-99c6-4728-b704-d1cffee489dc",
        "cursor": {
          "ref": "00afa6ef-6c90-4eec-9f74-1f5b1c1b470f",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "44319b2b-0a6a-4041-86c0-d1b4ef26624f"
        },
        "item": {
          "id": "3d015753-99c6-4728-b704-d1cffee489dc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e65f0791-1af5-4273-8e3b-3417e5962b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d8075b-502f-4838-8628-c8d410041e63",
        "cursor": {
          "ref": "903504db-85ba-4185-a76b-030d3c1fbc74",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "30feb669-945f-4646-9767-e08da007b766"
        },
        "item": {
          "id": "46d8075b-502f-4838-8628-c8d410041e63",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "696244f1-99d1-4c3d-a477-5bb974d4b2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff4de3f-8e58-41e8-9fa4-0b8b4ff3ec2d",
        "cursor": {
          "ref": "7ce262ca-4fd7-4f11-983f-f47947d93055",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0b999d3a-9489-489d-8fc7-b0e0e940b594"
        },
        "item": {
          "id": "fff4de3f-8e58-41e8-9fa4-0b8b4ff3ec2d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ce932451-0771-4bf8-a022-ae7703300cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aace1a7e-46ed-48d2-96df-dd36249f9eed",
        "cursor": {
          "ref": "b84c74cc-5b36-4795-9240-8b84e5ecdd74",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8fa830a2-c646-4b3d-8425-03ba3ad1bf4c"
        },
        "item": {
          "id": "aace1a7e-46ed-48d2-96df-dd36249f9eed",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2bf76834-f7ce-4a5f-81fb-44abca2f628d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf2de88-09af-4d42-94e6-fd4246965470",
        "cursor": {
          "ref": "00376a11-bf76-4bca-8c18-fe69372169bd",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "660a8621-72d5-43d9-a139-3fa522cd67b5"
        },
        "item": {
          "id": "caf2de88-09af-4d42-94e6-fd4246965470",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "46ee017a-5e05-40a6-ac43-e9a3f0c60dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3386fa4-1681-4b83-a30a-cde2bf6dd1e1",
        "cursor": {
          "ref": "dd571d2e-9b28-445d-9868-8f951625cccb",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8c4208c5-21a7-4680-b032-6dbd62563e63"
        },
        "item": {
          "id": "d3386fa4-1681-4b83-a30a-cde2bf6dd1e1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ac79b8ff-1d45-49d8-b8d0-8ce6eb42e27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e76e830-6138-45c3-9357-5817ada043f9",
        "cursor": {
          "ref": "d61fb100-b18c-4aa7-80cb-7262961783dc",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2ae4ce39-875e-484e-b4a0-1f4877fd30ec"
        },
        "item": {
          "id": "1e76e830-6138-45c3-9357-5817ada043f9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f143215c-914f-44e0-bc8a-9987295bf5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990ed0f0-ea3a-45fd-abc4-cc80c271c624",
        "cursor": {
          "ref": "68b52543-ed39-4d3f-872f-f3dbd8bd0345",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "57c08578-60c7-4d44-9ae9-c4ae074a12e6"
        },
        "item": {
          "id": "990ed0f0-ea3a-45fd-abc4-cc80c271c624",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3cc7322e-65b5-4553-8c17-3dbcac9d5a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526aefc5-c990-4cfa-9470-8ee73c64dc81",
        "cursor": {
          "ref": "f38bc3f0-e96f-402a-9ce7-5ff6550cdefc",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e86abca8-36af-4932-aacf-d9a452e34c53"
        },
        "item": {
          "id": "526aefc5-c990-4cfa-9470-8ee73c64dc81",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "df5dc6a8-73c0-469c-8dca-241a6f5c3d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a327a55-0fd6-4a7c-a5e6-65cdcdb111bb",
        "cursor": {
          "ref": "e2e07ec4-7804-4d7b-9ec8-59cb4756de45",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "bf603f77-8f5f-44ce-9012-b6c8102949b7"
        },
        "item": {
          "id": "6a327a55-0fd6-4a7c-a5e6-65cdcdb111bb",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7904c7ba-0975-4c28-afcf-d2adaf5eeb46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08179e1d-c2bd-4e52-a36c-d992c29a4982",
        "cursor": {
          "ref": "2bb40254-cb0a-4e99-b9f6-cce3a9e16472",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3d739a04-176f-4520-997d-b5df25268b87"
        },
        "item": {
          "id": "08179e1d-c2bd-4e52-a36c-d992c29a4982",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2319def4-9b54-4cd5-aced-30e5d1b785be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3608a910-dcfa-4c21-911c-488f2703dcc3",
        "cursor": {
          "ref": "96a89d6d-ee69-4058-9473-38e147edbe2b",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1bdf91ee-86c3-4a9e-a332-742cb46eb11f"
        },
        "item": {
          "id": "3608a910-dcfa-4c21-911c-488f2703dcc3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "839dd14b-b514-4a5e-8a51-cca5fa60a6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf8a8ae-edaa-4595-92a0-7ead96fced54",
        "cursor": {
          "ref": "4c9b2544-402e-4b1c-ab1d-970ab57460c6",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f9139b0b-9d50-49d2-8971-4d32c42ccf32"
        },
        "item": {
          "id": "dcf8a8ae-edaa-4595-92a0-7ead96fced54",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0d495677-d2f3-4fd4-849b-b8a17920b558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4fa6b8c-3148-4436-92b5-aa9c369860d0",
        "cursor": {
          "ref": "3d2727d5-a29a-4a29-a1a3-51e81c3a4f2b",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2a6059ce-3000-43b8-a010-3b7b1d7bd30c"
        },
        "item": {
          "id": "e4fa6b8c-3148-4436-92b5-aa9c369860d0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "863a2e00-6084-4d01-9419-3b3f0180b6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9eac2e-01fe-459d-a5cd-225b1d810078",
        "cursor": {
          "ref": "b89fa89b-db62-4808-a55b-315dbae486cd",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "22015734-5ac5-4104-a683-f03e58a89a51"
        },
        "item": {
          "id": "4c9eac2e-01fe-459d-a5cd-225b1d810078",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "32847cdb-70ab-4ee1-81d6-11d4bad18856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ba4df4-c490-4407-957e-c7bda8cd9d9b",
        "cursor": {
          "ref": "037371d7-1179-4f34-af0e-efbe65a2ae88",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5971fba9-da25-4855-b376-7083063953d6"
        },
        "item": {
          "id": "f7ba4df4-c490-4407-957e-c7bda8cd9d9b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "203aa988-adbe-4ab4-a171-553136793f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9dd5520-1402-4032-a1d5-b70edc8467f9",
        "cursor": {
          "ref": "23be7fda-543d-4040-9506-a2c124da5941",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "54612610-872f-49b6-bf3d-ee8f5145f1a1"
        },
        "item": {
          "id": "e9dd5520-1402-4032-a1d5-b70edc8467f9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0ff3bf96-5d62-4571-9dcb-b1c13bd4720a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ed19e4-d3cf-4192-90fc-ff4fcb57035b",
        "cursor": {
          "ref": "c2a68966-2933-4f33-bbad-8befacd03c8e",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0490a71c-81c8-41e5-9ddd-dced0e3894fc"
        },
        "item": {
          "id": "75ed19e4-d3cf-4192-90fc-ff4fcb57035b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f3e4135b-3eeb-491c-b39a-3f9f70ad1761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce864b6-f701-4bec-aa70-5b1f06279586",
        "cursor": {
          "ref": "9fcc62ca-8338-43ff-81d8-e8b319d4ac17",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d92c2e6c-c95b-42a0-b10d-424a70823067"
        },
        "item": {
          "id": "fce864b6-f701-4bec-aa70-5b1f06279586",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9af230f1-4386-4263-b8ae-3ac66e045020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9906983c-c61b-4017-90bf-5103434f8eab",
        "cursor": {
          "ref": "f681b7e6-68b0-443b-a560-ec68a1a3fffc",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "dfa9286e-5469-4f13-9dc8-cb3a3631abbc"
        },
        "item": {
          "id": "9906983c-c61b-4017-90bf-5103434f8eab",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "93748bc6-e3bb-4d86-9223-2711a4cad8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340e5e23-f3b0-4e51-a430-d83be8da4b20",
        "cursor": {
          "ref": "2bea7c2c-1dae-494f-9411-f730de041d50",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2b9192ec-f1b6-442d-9445-d865abf9fed6"
        },
        "item": {
          "id": "340e5e23-f3b0-4e51-a430-d83be8da4b20",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3430a4c3-9230-40be-99de-806e45678370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1278c87d-74a7-434c-998b-5a0e3b1a9e43",
        "cursor": {
          "ref": "4630e98b-91a4-44a0-afd7-b4e7ac36347f",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5af3cd56-c01d-4a07-be0b-ea409dca85cc"
        },
        "item": {
          "id": "1278c87d-74a7-434c-998b-5a0e3b1a9e43",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "838dabf9-2291-4f69-b179-bd48005e1b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c8eb15-eecc-451e-9565-85a94395d396",
        "cursor": {
          "ref": "c92760ba-56e9-40c7-91e4-96f5fd10f88d",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6111afa4-a980-406b-81a3-3cb8a6040cae"
        },
        "item": {
          "id": "18c8eb15-eecc-451e-9565-85a94395d396",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7773c742-3138-42e9-af60-ddda3d484c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf93aefb-27e2-4cfd-989a-0254923d5e5f",
        "cursor": {
          "ref": "020fe0e4-5061-477e-a7f3-5320b7086b6b",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7723b394-9697-41d4-a1ee-d1ef761677d4"
        },
        "item": {
          "id": "cf93aefb-27e2-4cfd-989a-0254923d5e5f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "35f22511-0f75-45f6-a1a8-4f37338e3583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3672d5c-c26a-4a0e-bd8c-cb828768da81",
        "cursor": {
          "ref": "17b2d9ba-5478-49b8-b44e-5e907638fb5c",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9a2d1f20-cd0b-4e00-9726-0a0e0bc48980"
        },
        "item": {
          "id": "c3672d5c-c26a-4a0e-bd8c-cb828768da81",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ddf8afa9-1419-40f5-ab50-d4d8160b9a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3eea4a4-bc7b-4ed9-9c3d-c3019784f24e",
        "cursor": {
          "ref": "9aae3764-8692-4b08-81ce-156e74e59dbc",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a7980c50-9479-4ae3-8b67-1c7734bc2188"
        },
        "item": {
          "id": "f3eea4a4-bc7b-4ed9-9c3d-c3019784f24e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c6d1dcfd-712e-467c-b4d5-024b5bb1fe79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b489e007-646e-4cd7-bd60-161c47b67dc4",
        "cursor": {
          "ref": "40461dd1-eec8-4631-8b61-ada3847c73d1",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c7ec0169-e07d-438e-a662-d99643205a79"
        },
        "item": {
          "id": "b489e007-646e-4cd7-bd60-161c47b67dc4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "80c7e8bc-8b7d-455a-8ce4-03cabd5c7f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5347c3f6-cd15-4457-8fad-41ed169cb3cc",
        "cursor": {
          "ref": "4cf2b846-8e9c-448f-8371-dd48e3f1f04f",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5cd4fbe3-6d99-43e8-b419-d140ab645f35"
        },
        "item": {
          "id": "5347c3f6-cd15-4457-8fad-41ed169cb3cc",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3d064e65-125f-4091-ab04-2565f99c268d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9195525a-6ce0-4da5-a843-d9bf58882b35",
        "cursor": {
          "ref": "c4a015dc-a943-49ba-a589-a79c02953fa1",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2cd3840a-14bb-4298-bac6-f3b2abaf7d08"
        },
        "item": {
          "id": "9195525a-6ce0-4da5-a843-d9bf58882b35",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d63b191a-d20a-43e3-b6e1-daec0bf7e8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec342332-bda8-4560-a8e6-c40e58f60870",
        "cursor": {
          "ref": "1e2d41b9-9ade-46cb-ae7c-23f1f3829e95",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0cfdef25-0d7b-48f3-9fff-498bc56cce9a"
        },
        "item": {
          "id": "ec342332-bda8-4560-a8e6-c40e58f60870",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "00b6fc16-c9e2-49be-8f34-7ddb6e212eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e68866-35a2-4982-84c7-33556b925644",
        "cursor": {
          "ref": "4aa21064-ced8-4731-b610-fa80554062a1",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2b69063a-749e-4b23-8c3a-bf76ae9d87ec"
        },
        "item": {
          "id": "a4e68866-35a2-4982-84c7-33556b925644",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "340df81f-e4dc-433a-a891-3177303a51ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f9d9cb-e506-45b5-8f81-84d9ea2dcf20",
        "cursor": {
          "ref": "d47f32bc-1a50-4435-8d47-93cfd236e5d9",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c747e40e-f425-4c64-883e-ef3588e15a51"
        },
        "item": {
          "id": "07f9d9cb-e506-45b5-8f81-84d9ea2dcf20",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "28bfed05-5973-4b60-ad98-83873f0c7afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b522bc-f315-4729-9095-fc5e14ab0869",
        "cursor": {
          "ref": "0b968f1a-2061-42e2-a951-01bfc27c8947",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c3b2ce21-25ca-49b5-a8eb-a7366ac530a2"
        },
        "item": {
          "id": "c7b522bc-f315-4729-9095-fc5e14ab0869",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "955614e4-e54d-43e2-bae0-ab87e39721bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63faf568-2315-4a51-ac1e-33f65bf756cc",
        "cursor": {
          "ref": "40c0c3f3-9fe0-4ee9-8966-2cac4bb33c5a",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9a401a94-b524-4892-86ba-5b2e66bf79fc"
        },
        "item": {
          "id": "63faf568-2315-4a51-ac1e-33f65bf756cc",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4c458068-e610-447e-a4e3-f695d2700f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ab26e7-f5a4-4109-90fe-56438d259f1c",
        "cursor": {
          "ref": "44a030b0-4ea9-428e-aa17-ac3ddfa59bf2",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9f6545a7-8aaa-4a22-8335-904697e4fc8b"
        },
        "item": {
          "id": "e2ab26e7-f5a4-4109-90fe-56438d259f1c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "12d2f84f-2a76-4a1d-bc14-d40f5457abf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e065d14-9ade-44cc-9502-add5dffc675e",
        "cursor": {
          "ref": "8150a593-f133-4d1d-b594-2045e53ea938",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c56a0ddc-8f48-4e54-952e-996287aca3ce"
        },
        "item": {
          "id": "1e065d14-9ade-44cc-9502-add5dffc675e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3f7a0592-da00-42bd-8ed1-156a54927493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14452aa2-9f74-4b7a-9d31-e7ebf6fdb40c",
        "cursor": {
          "ref": "c07c085a-ea13-4b76-9411-529d221be328",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f320cb9a-5f53-4c6a-a405-4a07b683001e"
        },
        "item": {
          "id": "14452aa2-9f74-4b7a-9d31-e7ebf6fdb40c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "06482701-d8e8-4b52-b388-b77c7da02272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c598c496-c3cf-4df2-a5ae-3d8c8242fc7c",
        "cursor": {
          "ref": "41ba2f96-48f8-4d2f-ab68-f4bf3c0f9c45",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "71b6a7fc-6875-46fc-a066-d1674c292152"
        },
        "item": {
          "id": "c598c496-c3cf-4df2-a5ae-3d8c8242fc7c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "64436949-fc35-48de-9bc8-b0fc766259dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0754c4-2f43-4da4-9dbc-9b9444916c57",
        "cursor": {
          "ref": "49d07b3f-5ad5-40da-bf38-98e6ba931c69",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9953f3da-0780-4f21-8097-6c7f500515c5"
        },
        "item": {
          "id": "9e0754c4-2f43-4da4-9dbc-9b9444916c57",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4eb808ff-dd12-48df-9c13-68652fc0b95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0da9afe-3f84-47c9-85d0-36f1873ddd97",
        "cursor": {
          "ref": "e3b1c57b-3175-4e02-85d6-80c7c2d81df3",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7a2e4f25-e9b6-46db-a979-241df8980a19"
        },
        "item": {
          "id": "e0da9afe-3f84-47c9-85d0-36f1873ddd97",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "767f272e-a394-413b-b7e5-8412a7843822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf5d15a-35a8-451f-a56c-c5f27fbac660",
        "cursor": {
          "ref": "4d9b8a44-de7d-4dc1-a4de-5cce1e2797fc",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3c4b05b1-b8c2-4a60-ac07-63ae5e89fd9d"
        },
        "item": {
          "id": "dcf5d15a-35a8-451f-a56c-c5f27fbac660",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3d8fdb00-b522-48c0-8775-b67a6e895441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6983baf3-ddbc-4856-bec0-5601d7eec7f6",
        "cursor": {
          "ref": "30a42bf6-1835-4527-8306-789d78a32739",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "43abad1c-4d90-40b1-8d67-b5ad9fde3b5a"
        },
        "item": {
          "id": "6983baf3-ddbc-4856-bec0-5601d7eec7f6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "71fcf72c-2961-483b-a123-c8cb0d0c74ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b95a9f5-64e7-429b-8e94-b6d107a86916",
        "cursor": {
          "ref": "224fdaf1-9779-411d-8764-ba555031923f",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8254f75c-9e82-4ad0-a13f-c57daeac7fc4"
        },
        "item": {
          "id": "6b95a9f5-64e7-429b-8e94-b6d107a86916",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c47e4131-a57e-4a9b-9b56-57ff5bdec4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499c2cfa-4855-48cc-9781-e51ee247f968",
        "cursor": {
          "ref": "ad8b991e-942a-4e43-a2e0-9b68e9c3e0d4",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "323fd0b5-02f3-4138-af2d-7969d057f756"
        },
        "item": {
          "id": "499c2cfa-4855-48cc-9781-e51ee247f968",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "33262922-8ad5-4e47-824d-79fca7f2c45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebacc9c-551e-43e9-8115-47740bbafec9",
        "cursor": {
          "ref": "95dda3e8-8595-40d2-95c8-3b4910d22681",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ff7d0716-7e1c-4404-87cd-9f796c9e8423"
        },
        "item": {
          "id": "3ebacc9c-551e-43e9-8115-47740bbafec9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7321d737-06bf-42a4-9e32-91abcbc9bc8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a475c9-de2f-49a5-8e95-8cda71f10eef",
        "cursor": {
          "ref": "414495aa-90dc-40c4-9e8f-c8e3d60c89bf",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9aa6a69b-52e6-4cd2-8384-07cca20784b4"
        },
        "item": {
          "id": "a4a475c9-de2f-49a5-8e95-8cda71f10eef",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b3a3c682-74da-44c5-8fb0-77c2c7ae3f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa055c1-115e-4024-898d-bd033ec14e0a",
        "cursor": {
          "ref": "7acaa516-5d93-437a-8215-02112edcaae6",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "54d653af-ed87-42a2-9613-5c110a173747"
        },
        "item": {
          "id": "0aa055c1-115e-4024-898d-bd033ec14e0a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "bde007ae-56f5-4869-b18f-6f7641861569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44c1774-c940-4cde-99a1-acbff14caf10",
        "cursor": {
          "ref": "1aa9bacb-a34a-47ae-8371-0247941482de",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4e02f8a0-8cf6-4581-a1a3-4dd6ea49c7ca"
        },
        "item": {
          "id": "f44c1774-c940-4cde-99a1-acbff14caf10",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "da45cd94-c371-49c7-8288-112138d245f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c72b4d-3e29-4f25-8f55-bf70c4069056",
        "cursor": {
          "ref": "59f2512c-6082-43c2-a8c2-e6bb35b38a5f",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c0203afb-5795-4551-bbf9-107c96a07657"
        },
        "item": {
          "id": "32c72b4d-3e29-4f25-8f55-bf70c4069056",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d6746097-b6bb-4efd-8f4d-76e3be50b0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5447144e-ea4f-4f73-a141-98cf6c0fd8b9",
        "cursor": {
          "ref": "ff5a7611-9b52-45bb-811b-f91cbbe41ec8",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6587bca2-52ba-41a4-98fd-07ffc534b525"
        },
        "item": {
          "id": "5447144e-ea4f-4f73-a141-98cf6c0fd8b9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9312b872-9994-4ee7-ada3-6d676a9fa361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4813ab65-6ec0-4f4d-8cd5-0edf3caae0c7",
        "cursor": {
          "ref": "ec365d60-e26a-4f72-b485-6a58f49a7eeb",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "2eec7a91-f630-43e7-8583-94b74b86901d"
        },
        "item": {
          "id": "4813ab65-6ec0-4f4d-8cd5-0edf3caae0c7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e615e6f3-e8e6-4358-880c-166239c57689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e48502-fb7d-47a7-8650-c93ca9198b43",
        "cursor": {
          "ref": "97f727cf-e8f5-4239-85bc-b36e2ef47656",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "53cc7739-451c-4281-bd76-b19a4b97e743"
        },
        "item": {
          "id": "55e48502-fb7d-47a7-8650-c93ca9198b43",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "57e3b210-9f93-45b9-aab2-c47d01983bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b792c958-85a8-47af-9d3b-4b1d8541ee65",
        "cursor": {
          "ref": "17bcdc6e-9397-4902-ab59-a76f54283256",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "54077a8e-fc56-4074-bb7a-37e978be907b"
        },
        "item": {
          "id": "b792c958-85a8-47af-9d3b-4b1d8541ee65",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "dc229c1e-5dc7-457a-af2a-b0757c670f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564cd687-46b9-410e-8099-bc4f521187d7",
        "cursor": {
          "ref": "d78adca4-5948-4fbb-b025-a18fc70b570f",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "14e37656-4dc6-481e-996c-3c7645b3c154"
        },
        "item": {
          "id": "564cd687-46b9-410e-8099-bc4f521187d7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "711a512f-71b8-42bc-9247-d769c2cd29c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38227ad-508f-4ad2-85f7-c474210b66da",
        "cursor": {
          "ref": "ec4a8a28-235d-40b5-ab39-d1c8e8ab43cb",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b09f19a6-3551-49e9-bd46-da135cb4f64d"
        },
        "item": {
          "id": "b38227ad-508f-4ad2-85f7-c474210b66da",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "370a6ecc-8416-4c47-a307-bcd9947f2e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8486de5b-01f2-4f8f-a8b7-0fcaa9e0fbe3",
        "cursor": {
          "ref": "d386541c-42af-49aa-ab5c-187f39076fd8",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d39cbd5a-cbfa-4e25-bfd1-980fa5530311"
        },
        "item": {
          "id": "8486de5b-01f2-4f8f-a8b7-0fcaa9e0fbe3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "37859502-9bbb-461b-8eda-a0b95887c9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6da238-118a-4cf7-ae7a-0944b59684b3",
        "cursor": {
          "ref": "984c27ba-0271-4935-82d0-1d517efc0e34",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "9a72970e-720a-47f6-90b9-e2cf909fcd5e"
        },
        "item": {
          "id": "ab6da238-118a-4cf7-ae7a-0944b59684b3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2006fa0a-160e-42e6-b530-bb85d537c3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f440c3f-47d5-4825-bf60-81ce556226ea",
        "cursor": {
          "ref": "26b028a6-689b-4ee6-8feb-3754b4124b0f",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "97c56a8b-3c2e-4ac7-98fd-4678f3a324df"
        },
        "item": {
          "id": "0f440c3f-47d5-4825-bf60-81ce556226ea",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "39eef4e9-90f3-466a-8401-01523efc539e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65baf506-fba9-4079-a9ff-62621230cab1",
        "cursor": {
          "ref": "91991658-b67f-41a1-bb55-e056c60787d2",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "fc5ea7d3-82a8-4c16-97ba-20e581cbd165"
        },
        "item": {
          "id": "65baf506-fba9-4079-a9ff-62621230cab1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "eb37c0de-606a-44d5-b683-a188a934c37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6816cdc9-1379-45f2-ae77-d37481a1d111",
        "cursor": {
          "ref": "c721cae6-dd10-448d-ae92-0f6198048713",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "4a915e91-2348-40dd-bccd-6688a331d76f"
        },
        "item": {
          "id": "6816cdc9-1379-45f2-ae77-d37481a1d111",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e5e78d41-b890-44e5-85a3-2c5108717545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa83f2b-5bdc-40b0-bc54-92ab54f36c4d",
        "cursor": {
          "ref": "278114d4-99f3-451c-a762-295f9e9bcfa9",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "27b7f9cb-2f08-40ac-8c52-e36b495cbe00"
        },
        "item": {
          "id": "9fa83f2b-5bdc-40b0-bc54-92ab54f36c4d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a8a13b89-ff0f-40a1-99b6-b1093747218c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335fb9e3-afc8-4827-94f4-af3fff62b6e9",
        "cursor": {
          "ref": "d9e40f0c-5169-4adb-b9b7-3e1b6e7900c9",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "840bb3f9-9978-4076-b246-dc8c496774c8"
        },
        "item": {
          "id": "335fb9e3-afc8-4827-94f4-af3fff62b6e9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7edc87bd-57c9-4515-9baa-a0d2625cb6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08dec606-ca20-4923-b297-fced339902ea",
        "cursor": {
          "ref": "2c398eb0-b884-4d22-8579-767b9dd906b0",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "205614cc-ab8d-489e-9b46-f5c3aec42ff7"
        },
        "item": {
          "id": "08dec606-ca20-4923-b297-fced339902ea",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5b8bde12-5736-430b-b5f3-4850f7dfcc40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfe17fd-a9ae-42a6-8d76-8c2e270fa6ed",
        "cursor": {
          "ref": "d8816428-8808-4336-b065-8ea6d127a2f2",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "9e2e7866-3698-4ee9-9006-ed7daff828f5"
        },
        "item": {
          "id": "adfe17fd-a9ae-42a6-8d76-8c2e270fa6ed",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "714c09f6-2ef4-4352-ac36-a8b45c76c272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18d38f7-9a46-4d6f-9ff4-72ee046989af",
        "cursor": {
          "ref": "faffc2ee-6a83-4324-9318-4e580efdb8a5",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "160bf335-ea20-4a7c-a7ab-9cf513b77329"
        },
        "item": {
          "id": "c18d38f7-9a46-4d6f-9ff4-72ee046989af",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2d56c96f-6e98-4b1d-9981-9dd8587f4e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e51d90a-f8c6-4355-86f2-19ca8766fe46",
        "cursor": {
          "ref": "dd1091e3-cd2e-453b-8f95-ead1b6e6a394",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "fdb26f3a-ea70-4328-a6e8-9f8609a7cfdb"
        },
        "item": {
          "id": "4e51d90a-f8c6-4355-86f2-19ca8766fe46",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b87deb20-220e-4f33-bd44-55556c4e89fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46ded89-a19a-4dc3-94c1-f0da15616fed",
        "cursor": {
          "ref": "37653a64-4d49-465e-b775-acedfc7222ed",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "819042a4-da71-4088-8a11-403bad162fc4"
        },
        "item": {
          "id": "b46ded89-a19a-4dc3-94c1-f0da15616fed",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0877707b-be55-4ff4-ba7d-28a146d36afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16aa318-02bd-4423-8448-b76f7921e9fd",
        "cursor": {
          "ref": "b3248bb5-97af-4f72-881d-bad292b828c6",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b7bf4560-7f57-4a44-ae96-82d50a22a1aa"
        },
        "item": {
          "id": "d16aa318-02bd-4423-8448-b76f7921e9fd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b53e2890-b3f5-4fce-a97a-18098c5e5871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6479286-a803-45ef-bb10-714b2b050e1a",
        "cursor": {
          "ref": "bb66332c-5ef8-4306-81ea-656b8200ad15",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "41f36c3c-5e76-4077-b4bc-9b67d7c1306d"
        },
        "item": {
          "id": "b6479286-a803-45ef-bb10-714b2b050e1a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ea63dcfc-9c8e-4e0d-9130-a573ef0607be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce331ea7-1ec8-4849-ae02-72c52754650f",
        "cursor": {
          "ref": "aa250701-763d-4039-bd7b-b4348aa8baef",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b62a65ec-cd31-452c-84f4-816c43a9eb99"
        },
        "item": {
          "id": "ce331ea7-1ec8-4849-ae02-72c52754650f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "dd5226ae-7955-469a-987f-0461c4521039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0539b6eb-1537-45a1-9bdb-d2605d7807dd",
        "cursor": {
          "ref": "845dd8c3-e9c7-4e00-92f1-21a4da5a156d",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "8fb688ea-d15a-4b46-86f5-a5fc964fd42d"
        },
        "item": {
          "id": "0539b6eb-1537-45a1-9bdb-d2605d7807dd",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fcb39083-68cd-43e8-ba8e-eeb73bcc6157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf46d63-8b62-4e53-8eb8-c5f9eef5eaf9",
        "cursor": {
          "ref": "f2fbcdde-4217-40ac-8330-e0978eb94469",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "bd839981-0f40-43cd-b33c-44fd0fb2b82d"
        },
        "item": {
          "id": "8bf46d63-8b62-4e53-8eb8-c5f9eef5eaf9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d58a8539-018d-45ae-8b9b-4d835b4e2d70",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3dc5c8-95d3-4d4a-a8e4-7dbde95f4855",
        "cursor": {
          "ref": "b24a0589-3641-43eb-b40f-908428e54298",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9ea73565-e1df-4ea3-a9ef-0505bcebcfbd"
        },
        "item": {
          "id": "7a3dc5c8-95d3-4d4a-a8e4-7dbde95f4855",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c15ca8ba-802e-4398-b5a7-d28e800f9a7d",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "717dd0e1-5746-4a43-b426-7e18cf88cacc",
        "cursor": {
          "ref": "75da1401-1174-4267-b8d0-06fcf4d4abf6",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "05f836f0-04a9-4f04-ad47-3720e3750663"
        },
        "item": {
          "id": "717dd0e1-5746-4a43-b426-7e18cf88cacc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "046ee388-0b41-41b7-b52b-7895ca14ba37",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "81761302-0bbc-4bd5-a1e4-b4dd926113ca",
        "cursor": {
          "ref": "d06e4605-ad1f-4605-98c5-db429cac255b",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "561d80c6-7427-4fea-9d3c-67df943841dd"
        },
        "item": {
          "id": "81761302-0bbc-4bd5-a1e4-b4dd926113ca",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ee7cb21f-cd4f-43db-9c92-015e254f0f8a",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3c602e-d226-43be-bb2b-f41f9e97210f",
        "cursor": {
          "ref": "5b008cbd-f660-4a1d-9ae4-48391ef4e98f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ae33fb34-52a1-46d0-bdd6-1caf5b2bfa09"
        },
        "item": {
          "id": "1f3c602e-d226-43be-bb2b-f41f9e97210f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "45e1a2e2-88c3-4b85-9c61-d1eafa07e515",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3c602e-d226-43be-bb2b-f41f9e97210f",
        "cursor": {
          "ref": "5b008cbd-f660-4a1d-9ae4-48391ef4e98f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ae33fb34-52a1-46d0-bdd6-1caf5b2bfa09"
        },
        "item": {
          "id": "1f3c602e-d226-43be-bb2b-f41f9e97210f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "45e1a2e2-88c3-4b85-9c61-d1eafa07e515",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74b7eaf-d820-493b-a982-8eede288b0d7",
        "cursor": {
          "ref": "bf64029c-2361-46b5-8bf3-8217f8ed998b",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "34c59348-1dcb-4713-b65e-d7d5cf10a866"
        },
        "item": {
          "id": "c74b7eaf-d820-493b-a982-8eede288b0d7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "45059452-e3b7-4277-a451-a7a5f25b11a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28ffd65-8ebe-45c5-b377-6d3133625dca",
        "cursor": {
          "ref": "f2d0c39f-c5d5-4bd4-a538-0debc21a9913",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "74b20793-f0e7-4817-b9e2-b89857b6403c"
        },
        "item": {
          "id": "c28ffd65-8ebe-45c5-b377-6d3133625dca",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ee72c251-1bb8-45e8-8c85-83a4ec298ab7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}