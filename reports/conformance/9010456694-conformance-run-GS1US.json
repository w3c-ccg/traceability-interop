{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8707ab17-fba0-48f4-8ced-9c0288a4ac2a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3547c8a7-bcde-469b-a7d4-9818a59cabcf",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "df531782-51a2-4988-ab2e-ac3ff133f005",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7ffe2e73-0c44-4e7b-9573-ead9022159ec"
                }
              }
            ]
          },
          {
            "id": "b54b30e1-69ff-41ac-a835-337431fe4224",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "db6abd13-3f6e-4248-a788-f2bec277862f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "01f506b6-5c16-48c0-981e-d53f3bf7a3cd"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e6f4bada-c233-4f1a-a306-5eeccd756775",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "474b63ef-e1a6-4ee0-80c7-2138e104c100",
            "name": "Positive Testing",
            "item": [
              {
                "id": "73e6cff4-40ec-481b-85e3-66256715bfbf",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa4cdddf-3825-4b3a-8471-1817d6eed18c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e0dce44-3d2c-4cf5-8165-14214e8fe09e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "520f15e2-b5e4-4a1a-ac73-0be65c965ccf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "483b71ba-a1a4-42c8-aaaf-c0c036eb9d39"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3b7cd527-fb98-46dc-a83b-0cce9cc43aae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9cd8ce85-b82e-4b92-8388-57b1d35ab337"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5b219c4-5fdf-483c-a773-0e3d577a4f46",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9db78810-5e94-4e22-8483-15ad9dbce9a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b3c2eb9-5f2c-4b85-b131-d365f6cfdd1e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bfec2f99-795c-462a-bcfa-3de68e299d91"
            }
          }
        ]
      },
      {
        "id": "4c490b61-2d8f-4dce-abd0-878ec2fe7ef1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d301476f-0156-4aec-9750-1537eb418479",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7afaeab4-fa75-46ff-8835-277572f58e85",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a394633c-b457-47de-b2c6-acbf7b70d06d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a389fb-0f25-4bf4-b9cc-57d6eceff212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5425dd8b-0e76-4855-b60d-317dbdd90280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99f7c95-edc4-49c2-b5cb-c0ab992f5583",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "057e50cf-c47e-4cdf-9d10-fafcf121caf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a583920f-33f6-4e58-8cf6-e6130fc13579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91aa9199-1ee0-419c-bfc2-518161397854",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a65fa0-b81c-47e7-943d-e2ee067a6d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b5e81e6-62e6-48a9-a0a4-9cae5b779536"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "70989870-5f37-4903-a130-6aa9814d11e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf72ad34-c6a0-4e49-bc5d-393494fc992e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c741eb3-f5b7-4a31-ac15-522de2333f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "307eca3c-b119-4e6c-83f3-507d3f6cafd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75799ed-a0db-4264-8163-54d103afe7d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fcce2c5-93e2-4cc3-b027-041f353527f0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4bce3b0a-17ea-40d1-8807-24e383722eea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cd7d3840-0e0c-4d80-b164-fb7934cb0b45",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc0efa00-1d8a-4709-ac9b-230b8a14b1a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bc879033-ec5e-45fc-b3da-522321c52c89"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56b1d210-8b2e-4d2c-8afc-ef8865c86127",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8a990c04-1a17-467b-9bd3-80fb32e30a7d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc7942f0-29a6-4021-a4d2-2173c1f774db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5cf5fd85-943d-48a7-821f-89dce410125b"
            }
          }
        ]
      },
      {
        "id": "323e46f5-80f6-4eb6-87c6-1fcdf517b498",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1186f27c-85d9-492a-a7e9-33e6ac8f0f61",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b499672-b035-4242-a68b-5b9e00121bb6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bb9a135d-2c75-4c02-9119-68d94cc10a6a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144bfabe-5201-4abb-9d9b-bcd9866e966b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf654fc-11d4-4b89-b1c4-f02c72bbbba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb24399a-5ee9-4cee-a7c2-96c27e1ec827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47007c0a-3879-4b1a-8b82-116febf67cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2ce131-1768-43ad-ac9d-b496b61a206c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2930f3-eb26-4082-bdcf-5f73cbda5d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f33b9131-56a5-41de-9882-e7f24889cd5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8763050-fb08-47cb-9e98-31e0bbf87255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc44c8aa-3206-46be-b0d3-458e65ef86e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b488701d-9bad-4300-82d6-6cfcb470eed0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a53eb5-75bd-436d-bd69-eab63cfa1286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f93bcaf0-670e-4842-a38f-65651c4bbff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc73bd9-d974-426c-ad6e-c05169bbf8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "935d0ad2-04a0-4726-808a-6003a73832c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3623244c-3c8c-48cb-9634-9c2f52f956f5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e2eee3-b549-44ea-8f8c-f03484dfca9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "659a7064-8ca4-4eb5-ad5d-2da0b960eddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96003cd9-7ef9-41e9-8bff-f46a5d072353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91181578-ab27-4d9b-9cb1-d0fcc15e1c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6a584f-74a6-47d2-9c52-813b039e1d2e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840ac3dc-6618-4206-8431-c46688f6f3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6473400-8787-4280-99ce-dc0f172bc267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ca8bcb-16af-4b4d-b590-aedd83f8f60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3be3fb9-bc0b-49f0-a7a1-9ffde0d7f0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de17e867-ce99-4fe8-b499-821e8239affb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4a59c3-03c4-4271-9db5-6a2f4670c2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7014624a-bcb1-4168-b4ed-24907d2c90a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1894feca-d253-4f71-9d9f-5129b986c1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "138685b2-404d-4ad1-8555-8513eebbbb6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae035e37-490d-498f-a6ea-5fd7d5d27cfe",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34091dd6-a1d0-4bc6-a0ef-4c4b223d3013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e54a70-bcb1-412f-a4dd-2bab0102888a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b4e3c3-ac66-443e-b534-497f6117ae27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "555e98ed-988e-4fae-9c82-c03e1c6d57bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9477c926-ad04-4f7f-8f64-92c8e1c76bf5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9b4673-2cdc-42f6-8041-0e9b86fdf7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17452bc8-57b0-4758-89bf-0771f7c5501a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aeb7ace-f8ab-4765-87d9-4e029839a5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61bc3bae-6fe7-49df-95b6-e1fdf0e2cd26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f55ac8-4e99-432f-8bef-15463849e4fb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7706aa-1d7c-404f-a4ce-fb4c7a5ce36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c84b5ff-104b-45a3-9f26-615204f1c402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544a18b2-1e37-4dbd-ac9f-e2cbfef0a54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b748462b-8694-45a2-b05f-eb68d7da36c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae74ab78-7741-41c4-b981-0d20af6b8eeb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9709c106-d138-446e-8f23-e0c310697e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9ad49c-e7a1-4222-88c6-6844172cfb0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e7d087-1360-4db6-81bd-f0ecac762646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51593ebe-9f83-4efb-8e8a-cc439714e3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2014331d-5c4f-496d-a254-0046973743bd",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b05e10-da6b-4582-b36c-60ca869f68aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9eb328c-b7ec-41bc-9b7a-7db213490c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c5c493-429e-4804-9066-cff228d8d384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec55982b-0797-41c7-9b79-b6708af74144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430f4ea7-1cf7-4b62-b286-46608e8fd52a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b671e8b-5fe4-4a31-82d3-e0f8a72299f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d9f61b-9f89-4bb2-81ec-d5780c75e59c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46599398-9fe2-4a85-9d60-5e43e9821e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2cddcfc-8e3d-4e17-bc46-38bb2d6c602d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6598785-b6c9-4136-9f6f-f771c4e56e12",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29288527-9048-4e44-8d09-46da666ef929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "157cc149-a908-4818-9659-bd39b1eb437e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a2c050-e5b8-428e-b2ef-d29b5bfc78ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5c96daf-07da-46dc-bd53-b011a0e71079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc4c7bb-6dc1-4e80-b4a9-2d771240ece7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d372422-79bc-4f82-b513-988a434a8d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b438bad-b213-4107-b606-c48fe0b447ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff83963-2141-44d4-89c7-b20ed2f3e11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89e49a8a-90be-48dd-b205-d0559a9867d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f994b080-7914-4e5c-bf61-a8ad0dbc5c09",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a242a7-fa43-4ed5-8931-323bcdd0729b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba418e69-8d64-4dc2-8fed-c88fc0bb45ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c51063a-b3b2-4097-a07a-23d97f64ebd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81bc24a1-3bf3-4d4f-a6a0-c7f430f9766b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b093cb-d9bd-4446-b114-26fdb324c75b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24ca8b6-f491-4724-98e4-d5c1dc6f0aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37212a50-2bde-4930-8049-aa5e5c05d444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923df0b9-ad2f-44e8-ad95-8a9c2dfe2137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2a562b4-4477-416c-9587-4cd308ecf46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f10bf8-8597-4d7d-b329-6e8b6b03afd1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0d09ee-35fc-4e54-9732-258f6cf81516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eadeb97-bc86-4c35-a0c2-adb4937b2a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5122d1-7aff-4234-bb94-4df870748644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c9b6357-c241-4e0b-a02b-6b2b57406265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29586d0f-7d4c-4dd7-827b-0f2b91d42f12",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5443ca67-9574-4d80-813e-a2a87f592235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e5334a-0e08-4990-8e20-0ed2a4ac9f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b35aee8-aefc-484e-b3d2-594dfec7b0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "85ec3f0d-f74d-4150-9013-aeb56dc268fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8d3d02-962f-49e7-9281-2513a7487603",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8341e1-2a47-492d-adee-c156aceeb18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc526afe-a002-4aa0-acac-5d737befd23c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d638f9fd-46ed-4341-88c3-b0aa8a6b5f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b845a57-595d-4d2b-99f5-10d33cda6c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44fd164d-af27-472b-9e49-2d53affbbca2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fda78d-0025-4d1c-afc8-6d3a07ddd2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d1c0148-5d35-44a0-bbb5-e4338dc9b346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb93cae-5ffe-482c-9129-62fd9bfc24b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d33387e-271b-4c61-a543-51b4bc614a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f06e4d2-3087-483c-be72-cc95f459b423",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649d6310-bdbc-4679-923b-9d50a6687adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9af07f-3681-4b00-913e-8067f5790120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd698b8-5948-42d1-985d-8ad5c941b41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e43e097-23ae-4c76-b044-c1dfb84e93fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f77e8a2-ab5f-4fad-8053-903ea2746c88",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3dd4ce6-9334-42da-a034-604fa86a200a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c632ab2c-0560-4825-a03c-b1b8ce73e103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b68b11-6ddd-4c50-bec6-c85a4e22df99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "618fe23c-ff82-44a2-8b76-ce50c944c438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207dc912-a79c-4451-bdbb-d55b70714c22",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c77dbd-4917-4a2b-a528-182115578450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5ec26e-69b1-489e-a478-a6bacc631379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f01fc93-5807-42f9-b180-a9125c286b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1dd7a737-afe1-42de-85a9-4cf67bc215eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df83161-a0ae-4ce5-989a-94adbaf460ac",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8d3f0e-bbcf-46e3-ba25-85b71671408a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e2ac5f8-7809-465a-9e34-3e750996dd49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7f433d-fce7-48a7-936c-84d37b245333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e299b1b7-d6ec-4e64-9d8f-0267ccbde8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b825e4b-c50c-48f1-a63c-01277f113d94",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "781e602b-5a65-4ba4-821e-c24251f7811f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c21378-6202-4cd3-8e10-fb4ac413f607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ee1499-6ad8-4375-8944-37c37e7ca69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fea6a89-363d-4981-8629-8195a4fa7785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f07e438-2c66-49d5-9f96-cd7e08a376d7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c50cbbf-b5da-4f32-8d01-fb91d51c38c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "785a23db-ee6a-4de3-8fa0-3ce49cc16743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438d71f1-17f9-4fa7-8531-559465bce42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dac1258-c58f-4a3b-8c5b-0b36de1162a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed81105-e053-4f00-9eb9-193d115c4f06",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "745402d4-2c4b-4dd6-b1d1-f5277228ec25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f78dd94f-6129-4ea2-89ac-caec33bbf567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dccb2885-d894-4e5b-9f1c-e0ff6ee2ef9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f687887-f005-41c0-a960-d3751241d756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817923ef-6a66-46a3-b03d-21dec353a5e6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42021211-3b55-4ed9-914c-5a015db56bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e28267e-d1c9-4347-92a4-97778a5f6ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ae641b-f01b-4ea9-8a56-fa8690395917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a258f4ee-6134-4795-879a-c0224cec85de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd31c70-d962-4108-bf6b-daf67486bc24",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e23613d-562b-4913-8e5b-537b7fa53103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cbab875-f31c-4c35-8241-5c6ddf6453af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28db1221-cd92-401b-955f-a4ddff4f6351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5c3f9b-a940-4044-8f37-f4106be85c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8905d600-5c39-48dc-8b5a-7efc7220475f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b611804-5a49-4b10-a958-d25802f6970e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2087afac-517f-494c-9bf3-3474d9e57330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836d9681-00e8-4900-9091-9062e57d2fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "221b489a-3ac2-4a34-9d31-04d04577ff23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b9a77d-8e17-4e50-8c3b-1aee3459a33f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f6d0e3-15b3-4fb3-9553-21ccbd20b18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348a0675-f84f-4157-a14d-39bb4516c955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b27c780-05a8-4ffa-9778-3f35161cf7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcdc9f91-c01a-4e84-af99-566e4fd68852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b5b504-155d-4f66-8e7d-b54cdcce7900",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f86cc28-3257-4a75-8bf2-fa6272413992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328dafc7-4b39-41d8-ab82-14dc4067aadb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8d23c5-6f36-4750-b542-609fdf9069b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a95b8fa2-db0a-460d-b5f2-efcba46915fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f814b188-2d1c-4c59-b98e-8533729721a3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef218ea-9cec-48cc-9909-81c9870040a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e31098f-05d1-4608-ba37-c637ddf7aae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c14449d-ba6f-4244-97ac-e81ca911dbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ec7239-1f4a-475c-8ce5-e4202921b40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50261506-ac51-490f-94a8-4faedd6cdedc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b87f37d-335c-44a3-b834-9beec7e4675b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70f6bd0-61a7-459a-ac7c-5b39fdce583d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f2bd74-0d7e-469a-bb07-72dc4374e38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba53bfcf-8e98-4d89-a50d-109125f989a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf28448-5c55-4839-b848-54ea9b3cedad",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f11364-bac0-448d-900d-1d774d69b70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cab2119-7b54-416b-b1aa-4b05ea081667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b64c70-1e07-40a1-9097-20d56ba4940e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d934e09a-edc0-4d38-a4ec-501f717dde5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9036e3-3857-463f-9dd2-d27405906be9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b05dc5-1071-4c59-8124-02a5b3cd5880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70a85525-2dc6-4ee9-b32e-a64fe9b55f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b700b4-668d-48b0-a490-96b6855416fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c2215ec-049c-42ff-9ef8-a34de27fe2a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e476d8-e47a-401b-a57e-ca67cf76852c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63175eff-969a-4079-b3a9-64cccbf4fea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "badefbb3-4484-4fad-b936-eeebd893cb20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dc998c-6d56-48fe-bfa8-0807e8b2e4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e00b9618-835e-400c-8f75-3ef09673a042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16affc0e-139a-4ed2-aed7-6e6e0196ee41",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7bc1a4b-8b5c-4967-8f38-4247b8b6cfd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f997d881-2a5a-4436-9cf7-456fc8963e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bc0958-a7c0-482b-b7e1-6c74b1802912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "80f23df6-0ed2-4d6d-ab14-a21caf8b38a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90746e6c-eb1f-4454-8c77-4b7e3ac0f97b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b39980-370e-4727-a546-af33deee853e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a354f2-ea61-4572-ace6-962daef8381e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aac10ba-8509-410d-b1c9-3d1f70a04497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e29488a2-847c-4e8a-9a9e-02c08add0ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e056c860-a48d-4ae5-95e9-650d868159ec",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fd700e-ecae-437a-a2f5-7065242689f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63896e94-7302-4a47-9dda-a5714a1ef4d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160a8c0e-a1c2-480f-8946-202add1013cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ab2df8-49a7-4a87-aa79-effb7b04ca2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48fd622c-9dda-453f-b7cf-0f12ace8da57",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e879431f-119b-4266-9a44-71b78c29e3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ab36a9-fbc0-415a-ba01-0f3aa8955257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173c8d19-b754-44f2-9b49-97683f3787c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "14662bd9-6814-4b00-b33d-3921e8fccaab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07558f92-2b2e-481f-9346-e00703bc054d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a931af-3ece-4291-913d-f3249b5b2d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc6d13ce-8b8b-4270-9b61-f807be4ada83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e021f78-27c1-4554-96cf-eaeba88fc490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "cced19b8-935a-4393-9a0c-c9ea9a7bea2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09109d5-a46a-495e-814e-ecf294ba2767",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfcbcf1-aad7-4aba-bf8d-7988e5b73d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4db73f-527f-42c4-ab59-e55a72886e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0c2e21-7f60-4a82-a951-642d592b5ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "64dc6951-941f-487b-904a-d4df196fe7f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9554fb7-5897-4103-988e-4e321d4cca5e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2985c4e2-8a9d-41f0-a781-577684bfb396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "503dfbd8-f42c-46eb-a5c6-358f43ae94b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b0eadf-f8f8-4ca1-b432-80ce86266bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b555008-ae6a-4ae4-b6ea-708c6a751cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cf8483-426c-4e9e-b2ab-b237463cf343",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4eb563b-6234-4886-be86-6493084b34c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f2dfcd-085e-4b15-b9e9-db556b156dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb80ddc-1217-4422-ae7a-508e2486aa97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c20639-9158-4e2c-9665-0b5f7ab0377d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4124599a-bafe-4fd6-9488-c414b357f4a9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffbc4eb-6ede-482a-9c9d-627d7c03d457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "704cfb98-589a-4f49-8ee7-861fff5fe2a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1cfba36-0a12-4ee0-96af-5f06f27ac375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7271957e-f204-4731-a4fd-5275a3da5331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22dcae2-66ea-48f7-9ab5-d17b94631f01",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e127c772-af2f-4a03-bedd-d8e584a7ec84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e40d64-5ae0-46a3-8a9b-27594aa8900b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87d4f3e-924e-48ef-a1f9-bd3e1b905752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "287b049a-1f21-48d8-9595-1a8db2cdef1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e957a5b5-9c37-4a35-b780-f8feff3761c7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392828a6-dad4-4a59-b556-57e5270a0e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "932afab5-f37a-4909-afd1-afc5cbe42d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f4fbf5-b024-4b17-ad1b-94a05a498148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11c63b9d-2dc4-4dea-bf38-24dce5417228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d5896d-659a-4ee9-a670-91efeb8ca7f6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faca9796-5043-49b5-895c-c756dd13047c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "581e6399-24f9-41c3-b18c-055769a793a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45db9261-6234-4d1f-afb6-dc5dc6994863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef3a0e14-5274-46d8-b247-637533a851c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc4e27b-e1e0-4128-aacf-33947ae85ab1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25fefd69-c757-4d86-96f3-5e2c83c04183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bbf12bc-396e-470e-b53c-9b560ab97152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8549c9f-2df9-4835-9391-4e6dd6b60015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94dbcf14-96ec-4411-98c1-bfb44a992701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a9869c-a64e-4a82-b5b6-fb0078bc04ad",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c132369-2b32-4ae3-ac85-df5ed98ea06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "722f87fc-8ac2-4c57-a2b7-9191b74c9270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a666775-e4c2-480d-914f-503c1e59980a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5228634e-3d57-4c8a-b01d-831d281b45ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5b22eb-f735-4207-944f-d28dbf311aff",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "928d2995-2183-423a-aa2f-403aadf9b40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "381ad8e6-3820-4959-a844-3cfb8fd3b91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d748c141-7674-434b-b97e-74be6b43cd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e18512a1-d539-4084-accc-e23d1e536fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b390b7-d965-4c3b-8752-f549c2708dee",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "912ee651-b633-4148-bbe4-d2ba5e35297d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feebe553-0bfa-4125-8bfb-8931f29a31b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55725da-cba1-44ae-938b-453857e3745d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f838eed-b3e8-45f9-84f9-1205561080b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c535739-7dfd-4368-b034-5c0ac1830222",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e725273-ad2c-4c25-9be0-de7a2771013a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0425b2ac-099d-4301-9699-94cc4d0d3991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb9612f-7e53-4c33-8b20-a0736818fa60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c83bbd1e-50db-4dea-af7c-e2d143704e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2775d79d-e743-4da9-897a-6368765c692c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed622c1-d8ac-426b-813c-4372aebf754c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c6febb-5965-4194-9717-70f0e5dd216f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61834bd9-3977-4afb-95ad-1e229af1d6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4be1cdfc-7c20-4262-9881-5a1a292d44b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9c2220-bbef-43bb-9ea0-1084b0dc76ae",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82481618-5167-45c5-92b4-80ab496c65b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083c4668-3ec4-41b0-88cc-f156dc579975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e5d689-02b6-4a1e-946f-8759fad92807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0dedd38b-77ac-4999-b314-8ee1ceb7160c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007fd213-cce1-42f1-b04c-5bd40cb4098e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5850f3fe-78ac-42b7-9f04-dc861bda214f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d624554-a450-46c1-83cf-a2b3dbabe015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbc823e-6901-41b8-b090-8d61f6caafce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "404b3374-1510-4719-a483-a046864cca88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719be5fb-78ec-4972-b2a3-eb7ddc80823c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0b4b47-3b60-4252-93ff-fb5b28727951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3724631c-f245-413d-90de-d673380862b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a10a226-2bf6-4957-a133-6c492551a0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "20cc6b6d-4081-43b7-b747-d7e2b5a0d6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ecaa09-7fa8-4aae-9a98-6c6cc71fa427",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d547c6a-50a4-4a30-aa18-7a03a352a1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697d0f43-18ae-41f6-8343-07878d42c4f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa7e3e4-10b6-4114-bb1e-1cb297e344b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "09c79ebe-869b-414c-b4db-7aa1d4dffb33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0ec139-1d24-474c-bbf9-aaad6e26f97d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307e456c-8d09-447c-974d-9f471175b0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e809b759-6d3e-49ab-b3b5-d3697a1dfe76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f782111b-3a1b-4aa6-a50c-72f3a40216cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2b3ad9-1eed-47ce-bd13-687b4e5c9056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0645f5e8-09c4-42e7-b901-8168ea38ee48",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddc0cbe-e854-4e19-a85e-520b7cd70e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347b64d1-1c36-482d-8341-d15693cea24f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bac3be9-e17e-4c03-ab80-cfaac33a89a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "35507098-886b-4f5a-8083-e3c518fdd595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020f9ba4-f360-4847-942e-e1a5bc44fbe2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f61a50b-af51-4d07-946f-8fcd9fcf88b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d28f2ea-c851-4685-9244-882d68945ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54373b86-7f53-4951-9b89-fcf45cf55499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f44837a0-6e4c-44d1-90be-8cc511ae3215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded7561d-7f7b-45fd-9864-d875fe76164c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8595d9-11ba-4293-98f5-3a23a90f864c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d082632e-d52c-45bf-8754-b23ff2f5bc5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f65065c-107b-4b7b-956c-f572ee746aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cd5db1a-6048-453a-afe3-a397f6ae5fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694d6088-05f0-4ece-b375-5519c6f9215b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4fe9e8-088b-4117-9056-750cf27937e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12ccff3-edb4-43e0-9318-4f061e325f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b67c23d-e86d-429d-9a3c-79e9c9d9910e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd0154f-2824-4ed9-815a-e144c079ad39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61911cf-1568-4e25-b39f-95b3b5f2e8cb",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9718784-6c1f-4b3c-8487-2e151ea1e1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1560f9f9-6909-4607-bd47-cd17e0360a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79b3a38-4ed9-4fa0-bce9-e05a91eb10c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "542b3eb5-ae14-4743-9ede-42473bbe1aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9dbd54-8b1e-439d-b530-18539d67439e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488ae2b3-7ed5-4060-9805-d1839e934026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "646a7a38-b8cf-4c6a-bb03-5be6178e751f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dddac815-e92a-412f-9dbc-988482bfd0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d73c5295-7751-412e-83ae-318075709700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ad07df-2be0-4690-a6cc-bc23637b509a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac7d1d3-1b5f-4daf-90bc-82ed59dd2e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b178bf9c-fee1-4e00-9b29-b058bddf271a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7948de-2501-41b6-98f3-014b184aab27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55ea0876-e19c-463f-b04b-ed8fe3a612fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73dc006-2c65-4af9-8a30-59a9fd4f230f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "031a12ff-be71-4155-9ece-c1580ee83f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c9944e-4577-4a38-8e72-bcec4d0e5ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12883b62-6edc-4754-9d32-dac3dacb4088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "65df0564-a28d-42fe-8191-177cbd3100f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba28fc37-0008-40c5-ac8f-19d8f05104d6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b718daf2-a0a2-4ab0-addf-d98991e18820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d856855c-1b9c-4320-bd03-ecd896bc4dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55022adc-2a87-4712-8036-70798131b58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2451c88e-7dd7-499e-8011-e0f95e5a4353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9054fd-85b1-4eae-87a2-d3592022c638",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bee0d28-04cb-4bde-aebc-8979484b6d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d03b00-8ec4-47a6-8633-9d94485cba08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ae71b2-4d4e-4279-91e2-de130b8853a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93e5f766-4f06-49bf-abbc-ed48d0066daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137ae551-16b7-4a88-abc0-caeef9cf0b18",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bbadba-8359-4c41-969b-8d5b1f0f811b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e0f0636-e98b-4852-8323-8fda57c2db3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f591ea86-2df6-48a9-a630-53b84b2e3d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac4efc94-dd1c-444d-ad29-2c3febad5bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c353029-4bc0-482c-8528-89493ce1f4a9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24076b1e-4d32-413a-8c4c-0bc6e6fb67b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f902f7a-1788-422d-8736-afd85425fdbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e4af74-0e57-40c9-a180-4a0625f359b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cef4d9f-1f85-48c9-862e-bb888a4e6be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952549a3-8b6b-4b7d-a9b4-589e4e19f007",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c932e7cc-56af-47d1-9b3b-cf90a3a62cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a43305b-4c53-4449-abd6-387a85f674fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f0f25b-8ffd-49f6-a3bb-0c9e91a8cf61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e24d6e-fb2a-4337-9d92-504cf4020fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6e3d3b-a86d-4757-8f50-409ea80087bf",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc2def6-3816-469b-aaf3-5784a5f97f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2978b3e-dce4-428a-979b-95a159aff46b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb2758d-1f33-434e-82c6-0fb8dcd8e813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "62a8db67-6676-4b91-84c9-b8443aacae11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b98f80b-693d-462b-bf97-8996844885f5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5c1720-c05e-4b41-bac2-54f6048ee520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc8905e-c3dd-4e14-86f7-987658f7cfbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1908c7-2862-4012-aaa8-6b9a1cfcb44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4b3786-d536-4212-b5a6-1154b2ab8e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb111307-32a2-4135-9864-05b9a217aec8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f0798b-7bda-476a-8568-563b57659526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42b9b9e-bac7-4ffe-8af4-82dc514de1df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea5d6f0-4690-4f73-89c8-b716d6421234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "043a3f54-6efd-47c3-8f8f-3ebad2a793f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ef8ab5-ac7c-4b6f-acff-42490b4137e1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85e3e02-069f-4ed1-9514-6c7dc4045227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fdab061-673b-4392-9ace-b72583bfbddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123dd49d-ee84-42ca-87eb-77c21db66cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4763f07e-fff2-4176-92c1-78553369e095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6ef10c-9316-4d97-80b2-e5131117627b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8dbd861-7fe4-4526-92c2-75413e094d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70064a6-bb36-4453-934b-1ae701cb3436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18290ec0-75ce-424d-9f95-7b5f5bbf245b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1503604c-7620-4e68-8e99-a6d39ea32cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a08df61-3e23-464b-bd07-4b7a8a4134fd",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af2a486-b07f-4f64-8ec6-674e6314660c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4632c9-2619-4ad1-aa24-3e79d1c9b8fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8cbf3b7-485d-418f-9b3d-b55b28cd855e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2cee6f7-e1bf-4a33-a4ed-b1d6b875ccde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b605de-4d90-4128-8e3f-7152a48d15f0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9854ab39-6dc7-4549-8748-e33bc3727665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f00de1-44e2-4dce-9c85-d417b2153b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fad774-f3e5-44f8-9d86-f10ac1c2a53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a86a86-e694-4fae-978c-6fb5d0169e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e6b338-f123-48e3-abca-d03ca502e0e1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98377c4d-9736-4659-94f4-faa39d244cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9f2afa-efe3-4fcc-a95b-b721dd32041c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc65344-1401-4ed3-a297-6354ae09e55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb8a41fe-8d89-477a-b8f2-44bda0481407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d23136a-daf5-4a03-b9b1-8454b2922c38",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f76358-b695-4a52-b9b7-73e4efa9ddf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544d799c-74eb-4467-9e9d-a86daad631e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b86eea-0b80-4bfd-95a4-c55435a1983c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "215e22f9-6643-4754-ac9e-df686dcc0f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5a2964-de47-4af8-84db-b4c7948abc59",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1f475f-eead-41b3-89ff-c1314c576e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f8c0d8-48ea-43a8-b3d2-9e43940e62a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e620a6-9c34-4477-8eb3-149e6051a4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6601bc85-f98c-44f7-a362-b1b6644d43f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3d9e1a-5a96-4291-abfa-a3f610b9807e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe72d4e-48d7-408c-9e49-40207c26ef26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "359b6221-0605-42ae-982b-d34b8fa9a788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ee94e1-0a72-4ccc-983b-b6a317e2fffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a30c715-4f9d-4b83-b932-f2c4ab26b2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4d188a-1a6f-496b-bd78-b6c0f389f981",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09486e2d-bce5-4de2-885f-559525d49e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce44afb6-dd74-41db-a845-52a05b1c5ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bfd740-cfbc-4d4f-b574-a6b14a43d83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf9ea0b-9f7a-49df-b0fd-2b292b642f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb67294-384c-4b71-9d82-3afc64eff7bc",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7b001e-357b-4c38-852e-bf80be66d1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04cce658-80f4-4a29-ae2b-14a3156e4f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a14d58f-74ef-4bbc-a133-5e5acba516cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f12fa48-f4dd-430e-b836-7cce4e63101d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2848b48-3f0e-4b05-8780-f2acf7d96145",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b859e494-53ea-4d32-ab2b-2c7932cef7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1da12f17-eed7-4948-8d5f-50e219db2ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205df37f-8ddf-4092-a678-8c0210c1780a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f83566f5-9ab5-4b95-915f-9d97ee250839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff944bbb-6958-4c59-a9f7-e2843098ad60",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6731e27-d0c7-4f35-9de9-4ac23e199266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db72161-7511-4172-9ccb-ead61b9bc54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d845fd4-064b-4eec-8885-ede2077fb13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a08aea-0ac8-4d1f-9fdc-b37344bacc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413a2d12-519f-4fb4-8bc6-b6359529fd76",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ba7c44-9010-468c-95d5-9aa60cbf96ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee77988e-fe2c-4bdb-9fd3-3036e9645c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538efae3-4f6f-497e-93f8-832f9e6aec3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "83ad1c9e-f5c6-4f16-8043-ff439aade172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e852fe86-d8b1-4411-9256-a46ff11dc3c2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f54dba-d4f4-4c3f-9874-980fe3fbee59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed5b6b5-c162-4684-b6f5-7bda975e97d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6c6486-31e4-4beb-969e-85b999ae47d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "513e80a6-5495-4aa8-8b86-93db8ccbe692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03ef896-8c28-4e80-8a32-b898c622d636",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd85d87f-d234-42dc-bfeb-bc89d0cc04a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3ea6ac-682e-4227-b6cc-636713eb45be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acba0b99-5dab-42b9-8772-20c366b93ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b42345c-38a0-472f-a415-80c0b5aabb62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b59bc2-23fa-42d2-bcd7-1eb34a5475bd",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2e41a2-2187-469f-a42a-4ffa3de9c31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "978152c5-22f8-4bca-b350-099175f1ebd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c49f1ef-837c-41a4-b01c-651e275ce6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "252ad399-94fd-4fb9-865b-3a10d618a26a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ef397dcb-a432-4049-b5d2-fe7b4a2bb69f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b428d01-fdef-4b44-89c7-9787a08dc8dc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4596f429-8ea4-4bd0-8b66-c4e87355bb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c907cc80-e838-4f78-a2a5-dc2be4b106ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7135cdae-9e2b-4cd1-bf24-df5b179d4b79",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53654d40-8ebb-477f-ae7e-d25dc2f8725b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e166155-f241-4b08-a671-32ecfd6a5a4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b3243a4-39eb-42f4-8730-1c7d5ba05f86"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8901b5ae-58b7-49d1-b049-f02c9d91006d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74fa5316-5645-4e07-9084-3ec9a0626168"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dee5207e-fbe8-485f-96b9-c92c54245b64",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab646e81-d832-400e-80f2-9fc8781abe18"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "334a2fe3-a433-41aa-addc-b7119c445793",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "005fd9ad-9970-409e-9ee5-0756f0faf5f3"
                }
              }
            ]
          },
          {
            "id": "926b5b56-4d43-4566-a56b-48be52823a7d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d5bca7cb-9f96-4c72-87c9-814b6d258e53",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f1c444a9-6587-4494-8085-045322bab599",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23df8ac-0964-42fe-be09-02629bb80eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e9f70865-8346-46e2-99ab-6163645dec27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b888bee-a67b-4360-a786-754447fc6407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d041b956-28ad-47ea-b78b-cf77fabfb89a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d7746b9f-794e-4d03-9b7f-c95bb47060de",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e178c4ad-51c0-4537-84c5-577a05013b6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a403e97-4511-46ab-8682-e8345dd3bd4e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8512a905-7090-4116-9993-f5e8d08f0f20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "81bc4f89-116d-4933-a4a3-12398a8aa888"
                    }
                  }
                ]
              },
              {
                "id": "4ba7b118-d393-4954-9484-47f961f3899f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7b44033-49b6-4a6c-97f9-68785ac5b1fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "084ce8c2-7a75-4be7-960f-136752c2b574"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d95297ab-ec32-4460-a404-6a884e7842bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0a09bb57-0ce0-4c1e-8241-9eeb306cda2f"
                    }
                  }
                ]
              },
              {
                "id": "0d368b32-ece0-491b-9b86-8ced30b73928",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b695c3f-9749-4bcb-a9b2-d048cc391ea4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "24e659ea-e4cb-40c2-981b-8c43d93c9860"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3ccbb26-f32e-4023-bac4-e97ae44232af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "17c04b27-47c0-4e2d-a050-b4d8b9e183f5"
                    }
                  }
                ]
              },
              {
                "id": "9cbf7a15-db69-4447-8e49-c4815e3cc626",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d64f9edf-9f21-430b-a029-ede569d40cab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "13ef9ae7-011a-4c88-9f3f-3e76b97072c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27f1554b-aad2-494e-920f-73c0c58a0dff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "67924a02-b4f7-4066-8337-0f5f3a18c4bc"
                    }
                  }
                ]
              },
              {
                "id": "c4fe02fe-60ad-4c13-be72-ae0032de9a15",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10924d40-e03a-425c-b317-e1b3f37f1a5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a68a72b-c6bf-47a5-a7e6-162420953b3b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75db6cab-9e39-4dd5-898b-b5d33130db7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7996e412-4001-4e21-94cb-898ca5ea5f05"
                    }
                  }
                ]
              },
              {
                "id": "5db4a888-af5b-4b31-9a8b-37f270d4bb9d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2156262-cdfa-4a06-91ed-3718dcda4162",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca33e0ae-8e6c-4110-afc5-3cf7d7830d58"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afabba6d-aeb6-4946-96a6-b2a9ecaa6dbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "34140e35-7c29-4b73-a09f-8c93480cad34"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "97a8a318-c904-492d-afb8-7d31025659bb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4eeef82a-763a-44c5-a4cf-f4bfab2e8564"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "67181ac0-f907-48ed-bfdf-d9fd4808e86f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "24c67690-f61f-4080-9283-441603465876"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98b612e6-8e81-4276-ad6b-5f0e0f165540",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "25f256af-ee0a-4678-9935-cdb922e31048"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e16cd303-9a3e-40d5-ac0e-ab6d6673a88c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02a48309-5ee9-4e04-bd38-c0031b725f67"
            }
          }
        ]
      },
      {
        "id": "2d1258c4-f4f5-496e-91ce-88daf3523e9f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9280edb7-d71d-4779-b8de-bcc95bd7cfe9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de203e43-9eb7-4b22-ad55-a143f04cf145",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1401ed67-56f7-49bd-9be6-37e2ce8bd647",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "154ad193-21ae-4fec-a03b-55718fb0a82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835db793-b926-4ad4-9f4b-70b444653ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ce111b-b4c1-466c-86c1-886adc594e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8cbcc67-2517-4700-bcbb-62c823060aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0f1331-4554-4b60-b1a8-f9a6ce316371",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de42874d-e263-4fc8-bcd8-960026683ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a96325-7c1d-4b1c-b112-5da1b13daec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba88bf9f-3e72-4d17-811c-46d5dfb4afaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c710e74d-ab04-4671-8d23-1f398fc8874c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340ab269-abd6-4167-8e7c-3896ab478147",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84e187b-bd8e-4d0f-9b5b-71c33a5b52b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23f1cf7-3caa-4e01-850f-93e169f0f743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3445281-e7ed-41d4-8f45-1213b20abeb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a64e36cd-12dc-4771-8ab3-7c182f5a31e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896afb50-f4e9-4b80-b69f-d95f5c6a0e0d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b999543-9bda-457e-894c-3d7ca711e23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5049c4f8-f656-4b9e-a9ef-ec4b2b337bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223129dc-cd70-4a39-a4e4-8a656b2b6497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c574276-b5ed-4f7d-bfcc-b09124390811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1874bdfc-feb9-453f-967b-d16dfeaa30e9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c372cded-2e8e-4216-8e18-ef3c0c5e79f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b256fbfa-3fa8-4c92-a6ca-a441f6972771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f85bab-c1d7-4216-8603-8a313a537bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e818c0b-1f1b-49ef-a788-e43114131b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5352c5-855e-4cf3-98d9-260b458d40f4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2035824f-ef27-4210-8d9a-93145ad12b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a963383-092d-43ae-940f-d88345a90beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7924af50-b26f-44a8-a903-c0408615199d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b91faec6-aa69-471e-8740-742fc5c6a814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f528eed-951d-414c-9529-e3ed871224a6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e8a863-89da-4eb5-8a01-2d229ed48708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e141675-cf74-4687-9b00-e69b900c0d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c283cf25-c627-4390-b689-5792db741915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a5f66a3-623e-49a8-a101-fc7b07177d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd92ca5-3c4e-4a30-8dd4-5bfed0109251",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe291716-00d7-4fb3-9bfe-1cc45aced953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e68b65cb-37a1-41f9-9960-143146a2be34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7c8dfa-8014-4bfb-b270-5f2013d3d3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc7c7d4-f2a0-4770-8b86-e4f446ef4311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb081a59-27a4-4353-bc97-03e3462dc10c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3172a6a-ac05-4d5d-971a-fab336aaad7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afeb3753-d10c-40b8-b8fe-a2d94ca02175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d85e82-a14a-4e89-b4de-79e69a37d954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e85aa80-c68d-41dc-bf93-31dd05622af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1a6a4a-c60e-46e7-9afc-dc7154307772",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10415ff-7eaf-4d20-8673-39069c3154f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e5c8f56-c495-44f5-a63b-27f3b0ee1e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ceb0b04-9155-4518-9123-5e41cf2ace2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93e4a199-9458-42ad-bd9d-c81bf7446801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2493aa9d-0f0e-42d6-bbab-874a1522c800",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caeba8f9-7daf-4059-8beb-eec23a02b3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3552b015-852d-4633-8c38-87f37c412eba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a805b8a-9875-4bdc-b65a-6ab707a3c28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c7632b1b-6539-4a93-b75e-b126c8c50e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86600d2a-b408-429d-a761-a16e6a33ba95",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60639e1f-e675-4a17-9c3a-1af58339d17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0672ce28-0456-4d41-9dce-12ecbaaf8829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19104399-260c-4221-acef-180388ac5e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9df869c5-dd43-4401-b061-6e16cba90768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a5ca84-1b1e-4e6e-9469-65ceaba82ead",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "506988de-0455-43c6-99c1-b2106297a203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd62663-ec53-43f5-a4d6-61557c4125b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf5eb5e-c498-4308-b8bb-476b71959086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7876b4-9008-4b35-8de1-ab3279014f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1ad37a-0ae9-41f2-9247-ea3ffaf40a72",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f42e95b-67d0-4196-a124-993230207563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab25165-4ea3-449b-8bf8-57c5de9083cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a79df48-c078-482b-bff3-293fb9b6b60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "12208cc4-c245-4679-85fa-a6f85e4a9e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4d00a3-3f96-4768-90c4-4fa88f85c170",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f26d85-b302-4768-a005-daf8d1290c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc1723f-99f4-4280-8d72-1f6f03857342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee978b16-a329-4b89-898e-1c7d3a52eb0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5979d715-1386-41fb-97c4-49bf56946030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a234a2-5460-4d33-9382-248012f074d6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4273a8-c732-4909-b0d7-9a7e98f66eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a36a33-5fee-408d-8c9b-1354f34587a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bb410a-2714-433f-a0ec-09b21561ce24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d56c636-7464-43b2-b637-e5b07cb6d460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c70375-2cfa-4cff-b1fa-fd9d713fbdf5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4504ce41-ace0-49da-9bc3-b9a83a841df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c217ae6c-5204-41fc-93dd-cbaf5a6258e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293430a5-ebd9-44b3-ad73-5807b549cf1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc43f4af-861a-4fde-bda5-ce51aa22b4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6f9cc9-7e53-46a2-978d-14b2fdbb0ad2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a061be48-a0e4-475b-a2f0-c3ec7fba1764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19982700-02f8-4670-8f8b-23a0860f91e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ed03f0-184e-45c2-8c73-d163e59925ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e37981d-3ba9-4c73-940a-ece069eaac7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7548723c-c6e4-4433-aba3-37b1207c60bf",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ecbaf6c-9032-4450-92e8-b9c5172e95b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e86085c1-ab11-451a-8126-7df77678a422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf456c3-ed1c-4fd1-bbc2-8d790d0d0fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f18b5db1-ca20-453f-addd-81f1f37ac5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e10d35-06d4-4724-ba8f-8c1b2473c373",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52c0c1d-36d2-47f9-ac4c-650370e3fbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5e5714-ea02-460c-91ba-26783d00adc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a144235-b8db-4d9d-827e-6f96956fe467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a0333a1-06f2-4cd0-853a-e578fd509159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d988a79c-b590-43f2-8adc-c260daa057f1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2845e33e-8a2a-4b1c-9246-d5bf4a34847a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e87a7e-b2d1-450e-9041-ad367e9abe3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab240771-9312-40d9-81c6-bf8c809d4e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "469335d8-a248-4226-bab1-044a737d61f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7798785-46b4-4902-800d-3d6290e748dd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af15b54c-53c4-40e8-812d-b574f43b1079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b9d5dd-a65c-4910-af59-01bf89ade0fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80830bc-51cd-4bc4-bc7b-79c9a1feca6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe73b795-4703-4235-a009-989dd6a1b984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2498972d-af26-4277-8168-849de1bc11fa",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc6e4cd-f68c-4d0e-a2d1-687720eb451c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9947de-c8dc-4e6b-887d-203a549de2a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a206bb02-a167-4586-99ea-7c18ab68338f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c0c9857-6a14-4f59-a387-e4224e1cc946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1628210b-0106-4dc2-bc42-bc4cb7229e00",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4224bc-e50d-437c-aa32-9ef0bb695da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6b4f8c1-30a3-4f39-9ee8-e0e3d2615f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b83173-5839-4173-a871-ed350f923dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c11760c-0646-4653-a56b-2fa3dc0eaff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf91c5d-01ae-4679-87a8-2879b0a55bdd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d587499-977e-4577-8b4f-42e96e7c6b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93de9c16-5f16-4e67-b676-3d227b5e3413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ab86d1-5268-4d02-a698-7216953752b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92c9494e-dac5-4211-a50f-6bc3fd9c2177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6145adf3-90f6-4eb0-acdb-4385fe217f70",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f015b842-6917-49a5-b2df-6ecc2228c9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0c45f8-b374-4495-926e-a50f0c4fc78e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1f9989-ef79-4d6b-801f-06393e78135e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5150721-5b6a-442d-8c97-66a1d6010608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3baf6dd-3fd3-495c-b8e2-033ca06e9eee",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7d7147-34dc-4e53-948b-b2c3b70c1f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "542e26ce-9e37-4bab-889b-736c69f4f8b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368bb6cd-16bc-4d2d-871d-ad1c8a44a678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb11434-92f4-4943-a3bb-36a0a2deedc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfadacf-764f-4fbd-ad3c-289b6de589d8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4766878b-f421-442c-8144-fe174f5363ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "684db77c-510f-45cb-8dc0-8c2e6c18e5e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ee89b5-85f4-41b9-8e6c-8c7834bf49ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa2a209-7e3d-4ffb-a843-a059c7d93e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e236659-b0bb-419e-b02a-13d2daffacae",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77bc929-ef51-40e2-8c72-e3ebee8495b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2e7219-90b5-474f-abc1-92212ad9007a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13da3119-06c6-42b4-8246-7b9ea3c3388a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0870774d-27f7-4b7b-a9f5-e02f9d9b47ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c6b41f-9f6a-481b-8a78-635054a4e536",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39080ac1-20b5-49df-8129-1670b7cf22b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb54a0b-18bd-4653-afba-353cd912e09a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f6bb83-b9ff-441a-b0b8-3be7636d0b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c71befb-eda1-483e-90d5-68b8b366b49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f505dd0-933c-4676-8724-92022b0353bb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad1b9a8-98a4-4d18-a122-7d88a38cd96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3eb321b-547e-4c72-ab9a-39145b2afbba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddd4e0d-2962-48c7-a0b6-d318cabf2150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29d3ab84-046d-4d4b-94a5-5e3f9f810a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee38a19-4502-4e66-ab84-9eab25da3b5a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d8bc90-5ead-42e5-b5ad-0d192265301a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a07f3a-e84c-4fab-bbf4-9ee9a988f85e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b828788-d9fb-46d1-975b-127f7b963496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6570898c-3532-4545-8737-e82e7a1377a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95bb0a62-7cfb-419f-ae6e-b12a3e42bb20",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f445e29-086a-4bdd-8d05-bfa5579a5a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1254c63c-cce9-44ae-b7d2-1276297b408b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c951ee-4fd7-4522-b7af-ae3f6737c1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "268524f8-4e3e-45a6-94d7-1804d5b07c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661781fa-f2a5-420d-bd0a-5ea796c77403",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab80ffaa-b9ff-4c48-901a-2e0d33e73ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c92f82a-3167-4286-8585-91348057552f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5137e748-7b12-496a-ba46-ef7b270a9e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4299e6-5726-46f1-9d96-bed6646176be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13282a5-54e5-47b3-8d66-01bc87de4da5",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b85e474-594a-45da-894c-38714bcea26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7063598d-7de0-41cc-96fd-97ab595be595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a1f58e-f328-4331-b424-ece7f80b5e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f91439e9-0a99-4d2b-9bf6-2fc6dca52124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48b2c8e-fba2-4695-a91a-48c20cfad521",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadceef2-c591-42cb-915a-f09d62493a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a1b787a-c8ce-4e69-a361-9b57d84aa753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcebb8f-e51a-4d65-9faf-196c39f84f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af20b35d-e955-47c3-9877-c935dbabc104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88a1bae-4717-4c7a-93ca-3fe2af678dc8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52b2106-0952-4c83-bead-181efc0c60da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59baefb7-8a96-4c8a-b277-0cbc067fe5f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773cf2ef-0175-48b7-95b0-85ff256959ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe28cbcf-4d22-4271-a556-9e3af018ed2f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "16a90d7d-5a60-4551-b4b3-f94bf4fcb5a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62c0ff03-eeaa-4c9d-8bc2-5d6082a79d9a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd32f1f3-0749-4906-8f5c-b3e9b0268415",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3d138734-ce16-439d-a359-3c5e983c8779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9718661-6974-41aa-8838-4b243c156934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03a5433d-232c-4ccc-8bbb-4b4d229b6973"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88573412-d4b1-48a0-baae-3f2ac3ca17de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f379bc7e-ac26-467a-9db3-0321674160fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4550316-499c-4f95-8816-6442bf1dcbaf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9abfc3da-8237-4a27-8d80-f586ebbe06c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cabcbb27-40fd-4cbc-98b7-91104fa50eb8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "21eec2e9-f4f7-4417-9677-b922d114fb5f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bce8548-7dc6-4e00-bd38-ee7f2c7ec2e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c8abbe5-9316-46ea-8278-e510f5af6bc2"
            }
          }
        ]
      },
      {
        "id": "f23ee7f7-08f0-4dd7-8ea7-80ae0f4d463e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e6ed8e94-9e9d-49cd-b0f2-c5dff675b205",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0f33e40e-4635-4fba-969a-6ab3d8802674",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d2fcc818-53a2-456d-b5c1-2880a51e09a8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd16265d-e082-43a2-9dec-55b244b8a41b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f615a678-009e-438f-b3c1-accde0a4c9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a195e773-95e3-4787-95cf-9cc0334f99e0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a9d1c2-ded9-4432-88e4-2f0dcab0bf11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cdcdd85-d6b9-487e-b3c0-2f19a0fb19fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf1e001-2cc8-4de5-aee2-242d2548a2d6",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffdefaa-0e4b-496e-a7ec-0e74bfecd1e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e6ce4d-7156-4473-8ed7-994cef83f1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ad2c7d-3c58-4eec-9d19-7005484a0f2f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e80e970-30fb-48d4-8a74-ae7ed8b5f9bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fdb2131-16d9-4c73-a700-85868640ca61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3712180e-b839-420e-9f3b-d4c52ee985c3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ddb49d-5dad-42f2-8fc5-142c084ac8fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2bbdf7-d129-4f3b-bd24-3f6620d9cb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c74246-a71a-4303-86c8-dd204926cf6d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b027630-6092-4569-8612-69c291435af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e5967d-e945-4b8f-bc57-9760e1b72dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc16685-c3c9-43ab-8030-d54f91eaca0b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2057170-a92c-489e-94a6-aa82381bc23b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd315aa-b6f8-4562-9e23-d20c64c0efe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ceb8d4-fc7b-4a02-8adf-a8a62aa3a293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e06bda-1c07-40a7-88fd-38858d3e4e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c881598-e152-4435-b6cd-184011b0c09b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55637e19-ce37-4650-9774-d76c58bcfc43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85376c54-1678-4cf7-ad28-f8bb55f9bf59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b342b6b-c245-4bd6-80ba-cc38dbfd870d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028f9d09-fa24-46b2-b7c1-817fe01b110c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b8c4e1-0387-4735-a57b-d9e36e4e78be",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9e1edf-fac8-4a43-90ed-c23fc415b29a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f879761-9a33-47f8-9f32-c41f6e5edd51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d886b44a-246c-424d-90dc-8e27f81edb99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5b4c5f-f21e-48bb-82cb-d2b31037f533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3b2929-3b14-47d2-9237-5db9b6264c0a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fbe3e3-9320-4cff-b3c7-50c4238fc4cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "270a4c0e-8049-41b4-ba3d-4c8e0a3e005f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16358a87-472f-4733-9c8f-f8e25d37ab28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1231e764-758c-4bad-9c39-ecdda63cb768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af67956b-d2e7-48f7-a214-a1b02223ed97",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cc873b-ae69-4fc2-b28c-88e93ef6a1b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff11cdd-41b9-414d-bdba-f75c05de7079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d07b98-5c27-45cc-baad-65dcba99b45d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52cdc776-2159-486c-ba30-93e55f557903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c16e186-1121-41de-83e6-bd028cbf207a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38273c48-7e37-4a68-b40e-19b1947140e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "969cdda9-9306-47db-a59a-5615071366dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca5c20e-1b1e-4006-9f48-e2fcfba8d098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4226603e-b571-42fa-ae83-ea27603b5db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8d083f-7238-455d-849d-a23954cdef8d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22e84f1-fdd2-459e-97a0-be435ba68a85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5ea50c5-de6f-4630-b02d-b2c81ab19034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f721d7-af41-4d85-af33-4e49c8d6d0f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a6f44f-9782-4175-998e-65a6ff5019aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20dbf4c5-2abb-422a-b1d5-212b8f8adc4c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb36086-291a-4c49-a8e9-169a913a00f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92fd5bc5-0c14-4e89-9a45-5568ca95d09f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40a703d-414d-4a75-9f44-f3c5f53643b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096ebaa8-b895-497c-850d-d019641896ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953891b4-35f4-4c8b-bf17-93288ae2ae6a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22400f76-8644-4507-9a98-737a5207e86b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dca7e98-da0f-4651-8a55-4bbd04772c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fcc49c2-5b3c-41d0-98c4-48fc951b3588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb2edab-f0b1-48da-85de-7de8c76fcae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bfb627-1a24-4d7a-a4ce-096f4927ea9c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ac8a73-5ca4-4a5c-a551-6547d617b1e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e805424-4ba2-4979-8410-d2538fb0fa6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7c2047-6bcd-4d5f-8427-a0503ad3e847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72f52f3-2cf5-4650-9a30-05f5791c8973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1280fc3-bb9f-47a4-b989-6b87817f7dea",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ab2a80-7a26-48cc-a16c-4a551b5cb61d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a40d16-caad-43d9-a895-788bb94a9740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a171cc-8b2e-470e-bed3-6bcddf73c68a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f64a742-1ed3-4640-81cc-1e26c7b6c540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbc15b5-b3e8-4551-a127-65a69d035879",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc65fcc-1b45-48e0-b31b-b3b8e5109f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ede4f0-f9f7-4b6f-b053-baf36fd37622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13739718-2b29-4a0c-9cac-e47ab9a7f25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97446630-e143-47fd-b8a6-d79b4d405a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80fec4a-798d-48b8-ab6b-102cd20d3110",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8669eb-0d52-4079-99f2-0336da3f6cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e987f7c-68f5-4033-833f-3393021fdb66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f0ffe5-83a1-4c5f-9e6e-d0ad216434b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b24632-b5b7-4f51-b2b7-b5aa2dec320f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32d1410-a492-4f37-ab03-3c30cf77da00",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3b5d10-9124-412d-a35c-b086cbf437f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc54e609-7c90-457e-8943-786d09981a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c9281d-d043-46c7-8907-db5b083fb238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b85379c8-10cf-4e78-80d9-841d3244a253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d9b850-0ded-473e-892e-6a3f4b35ae16",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92363d5f-2bb2-49e9-a32b-3367bb904dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf3bfd8-33a6-4ba6-96be-9a6e7e1e301a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec7c6b5-b391-4e00-a55f-601824928710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b798ef4-94ef-4b79-958d-440d041ed682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7f606c-82a8-4cb8-8342-abac2f8a4856",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd3d2a4-b655-4a71-bc06-3e7582112d49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24ad110-e07b-4caf-a202-eeadc664b9cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7831fa20-e60a-4f57-ba78-fc8f8b7e6d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a94c34f-6eef-4e66-b882-41d3801d3d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4678714f-d6d0-4ec4-a9c2-008a38bd0b10",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90d27ad-e0cc-416f-9139-07203ddbcdec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4861fd81-842d-4290-8707-e19821710b74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d917da7-4ee9-4633-bc60-1ef65bbc197c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c69d163-2246-4e55-8f92-9e8b17b20586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe289d5-113b-486e-9e07-c3e35e5139ca",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9a7783-a974-4788-a175-66e63a4e2eb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd36b455-7526-4906-8d42-70a1eb987c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb9b0ef-1e5c-4a23-ba4f-8240a9d42dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ff07d2-57f4-46bb-9a53-75db23ab17e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eee7f88-7409-43de-8909-f62111252350",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c890a3db-6945-42de-b9d7-3097cbba76a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a16d23f-7848-45d6-b43c-7bf6eeba8387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d6dc18-8e90-403d-b8e2-bd5f6110da81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c07b356-786b-4526-b648-2fbb75cced11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a97165-578a-44e7-9b23-857693ec9a31",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fada8f53-144f-48e8-9947-5d30a91bcc08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6db86cba-8ecd-4432-b7f6-ad037f22dbce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "932b6fc9-0e59-46f3-b20f-73b5f7de1fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd91326-b58e-4b6e-8292-21afe1ac058f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4f5dde-c858-475a-a666-d974917b9d94",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c73dce-bb42-4105-894d-38bed10d1b7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abbbb284-fd73-4bf2-b683-9fe5390de50c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e6781a-30eb-4327-b316-e9b7bedbb376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a40155-d23f-4c6e-a3da-04285605d4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583bc723-d126-4804-b34a-4b786649ce3d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871e27b4-b70f-4d67-a631-3f492008fdd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f090fe-cf8e-40dc-9c6c-06e56d351999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0cfa33-d3a2-4316-a237-b6b91f1c1047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b5bccd-10fe-4db0-9626-ded5a60c9ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2deb11ed-fdc2-4a21-8c3b-f6feaedb14b5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3309cad5-8de0-484d-ba0d-0ba533e869e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ad115e9-695d-43e7-922a-28614f5957a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd856bb-aec6-4946-a57e-20e29025a36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64ed6f85-dfe6-4a09-8cd3-9ddb52deb457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82fc0d8c-7830-4cb6-90a6-37cf1382ce7c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08d53be-65d8-46bb-b8ac-accda311618c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ded6521-4295-40c8-8829-accef9f6bb39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdcdfe5-44c3-47f3-ba74-d426d6ca2a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397a0138-70fa-4ca3-ab7b-bd3b5628104f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309e386b-6c11-4c5e-a104-aafe5a0169b7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806b7465-3e88-4b4d-b35f-da876b815f36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a955bc56-c1e5-4de3-8eb9-2c46f090f1fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e063bc-e657-44fa-b6cb-2c5dfcb22a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9db4be3-142a-40d9-87ab-6908f60a79b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d2a8d5-f3f5-4e1e-a738-db2140deee14",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47366900-1ebb-4e40-a35e-133d87b77d62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03260e4a-f575-4ac6-ad70-be97697436d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a52dec-a956-41de-9a22-cd97d7c91c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f48ad5-a37b-4b23-a8be-bd75e5278621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7ce194-87e6-4ebf-a745-f55b450af562",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ea8e3b-c3f0-4191-877b-6b17e49128b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c7cd373-0bf3-473f-8604-6a18a5fec574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66eefd34-ba59-48bb-93f8-d77a042f758a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075d3f3e-ccba-43e6-98db-b0b04fa8dfed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39b8909-b07a-4cac-8079-66cdb3594cb7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16da8e7-82f0-43b3-9d19-9962cda8eaf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ffdb286-6870-4f65-8afa-1e5ad224eb9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1fddbb1-9d2e-4813-aea9-e1fc03b3c198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d47de3-9f65-4da6-9289-e1f82a69d6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02865f2-e348-459a-81cb-d602a30af279",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28170b85-7489-4826-b73c-8855de75cdbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4befbd37-3435-4c59-a243-29a1da29e928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1916052-a5ef-4898-9b07-c6ab012fc376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c0e423-3c18-416d-bc35-c858ce674af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853d17a7-e3ad-42c1-897a-3c27dde873b6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad1ba8e-cb65-4266-be56-1d4b179670ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd9aded4-6af4-4f6b-8409-1c2eb9b2f3c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72da9047-3461-4b08-a890-d198e1f75ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45966bf2-c703-42b5-95ce-b6cde6c8e3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aee6860-915d-4c2d-9587-1c1efef0cb23",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590a66eb-9651-4d40-9bd6-e70442267f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d997088e-554b-4189-838e-d5222e330df5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abea30e9-f8e6-4d05-bef4-43b9cc5c8992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444d062f-7667-4612-b1a2-99a311f1a392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb7310e-0738-460d-ae62-ede5998bed08",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baeef504-8217-4874-8233-c6c03ac158a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39ddb86b-1eba-4a28-a277-355a1114eead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d027a8-52c9-48ce-a238-5e6cb800f110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d8a814-7849-4f80-a023-9920888f5cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa10a4a-a4ac-40a2-8f8f-2d127f7f516a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26604a22-c7ab-4135-a1d3-32805a808ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8cfb52f-fe09-416b-aa06-c03ef3fb637d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4178ec92-84f7-49ea-a2bc-41eb5a56fa71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec784ae4-331e-428e-bb67-017eab868e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430f6921-bd3e-4280-9174-539f3a0937e2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6d7d3f-f38e-4674-a34b-f7809e6c3a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f46fda-567a-4446-a50e-206e6b9f0a3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36638c70-b549-45f9-995e-861e149b6d00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99162d4-a8a7-4e0b-b446-bd00f09bd373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270431f8-2bfe-4e77-8122-95ce222f23e6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1d9c13-a599-47e4-8e2d-a7d7c5d3d872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338be5b0-d2aa-4bf5-bcd8-c99dfe9584fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "971d6334-28b6-4809-97f9-b38f6c887f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd6d9a24-54ca-491c-bc54-5dea6f071e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fce4f15-27d7-4e35-900c-a13c2d8ccc59",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d405b6-e4bd-4b95-8f17-0d86adc6c731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc4f3b3-009e-4291-b805-66fe8cecc0b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a21087-513c-4fb3-85f0-be2ff57c2413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b052730d-4476-45ee-9cad-ba98a8a3d6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90043921-ec9a-46f8-bd5d-a777b1ef471a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72adc624-ca28-4620-bf0c-34b2a62049b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4336aef-77f8-476c-9be6-12bf4b32262d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45690ee0-50df-464d-9cbf-805bb8711611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606a8982-24c6-45c1-bf4d-0d75f76ce948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18b331f-7471-4bf8-8b17-2df2edbfd3ea",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7e24cc-a10f-40ba-a84a-7665631dd5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814063e6-8550-462b-aab5-30b2dcee0b57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e53892-8a67-4437-881c-0f4d1c96384b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a078ffb-67c7-40b6-9af1-b74ff621f50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b4642f-b00e-4228-a581-19567adcd963",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3abee7c-cf70-4157-b46e-5db8edb1c882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5192d035-827c-42fc-b6ef-ea0e256af1fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "256ec201-a043-4260-83f1-b44115672c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad7a68c7-4550-4eb9-b1da-8d6a3f3e86b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e3e128-8ea4-426e-b6d4-49dc97fb0d5a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138dabf5-2936-4fa9-9878-15bf093e6808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a11835da-c6c0-4467-9a12-f8a20414307c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8125a85-d29d-4c71-a710-5fdb46175576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c780d5f8-fe81-4560-a220-6d65f8466361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e87dae-90a1-4864-bcfb-59ea710d340f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c82c09-d5d4-4078-86d6-0e1fc2d410ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ced36c8-0a12-4b82-b6f9-ff5287e0a4fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0c23e8-da7d-4ba7-8586-9db676aed8da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7dd24d1-bae7-4fe3-b62c-29c221b6fb79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2ec482-5b9d-4c80-a384-120d9b5bd310",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b216d6-d8da-408f-998f-a0a0c27430d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b191d78-ee59-463f-95fe-1f8ca23ee0a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bf9ade-d512-49ac-9cfd-55b35946bbbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dacc5592-0a81-4433-b8be-f34d1c4ca5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be22b53-276d-45b1-b1be-be8e5fcf3881",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f92ded2-dc3b-4a87-83c2-1a504a061cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10dfd322-fb74-471a-b28e-f30dc2e7087d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5dc1f6-787f-44a7-b6f7-8c913ea695e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4824c81-83ce-4d9d-abad-407b0324ee1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68d48d7-a65d-4a32-962e-7d0406df01b6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14d85e4-3056-4471-b012-fc7d7cd23142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0addc610-a1df-47f5-88e5-c81c76adba32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "025356cf-9108-47de-9145-76ab030d9d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e86dd5-ab8f-4cc8-96b8-cecbc6a7e2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06623c6f-dc73-44cb-a643-89b6793772be",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e3b861-cabf-4e27-a8cf-d9606f3360ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5de99b1-2c22-4f49-b3cb-7ea32b5c8727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "129a8524-f8cc-4440-be97-b3bc559b0cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb1f102-7fde-4440-b1d0-e52b53bd98a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6afdf20b-536f-43a4-b2bf-f8768b18c06e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a87f4f0-6736-4f3b-b44b-486a28c1e742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26da1cf4-5c0a-4402-8500-feba7a68ed23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ef8d54-cc9b-43bf-9bc9-5d176a69aec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b95894d3-86da-493c-a5ad-a6a6ea4a31c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e739ee23-3e78-43c5-98ff-433ddf9398b5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441fdefd-1ec6-4795-abd2-974b3a78e7fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99dab80f-40e6-44cf-99ac-d3fea7f6073e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2847cf77-31c4-4ec0-aacf-396d3ffdf3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "650ee907-4a47-489e-ba8a-3b0363c855b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a38936-48f1-4525-92b5-f1bad2e4e68d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145782b4-e552-4604-9ad6-8d23568c433e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3256eb1b-3639-4d63-8582-bc78968a9946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3da9255-0347-44ff-9c7a-63ddf2e26a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c715d470-084f-4119-a05c-4dc86494421a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849dff71-97c4-46b4-8d0b-0e4e8c8ef861",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cccb2615-1b77-4346-95d3-1383c3763fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02bbe37e-aea5-4c15-834c-3e9109fecc2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a7aeec-fbcb-48de-ba78-c3ef2ff0d52f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f60dbb2-7214-4821-9662-84e73beda912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3854c4-c952-424b-81b9-d6a05754c6c6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f2de35-8062-48e9-ac12-b701098899ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcdbbc53-92b3-4d16-877b-79e911812b51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fecbc541-f991-4d68-b61a-952baf9a6b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c42cd22-866f-4795-aefe-6c5b12118ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f7b375-a144-4549-a897-d26862c4def4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c797e152-1c8c-41b0-b097-b2efdbba0064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f09b4d-1250-4925-93fd-bc63a5ed3d9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1278d13c-f660-41eb-a0dd-c131ef35e751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "743c1938-d42f-4f76-b062-e9c829ccec7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85f29aa-7db9-4b6b-9e2f-38b6910b8965",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28233537-aae9-4be9-b38f-2cc0fb09a100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "022c993e-768b-484f-8eb6-aa39a38a361d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e7eab1-792d-4987-9b78-faebeb5b93da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c936616-6d39-4d13-8ab6-6b032488965b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe7a903-98af-4fe7-932f-9c07d638ab52",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b4e29f-cb2a-4d2b-ad76-bb59ebfe4315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4982d83f-4018-4c96-83b0-25ed55725cd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9242ca-1f0d-41a0-adff-f0270ff2e680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4863d185-b2d9-4f8e-bf5e-6d5b34e22455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610e2c28-cba0-4032-b068-b59149a0e384",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df80c3a2-ff51-4060-a23b-056f2b1f07a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f473c49-8730-4577-946f-69a7d8d06e97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73272b3-e43f-4f14-8ae4-a6fd79ced80d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3d91bf-1671-4536-a1df-a878cc99093e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fc4d53-d44c-46e2-bf97-6c118928d2da",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af55fd7-9048-4e56-adb1-b5e3cfaa2b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e90d61e-a389-4ea4-96c7-7b17a0f48010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0cdbc0-d61a-41e7-9ea1-c126e5e247df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f215925f-a380-479e-a4bd-97a253fd95aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3bfc182-1914-4bb0-b3e8-7f66ed98596d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c9d553-65ea-4b22-8e80-be636ca9e7bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "155dc0df-7a26-4337-82ad-1a223dc6d15e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6decc67-39c6-48b8-bfad-cf6a4d7704fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c468ba-4e4b-4aa1-a096-9b953f417214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd80eaa5-dcd4-47e2-9296-b97e784dba20",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6822c938-c0a9-4e6d-9e8b-35cca8dff371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562dfed7-758e-418e-b71c-24c5ab60e31c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea65c204-efc9-4999-aff1-597a0061c690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52e9b99-5c88-4353-b99f-f6b40353fe02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6a1cdf-8b8d-4b65-99ae-51ac39349fd0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a0c766-bab9-442d-9f22-4927fa55a43f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6260095e-696e-4e7f-a895-b4f7ad10e963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2bd89c-100d-489c-810c-a3295bb1a31f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c3fb25-32b9-4ace-866b-80d78c328d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4acc6e83-ab69-4638-b0e7-2995df5700e8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b81c073-abdb-4110-ac99-2e7ffd5d48d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "249b7955-c2fd-4328-9efb-9ad20a547093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a2d420-fc3b-4613-829b-52292f906ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ebd166-d1dd-48e8-a476-2a68eeee4c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c1df60-9003-4bb0-8dd1-c327f6a01dfe",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51ab5db-acb7-4ae6-bbc7-20bb1325ac96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b40fc61f-6b7c-4b2b-98f0-12550e50be11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24097fac-74a0-4868-9fd2-3e87a562f739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce95e0e-c8dd-4489-be50-52e6119b7174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8545c3f2-e4cb-47e2-98c6-776efcd19c0b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dacd3cf3-b843-4c1c-87ac-60130ca8c5ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4487eac8-3edc-4805-af94-1fd5c35b5ade"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb33354-cb91-4c54-b5ea-1e9226f09eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ead22c-9109-4820-9021-580cd78b91e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc6602a-68c0-4ace-b4d0-04697eef034b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f019717-dc44-48c8-a6cb-5197e2077f05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df99603c-ea42-4b30-98c9-a7c59e149fef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d1f72e-981f-4718-9e7e-9c33f59bf31f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c312f09-f648-4c0b-b6d5-d2823ae8585b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86c3b7e-9cec-492d-afd6-0844dfdd01d5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da803888-d690-4470-ba57-6b040435122e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e8a3c13-c802-4408-90ae-f5b74614fa10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c002bdef-5b11-4e25-bffe-cea4c32b1a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f533ecd-67c1-4861-b9f4-437a619d2135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8c0d04-131a-4af3-91e3-a6640acab788",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a76e66-3616-4e76-ae47-f93595e9db41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23e9bf3f-1c6b-45cd-ad0a-c2752e0bad84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0237e8a6-34d3-4b10-8b63-5ac78b9b8dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f795ccf1-7394-4de3-b4b5-e881bb977e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e68e940-3747-4a6f-9caa-ebb61e063cd5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db8d830-6620-4483-addd-094ad57def8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0646c56f-57b4-4a34-820e-d46975f301e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0014dcf-ee6f-42ea-a1b7-5185f699a48a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2c599b-f051-4d20-94e6-3e68a0043baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6bcb29-240f-47e6-b231-654e3d43ca56",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc81f600-845d-4613-a74e-997d69a0de6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "389fb565-cc57-4019-81af-f7804fbd024c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d718f258-b583-4c1b-85b0-8b18ceb90ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e9ccbd-c9e6-40e7-944c-804287fe63d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4488ff-841c-439b-b1c8-a05e212ca6b3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e42f928-7f28-4faa-bfb6-df7fbafb4571",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4c9ae10-7f0d-4952-9e37-f901153bb199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a44c5aa-c85d-42d7-9171-fcf37dd44ca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aebf515-5298-4158-96be-8e35a9871221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9cc468-ccf5-4db1-94c8-d99971d9e8d0",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f26f00-7eab-4a74-8518-3d3f86775bae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "394687ed-9635-4498-9365-334cd289b2d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75202b1-9243-4550-8290-c7a2c979edd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6640b6d2-9c3e-4d71-adad-8fe77e17aaf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ec4867-eba9-4141-93fc-1c5f967a1184",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9775ddcf-62aa-472c-a47c-594f845cbf6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61c2f644-8397-4fe1-b32c-b96531c592ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0aba37d-d4ed-4bf7-a998-617000904d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6eb815b-5708-43c1-8604-164ff7ece169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a04884-550b-4f17-a598-97521b66adda",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93134e19-4969-44ef-a99e-0e28cc4d54f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12d47036-8285-417a-8669-eccebfe627f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00f5d50-92a0-41db-8edf-33f50cccd116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33eec08e-37d1-4b1e-8dad-70221f4a00c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd92e73b-1503-4d4d-b2ee-47b7abf66e5b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7062462-8839-4652-93cc-dfe8c8b690ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e2362b3-297f-493f-b8ad-ecdb99ac700b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9690e694-b35b-4a65-986c-dc97d313f4d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a72d168-4fdb-45be-9ece-a2638bf0d9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4609535c-5506-490d-87cb-8914ec546d6b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d96a926-df7e-4b50-af11-f1209e10d8b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "001dfec7-dc3b-4a74-8f74-df9acfecfc89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16d1038-4313-4323-97b1-406e3d9ec3eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f767ab-2c79-48e9-808a-d54c77407a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed4bc6b-ae57-4723-a6f8-900dbeb71d81",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a800bb03-b8db-4bbc-96e4-3c2a17a28dff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66662090-6f8b-4a0e-99aa-155432001f5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20392a3-e3d7-4576-b88d-99278650abd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46629e34-9800-41e7-b914-d01478e8bf2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cbe636b-09fd-4c8a-a75c-18bf9fd597b3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04b68a5-ab27-4e4d-a6d8-907b847e833f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32b5b2f1-19fa-42f3-aaef-f1a8b8398fd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bd8392-3699-4b59-b793-1941e8b35c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368ab14a-3813-4f80-a084-906468c5d96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3288de-217b-4dc4-b73b-499528a57e4a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8d9411-0a13-4440-85dc-23ccee09b838",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c702b35b-fcc9-496c-b3be-780a246994bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cf8153-88b2-4552-b91b-5586ef8ba7a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d68a8d-5d6b-4370-852b-f710a3d4f459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf48b15-d786-4952-b960-ff42664fba34",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b9e43a-e1f9-4a6e-a8d4-5c18128c40a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ade7954d-93f5-4e08-ac2e-634027e4c8af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cb16c0-9877-46d4-ad27-9d28790a984a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b832ef-3c44-4e75-8bb8-15172cd5fbb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63eae1c3-a163-47be-a3bf-3666236938e8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3dd9a5-53cc-47f6-a0c4-51aa9aa588e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6095aaaf-40d9-4d90-b64b-8113365cebda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cdc892-5bf0-4048-8330-906ccd5e6e7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8fa5569-138a-4cae-93c4-85ff4b53b08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e26f5c7-7392-4899-8a67-bfac04900072",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b647db-a17a-4750-89b7-9f8ddaae9797",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "830517df-d23e-42de-920f-8b31660c3bdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56b93a7-ec03-49b3-810e-24aa0f3dbb32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adcb0d2e-1a3e-4a77-b1e2-489d22c17a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee73c187-a6a5-4d19-a83b-157f873627ce",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f535dd62-5b59-4906-a37b-a7847c663bd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e64322d1-990e-4d90-aa2f-db8ad8ea6cee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "275fd7ef-0f04-41e5-9f35-ef625c28356e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4ada85-de4b-4713-971d-46615a711ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7338d48f-bb64-4168-a12a-cfbaba64632a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d663a7e-7dce-42d0-b99f-0f6f9afeadd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25084246-82fc-4280-b163-07d800cb9b7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6ab262-0847-4e7c-a081-c4c9fc4bdfa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9210ffde-d215-47c1-8277-5b9b05e22a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d21bc09-a3a2-4836-a8a5-eb62124b850b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80af382d-65df-4654-9505-f5bfa971da2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3292ad67-9182-4149-97f2-39285dcc33bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee53b5fc-d1b3-41db-a889-da53425c3e82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b64965-86f2-464c-a277-3fc7c33656d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb03c62-266b-4180-9543-1c0437bd27a7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfdd8108-48e0-46e8-a411-23e55ba6a769",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c71946bc-5143-4476-97bb-cbfc23a76daf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb63c36-edb5-482a-91c4-d090577bb4a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09efaa3d-bc6b-4336-b8ac-383f6565d33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7209f3a8-3343-479a-be55-c446279b299b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132ab345-44c9-46f9-9cd9-7c8129f0523b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e3eb58d-f9cb-4ca4-b2aa-cacb94870bed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd03fba-d9d9-47f5-b273-df4f31214549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "259e0d1d-05b1-4df6-9f04-1f30ebcde214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ddaac9d-0e92-4167-9e15-e980d644b3e7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065d4ca4-ea74-41a9-a6d0-aabffaa4348b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9272165-12fd-4036-b5f5-97577f1db8eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2676f7-2e54-4f03-aecc-962212c1e643",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c53454c-ec29-4db5-8d5e-fc046263506c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7ffa3d-6482-4a7c-af0a-bbc8bcf3ad38",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65fba80f-feb5-4d55-86f5-f94999bfed9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c051e02b-0050-4e12-8b26-4f1f00b23f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9934d7-dde9-4f89-8ee1-0abaa8a9adb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7188cb82-c142-4036-a985-01b40db71f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab0b990-638b-4f46-8d5b-17eb890e3db2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2a98c7-e3c9-403b-b800-45c6292fe905",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d07b96a-957f-4e83-bafe-0fe835d94858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f46c5fb-502d-4ccd-97a3-65bd7bc3005e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3caed0e5-d764-4388-8289-cdde596b1ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ad2c95-8e86-4ca0-811f-de648e7e2a61",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ce0330-48dc-40f5-adb3-05c5b93273cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56e8c856-d5fe-4c27-9d94-f46eed5966c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad028b8-029a-40e3-a0c8-c0678037a5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbdaaa76-3d58-4345-a0d8-55b63375ff07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb68b71-7253-4e7e-a9f6-69d3671a87a2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c39531-47b7-4e44-b5b7-37195be7e29c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b723856-7280-4a98-80d5-98345f05d133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c7be05-807d-4b94-8f73-4c2fcbc34f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b6a9d0-abe2-497a-898a-a018aa674947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f5d277-0cac-4623-afa4-a4d52012a4ad",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9796e4-eea7-4963-a8bf-0323ef844e36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15e6ce36-f33e-461e-9b63-a412080ddc3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf592f2c-1778-4940-a7ed-07b54664ad79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d75ed6d-d389-48fd-8fa7-52b76f4fea3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4fce4d-9d96-4adb-ab38-090b40db1e05",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab548d5-2566-4bb1-9e85-0ffe8898e9dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a841c999-2db5-4ff0-8cb6-07c81ce7aa98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff87163-f01e-4f9a-9ce1-c4a11e0e093d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a4054d-b47e-4a0a-9114-43772b239efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cf111d-baa3-458c-8d5c-ea55470873ec",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e9bdf6-d260-4626-91c2-059bc78e0f77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1271f93d-f330-4708-b29f-3662de4a0f5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4447d1b8-9ae5-461c-9136-ac774ca6b3a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b779890-eda3-47d5-af9e-e8ea60767df7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1167e2da-8135-4898-a09f-f27b6e36fd06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d2de697-a415-41a4-b315-5291b78ca89a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b89177f5-990f-49a4-8655-5fd5fbddb898",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5a953cb-57cc-4819-90c1-f4f2d71b4901"
                    }
                  }
                ]
              },
              {
                "id": "09e7676c-9f2a-45d4-a9f0-ce31358b334b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5402c18d-65d2-45e6-b96d-87db4df7bdbe",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f658c9d-4312-40f3-b6e4-22a45facd9df",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d7528a77-72c7-4d41-bc79-1c84828ca76a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2457fbbe-aed7-4c2c-89ac-38a56e2b4338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0eae9d9-cbc0-470c-875b-5cd68a0d6e9e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2baaa2e6-d8b8-4c1d-9cb1-acc81a154fdd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4546e433-9c77-461c-9b77-41947035958a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc2827e3-5a03-4806-8b02-2a9ce5e72558",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad4f3b17-943a-4b4f-83e3-23340b4089a4"
                    }
                  }
                ]
              },
              {
                "id": "82004dbe-bb43-4595-b6d7-4c7aac8fed30",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4334dff6-e542-413f-b9d0-135006a7fcd0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c221adbe-9516-482f-af3f-22063ac56fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "61543863-c2cc-4de6-8bbd-ba71b6825a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c217a4-b150-4238-b3c1-0b49cd5e48e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f2e251-2fbb-4b87-aafd-e35a65818313"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9201bf2d-6327-402e-8aa3-bb0018e01577",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e9013395-dbc9-4c28-86c1-d3d9991d1542",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85a15a97-08fc-4d1e-a4ca-12937c654c1d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "02ca5a18-495f-4f8b-92a8-e2df34ee754b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4da1675c-67de-4209-b171-856dcb1e896c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc5043bd-6361-4000-8afb-0a1fbe9d8238"
                    }
                  }
                ]
              },
              {
                "id": "a078ff19-6549-483c-972f-c96243de4773",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a71267e4-9029-4a22-aabc-27729589ea2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "08938d43-a442-4d9a-86a7-77eba0fd8567"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73d0fe6c-d364-44a3-b51c-fab9926ac853",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10d10316-4a88-48c2-8757-f2cdf84f4bda"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6698ce2c-dec9-40f0-a522-3c6cb51b2271",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1cdad167-549a-4ba0-9c59-b2091eea758f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "162d65a1-5a0b-4a73-ac41-af74f97ee1e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e80f5e8b-2752-4f53-9622-f0d5161e317f"
            }
          }
        ]
      },
      {
        "id": "7241e74b-eb61-435d-a35a-f12afb7dc4de",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1b822e2f-e8ee-4a27-83d1-b7a2dbe56281",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c83a32ec-1d3a-47eb-9a06-351b9c6a6111",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "293b5f41-7aae-4646-9294-bfefd846a6e7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38579edb-d505-4c41-8e9b-c5e6d3ea8a4b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0cc5f336-8704-42f6-bde1-c296c1b5ec7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22cd6104-75e2-44d2-824e-ec81dc11d8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5651367-3896-48e2-b33c-7e3d9cf6723f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4a34243-7f5a-4c1c-a7ed-eda2106e1f82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f802978-286d-4149-9bca-6f7db7205e66"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8dc9c33b-4af6-4629-be40-02d21e3b46d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac1bd7b6-bc1c-4c0a-99e3-067fba3fdc51"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a6a8184-8e1a-4481-86cd-d29a8b9ff3ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6ec71b11-3e12-4e3e-a3c0-1675ad76abd8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36914bd8-5ddc-4c1f-9ea5-ac9165f86468",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c88b008-f995-4642-a2fd-9b118b2e118f"
            }
          }
        ]
      },
      {
        "id": "911b8bab-7571-435c-9032-263cd97cee9b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a63fc491-1e2b-461e-a047-41c2bce8ab59",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1fcdc48e-c3bf-4265-93fb-a0e287b33f0e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa2fd573-e3c9-4b58-af19-e2d573b266f2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d58ef7e-1c04-4da9-9ad1-10270607a125",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "690e001d-d409-4dd3-9e46-90602de1f7d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a630e1a-adcb-4f2a-bc2c-592e7a0007a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "235bc2f1-27f7-46c5-82ac-c77510eaa872"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "136a0d03-e06c-4a9d-aa95-14e79040be45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "661c622b-c0c5-4c7d-a21b-e1ebd78de9ad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "674408d0-695f-4666-a306-392ae29e8e22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46b64fa5-0ec2-4f5a-8b18-72737fbd6724"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ce67bc1-c357-4a9d-bc99-36e63fccae7e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "974b685b-437e-41c0-b760-80b6c6ad4024"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ce9614d-9403-47e6-bba4-ab4a469ce991",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0369008a-ab7d-4c8e-80e3-32388555b516"
            }
          }
        ]
      },
      {
        "id": "b7c4c847-a3bf-4a95-ba93-cde81e4c9ff8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "11048c5a-d7e1-42ac-a818-7f817b09a390",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8bef4491-5c04-4b1c-8352-cfead7c54560",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c5ebe3a-7d8d-4c73-b9f5-aeed33cad5d3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1479d7-498c-4c9b-8efc-b0d03fe4e77c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7613cec9-dc5c-4a15-937d-2821c9a0f53a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe470f8-18bc-4464-acc6-9ef87e3b7dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e4c9716-ec9f-43ef-b6fe-45e13aa0448a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cca1c414-06b1-49d4-8ed6-4e109aca0eea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbbdcc27-2db4-4fa9-98a2-46209f422916"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ae1d87d-8b3e-4101-9a33-7452c0c3697c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "701a2c37-e659-432e-9fa8-d231d6a36396"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86ed1a36-5b89-453c-92dc-98afea0165ab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "639f76d0-e2bb-48ad-adc9-75b23b507fa4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e60bdde8-25c9-4b22-b1ee-d55e9844faee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "05ae1d87-00d2-42b6-a4c8-7989793a3bfd"
            }
          }
        ]
      },
      {
        "id": "072b9d41-9cbd-413d-a96a-2fa90056ee2e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f463df1-879f-45c6-86b1-76473d1ee4de",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2c49c50-cabe-4067-b8a7-cad6f70029d4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6211b076-141a-400a-80ce-a04e4ad64cf3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cff70cbc-7148-42f0-8591-e02fcb5523a7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3cd39462-2231-4b90-8140-22f1a1e65a6a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 117.16269841269843,
      "responseMin": 7,
      "responseMax": 10078,
      "responseSd": 685.6392461857621,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1715214973444,
      "completed": 1715215011458
    },
    "executions": [
      {
        "id": "3547c8a7-bcde-469b-a7d4-9818a59cabcf",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8cd5ba33-4701-4d4a-88e6-88bce510334c",
          "httpRequestId": "314fc10a-0207-44ef-bb38-152c9554d483"
        },
        "item": {
          "id": "3547c8a7-bcde-469b-a7d4-9818a59cabcf",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "112c2001-74ca-4a27-bd90-264e084baec1",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "b54b30e1-69ff-41ac-a835-337431fe4224",
        "cursor": {
          "ref": "15a0912a-5574-4a38-ae19-84a6a3363cde",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fba9bb4f-81c6-4e26-bf47-245a95fa3bfe"
        },
        "item": {
          "id": "b54b30e1-69ff-41ac-a835-337431fe4224",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8a3916e4-a1e8-4ab7-adaf-358a8c6ab4af",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "73e6cff4-40ec-481b-85e3-66256715bfbf",
        "cursor": {
          "ref": "cf44161b-c770-4d56-9fbb-677a1cac2142",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "061b5d89-a68d-44be-bc2f-2f1261902373"
        },
        "item": {
          "id": "73e6cff4-40ec-481b-85e3-66256715bfbf",
          "name": "did_json"
        },
        "response": {
          "id": "6431847a-9819-46fc-b453-823a638cc411",
          "status": "OK",
          "code": 200,
          "responseTime": 320,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a394633c-b457-47de-b2c6-acbf7b70d06d",
        "cursor": {
          "ref": "4e70b065-eba1-49bc-beae-f2692a266b0b",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4a28bc04-9a1d-49e4-afc5-2c40840366ee"
        },
        "item": {
          "id": "a394633c-b457-47de-b2c6-acbf7b70d06d",
          "name": "did:invalid"
        },
        "response": {
          "id": "ff815437-ce5e-4473-bfbe-94766fe3f085",
          "status": "Not Found",
          "code": 404,
          "responseTime": 483,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a394633c-b457-47de-b2c6-acbf7b70d06d",
        "cursor": {
          "ref": "4e70b065-eba1-49bc-beae-f2692a266b0b",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4a28bc04-9a1d-49e4-afc5-2c40840366ee"
        },
        "item": {
          "id": "a394633c-b457-47de-b2c6-acbf7b70d06d",
          "name": "did:invalid"
        },
        "response": {
          "id": "ff815437-ce5e-4473-bfbe-94766fe3f085",
          "status": "Not Found",
          "code": 404,
          "responseTime": 483,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99f7c95-edc4-49c2-b5cb-c0ab992f5583",
        "cursor": {
          "ref": "f5d837c4-7dba-4004-a8b2-420d1f6645a6",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "27be1ee9-012c-4647-b4ab-a1034809cfed"
        },
        "item": {
          "id": "c99f7c95-edc4-49c2-b5cb-c0ab992f5583",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f21a009f-cff8-4dfe-8098-f1ca05ab6d14",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91aa9199-1ee0-419c-bfc2-518161397854",
        "cursor": {
          "ref": "f02a2b91-d829-421d-ac16-023e11711803",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8a43341b-52c0-4895-bf31-c3823e760660"
        },
        "item": {
          "id": "91aa9199-1ee0-419c-bfc2-518161397854",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4f89f3e4-48ad-4a02-9890-9e3059ad7bfe",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf72ad34-c6a0-4e49-bc5d-393494fc992e",
        "cursor": {
          "ref": "a0bfcb4e-396d-4c59-9c21-ffc7be8682e0",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "265b9b1e-2019-4d1f-9583-3bf8d06d1657"
        },
        "item": {
          "id": "cf72ad34-c6a0-4e49-bc5d-393494fc992e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "46b91a13-02d5-45b4-aa3d-9757d23f0e62",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7d3840-0e0c-4d80-b164-fb7934cb0b45",
        "cursor": {
          "ref": "9f50dd37-cf20-4c0f-9353-ed8cf151e5fc",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6866b082-bf82-4999-a2ee-18911050339c"
        },
        "item": {
          "id": "cd7d3840-0e0c-4d80-b164-fb7934cb0b45",
          "name": "identifiers"
        },
        "response": {
          "id": "7dd4c767-1ff8-49af-b8ff-0ab5314f9c22",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9a135d-2c75-4c02-9119-68d94cc10a6a",
        "cursor": {
          "ref": "aa37460d-0c6d-4787-a624-a764c995b7e0",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a299cb35-b40e-476a-8d48-9c339b947c39"
        },
        "item": {
          "id": "bb9a135d-2c75-4c02-9119-68d94cc10a6a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c88609ad-56c6-4fb3-8ab6-3a5dd62aca9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2ce131-1768-43ad-ac9d-b496b61a206c",
        "cursor": {
          "ref": "6e07fc2c-d616-4fcc-856a-9794ca6ba390",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "88e91cd7-c770-44ff-8538-cd361e021452"
        },
        "item": {
          "id": "5f2ce131-1768-43ad-ac9d-b496b61a206c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bdf00bcb-adc4-493b-b715-c9d1e99bf03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b488701d-9bad-4300-82d6-6cfcb470eed0",
        "cursor": {
          "ref": "a6ed9b25-cd71-4e19-a459-886bfab34564",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "64a7d5e0-7db6-4193-9122-9ac9dca1d1b5"
        },
        "item": {
          "id": "b488701d-9bad-4300-82d6-6cfcb470eed0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "001fcf04-a483-4bac-900b-403adbc1bee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3623244c-3c8c-48cb-9634-9c2f52f956f5",
        "cursor": {
          "ref": "55f64f5b-8756-433e-8b8e-c5a407697648",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "df0bac9d-b00c-4480-a889-725b9aad32a2"
        },
        "item": {
          "id": "3623244c-3c8c-48cb-9634-9c2f52f956f5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7710f57d-da36-4747-9cc6-64b411602d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6a584f-74a6-47d2-9c52-813b039e1d2e",
        "cursor": {
          "ref": "ae75ed9a-fa91-4637-8203-18bda9c81c6e",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e9fad85c-fa4e-4d10-a962-ad44a6821bb0"
        },
        "item": {
          "id": "ac6a584f-74a6-47d2-9c52-813b039e1d2e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a1155743-f649-4a0b-b3be-77eb7147c9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de17e867-ce99-4fe8-b499-821e8239affb",
        "cursor": {
          "ref": "cba11a6c-6447-4134-84a4-1c8dc5cf2a43",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "85c88f12-1ce7-462f-bd37-87ab12cb5727"
        },
        "item": {
          "id": "de17e867-ce99-4fe8-b499-821e8239affb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "acee096c-4f14-440a-900c-b9cbb1e07b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae035e37-490d-498f-a6ea-5fd7d5d27cfe",
        "cursor": {
          "ref": "783074a9-f200-469b-900a-902a5313ca8f",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "86b72bf8-7bf3-4a14-88f4-ea7cd16d2d58"
        },
        "item": {
          "id": "ae035e37-490d-498f-a6ea-5fd7d5d27cfe",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e4211cd0-a6ab-4fad-ac17-f3336aecbc1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9477c926-ad04-4f7f-8f64-92c8e1c76bf5",
        "cursor": {
          "ref": "772b9a25-0d12-4794-9f6f-b1cb45b7f623",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c48d9b5b-4fc0-4c6b-8c1d-ff025b51e516"
        },
        "item": {
          "id": "9477c926-ad04-4f7f-8f64-92c8e1c76bf5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "70e03ff0-6456-4700-a2b3-fcac9642eeae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f55ac8-4e99-432f-8bef-15463849e4fb",
        "cursor": {
          "ref": "270ddc1b-0141-4403-b24e-46a046f8d960",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cb3e0c5a-57f0-4659-b16d-5be11f0c5b2a"
        },
        "item": {
          "id": "56f55ac8-4e99-432f-8bef-15463849e4fb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ef898174-a44b-47b9-a823-84fb1359cdc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae74ab78-7741-41c4-b981-0d20af6b8eeb",
        "cursor": {
          "ref": "622cedc9-a369-4e34-8efd-cef69a8caa11",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a71eebe3-2bf8-4830-9ecc-167800fddcb3"
        },
        "item": {
          "id": "ae74ab78-7741-41c4-b981-0d20af6b8eeb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5a8ec7ca-e8fa-41e3-b264-77722b89fd60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2014331d-5c4f-496d-a254-0046973743bd",
        "cursor": {
          "ref": "e4627a83-0c11-46ad-b32a-6418fa0b0424",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5529ca20-e3cc-49ec-a56b-659e70ef3d61"
        },
        "item": {
          "id": "2014331d-5c4f-496d-a254-0046973743bd",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "046c66b8-2516-4484-8522-f6790390ba82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430f4ea7-1cf7-4b62-b286-46608e8fd52a",
        "cursor": {
          "ref": "825411f4-2a7e-487b-b917-ce0d43a80586",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "41200d2a-7fc1-42e2-bde2-57a53da188d5"
        },
        "item": {
          "id": "430f4ea7-1cf7-4b62-b286-46608e8fd52a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2df3808a-41e0-4b74-a76e-edf389c6ce0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6598785-b6c9-4136-9f6f-f771c4e56e12",
        "cursor": {
          "ref": "d30a0700-95ab-4dce-9668-efd8c44baa3c",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "32db2a73-935a-4176-b7cf-6ab9fc2c40fd"
        },
        "item": {
          "id": "a6598785-b6c9-4136-9f6f-f771c4e56e12",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7adec462-55c7-4083-8a12-755bb87d11f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc4c7bb-6dc1-4e80-b4a9-2d771240ece7",
        "cursor": {
          "ref": "8f55ec2b-ece1-4985-8cfe-f4c1d39dd351",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a262b959-ec52-43ec-a2af-67626cbf92fd"
        },
        "item": {
          "id": "0dc4c7bb-6dc1-4e80-b4a9-2d771240ece7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f358e5a2-0577-41d1-9864-128628731737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f994b080-7914-4e5c-bf61-a8ad0dbc5c09",
        "cursor": {
          "ref": "5392de23-5ca0-44ee-a9b0-f254fdffc9da",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0d8d5aeb-76dc-4aaf-973a-e1024d0d916b"
        },
        "item": {
          "id": "f994b080-7914-4e5c-bf61-a8ad0dbc5c09",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "652d2a12-5c22-4be0-a26b-09c967dc8d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b093cb-d9bd-4446-b114-26fdb324c75b",
        "cursor": {
          "ref": "b489b216-7002-4760-acf4-372843bd26d6",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "79cae7ee-35a1-4e47-9022-2b63d4887da2"
        },
        "item": {
          "id": "46b093cb-d9bd-4446-b114-26fdb324c75b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4c22c2b0-bc4a-4d84-8f0f-d10eaf6a36aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f10bf8-8597-4d7d-b329-6e8b6b03afd1",
        "cursor": {
          "ref": "2b59294e-207d-4d3a-b2f6-1195eea25c03",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f7056d0b-7b67-4b0e-b34d-a9e30e4c008d"
        },
        "item": {
          "id": "25f10bf8-8597-4d7d-b329-6e8b6b03afd1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8ca81855-d5dc-4c4e-b23d-a8fad94422a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29586d0f-7d4c-4dd7-827b-0f2b91d42f12",
        "cursor": {
          "ref": "183d08ab-9476-4734-88c5-a4dcac6e6018",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "addd3dfb-2b53-42c9-94d3-80bdd6dcb41a"
        },
        "item": {
          "id": "29586d0f-7d4c-4dd7-827b-0f2b91d42f12",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "365418f6-834a-442d-8cd6-32bea23edcfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8d3d02-962f-49e7-9281-2513a7487603",
        "cursor": {
          "ref": "e1da9833-0bca-4fac-9c00-32a57aef472b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "85dcfb32-2e34-4268-879a-3e59128a0ff1"
        },
        "item": {
          "id": "9d8d3d02-962f-49e7-9281-2513a7487603",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "bcdee59d-2567-4794-ae47-4178b6a37298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fd164d-af27-472b-9e49-2d53affbbca2",
        "cursor": {
          "ref": "567d8e4c-d4da-499d-b76b-a14341ba32c9",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c7df760b-956e-4b1a-ab37-4ad21a47a944"
        },
        "item": {
          "id": "44fd164d-af27-472b-9e49-2d53affbbca2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a7fb459a-8012-4cb4-9db7-8eab8a1fd014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f06e4d2-3087-483c-be72-cc95f459b423",
        "cursor": {
          "ref": "e36927ec-3918-46f9-9c8e-3fc26bbb26ef",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3810d261-1c65-42b3-923b-3a72bed8049a"
        },
        "item": {
          "id": "6f06e4d2-3087-483c-be72-cc95f459b423",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "81939e17-a467-4da2-8390-f2173c7dbb0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f77e8a2-ab5f-4fad-8053-903ea2746c88",
        "cursor": {
          "ref": "b9c1b459-08db-4742-94bc-48bb3e4a5246",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bbc5f5e1-b6bd-490f-8fa2-b8e5b19dac0d"
        },
        "item": {
          "id": "5f77e8a2-ab5f-4fad-8053-903ea2746c88",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "21db5ade-ca3b-4d12-a318-15f797095868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207dc912-a79c-4451-bdbb-d55b70714c22",
        "cursor": {
          "ref": "c9fe0caf-bd71-40a6-844b-4302234fde8a",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "92d4acaf-e98d-4723-b13d-2bb584cf8d27"
        },
        "item": {
          "id": "207dc912-a79c-4451-bdbb-d55b70714c22",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "40b51d6b-3a53-4466-b1ac-26817c889a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df83161-a0ae-4ce5-989a-94adbaf460ac",
        "cursor": {
          "ref": "0187235e-0f00-4183-8efe-c0e38b734e0d",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d3c0c9b2-fb93-44a5-afbd-0a67cedaa15c"
        },
        "item": {
          "id": "0df83161-a0ae-4ce5-989a-94adbaf460ac",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9583cc75-d233-4518-b628-eb8f52753c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b825e4b-c50c-48f1-a63c-01277f113d94",
        "cursor": {
          "ref": "a55e67d2-efa7-40f3-8d6f-37ae73639796",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "89195645-7604-4a57-b3d5-0439c3fa9c41"
        },
        "item": {
          "id": "9b825e4b-c50c-48f1-a63c-01277f113d94",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ba44aa4a-a064-449d-b816-369731263b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f07e438-2c66-49d5-9f96-cd7e08a376d7",
        "cursor": {
          "ref": "69edc9aa-7597-4af6-9421-0d77395df992",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d0506d61-7383-4fda-910e-256caf93f26a"
        },
        "item": {
          "id": "6f07e438-2c66-49d5-9f96-cd7e08a376d7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6b8ba525-12b3-4f9e-914a-387cc3a32b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed81105-e053-4f00-9eb9-193d115c4f06",
        "cursor": {
          "ref": "3487af74-9f43-4a61-a4aa-3333ee394543",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d8bc0678-5b49-484d-a9af-fd84f6f6a9be"
        },
        "item": {
          "id": "2ed81105-e053-4f00-9eb9-193d115c4f06",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6a1bc3e2-1e28-47ef-a1e7-4e116b64b5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817923ef-6a66-46a3-b03d-21dec353a5e6",
        "cursor": {
          "ref": "d176400b-ad80-44df-9216-62a917bf34db",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c9af7e86-3ddf-430f-93fe-798d46a929c2"
        },
        "item": {
          "id": "817923ef-6a66-46a3-b03d-21dec353a5e6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5584f7d5-b1b4-4dc1-a75b-1ddadab491be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd31c70-d962-4108-bf6b-daf67486bc24",
        "cursor": {
          "ref": "911bf04e-97d8-440b-84ba-adb005292afc",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "97944556-2042-48c1-8c2a-58cb3216cb81"
        },
        "item": {
          "id": "5cd31c70-d962-4108-bf6b-daf67486bc24",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c719faee-24ba-45bc-b0d5-3ab232ae7bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8905d600-5c39-48dc-8b5a-7efc7220475f",
        "cursor": {
          "ref": "0e7bf18b-d491-4a26-b151-8a551b694c73",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "306f7f43-ea33-4a0d-9a88-5999e633dbaa"
        },
        "item": {
          "id": "8905d600-5c39-48dc-8b5a-7efc7220475f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b6ff7cf2-840d-497a-b649-2168be003687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b9a77d-8e17-4e50-8c3b-1aee3459a33f",
        "cursor": {
          "ref": "e2b3a058-2813-49d3-8a38-bbd01d989a15",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c131ee9c-4e8e-4e57-8b01-00dea127cc51"
        },
        "item": {
          "id": "e8b9a77d-8e17-4e50-8c3b-1aee3459a33f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "dfc49c69-c7ec-4d6e-afdf-5dcbb1e90353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b5b504-155d-4f66-8e7d-b54cdcce7900",
        "cursor": {
          "ref": "bad2bc23-980f-43a4-80b8-92c20c6b5adf",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c2228254-ccfd-4592-bb33-a91ef4b7b06c"
        },
        "item": {
          "id": "73b5b504-155d-4f66-8e7d-b54cdcce7900",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "533db6ab-7a86-48b7-b10b-1beecfa6b6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f814b188-2d1c-4c59-b98e-8533729721a3",
        "cursor": {
          "ref": "9f1170fc-a640-40fc-ade2-1a83bb10bca2",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3a4e8c5c-b55a-4bb7-9bc0-96ba90d5d753"
        },
        "item": {
          "id": "f814b188-2d1c-4c59-b98e-8533729721a3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "cfc340d5-980e-42f9-b3d7-aa0d5257560e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50261506-ac51-490f-94a8-4faedd6cdedc",
        "cursor": {
          "ref": "8322af7b-b8ee-4c4e-8297-98205c6b3089",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f5c6f233-6a42-468d-be84-0aa299910e28"
        },
        "item": {
          "id": "50261506-ac51-490f-94a8-4faedd6cdedc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6620c69e-9706-44ef-9b3c-f1d6239c6aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf28448-5c55-4839-b848-54ea9b3cedad",
        "cursor": {
          "ref": "60b44d00-cfdd-45f8-a09e-8f8010cc8f5a",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "41fb3ece-c114-4850-bb72-9c2ec34c34a0"
        },
        "item": {
          "id": "8bf28448-5c55-4839-b848-54ea9b3cedad",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6dfd9548-e480-4e75-b522-c0a7bd0a7a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9036e3-3857-463f-9dd2-d27405906be9",
        "cursor": {
          "ref": "c2e57874-7370-4212-adbb-c373959ab353",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "69284392-99d2-4608-b920-9ba2aee9dfd3"
        },
        "item": {
          "id": "2f9036e3-3857-463f-9dd2-d27405906be9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "00e5b1cc-95fc-4a40-aa8f-1589afcc1832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e476d8-e47a-401b-a57e-ca67cf76852c",
        "cursor": {
          "ref": "a1667219-2d98-4115-87dc-29fd95da0162",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "cfacad35-79b6-4a03-a671-11d850cfcafb"
        },
        "item": {
          "id": "38e476d8-e47a-401b-a57e-ca67cf76852c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4e65f424-6b02-43ca-8d54-7ed8c07867a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16affc0e-139a-4ed2-aed7-6e6e0196ee41",
        "cursor": {
          "ref": "283af208-a8f9-4cde-b5f8-289d95d47197",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fb386df8-788e-485e-98aa-1540cb3f1f9c"
        },
        "item": {
          "id": "16affc0e-139a-4ed2-aed7-6e6e0196ee41",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "43490cae-a1f9-4879-be23-507bfbca284b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90746e6c-eb1f-4454-8c77-4b7e3ac0f97b",
        "cursor": {
          "ref": "0a449d17-647f-4955-9204-f435468e33d6",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fcf6ac2c-b5b2-4190-a915-413bfc1b77aa"
        },
        "item": {
          "id": "90746e6c-eb1f-4454-8c77-4b7e3ac0f97b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c2a42418-2933-467f-8c9f-891201d39fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e056c860-a48d-4ae5-95e9-650d868159ec",
        "cursor": {
          "ref": "3ed188bc-8874-4a47-9029-0157c1dac381",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2a28c1da-8771-4541-adfe-f5f69f64a37c"
        },
        "item": {
          "id": "e056c860-a48d-4ae5-95e9-650d868159ec",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f522b719-465a-43a3-83d5-121253ea7c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fd622c-9dda-453f-b7cf-0f12ace8da57",
        "cursor": {
          "ref": "d94889d9-aee0-44cb-aea0-7065dd3d519b",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "12ec11d0-fb2d-4c3a-a0a5-138a6a917788"
        },
        "item": {
          "id": "48fd622c-9dda-453f-b7cf-0f12ace8da57",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "06403b1b-0880-412f-9e49-7fd8f4222fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07558f92-2b2e-481f-9346-e00703bc054d",
        "cursor": {
          "ref": "f8ce025e-e178-486b-b5bd-74548dd1a356",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ff939a05-2744-415e-8425-c78e9e02b508"
        },
        "item": {
          "id": "07558f92-2b2e-481f-9346-e00703bc054d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d15ef2ce-8ff0-4778-bc30-24c3a1a4f641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09109d5-a46a-495e-814e-ecf294ba2767",
        "cursor": {
          "ref": "d3eda1e4-5ff5-44d4-bd75-251d55229ed5",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "cd7fd305-1aaa-4157-905f-8a2602e70839"
        },
        "item": {
          "id": "c09109d5-a46a-495e-814e-ecf294ba2767",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "25c9e606-16a4-4b71-84d1-23b582d39ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9554fb7-5897-4103-988e-4e321d4cca5e",
        "cursor": {
          "ref": "162c0ba5-087e-481a-9a8c-90dcae154901",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "05ec8f44-f410-435b-86f1-11c74744f434"
        },
        "item": {
          "id": "f9554fb7-5897-4103-988e-4e321d4cca5e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0a338ba7-fa56-45d5-8e79-2235c3d0ce41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cf8483-426c-4e9e-b2ab-b237463cf343",
        "cursor": {
          "ref": "930c3824-a46c-4a4e-a297-e3353f116727",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "feef7954-7fda-4f11-900a-feafde7dbc55"
        },
        "item": {
          "id": "37cf8483-426c-4e9e-b2ab-b237463cf343",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e558776e-5f23-4e30-a308-b43b6545c46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4124599a-bafe-4fd6-9488-c414b357f4a9",
        "cursor": {
          "ref": "f7fa0004-f580-45d2-854b-1c9caaa37b10",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f569927a-c7ee-4c1f-9a54-20ce3c77ca46"
        },
        "item": {
          "id": "4124599a-bafe-4fd6-9488-c414b357f4a9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1b16e501-7c1b-40d0-886b-0d57dfa1055a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22dcae2-66ea-48f7-9ab5-d17b94631f01",
        "cursor": {
          "ref": "1222851b-0421-4213-b183-af032eba8949",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1973fe16-268d-45d6-bf43-5aae25234a3b"
        },
        "item": {
          "id": "e22dcae2-66ea-48f7-9ab5-d17b94631f01",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8f325a08-a643-4507-8b37-7e2c0a46659f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e957a5b5-9c37-4a35-b780-f8feff3761c7",
        "cursor": {
          "ref": "3ff16190-46d7-400d-9cf3-b389a76d76f2",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "74953737-f37d-4136-99af-36ea2dfb6308"
        },
        "item": {
          "id": "e957a5b5-9c37-4a35-b780-f8feff3761c7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "edebfd39-832b-470f-871a-d2aa4b939ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d5896d-659a-4ee9-a670-91efeb8ca7f6",
        "cursor": {
          "ref": "32cb98db-6134-47e2-9009-0249bc53b58d",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "226a7333-511f-4b59-bd19-ef3ed7d39385"
        },
        "item": {
          "id": "67d5896d-659a-4ee9-a670-91efeb8ca7f6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "dfceb623-2cf8-4945-9688-d57a31de6c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc4e27b-e1e0-4128-aacf-33947ae85ab1",
        "cursor": {
          "ref": "bc88e060-2454-4854-ba1e-aaae0e927077",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4f183bee-14c7-4c05-b14e-f5897502d073"
        },
        "item": {
          "id": "6dc4e27b-e1e0-4128-aacf-33947ae85ab1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "220807cf-f849-4d5b-9eab-c577efa3eed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a9869c-a64e-4a82-b5b6-fb0078bc04ad",
        "cursor": {
          "ref": "9a9ab23f-cf69-4775-93c4-f6227b54c127",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9ab4ae80-8385-4276-ace1-1f486d475152"
        },
        "item": {
          "id": "46a9869c-a64e-4a82-b5b6-fb0078bc04ad",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5b53a855-55c7-460f-8440-e03146b0b1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5b22eb-f735-4207-944f-d28dbf311aff",
        "cursor": {
          "ref": "a9ab60d2-a1f9-4c43-a828-44f27418df16",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a68df50a-d964-4824-9adf-d84933f2044d"
        },
        "item": {
          "id": "3f5b22eb-f735-4207-944f-d28dbf311aff",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e7f67e27-b5f2-4d82-993e-8d2c58cf813a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b390b7-d965-4c3b-8752-f549c2708dee",
        "cursor": {
          "ref": "693d881c-5250-4286-bff2-2e9a42f18bad",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "505c0a01-ace2-4b32-9f31-656e0a73ef40"
        },
        "item": {
          "id": "d4b390b7-d965-4c3b-8752-f549c2708dee",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ba7d6c16-8978-4edb-8789-b3fd5fa7aff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c535739-7dfd-4368-b034-5c0ac1830222",
        "cursor": {
          "ref": "17fb5473-862a-419a-81b3-a826e8ce0840",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "08ac56bf-81d9-40d4-b133-bf911fd6aae8"
        },
        "item": {
          "id": "6c535739-7dfd-4368-b034-5c0ac1830222",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a4bdd1d9-e47f-4d00-b2a1-355a15246c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 986,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2775d79d-e743-4da9-897a-6368765c692c",
        "cursor": {
          "ref": "4112f31d-e79a-4734-acaa-85ddc45f2b10",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "381d2a40-67e7-4ce9-81b8-3cb91e3d23a8"
        },
        "item": {
          "id": "2775d79d-e743-4da9-897a-6368765c692c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0a128aa9-13e0-4f82-bfee-c50c40c1094d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9c2220-bbef-43bb-9ea0-1084b0dc76ae",
        "cursor": {
          "ref": "71849930-fd25-4df2-8b27-6d6582cfb322",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "cdf4eee1-f776-4212-9ae1-b02bd94ca30c"
        },
        "item": {
          "id": "ed9c2220-bbef-43bb-9ea0-1084b0dc76ae",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a6ac20f7-b210-4575-8e79-22a288292d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007fd213-cce1-42f1-b04c-5bd40cb4098e",
        "cursor": {
          "ref": "314aaf39-5a1a-48a6-ae3a-d34d2b88d5f3",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5287dbcc-80bc-4d56-ab6e-a6c80706871b"
        },
        "item": {
          "id": "007fd213-cce1-42f1-b04c-5bd40cb4098e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5bcc3041-c995-42b4-89cb-8e05854290a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719be5fb-78ec-4972-b2a3-eb7ddc80823c",
        "cursor": {
          "ref": "d4cffd03-24e7-4cdf-bdf1-ab1fe8ee01ab",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "67ea77a9-c47c-4591-ae2b-9bda54bd1f71"
        },
        "item": {
          "id": "719be5fb-78ec-4972-b2a3-eb7ddc80823c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e6fc22d8-8ec0-4380-8a87-3a61083de9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ecaa09-7fa8-4aae-9a98-6c6cc71fa427",
        "cursor": {
          "ref": "afb1929f-0c63-4aab-a1f1-5cb09f6a888f",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "828e10c6-319b-4d77-bdd2-c76eb73644b9"
        },
        "item": {
          "id": "f8ecaa09-7fa8-4aae-9a98-6c6cc71fa427",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5b90c4b1-dd78-49b0-a9f2-d2b883e762c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0ec139-1d24-474c-bbf9-aaad6e26f97d",
        "cursor": {
          "ref": "8ec54e8f-c940-4b45-91d3-d13541518974",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ed17a479-1287-4b5e-90a7-76f80dcb662d"
        },
        "item": {
          "id": "1f0ec139-1d24-474c-bbf9-aaad6e26f97d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1305147a-83e5-4bc1-a60d-817000848593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0645f5e8-09c4-42e7-b901-8168ea38ee48",
        "cursor": {
          "ref": "6263a30b-cc9d-440c-afa1-09275576dbe6",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ddbc05b8-68af-489b-8162-b8b73975a68e"
        },
        "item": {
          "id": "0645f5e8-09c4-42e7-b901-8168ea38ee48",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d1f1bef4-007d-4a8b-bf37-4105979e74ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020f9ba4-f360-4847-942e-e1a5bc44fbe2",
        "cursor": {
          "ref": "641dbb0b-ffca-4f77-89d9-f586a86ac644",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "24c58e1b-3a73-4d62-8dcd-4c6503ec06b4"
        },
        "item": {
          "id": "020f9ba4-f360-4847-942e-e1a5bc44fbe2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "15ab1e20-5c5b-439b-a7c6-f928b342ae8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded7561d-7f7b-45fd-9864-d875fe76164c",
        "cursor": {
          "ref": "7b0c6cb3-f84f-4845-bb86-84767246b888",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e2c7dd12-301c-4bc2-b6d6-ca7b2a793eeb"
        },
        "item": {
          "id": "ded7561d-7f7b-45fd-9864-d875fe76164c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "552cfe5f-4f08-479f-8abf-4479d984b146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694d6088-05f0-4ece-b375-5519c6f9215b",
        "cursor": {
          "ref": "e9887b17-df88-4c27-a0d4-d70912ed281b",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cf7863bc-c8d3-429e-800b-9d6b1d0b2257"
        },
        "item": {
          "id": "694d6088-05f0-4ece-b375-5519c6f9215b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a21d4e0c-74a0-4964-a637-a36571de6516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61911cf-1568-4e25-b39f-95b3b5f2e8cb",
        "cursor": {
          "ref": "b8db224e-7c91-4d9e-af94-e51b3dae0f69",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "947ab182-0892-40bd-af5c-f73ef47fbd5d"
        },
        "item": {
          "id": "b61911cf-1568-4e25-b39f-95b3b5f2e8cb",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "94485604-8db9-4fe4-a2d8-4dd7dc6b8f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9dbd54-8b1e-439d-b530-18539d67439e",
        "cursor": {
          "ref": "facd2231-1965-44c9-9c85-ca7c44c3a3dd",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d6b8b241-3f28-4c46-ab4e-86d68a785dff"
        },
        "item": {
          "id": "ec9dbd54-8b1e-439d-b530-18539d67439e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c1e272ad-672b-420b-bfa2-d910878276ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ad07df-2be0-4690-a6cc-bc23637b509a",
        "cursor": {
          "ref": "c254440c-d8b3-4515-a8a2-52acccf119be",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2a969862-07d6-45fb-b686-a3ee80c72a10"
        },
        "item": {
          "id": "94ad07df-2be0-4690-a6cc-bc23637b509a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "195a70d9-7671-44ea-aa9f-dda62b864333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73dc006-2c65-4af9-8a30-59a9fd4f230f",
        "cursor": {
          "ref": "fe6982cc-0a5d-4860-88b4-6dea1770f95c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c7df54b8-08b2-4691-909e-b5b749a708cd"
        },
        "item": {
          "id": "b73dc006-2c65-4af9-8a30-59a9fd4f230f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "095ceb58-361d-4512-b474-f69307c03c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba28fc37-0008-40c5-ac8f-19d8f05104d6",
        "cursor": {
          "ref": "8098fddb-3df8-421f-8c5c-586de1c90278",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1debf588-6cf9-4bc7-a3e9-29f825bea790"
        },
        "item": {
          "id": "ba28fc37-0008-40c5-ac8f-19d8f05104d6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d7c1c861-0567-46b1-be39-66c04ebd1230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9054fd-85b1-4eae-87a2-d3592022c638",
        "cursor": {
          "ref": "4558c7d0-575b-442d-87fa-e3eaf9751dd8",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c7e21488-10f7-480b-8890-8a01350adaaf"
        },
        "item": {
          "id": "5b9054fd-85b1-4eae-87a2-d3592022c638",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "75f23d74-bd31-4707-8fb6-c0873e3b50a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137ae551-16b7-4a88-abc0-caeef9cf0b18",
        "cursor": {
          "ref": "d0e3f9c8-0eff-4faf-a73b-c5dd8392e033",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e03f7b25-5812-4cc6-9212-bb5ea28bd945"
        },
        "item": {
          "id": "137ae551-16b7-4a88-abc0-caeef9cf0b18",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0e709103-1157-4511-95f1-c9da132f1c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c353029-4bc0-482c-8528-89493ce1f4a9",
        "cursor": {
          "ref": "fa2c387b-8f5c-4843-829e-a5294ea4def7",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9441ac8f-6dfb-444e-9edc-f8c7fce887da"
        },
        "item": {
          "id": "5c353029-4bc0-482c-8528-89493ce1f4a9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "71968677-bf9b-498a-b25a-0a5af49b0aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952549a3-8b6b-4b7d-a9b4-589e4e19f007",
        "cursor": {
          "ref": "a7b8458c-e696-4abf-9576-d96497ae5dfc",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "43f450c2-e2cf-4933-9269-14cbd0e1ff8b"
        },
        "item": {
          "id": "952549a3-8b6b-4b7d-a9b4-589e4e19f007",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "af91f2bc-1da6-46a8-9950-d987126fce20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6e3d3b-a86d-4757-8f50-409ea80087bf",
        "cursor": {
          "ref": "a3c8cd54-b61f-49ab-8699-625ec8a0cd93",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b5619812-5926-40d5-809c-8c9a468a284f"
        },
        "item": {
          "id": "1b6e3d3b-a86d-4757-8f50-409ea80087bf",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6d8401c0-93a7-4277-b42c-79a8dc4a782f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b98f80b-693d-462b-bf97-8996844885f5",
        "cursor": {
          "ref": "52e2bbee-963f-461f-a7a5-baf0a8c823d2",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "196be566-71d9-4798-8350-a83488aa1ab1"
        },
        "item": {
          "id": "5b98f80b-693d-462b-bf97-8996844885f5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9c89e484-deeb-48ce-a809-08a1736ec094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb111307-32a2-4135-9864-05b9a217aec8",
        "cursor": {
          "ref": "30a528e9-3b2e-4675-bdfc-7cd2788b9bf6",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "412db4fc-3d15-4166-8f01-6f6b05241a5a"
        },
        "item": {
          "id": "eb111307-32a2-4135-9864-05b9a217aec8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8f42af60-d9d3-4649-8878-d8b85ffbc3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ef8ab5-ac7c-4b6f-acff-42490b4137e1",
        "cursor": {
          "ref": "579e1ac6-340b-40bf-999e-e08b480438b6",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b38eb63e-d7c8-46c7-a23f-c5c07685403a"
        },
        "item": {
          "id": "06ef8ab5-ac7c-4b6f-acff-42490b4137e1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9f794e48-1c0c-403f-9255-853ca7af4256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6ef10c-9316-4d97-80b2-e5131117627b",
        "cursor": {
          "ref": "b5c39a8f-fe2a-4d08-ba70-241552c12e4f",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fd70f3f7-02f1-4507-a3df-352c37e6ff7a"
        },
        "item": {
          "id": "8c6ef10c-9316-4d97-80b2-e5131117627b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6d796970-987b-4bc5-a152-31d6760d0a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a08df61-3e23-464b-bd07-4b7a8a4134fd",
        "cursor": {
          "ref": "cd4cacf3-7a89-4ec3-a066-2a87c0d2846c",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "acbd7805-b818-40b8-8247-1ff953a37a4d"
        },
        "item": {
          "id": "7a08df61-3e23-464b-bd07-4b7a8a4134fd",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7d4ef548-3cda-4cb2-bd0f-345477361526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b605de-4d90-4128-8e3f-7152a48d15f0",
        "cursor": {
          "ref": "818f0100-8f6e-45c3-87ee-f3a70e5d31b1",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "500828b3-2ea6-4996-b15b-5a3f8aebcb48"
        },
        "item": {
          "id": "f4b605de-4d90-4128-8e3f-7152a48d15f0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "344c1b86-3d2f-4f38-8c65-f7e1d3cea4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e6b338-f123-48e3-abca-d03ca502e0e1",
        "cursor": {
          "ref": "2fd9442a-b4fd-4161-95f1-d4290d5d76e4",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7dc8f523-2572-4de1-b905-4bc7c8d8d0c6"
        },
        "item": {
          "id": "90e6b338-f123-48e3-abca-d03ca502e0e1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "414bdb39-cad5-47ad-bb6c-237dd00f79f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d23136a-daf5-4a03-b9b1-8454b2922c38",
        "cursor": {
          "ref": "c363a701-5e59-4486-bb96-ea6692a935dc",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6a88a2a6-84d0-4c0f-ae70-b269f23ce04f"
        },
        "item": {
          "id": "8d23136a-daf5-4a03-b9b1-8454b2922c38",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "356a17ff-c22e-4cb9-8894-e462409782ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5a2964-de47-4af8-84db-b4c7948abc59",
        "cursor": {
          "ref": "dcecef40-445c-4f5d-acc2-ea9299aefd42",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5d0c829d-c134-456a-a5ec-86ba700a18cb"
        },
        "item": {
          "id": "9c5a2964-de47-4af8-84db-b4c7948abc59",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "414f98a6-afdd-4a7b-80da-9017552450a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3d9e1a-5a96-4291-abfa-a3f610b9807e",
        "cursor": {
          "ref": "412245f4-502d-4ca9-bafc-b5a63aff9873",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "55592bdf-b465-4c17-a6e8-fcd71d1c4e8e"
        },
        "item": {
          "id": "2b3d9e1a-5a96-4291-abfa-a3f610b9807e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5647c295-250e-42c9-aa22-35407b79f8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4d188a-1a6f-496b-bd78-b6c0f389f981",
        "cursor": {
          "ref": "1cab5d42-4e9c-4fef-b585-ed06a73d42c9",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7a470f52-7202-488a-9f46-01124c00c7f1"
        },
        "item": {
          "id": "bf4d188a-1a6f-496b-bd78-b6c0f389f981",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3080a717-30f9-4cfd-80b0-4d57b85e4299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb67294-384c-4b71-9d82-3afc64eff7bc",
        "cursor": {
          "ref": "ddcf28e8-c085-4c02-bfce-77c817cec35b",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "960c8600-0447-4c97-994b-db27411cfccb"
        },
        "item": {
          "id": "aeb67294-384c-4b71-9d82-3afc64eff7bc",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4bb67290-c01d-4f57-8968-6c55c58efb0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2848b48-3f0e-4b05-8780-f2acf7d96145",
        "cursor": {
          "ref": "5bcccd68-9651-4b2c-b234-a773155a6f19",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d56302a3-44fd-4ae4-8ef6-8c3368424dad"
        },
        "item": {
          "id": "f2848b48-3f0e-4b05-8780-f2acf7d96145",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "806629cd-b72c-44f0-8933-d15552aaf5c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff944bbb-6958-4c59-a9f7-e2843098ad60",
        "cursor": {
          "ref": "0e6d1c51-d8b0-4151-b462-9325c80a3844",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "da224a93-b9e1-4461-84fc-2be7e68850c1"
        },
        "item": {
          "id": "ff944bbb-6958-4c59-a9f7-e2843098ad60",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4278c95a-5ac4-4470-a743-2efb52fc1722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413a2d12-519f-4fb4-8bc6-b6359529fd76",
        "cursor": {
          "ref": "9daaba49-d3a9-4496-a002-41a7961e389e",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c2a88bec-67a9-4219-be03-9f173414aa1b"
        },
        "item": {
          "id": "413a2d12-519f-4fb4-8bc6-b6359529fd76",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5da28bd3-841a-48e4-8413-7f56066e3512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e852fe86-d8b1-4411-9256-a46ff11dc3c2",
        "cursor": {
          "ref": "c1936b68-d185-42f0-b47e-9594c32b2e9e",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "92c0b8bc-882a-44c7-b55d-95527e99d103"
        },
        "item": {
          "id": "e852fe86-d8b1-4411-9256-a46ff11dc3c2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b37f5018-ceed-4864-97fb-2023dc96fbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03ef896-8c28-4e80-8a32-b898c622d636",
        "cursor": {
          "ref": "bac9dc5c-19e5-4ec3-b143-89a23868d81e",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "55c0a2c4-b504-4fd1-8232-9cc7ea540590"
        },
        "item": {
          "id": "b03ef896-8c28-4e80-8a32-b898c622d636",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "838ce96b-6b17-42f2-bcaf-2200b3c6288d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b59bc2-23fa-42d2-bcd7-1eb34a5475bd",
        "cursor": {
          "ref": "91ad29af-2f10-46b7-ba61-05dddef061e3",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "630820a7-39b9-435a-b794-d0b1cce3b125"
        },
        "item": {
          "id": "75b59bc2-23fa-42d2-bcd7-1eb34a5475bd",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f05c9411-8c93-4eb5-8301-0da39de12ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b428d01-fdef-4b44-89c7-9787a08dc8dc",
        "cursor": {
          "ref": "a404c856-5ff2-4cdc-8e9f-177d58c13363",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "73497ebd-f3cb-4e95-8617-0ed836f8348e"
        },
        "item": {
          "id": "2b428d01-fdef-4b44-89c7-9787a08dc8dc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4d71195f-f8fd-41fc-95e4-01736bf317ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c444a9-6587-4494-8085-045322bab599",
        "cursor": {
          "ref": "82059264-3812-4541-857c-2a479504f975",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0d66eee5-13c2-4322-bbb3-7899a9fc5ce5"
        },
        "item": {
          "id": "f1c444a9-6587-4494-8085-045322bab599",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "59c8cab4-0db8-4e41-864b-9608c4241a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "d7746b9f-794e-4d03-9b7f-c95bb47060de",
        "cursor": {
          "ref": "5effef74-fbbe-41d2-a749-5d91b6884ccf",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "cdd8aec7-27a4-4198-9546-f7cb9984d2a6"
        },
        "item": {
          "id": "d7746b9f-794e-4d03-9b7f-c95bb47060de",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a207fee5-97bb-4747-afdf-3afebeb4b5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "4ba7b118-d393-4954-9484-47f961f3899f",
        "cursor": {
          "ref": "a22f60c1-d89c-4b58-90a7-ae9d669da2c2",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "636000c7-d45b-4589-b9ff-e5fffb35fda0"
        },
        "item": {
          "id": "4ba7b118-d393-4954-9484-47f961f3899f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fcc18ecb-4961-4f62-bcf3-f8eeb6455afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0d368b32-ece0-491b-9b86-8ced30b73928",
        "cursor": {
          "ref": "d1a0a39e-cdec-4155-8208-bcf2af5ae20e",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9d96c46f-375f-4644-9a23-00f23cc5b228"
        },
        "item": {
          "id": "0d368b32-ece0-491b-9b86-8ced30b73928",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d5d46673-8121-4606-9db5-29715e4d9390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "9cbf7a15-db69-4447-8e49-c4815e3cc626",
        "cursor": {
          "ref": "c19012dd-d601-4021-9cce-070df8c9aa48",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bc2dfcbe-2732-4bcd-8fd9-45992a77c9b9"
        },
        "item": {
          "id": "9cbf7a15-db69-4447-8e49-c4815e3cc626",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9f05a579-b12a-4ed9-8125-705f08fcfa73",
          "status": "Created",
          "code": 201,
          "responseTime": 10078,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fe02fe-60ad-4c13-be72-ae0032de9a15",
        "cursor": {
          "ref": "ac14ca98-4f3d-4f80-b87f-9ae39d505b70",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c1c181f7-d417-4629-bc40-809451e9f5e0"
        },
        "item": {
          "id": "c4fe02fe-60ad-4c13-be72-ae0032de9a15",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5aa1faec-3cb2-4d92-bec3-360d4a1514df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "5db4a888-af5b-4b31-9a8b-37f270d4bb9d",
        "cursor": {
          "ref": "c441f5f7-60a3-4639-bd05-d6cd2c4bf98a",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "dcc8db43-c136-46c6-b542-b78b0f06257c"
        },
        "item": {
          "id": "5db4a888-af5b-4b31-9a8b-37f270d4bb9d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "beef12f6-e195-4576-97ee-e4c06fc0b9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "1401ed67-56f7-49bd-9be6-37e2ce8bd647",
        "cursor": {
          "ref": "9c1bbda0-d016-4b6f-901b-943acd814f6b",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2a569a4a-3ad8-4e3e-acf3-b0b521226589"
        },
        "item": {
          "id": "1401ed67-56f7-49bd-9be6-37e2ce8bd647",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bd77e118-5a40-407e-a8b9-ade700aba57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0f1331-4554-4b60-b1a8-f9a6ce316371",
        "cursor": {
          "ref": "53ce8087-74eb-4656-9f7e-b42220190791",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7824d72a-3474-407a-9045-f12d2059993a"
        },
        "item": {
          "id": "cd0f1331-4554-4b60-b1a8-f9a6ce316371",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0810297c-7bc6-49b8-9ade-cfab2469517f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340ab269-abd6-4167-8e7c-3896ab478147",
        "cursor": {
          "ref": "1a5fca2a-1008-4e39-9166-904f8bf59e5e",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8d1974ec-7970-44dc-a217-29f3e40713d4"
        },
        "item": {
          "id": "340ab269-abd6-4167-8e7c-3896ab478147",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7125537a-af4f-4a6d-92c5-e7c189695a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896afb50-f4e9-4b80-b69f-d95f5c6a0e0d",
        "cursor": {
          "ref": "32a5c6c5-f20d-45ed-b114-f05bf6535867",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1e5662ce-bd82-45b8-bf97-bfb5f8a8e0fc"
        },
        "item": {
          "id": "896afb50-f4e9-4b80-b69f-d95f5c6a0e0d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "40a5af8e-c40b-45ef-b369-47759b6d4d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1874bdfc-feb9-453f-967b-d16dfeaa30e9",
        "cursor": {
          "ref": "9f575430-ecb7-43ee-9511-57bd71306b39",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "95391a62-3693-4d7b-a577-2e579ac9775d"
        },
        "item": {
          "id": "1874bdfc-feb9-453f-967b-d16dfeaa30e9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "00cda3e1-ce12-426d-beb6-c2cc5543f905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5352c5-855e-4cf3-98d9-260b458d40f4",
        "cursor": {
          "ref": "c574ef62-afb6-4196-8b26-6a9461feed90",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "72606da1-a5b0-45f8-b949-7a3448d534f2"
        },
        "item": {
          "id": "ae5352c5-855e-4cf3-98d9-260b458d40f4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d6199a3e-a0cb-43a2-910d-9cffdaf993ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f528eed-951d-414c-9529-e3ed871224a6",
        "cursor": {
          "ref": "181b0f52-9bec-48d1-99aa-e8a750def0f3",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f977d620-b191-43a3-b5eb-b95797e3f995"
        },
        "item": {
          "id": "0f528eed-951d-414c-9529-e3ed871224a6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "df2a3914-25ad-4247-bc92-189e85b1ba08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd92ca5-3c4e-4a30-8dd4-5bfed0109251",
        "cursor": {
          "ref": "e041ba94-64c8-4e0a-b1fa-339c17f183da",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8e330989-c6d4-47e6-851a-5cb3e8bda4c3"
        },
        "item": {
          "id": "2fd92ca5-3c4e-4a30-8dd4-5bfed0109251",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "aea9958c-d6d2-45b9-a446-538eb00a7d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb081a59-27a4-4353-bc97-03e3462dc10c",
        "cursor": {
          "ref": "b9101ac5-5c47-4b2a-b097-4ebd87a0f3fa",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "967eb420-4b7a-4e7f-b69d-89e6b2c42c5c"
        },
        "item": {
          "id": "bb081a59-27a4-4353-bc97-03e3462dc10c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3bf5245e-4d1b-40e4-be0e-6de09587fec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1a6a4a-c60e-46e7-9afc-dc7154307772",
        "cursor": {
          "ref": "afe61a22-66de-4e76-903b-95fd6e11984c",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bd7b64fe-cace-4bc4-841b-7e11029489d5"
        },
        "item": {
          "id": "2c1a6a4a-c60e-46e7-9afc-dc7154307772",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5ba27e55-f47a-42db-b87c-b3205f8e5b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2493aa9d-0f0e-42d6-bbab-874a1522c800",
        "cursor": {
          "ref": "3623079b-c322-43b3-8531-dfff97621c3b",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bb4c72a4-37a5-4ea5-a1c0-cee40a19ea9e"
        },
        "item": {
          "id": "2493aa9d-0f0e-42d6-bbab-874a1522c800",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b598c7ee-1ecc-4168-83ea-a44a1f1d02f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86600d2a-b408-429d-a761-a16e6a33ba95",
        "cursor": {
          "ref": "2565fcf8-0172-464e-ada8-56c1d413cfde",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "52f5df94-5491-4bf2-bab8-82d3804920b0"
        },
        "item": {
          "id": "86600d2a-b408-429d-a761-a16e6a33ba95",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a3137abc-a145-480f-a35a-fa1373413eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a5ca84-1b1e-4e6e-9469-65ceaba82ead",
        "cursor": {
          "ref": "8e3ecb1a-7ae2-43e6-bd49-3c9d0fc3a4f5",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c6590c30-3e4b-4d13-ada4-51c7d652d731"
        },
        "item": {
          "id": "20a5ca84-1b1e-4e6e-9469-65ceaba82ead",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "da848ee3-64e8-4b40-a198-9fc616de04eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1ad37a-0ae9-41f2-9247-ea3ffaf40a72",
        "cursor": {
          "ref": "b4403fe4-6d8d-486a-b933-56b7ab5d2476",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e4a043e3-794f-4d1b-8099-d2692e1c103e"
        },
        "item": {
          "id": "1d1ad37a-0ae9-41f2-9247-ea3ffaf40a72",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1e030612-96a7-4cc4-84a8-7ceffb6844f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4d00a3-3f96-4768-90c4-4fa88f85c170",
        "cursor": {
          "ref": "20842760-475b-4d62-9163-df5104260038",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6f043485-c55f-41e9-8bf1-f8fa539a2069"
        },
        "item": {
          "id": "cc4d00a3-3f96-4768-90c4-4fa88f85c170",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "aa63d087-4940-4c75-8347-bc273a6fc269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a234a2-5460-4d33-9382-248012f074d6",
        "cursor": {
          "ref": "a740460e-5c95-462c-9294-2e0f84a5ba17",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "de6d4e12-2484-4c02-b6fb-408db09449ed"
        },
        "item": {
          "id": "49a234a2-5460-4d33-9382-248012f074d6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dcff568b-6b50-4a66-ad8e-eb34fba2a7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c70375-2cfa-4cff-b1fa-fd9d713fbdf5",
        "cursor": {
          "ref": "db2fd2fa-2cc5-4d16-b5b5-a566e0f078b9",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "caefd2f7-973a-4187-91df-64482c9f8389"
        },
        "item": {
          "id": "e6c70375-2cfa-4cff-b1fa-fd9d713fbdf5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a1fd9217-4aaf-48e5-b174-a625e82d5d2d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "ea6f9cc9-7e53-46a2-978d-14b2fdbb0ad2",
        "cursor": {
          "ref": "7f0718e4-4292-465b-9762-122402923dc7",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c3dd63de-b3bd-4254-9005-02c242ebe0f6"
        },
        "item": {
          "id": "ea6f9cc9-7e53-46a2-978d-14b2fdbb0ad2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6ecc322a-e49f-4a83-baa3-20c0d78d5ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7548723c-c6e4-4433-aba3-37b1207c60bf",
        "cursor": {
          "ref": "70edc8c8-5262-4a15-b20c-ffed37e835bf",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4144bd86-8d09-4177-a238-0e718cd1aa53"
        },
        "item": {
          "id": "7548723c-c6e4-4433-aba3-37b1207c60bf",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c03d2f04-18a2-4426-9d5e-b3494a0797f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e10d35-06d4-4724-ba8f-8c1b2473c373",
        "cursor": {
          "ref": "469c0158-2f29-4b40-befe-4435997aa1ea",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "136d3968-1aa9-44ec-9bd4-0066d02af946"
        },
        "item": {
          "id": "68e10d35-06d4-4724-ba8f-8c1b2473c373",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "420d4c35-1511-4272-aa85-f11e8a00b6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d988a79c-b590-43f2-8adc-c260daa057f1",
        "cursor": {
          "ref": "715e1685-9f97-431f-8f27-b6b273bc3c89",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "845e076f-1ccb-4cc0-a102-871b8bba9985"
        },
        "item": {
          "id": "d988a79c-b590-43f2-8adc-c260daa057f1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a0fea4af-4d05-45f5-af84-a985813d1fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7798785-46b4-4902-800d-3d6290e748dd",
        "cursor": {
          "ref": "cd63b826-3ad3-4308-abb5-95af35f4cf5b",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2292e3ea-3df5-420c-bfc9-0624b47a4776"
        },
        "item": {
          "id": "a7798785-46b4-4902-800d-3d6290e748dd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "368df6bc-4b15-4ef7-b0db-e5fbecffa9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2498972d-af26-4277-8168-849de1bc11fa",
        "cursor": {
          "ref": "f05b77bc-a7fa-46cc-a4ec-cb3b71cede44",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8add64b8-e434-4dc2-a4fc-8bc3634dad78"
        },
        "item": {
          "id": "2498972d-af26-4277-8168-849de1bc11fa",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2bfb9ca5-35e5-4bd1-9af9-105c07a1b44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1628210b-0106-4dc2-bc42-bc4cb7229e00",
        "cursor": {
          "ref": "61715018-b80e-4580-9cd0-4f97a3de70fb",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5638fdcd-c2a4-495b-86fa-3311fd528e5b"
        },
        "item": {
          "id": "1628210b-0106-4dc2-bc42-bc4cb7229e00",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9bded18b-003d-4907-8cff-44c448f48474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf91c5d-01ae-4679-87a8-2879b0a55bdd",
        "cursor": {
          "ref": "8f20c859-d42e-4482-94e8-9633c07c5e3c",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cf8e1af7-9ac1-45e7-be1a-16fe07405e27"
        },
        "item": {
          "id": "bbf91c5d-01ae-4679-87a8-2879b0a55bdd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0e1b9a71-7cc4-45f2-a537-6b4d49224ea1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "6145adf3-90f6-4eb0-acdb-4385fe217f70",
        "cursor": {
          "ref": "0cf26e37-bceb-455e-be61-fd415e26cb0a",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e32106c0-431e-4feb-9698-4a44f025a920"
        },
        "item": {
          "id": "6145adf3-90f6-4eb0-acdb-4385fe217f70",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "063ec2c9-570b-45de-9fb3-beeca4f56980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3baf6dd-3fd3-495c-b8e2-033ca06e9eee",
        "cursor": {
          "ref": "dc288789-ca84-4cc4-bb0a-b673d6ef750b",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "73dd9da8-9426-4edf-8a1a-478fae985ae8"
        },
        "item": {
          "id": "a3baf6dd-3fd3-495c-b8e2-033ca06e9eee",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f444652f-48f4-4e46-b809-3a99b6bcd219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfadacf-764f-4fbd-ad3c-289b6de589d8",
        "cursor": {
          "ref": "90367e8c-770d-4bf4-9f08-aedcb606135e",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "fdba036c-d979-46b9-8327-1c64ac0f5581"
        },
        "item": {
          "id": "2bfadacf-764f-4fbd-ad3c-289b6de589d8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "497f478d-e56a-417d-a2c8-ad59c8a555ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e236659-b0bb-419e-b02a-13d2daffacae",
        "cursor": {
          "ref": "633f121a-874c-44e1-963d-bd82c5ea5825",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "59d606cd-bf79-46f0-a4a7-a42b3460422a"
        },
        "item": {
          "id": "6e236659-b0bb-419e-b02a-13d2daffacae",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "65e5a3ca-eec8-45fe-82cb-b5ce3d4a02a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c6b41f-9f6a-481b-8a78-635054a4e536",
        "cursor": {
          "ref": "417d5bcc-a5d8-4ff8-8965-7f418370b320",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "16d3e539-08de-481f-88ef-5758209c8ec2"
        },
        "item": {
          "id": "23c6b41f-9f6a-481b-8a78-635054a4e536",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ecfd988b-c7fb-4234-a4d9-c0e7598edd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f505dd0-933c-4676-8724-92022b0353bb",
        "cursor": {
          "ref": "c882008a-b4d4-407e-a763-838214b7b4f4",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7efae562-9dde-4bbc-9ce1-ec08340d599d"
        },
        "item": {
          "id": "6f505dd0-933c-4676-8724-92022b0353bb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2ff3765d-8a4d-4ecf-9ae7-75c1eb50f0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee38a19-4502-4e66-ab84-9eab25da3b5a",
        "cursor": {
          "ref": "70e4c518-6a26-4060-9762-932a06406675",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0116e690-2279-4f13-b1f7-7c305e2efff1"
        },
        "item": {
          "id": "5ee38a19-4502-4e66-ab84-9eab25da3b5a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "278ba8bb-7b8d-4f86-904e-14f2b78cc447",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "95bb0a62-7cfb-419f-ae6e-b12a3e42bb20",
        "cursor": {
          "ref": "46a82f41-1b07-4790-9bce-bb3c583ee097",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d12c1ea5-293b-4d3f-a34d-64cd2c757bd2"
        },
        "item": {
          "id": "95bb0a62-7cfb-419f-ae6e-b12a3e42bb20",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9ee92c23-017f-4600-b378-202cfa1b6411",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "661781fa-f2a5-420d-bd0a-5ea796c77403",
        "cursor": {
          "ref": "42e650dd-4f4e-4b4f-acad-acf1a807c7da",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "aaae59a7-b740-4deb-8861-137f91b7997a"
        },
        "item": {
          "id": "661781fa-f2a5-420d-bd0a-5ea796c77403",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "85c4f98f-f89c-4cc1-856d-6f96d01f8b53",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "d13282a5-54e5-47b3-8d66-01bc87de4da5",
        "cursor": {
          "ref": "1f739616-b4c6-4ffa-8e61-042ac15ccf08",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1c513094-28f0-49ce-9a65-df4cbde05c2c"
        },
        "item": {
          "id": "d13282a5-54e5-47b3-8d66-01bc87de4da5",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "de21885c-a052-4943-9290-c4b7f4868a3e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "e48b2c8e-fba2-4695-a91a-48c20cfad521",
        "cursor": {
          "ref": "c2c3f4cc-d12d-45b7-805a-abdb55e35c65",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "bdf5add6-562f-4211-81ee-a9634170fbd2"
        },
        "item": {
          "id": "e48b2c8e-fba2-4695-a91a-48c20cfad521",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5c4d2ff9-fa7b-45cd-bcee-fcf39f87a5b0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "b88a1bae-4717-4c7a-93ca-3fe2af678dc8",
        "cursor": {
          "ref": "74b86d0d-71ba-4cd3-9294-0e5280653196",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "69dff49e-04e6-41cd-ac27-2c8f39dea1dd"
        },
        "item": {
          "id": "b88a1bae-4717-4c7a-93ca-3fe2af678dc8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "51e770dc-69ee-4836-964c-d7ad90197e31",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "62c0ff03-eeaa-4c9d-8bc2-5d6082a79d9a",
        "cursor": {
          "ref": "6e8c9951-1fbf-467f-a4a1-035a307e425b",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9266d50d-e0e1-44fe-a3ce-6d8e03b99fa5"
        },
        "item": {
          "id": "62c0ff03-eeaa-4c9d-8bc2-5d6082a79d9a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8aed1008-d837-483c-9b6f-507264df890e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fcc818-53a2-456d-b5c1-2880a51e09a8",
        "cursor": {
          "ref": "199809bb-45d0-43be-8526-73e12eaa0f16",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f77abb80-cb69-42e9-89ca-21e233889539"
        },
        "item": {
          "id": "d2fcc818-53a2-456d-b5c1-2880a51e09a8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b20a412f-69c7-401d-9900-7a32f827bae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a195e773-95e3-4787-95cf-9cc0334f99e0",
        "cursor": {
          "ref": "721c8b56-cc6b-4336-b0fc-a94a897ef325",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2fdbe917-472d-443e-bf36-e5bd95fccdc2"
        },
        "item": {
          "id": "a195e773-95e3-4787-95cf-9cc0334f99e0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c717e5c6-339b-4c5b-8576-4d7764b751ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf1e001-2cc8-4de5-aee2-242d2548a2d6",
        "cursor": {
          "ref": "07b81de1-4656-4519-bbe6-05b471c0a50c",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "990ecbb1-d96b-472a-8469-3bbe2d653b13"
        },
        "item": {
          "id": "ddf1e001-2cc8-4de5-aee2-242d2548a2d6",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e32f8cae-bce6-4c31-b2ac-6df3c0b9eee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ad2c7d-3c58-4eec-9d19-7005484a0f2f",
        "cursor": {
          "ref": "d8863dc5-c186-471d-b06a-379d9ec4dc3d",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "fec8016c-0050-45f2-b916-b8d5fa4957c5"
        },
        "item": {
          "id": "44ad2c7d-3c58-4eec-9d19-7005484a0f2f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "136182ec-66c9-486e-92f0-b6b5e6f5359d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3712180e-b839-420e-9f3b-d4c52ee985c3",
        "cursor": {
          "ref": "d9c56633-f4c7-436c-bd7b-e87f57863109",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b178eb50-d40b-42df-beba-7b3640c9b98f"
        },
        "item": {
          "id": "3712180e-b839-420e-9f3b-d4c52ee985c3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9457f55c-a70a-45e7-b010-7f713a6611f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c74246-a71a-4303-86c8-dd204926cf6d",
        "cursor": {
          "ref": "74533276-3445-465b-883a-be345705df8e",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b4aeeaf6-d4f5-4188-87eb-0f14f5619722"
        },
        "item": {
          "id": "92c74246-a71a-4303-86c8-dd204926cf6d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8fb849d4-dccc-40b0-a416-9969f96b7e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc16685-c3c9-43ab-8030-d54f91eaca0b",
        "cursor": {
          "ref": "9de64714-67e0-4a71-b4ab-0c8bcadcf20d",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ec483b32-06a9-408f-805a-596dfeec18ee"
        },
        "item": {
          "id": "abc16685-c3c9-43ab-8030-d54f91eaca0b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f4b49829-0a98-498c-a47e-8b4f256586f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 171,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c881598-e152-4435-b6cd-184011b0c09b",
        "cursor": {
          "ref": "0e6da3da-a0d5-4763-b9fb-f1f88dd208e9",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4d90315e-41b9-446a-a372-248b5391769f"
        },
        "item": {
          "id": "7c881598-e152-4435-b6cd-184011b0c09b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c6a8ed3a-c47a-4997-be66-9fd9cf833c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b8c4e1-0387-4735-a57b-d9e36e4e78be",
        "cursor": {
          "ref": "c025b49e-afd6-4f96-87c2-a782a6fbd4b7",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d9eecd40-d7f1-47a8-8eda-0c17e7a1456e"
        },
        "item": {
          "id": "13b8c4e1-0387-4735-a57b-d9e36e4e78be",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "df1dc494-1cb7-46f1-a068-7ad817b81425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 177,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3b2929-3b14-47d2-9237-5db9b6264c0a",
        "cursor": {
          "ref": "0f78d7c2-82eb-47fc-b2bc-bf2cd6735a1b",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "173b8cee-ff94-4c6d-9453-35e693c3765b"
        },
        "item": {
          "id": "7c3b2929-3b14-47d2-9237-5db9b6264c0a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "40866858-bfd7-425a-9223-0b2dac198d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af67956b-d2e7-48f7-a214-a1b02223ed97",
        "cursor": {
          "ref": "77ff956a-9ad4-4f40-a022-21c910fab37d",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "593ededc-385d-44da-9b0e-4a99e07f86af"
        },
        "item": {
          "id": "af67956b-d2e7-48f7-a214-a1b02223ed97",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2dba43f9-ded0-4f18-9600-17f27256d824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c16e186-1121-41de-83e6-bd028cbf207a",
        "cursor": {
          "ref": "1dac56b7-bec7-46a5-b180-7a2afe941a67",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b6d92d32-08aa-4b0f-b983-e26fe719d330"
        },
        "item": {
          "id": "6c16e186-1121-41de-83e6-bd028cbf207a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cd33cb18-bc7a-4e4b-be99-6b895a989ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8d083f-7238-455d-849d-a23954cdef8d",
        "cursor": {
          "ref": "a3a10633-7be9-4414-a169-cbf022a4b6d2",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6f1d316d-e326-4424-ba19-5f7f1776367d"
        },
        "item": {
          "id": "4f8d083f-7238-455d-849d-a23954cdef8d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "50b32507-313a-4103-8528-9961987db895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20dbf4c5-2abb-422a-b1d5-212b8f8adc4c",
        "cursor": {
          "ref": "da584300-06dd-4c22-90e8-a81e8262ff9e",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cdfc49da-78d7-444e-bde4-9e4136d0d1c3"
        },
        "item": {
          "id": "20dbf4c5-2abb-422a-b1d5-212b8f8adc4c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d621296c-0b97-47e7-b0b2-825a69c18689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953891b4-35f4-4c8b-bf17-93288ae2ae6a",
        "cursor": {
          "ref": "afbf129d-bfcb-464b-9538-d0f6796b750d",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d8945eb3-e447-497a-9411-86bea98ed35b"
        },
        "item": {
          "id": "953891b4-35f4-4c8b-bf17-93288ae2ae6a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "29e84f29-97ce-4249-8b13-6f7edc395b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bfb627-1a24-4d7a-a4ce-096f4927ea9c",
        "cursor": {
          "ref": "c0f151dd-f93b-4d47-b261-a3d5ce7af02b",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1afcf629-60c5-433c-8f2e-882739b8284b"
        },
        "item": {
          "id": "c7bfb627-1a24-4d7a-a4ce-096f4927ea9c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a90d0320-912c-4939-b900-f33007e4100d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1280fc3-bb9f-47a4-b989-6b87817f7dea",
        "cursor": {
          "ref": "e8de287b-9d66-4c52-a606-79566f5945da",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f096dd7e-7a9e-4e69-a587-221526a45d6b"
        },
        "item": {
          "id": "a1280fc3-bb9f-47a4-b989-6b87817f7dea",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5b9a9a00-aadd-48e4-9c99-9464039fe0dc",
          "status": "OK",
          "code": 200,
          "responseTime": 132,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "fcbc15b5-b3e8-4551-a127-65a69d035879",
        "cursor": {
          "ref": "fc0e2fbe-6b2e-4d23-8f8f-3f6f1e76ed34",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "49a29122-7176-4ce4-bc3e-b9383cb02be1"
        },
        "item": {
          "id": "fcbc15b5-b3e8-4551-a127-65a69d035879",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "821fe442-f8b3-4149-88d0-e3fd340d25e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80fec4a-798d-48b8-ab6b-102cd20d3110",
        "cursor": {
          "ref": "2959df2c-cff6-41e4-ba42-78a92693c36d",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4c07cdde-276f-4e7f-aaef-a5e24c072b23"
        },
        "item": {
          "id": "a80fec4a-798d-48b8-ab6b-102cd20d3110",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1840cc8b-6d48-4b67-a44f-3c64fd0acdb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32d1410-a492-4f37-ab03-3c30cf77da00",
        "cursor": {
          "ref": "fdf06088-7466-4547-a8fe-be81d7814452",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d638d6f1-87b1-4fb8-a8ab-11256b308c80"
        },
        "item": {
          "id": "c32d1410-a492-4f37-ab03-3c30cf77da00",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5ed8a4e1-707c-46d4-b3bd-e6e9350fce75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d9b850-0ded-473e-892e-6a3f4b35ae16",
        "cursor": {
          "ref": "ee4d27fd-2c92-4202-a5b2-fcf146bd4494",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "58766273-c25c-4dde-9d44-97f202296abc"
        },
        "item": {
          "id": "c6d9b850-0ded-473e-892e-6a3f4b35ae16",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b0c6e0c1-f1bb-4fd8-9e32-3cc1b27c7e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7f606c-82a8-4cb8-8342-abac2f8a4856",
        "cursor": {
          "ref": "af585109-680d-4528-b220-2d4c128f374f",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ac80e2dc-c28a-4528-9874-05df21958ef1"
        },
        "item": {
          "id": "cb7f606c-82a8-4cb8-8342-abac2f8a4856",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ff4ef476-f6d0-4bea-8ad6-a128b887f7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4678714f-d6d0-4ec4-a9c2-008a38bd0b10",
        "cursor": {
          "ref": "c8273974-3862-404f-a6a4-7b9011f0cd9b",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1a61f13a-7d45-41af-b545-3d7051cd7555"
        },
        "item": {
          "id": "4678714f-d6d0-4ec4-a9c2-008a38bd0b10",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f932f79b-7924-4f86-a86f-571e66f62217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe289d5-113b-486e-9e07-c3e35e5139ca",
        "cursor": {
          "ref": "7dcca9d4-9ecf-42c2-89ce-024a3d29eeea",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "841b2b5d-a14f-4445-9a4a-3cf316b65448"
        },
        "item": {
          "id": "0fe289d5-113b-486e-9e07-c3e35e5139ca",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "fa373e45-3e52-41b7-8476-0675d57a61c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eee7f88-7409-43de-8909-f62111252350",
        "cursor": {
          "ref": "44ae2d79-3dd9-4c0a-ab53-1b1f7e348217",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0d827a71-ceff-48a2-a382-88f4a01976dd"
        },
        "item": {
          "id": "7eee7f88-7409-43de-8909-f62111252350",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f8066b10-f11d-487a-91dd-8670175f9a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a97165-578a-44e7-9b23-857693ec9a31",
        "cursor": {
          "ref": "4e529a58-fd04-4ca5-be62-9df7d9c0a65d",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "21a84acc-86b2-4f80-bfe6-2810cda680a6"
        },
        "item": {
          "id": "c7a97165-578a-44e7-9b23-857693ec9a31",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0d549585-6a83-4fd9-9cb1-dcacb0c60d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4f5dde-c858-475a-a666-d974917b9d94",
        "cursor": {
          "ref": "05daf7db-0037-4073-84ad-ebb17f3bc624",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "864bb45a-6b4e-4613-bf06-d143e8ca3442"
        },
        "item": {
          "id": "5f4f5dde-c858-475a-a666-d974917b9d94",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "305c4226-d6a6-4e6c-a765-c12660ecd5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583bc723-d126-4804-b34a-4b786649ce3d",
        "cursor": {
          "ref": "260fef21-b74f-4f10-99c3-08a36930939b",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "74dbe5cb-b414-4e85-a953-c9ff7e21fb92"
        },
        "item": {
          "id": "583bc723-d126-4804-b34a-4b786649ce3d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e78c9cdf-8f27-4952-bb0c-b9069e257eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2deb11ed-fdc2-4a21-8c3b-f6feaedb14b5",
        "cursor": {
          "ref": "1b79d044-ceda-4be4-a4cd-0120f96ba2a4",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f7f10c70-27f9-4466-8929-497bff4672b6"
        },
        "item": {
          "id": "2deb11ed-fdc2-4a21-8c3b-f6feaedb14b5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b5fad09d-172c-462b-9029-ef895564db76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fc0d8c-7830-4cb6-90a6-37cf1382ce7c",
        "cursor": {
          "ref": "d279ad05-b58f-4dc6-bd77-4345a89ec4f5",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "68ec6b10-ec56-46f2-9c29-999927b361d2"
        },
        "item": {
          "id": "82fc0d8c-7830-4cb6-90a6-37cf1382ce7c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "62e26a4a-e7f4-46d4-8dc5-658574aa99a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309e386b-6c11-4c5e-a104-aafe5a0169b7",
        "cursor": {
          "ref": "29d75937-820d-49f2-ae6c-3f4611029ad1",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "147c5b78-df68-4d09-a354-01258952ec04"
        },
        "item": {
          "id": "309e386b-6c11-4c5e-a104-aafe5a0169b7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "25ecd446-d76b-43e6-8160-92cd8613c8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d2a8d5-f3f5-4e1e-a738-db2140deee14",
        "cursor": {
          "ref": "10878d04-0f4a-416d-b5a2-d72901762343",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3d72ff68-263c-461c-899a-9f1659a6c006"
        },
        "item": {
          "id": "60d2a8d5-f3f5-4e1e-a738-db2140deee14",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3013191b-d878-4d22-b550-5acca12b00fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7ce194-87e6-4ebf-a745-f55b450af562",
        "cursor": {
          "ref": "2d84cd99-4b82-4be7-bba1-0e1372e99866",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "63bdb4e9-a3ed-42d5-a154-cca494b49394"
        },
        "item": {
          "id": "9e7ce194-87e6-4ebf-a745-f55b450af562",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "abefc610-7708-4914-8748-2f3b0cd54711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39b8909-b07a-4cac-8079-66cdb3594cb7",
        "cursor": {
          "ref": "e41a7bab-4f4e-42e5-9830-2d5e9a80965d",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "59d58765-975a-4a2e-9736-9ebf1d188dbe"
        },
        "item": {
          "id": "a39b8909-b07a-4cac-8079-66cdb3594cb7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7f2c9b8f-7ca4-47fd-92bf-b1d51f773126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02865f2-e348-459a-81cb-d602a30af279",
        "cursor": {
          "ref": "bdba8e1e-94a0-4ec0-9189-db219157bb8e",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "de96f54a-e8f3-40d0-ae1c-4f2c507ca22f"
        },
        "item": {
          "id": "a02865f2-e348-459a-81cb-d602a30af279",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "dc176f24-1d70-465e-9b1d-3b61ca548837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853d17a7-e3ad-42c1-897a-3c27dde873b6",
        "cursor": {
          "ref": "fe05719c-d62b-4301-8fc5-cd5a02b911df",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "83f7c53b-e268-4ddb-8655-d4694b7fe2b3"
        },
        "item": {
          "id": "853d17a7-e3ad-42c1-897a-3c27dde873b6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "56ad2b2e-4cb8-47c9-b895-5e6a622ebd13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aee6860-915d-4c2d-9587-1c1efef0cb23",
        "cursor": {
          "ref": "99965411-2372-4d60-8170-11f6db04c71c",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a9430a8e-3713-4102-98c6-928eddf0594f"
        },
        "item": {
          "id": "3aee6860-915d-4c2d-9587-1c1efef0cb23",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "58bc7091-7314-4e0a-a620-8c42accb1257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb7310e-0738-460d-ae62-ede5998bed08",
        "cursor": {
          "ref": "ab607254-7753-4574-aab1-1209da62ccbc",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e95192d2-2ca4-41bd-a3b2-7a4587512a79"
        },
        "item": {
          "id": "0fb7310e-0738-460d-ae62-ede5998bed08",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "da1af56d-2ecf-417a-bfc7-4ccebe2d4e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa10a4a-a4ac-40a2-8f8f-2d127f7f516a",
        "cursor": {
          "ref": "3b1fcda4-dbf7-41ff-a14b-312f64ee910d",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fc594132-1b48-4ff6-939e-fb906911cff8"
        },
        "item": {
          "id": "2fa10a4a-a4ac-40a2-8f8f-2d127f7f516a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "10ba101e-af06-4a0f-ab29-2c43b96652d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430f6921-bd3e-4280-9174-539f3a0937e2",
        "cursor": {
          "ref": "d28e554f-5ea3-4e6f-af40-975b14c4d3fe",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d0393727-01d5-4535-8ede-05f3a2c41eef"
        },
        "item": {
          "id": "430f6921-bd3e-4280-9174-539f3a0937e2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e136f140-063d-44ce-bf94-6e06a5e658e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270431f8-2bfe-4e77-8122-95ce222f23e6",
        "cursor": {
          "ref": "44637f9b-0130-45e3-ad5c-a45bc0862364",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ac375485-fe1f-4d45-8fc5-603c8e74a6b8"
        },
        "item": {
          "id": "270431f8-2bfe-4e77-8122-95ce222f23e6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "73dc4b48-2ccb-48e6-b2d2-d5061f522c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fce4f15-27d7-4e35-900c-a13c2d8ccc59",
        "cursor": {
          "ref": "76af0fa9-722d-4876-9b8f-5e7b162ebdda",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "458d0b60-02b3-43dc-9c99-b1408890d346"
        },
        "item": {
          "id": "8fce4f15-27d7-4e35-900c-a13c2d8ccc59",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "41c2f315-f71d-45ff-9170-657e3d9618bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90043921-ec9a-46f8-bd5d-a777b1ef471a",
        "cursor": {
          "ref": "dffb7e40-c13b-4d93-a43d-89c565fc1ee1",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "442f48e8-d976-4f9f-9a79-edb6431cf33d"
        },
        "item": {
          "id": "90043921-ec9a-46f8-bd5d-a777b1ef471a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5cdc0e18-7900-4ee7-9cae-52a61ce411d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18b331f-7471-4bf8-8b17-2df2edbfd3ea",
        "cursor": {
          "ref": "8d1cea14-f93a-463b-9ef2-24dc5af56d33",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f63ee6a8-a7d7-45e3-bd9c-81d0b43eedb1"
        },
        "item": {
          "id": "b18b331f-7471-4bf8-8b17-2df2edbfd3ea",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c52a8e0f-9646-4e8c-902a-b5b0c07c888a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b4642f-b00e-4228-a581-19567adcd963",
        "cursor": {
          "ref": "00672be4-cbb0-4225-9847-f28883dfce93",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b9696fe4-6018-451e-a4c7-2f267f41dcde"
        },
        "item": {
          "id": "30b4642f-b00e-4228-a581-19567adcd963",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7ca83003-46b9-4895-afaf-61f3cc2c9e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e3e128-8ea4-426e-b6d4-49dc97fb0d5a",
        "cursor": {
          "ref": "32497dea-2d1e-4229-b16a-22a32b3e09ba",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a3b5f6c7-102e-4171-bb27-3c28a2666d41"
        },
        "item": {
          "id": "02e3e128-8ea4-426e-b6d4-49dc97fb0d5a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "054b0c01-b076-40b5-b1b9-d73525ce630f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e87dae-90a1-4864-bcfb-59ea710d340f",
        "cursor": {
          "ref": "f6e637c7-bb7d-4654-936e-a9702f17e453",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8e0646f6-b0a5-4ca2-80bb-1ed2e4483997"
        },
        "item": {
          "id": "31e87dae-90a1-4864-bcfb-59ea710d340f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8dd37a50-c13f-4b8c-8a55-e17c66a8fe9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2ec482-5b9d-4c80-a384-120d9b5bd310",
        "cursor": {
          "ref": "20b35c17-1fbc-4095-82e1-8069b7fd661d",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4fb76b45-726a-4087-9337-490debc58be9"
        },
        "item": {
          "id": "5e2ec482-5b9d-4c80-a384-120d9b5bd310",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ff022aec-97d6-4d9a-8fc9-9ead3a8e5a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be22b53-276d-45b1-b1be-be8e5fcf3881",
        "cursor": {
          "ref": "8a0ff952-6fc5-4c65-9d4a-994e55196af3",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0ef54a5a-bb78-48e2-8067-9bb21b605a75"
        },
        "item": {
          "id": "2be22b53-276d-45b1-b1be-be8e5fcf3881",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d540e0aa-6c40-4453-a311-1ab1f6388480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68d48d7-a65d-4a32-962e-7d0406df01b6",
        "cursor": {
          "ref": "d76cd750-9a68-41e3-b01c-34ab28c2536b",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9843822e-fb10-4f70-848f-5ccfe9b3731a"
        },
        "item": {
          "id": "d68d48d7-a65d-4a32-962e-7d0406df01b6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "42fc334c-1be9-4c11-b690-4f7b18031575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06623c6f-dc73-44cb-a643-89b6793772be",
        "cursor": {
          "ref": "dc0e5a1f-f19f-4987-889c-3697786b1abb",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "96d1a638-aac6-4f5d-964d-0db19c3e04fe"
        },
        "item": {
          "id": "06623c6f-dc73-44cb-a643-89b6793772be",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6f161eb2-4488-4050-93df-56674b4a5604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afdf20b-536f-43a4-b2bf-f8768b18c06e",
        "cursor": {
          "ref": "69414722-0307-4472-8075-451f13a3efe8",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ef2092e5-5f3b-4950-baac-be20e0c3aecc"
        },
        "item": {
          "id": "6afdf20b-536f-43a4-b2bf-f8768b18c06e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3e480444-da5d-49ab-805e-19eeccceae93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e739ee23-3e78-43c5-98ff-433ddf9398b5",
        "cursor": {
          "ref": "2e6eb2c5-4661-4822-9447-2a5af7fd3101",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6942d295-cedf-485b-a97f-336559ff600d"
        },
        "item": {
          "id": "e739ee23-3e78-43c5-98ff-433ddf9398b5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3138d035-3dc0-42e6-9e2a-191319181aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a38936-48f1-4525-92b5-f1bad2e4e68d",
        "cursor": {
          "ref": "cec70258-6d6f-4296-9743-728b4fd9338a",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2f7af599-c258-4f42-9e5e-605b26498a9e"
        },
        "item": {
          "id": "82a38936-48f1-4525-92b5-f1bad2e4e68d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ebf48619-22a0-4ad5-a33a-7448c31801c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849dff71-97c4-46b4-8d0b-0e4e8c8ef861",
        "cursor": {
          "ref": "317ec69b-8c5d-44c7-ae49-8bc245ee6cef",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "efc7ba4a-9848-4195-bdb3-f36d8454f282"
        },
        "item": {
          "id": "849dff71-97c4-46b4-8d0b-0e4e8c8ef861",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b86d6d8c-f9da-47e4-a0cc-c6942befd896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3854c4-c952-424b-81b9-d6a05754c6c6",
        "cursor": {
          "ref": "713eac5b-6d41-4aec-a809-652c5c6ec130",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a506bc4d-e849-447f-af43-233afdb4acdc"
        },
        "item": {
          "id": "0d3854c4-c952-424b-81b9-d6a05754c6c6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ad1ff669-c228-4290-b024-324faf9e1903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f7b375-a144-4549-a897-d26862c4def4",
        "cursor": {
          "ref": "4503527e-7131-4fc6-90f3-a9874de880c5",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "21c69461-e9c7-491f-96cb-9177993baec0"
        },
        "item": {
          "id": "d6f7b375-a144-4549-a897-d26862c4def4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "92996be5-004b-4d11-9aad-8f6c75268ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85f29aa-7db9-4b6b-9e2f-38b6910b8965",
        "cursor": {
          "ref": "4a7c1677-6fe4-4f00-a76e-7852f0b76096",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c683d8f8-aecd-4a0f-9da9-61ae3d2ed135"
        },
        "item": {
          "id": "a85f29aa-7db9-4b6b-9e2f-38b6910b8965",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5ffb29f5-54fc-488d-a175-2bf94cc408ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe7a903-98af-4fe7-932f-9c07d638ab52",
        "cursor": {
          "ref": "f8928adc-daea-43a4-99fb-efbb2971f1f9",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7b735bdc-d04b-4b0f-b7a0-04f47aa95376"
        },
        "item": {
          "id": "1fe7a903-98af-4fe7-932f-9c07d638ab52",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7104ed02-b266-40e8-ab5a-83fe88aca3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610e2c28-cba0-4032-b068-b59149a0e384",
        "cursor": {
          "ref": "c61fb457-2697-49fb-b539-40312d60010d",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "50933737-9290-4f76-9864-844e003eb58f"
        },
        "item": {
          "id": "610e2c28-cba0-4032-b068-b59149a0e384",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a04d86b2-2bb8-4202-a9c9-b082cbf52a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fc4d53-d44c-46e2-bf97-6c118928d2da",
        "cursor": {
          "ref": "6732c19a-f1fd-4b2d-a81b-40c6ed5dc047",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "610b03f1-1063-47b9-a99b-6803f2f028b3"
        },
        "item": {
          "id": "09fc4d53-d44c-46e2-bf97-6c118928d2da",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f74e543a-166b-4ae2-9fe1-047f9a07760b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3bfc182-1914-4bb0-b3e8-7f66ed98596d",
        "cursor": {
          "ref": "d8e840a8-313a-4b33-bb6f-3c69bcf7d85a",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3af09215-c11f-47c0-a0e2-53f8c28c68ae"
        },
        "item": {
          "id": "c3bfc182-1914-4bb0-b3e8-7f66ed98596d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "dd6ecb93-8c7f-40a0-a8e6-654df074e176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd80eaa5-dcd4-47e2-9296-b97e784dba20",
        "cursor": {
          "ref": "1d3097af-930e-4c5d-a5c9-22ee9bf8a40a",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ebdfeb20-bd52-4c95-9864-b4e529826eef"
        },
        "item": {
          "id": "fd80eaa5-dcd4-47e2-9296-b97e784dba20",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "85d0d508-9549-4bd7-81a9-9fcb202a4ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6a1cdf-8b8d-4b65-99ae-51ac39349fd0",
        "cursor": {
          "ref": "746a0a59-5f3f-4089-ab3e-1e6789d784d4",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0f65b539-0370-447e-a229-ea65b4edcbfb"
        },
        "item": {
          "id": "cb6a1cdf-8b8d-4b65-99ae-51ac39349fd0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "11796cb1-74b0-413a-8e2b-b72ef89d6b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4acc6e83-ab69-4638-b0e7-2995df5700e8",
        "cursor": {
          "ref": "3a4c8441-6b0c-4c13-91e0-5e1c7eb706cb",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "443db0e9-4d5f-45be-bb3f-9eeab0a4b1d6"
        },
        "item": {
          "id": "4acc6e83-ab69-4638-b0e7-2995df5700e8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8c572479-b970-4e45-a56e-4d286fda9cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c1df60-9003-4bb0-8dd1-c327f6a01dfe",
        "cursor": {
          "ref": "693125d2-9b9c-4c33-84e8-91a420edb691",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "eb41e5c9-aceb-4dae-b608-87c44d538489"
        },
        "item": {
          "id": "84c1df60-9003-4bb0-8dd1-c327f6a01dfe",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e77d9e82-d35b-4851-ba1c-f8cd2e895b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8545c3f2-e4cb-47e2-98c6-776efcd19c0b",
        "cursor": {
          "ref": "9a2fdeda-9cb4-4fa4-98c7-f48432918c0f",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "67f1c10f-44f8-4ab5-8ab5-f6e40a18d7d9"
        },
        "item": {
          "id": "8545c3f2-e4cb-47e2-98c6-776efcd19c0b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8211eeba-cc5a-481d-8ef3-90ccb8d5ad78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc6602a-68c0-4ace-b4d0-04697eef034b",
        "cursor": {
          "ref": "e1500de1-f9fe-4cec-a1cd-b72ac66c2d84",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6a5fd794-ee6b-41bb-9c58-f81be2cce581"
        },
        "item": {
          "id": "1bc6602a-68c0-4ace-b4d0-04697eef034b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b7775244-d6f3-4f4c-8203-66baf7842a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86c3b7e-9cec-492d-afd6-0844dfdd01d5",
        "cursor": {
          "ref": "b7308dd7-c3a5-42b0-a222-ac260aeb053c",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7b25963b-3cbd-4854-b72a-16268a272960"
        },
        "item": {
          "id": "a86c3b7e-9cec-492d-afd6-0844dfdd01d5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d295e9cf-60dd-496c-a887-9392ba6591ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8c0d04-131a-4af3-91e3-a6640acab788",
        "cursor": {
          "ref": "b5b70b6a-9a0d-4e3e-9d2d-e1bb3a78c6e0",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "81a6ba3f-4565-467a-bf86-652a1c1193af"
        },
        "item": {
          "id": "8a8c0d04-131a-4af3-91e3-a6640acab788",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "949e8ecc-3bc5-42c6-9dcf-e363f82920c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e68e940-3747-4a6f-9caa-ebb61e063cd5",
        "cursor": {
          "ref": "a1845a38-ad88-408c-a1b5-aa19b6da9692",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "51a7f862-63f9-473c-81fa-f0f2283558bf"
        },
        "item": {
          "id": "3e68e940-3747-4a6f-9caa-ebb61e063cd5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "db62b185-47b0-42ff-afc0-a93a10ffaaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6bcb29-240f-47e6-b231-654e3d43ca56",
        "cursor": {
          "ref": "48e86acd-ac59-416a-a581-0956de82096d",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9484fab4-c5aa-44d3-9bdc-161d9b9c677c"
        },
        "item": {
          "id": "fd6bcb29-240f-47e6-b231-654e3d43ca56",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "cd903e99-ae75-4d77-b23f-4f574c23ade1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4488ff-841c-439b-b1c8-a05e212ca6b3",
        "cursor": {
          "ref": "80177aaa-ed76-4d29-a7e7-8c2f053ee568",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "787de1f7-0498-4c71-9cb2-acd63fbedd5d"
        },
        "item": {
          "id": "3c4488ff-841c-439b-b1c8-a05e212ca6b3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9a042589-3d4f-4264-9fa6-c3f283cf1b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9cc468-ccf5-4db1-94c8-d99971d9e8d0",
        "cursor": {
          "ref": "931b8fce-7ea9-46d7-9408-18c11b1ff200",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4193e43c-6787-45e1-85a1-671a0df51c83"
        },
        "item": {
          "id": "6e9cc468-ccf5-4db1-94c8-d99971d9e8d0",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bd1faf9f-9b79-40fc-9824-309ad0e8aae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ec4867-eba9-4141-93fc-1c5f967a1184",
        "cursor": {
          "ref": "b5f94c12-fd5c-4963-a496-4d767f5ae4d1",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "04104938-7043-4a65-946e-3e3e62189366"
        },
        "item": {
          "id": "e9ec4867-eba9-4141-93fc-1c5f967a1184",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "06167193-7d5d-46a3-9f76-f70ef235902a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a04884-550b-4f17-a598-97521b66adda",
        "cursor": {
          "ref": "4c35fc09-400d-4f88-a339-b4325b2a5478",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "928d6d9d-6c1c-4edc-acc9-e38fe5eca6f4"
        },
        "item": {
          "id": "e8a04884-550b-4f17-a598-97521b66adda",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d03b1108-09a4-4ad0-85cd-7f982fbcb286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd92e73b-1503-4d4d-b2ee-47b7abf66e5b",
        "cursor": {
          "ref": "a50ab3d3-b232-4621-8ec9-9cae5b12d13c",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "667e9f06-710b-4f95-b9b2-7137cd0f31b2"
        },
        "item": {
          "id": "fd92e73b-1503-4d4d-b2ee-47b7abf66e5b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "593073d3-ed4a-4032-b919-2fdbb7475691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4609535c-5506-490d-87cb-8914ec546d6b",
        "cursor": {
          "ref": "5790475b-6f30-4f7d-b8a4-bb0620db9407",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b249ab6d-4a91-4710-8083-c9b287efecf1"
        },
        "item": {
          "id": "4609535c-5506-490d-87cb-8914ec546d6b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b0f5727e-d5e1-43ae-8740-ad0e3f6f3066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed4bc6b-ae57-4723-a6f8-900dbeb71d81",
        "cursor": {
          "ref": "b98f9f85-3dd5-44ef-80f2-65a6df1a682f",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fa6882bc-6e48-4cee-8b5e-c8a7f6ceb985"
        },
        "item": {
          "id": "eed4bc6b-ae57-4723-a6f8-900dbeb71d81",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "038072b2-4adc-4f6c-978c-830b5f99af30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cbe636b-09fd-4c8a-a75c-18bf9fd597b3",
        "cursor": {
          "ref": "cd64cfab-be5d-4b8c-83f3-52267988077b",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0cab4185-f881-446a-908d-6d8af4a28a14"
        },
        "item": {
          "id": "3cbe636b-09fd-4c8a-a75c-18bf9fd597b3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "34d86af5-7859-4a85-b663-6e6552baa491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3288de-217b-4dc4-b73b-499528a57e4a",
        "cursor": {
          "ref": "9afa219c-7dc2-45b3-ac50-def62c84e50e",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7fa8fe9e-2143-49e9-9cb7-99bed84dbc2e"
        },
        "item": {
          "id": "7f3288de-217b-4dc4-b73b-499528a57e4a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b24af5d7-3ecc-4752-8c77-c35adb8cef06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf48b15-d786-4952-b960-ff42664fba34",
        "cursor": {
          "ref": "52577326-3c25-44ba-b7c2-f5f8ed03a9bf",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7767b851-a290-4130-9628-437b972f1579"
        },
        "item": {
          "id": "eaf48b15-d786-4952-b960-ff42664fba34",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0513493e-1745-4613-bd45-4f1bea4e203f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63eae1c3-a163-47be-a3bf-3666236938e8",
        "cursor": {
          "ref": "a12921ff-1bb9-4131-b8e6-9ae47972d880",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d9e9732e-bcc6-4305-a921-9cc900b24cd8"
        },
        "item": {
          "id": "63eae1c3-a163-47be-a3bf-3666236938e8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c202af82-0972-433d-bff1-4cc56e08c011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e26f5c7-7392-4899-8a67-bfac04900072",
        "cursor": {
          "ref": "dce8d1fc-eab0-471c-a6f2-87db50b52649",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "80399aca-6f58-4bce-a9f0-5c19dc9cb719"
        },
        "item": {
          "id": "9e26f5c7-7392-4899-8a67-bfac04900072",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "883cd31c-24c2-48f4-af7e-71fb95176a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee73c187-a6a5-4d19-a83b-157f873627ce",
        "cursor": {
          "ref": "8bc6cd9c-a4b0-4195-9832-964bd2bdc2d3",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "46c7f4eb-78a8-42b5-81d5-034656269883"
        },
        "item": {
          "id": "ee73c187-a6a5-4d19-a83b-157f873627ce",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1178f8fa-b5b5-4002-9019-50b672d105ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7338d48f-bb64-4168-a12a-cfbaba64632a",
        "cursor": {
          "ref": "d980c75e-a235-4b67-a980-bbeae0389034",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b2fffe95-588f-479b-9dfe-54d2966d242f"
        },
        "item": {
          "id": "7338d48f-bb64-4168-a12a-cfbaba64632a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "97ed1739-f2ee-4e17-853f-4fe153bccdfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d21bc09-a3a2-4836-a8a5-eb62124b850b",
        "cursor": {
          "ref": "b99872e9-bca4-44b7-a3c5-16173907a891",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "175b7ea1-49af-40b8-ab12-0e43ad232491"
        },
        "item": {
          "id": "1d21bc09-a3a2-4836-a8a5-eb62124b850b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "455420f6-c355-4c75-858d-491e287d22b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb03c62-266b-4180-9543-1c0437bd27a7",
        "cursor": {
          "ref": "a4105b38-6385-42fe-bfac-096057a2800e",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3ab19a94-8a03-4415-a407-62bcb4a10e08"
        },
        "item": {
          "id": "edb03c62-266b-4180-9543-1c0437bd27a7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4715af9f-def9-4b1c-b2bf-89f2139ca3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7209f3a8-3343-479a-be55-c446279b299b",
        "cursor": {
          "ref": "7e87b9a1-ed43-4a3f-9115-e8a4bea90d77",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9ea0270a-6851-4302-8834-6614d7c3497f"
        },
        "item": {
          "id": "7209f3a8-3343-479a-be55-c446279b299b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2615216b-ace4-4762-bc0c-dc5398bb5715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddaac9d-0e92-4167-9e15-e980d644b3e7",
        "cursor": {
          "ref": "a4b97498-5b30-44e0-b3c4-55bda8deb74b",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2dee80f7-ab1a-482c-be9b-a405679dfae0"
        },
        "item": {
          "id": "6ddaac9d-0e92-4167-9e15-e980d644b3e7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f5a275c6-6795-41ef-9a9c-8d006696fa20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7ffa3d-6482-4a7c-af0a-bbc8bcf3ad38",
        "cursor": {
          "ref": "de9967b7-eb41-4dd7-aab0-e77bb4180de8",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b237b64c-6fc0-400a-92f9-f71d359d499e"
        },
        "item": {
          "id": "ae7ffa3d-6482-4a7c-af0a-bbc8bcf3ad38",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "82a2de99-272d-4777-8a97-03bc30e69b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab0b990-638b-4f46-8d5b-17eb890e3db2",
        "cursor": {
          "ref": "d8934605-9609-46fb-915b-ff616240d99d",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f8138f87-c675-489a-901d-6660f33adae2"
        },
        "item": {
          "id": "0ab0b990-638b-4f46-8d5b-17eb890e3db2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2a2c3954-1988-43cf-a003-6748b10cf936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ad2c95-8e86-4ca0-811f-de648e7e2a61",
        "cursor": {
          "ref": "caac9c39-738c-4b8b-8e23-a0487871d245",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "682c02a6-fc46-4f01-84e6-51cfdcabe0c3"
        },
        "item": {
          "id": "00ad2c95-8e86-4ca0-811f-de648e7e2a61",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "92db1723-e5c0-4776-9915-b7e32571d72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb68b71-7253-4e7e-a9f6-69d3671a87a2",
        "cursor": {
          "ref": "00bbd691-8c6f-4c79-a305-60e848e44fc2",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3adae975-8287-4947-a76b-6460e06353f1"
        },
        "item": {
          "id": "aeb68b71-7253-4e7e-a9f6-69d3671a87a2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e9d5b4e1-781d-4651-ba3d-193a8d4d3296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f5d277-0cac-4623-afa4-a4d52012a4ad",
        "cursor": {
          "ref": "59d3e2c4-ec7d-4abb-9874-fc2b1ac90450",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "41ce1e8d-0125-4ae2-8a04-8c846752c512"
        },
        "item": {
          "id": "02f5d277-0cac-4623-afa4-a4d52012a4ad",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0281553d-52ea-40b9-9117-424b7f7a814a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4fce4d-9d96-4adb-ab38-090b40db1e05",
        "cursor": {
          "ref": "417ab6c8-ddd3-44af-80e6-6942f3d168b3",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ec138507-5c98-4918-a3be-a2ca84a4336b"
        },
        "item": {
          "id": "5e4fce4d-9d96-4adb-ab38-090b40db1e05",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3d0ebc52-fd88-4e53-99a1-ef94860a3b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cf111d-baa3-458c-8d5c-ea55470873ec",
        "cursor": {
          "ref": "0e6e9819-ebae-4533-921c-7a4f8d59b248",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "fdfd11f7-f15b-4954-a3be-169ae0c50b5a"
        },
        "item": {
          "id": "28cf111d-baa3-458c-8d5c-ea55470873ec",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "03183887-bad9-41a1-8aee-b129e128bb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5402c18d-65d2-45e6-b96d-87db4df7bdbe",
        "cursor": {
          "ref": "8006cb08-7670-4285-b443-ce8c1617afbc",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "672e84f0-1d02-47f2-8c15-24df26e242f9"
        },
        "item": {
          "id": "5402c18d-65d2-45e6-b96d-87db4df7bdbe",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "222c1dda-7882-43ab-a582-4755d083066c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4334dff6-e542-413f-b9d0-135006a7fcd0",
        "cursor": {
          "ref": "ff99255f-839d-42cc-9446-fbe7b52d08ac",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "337c0814-d99a-46ca-9051-9097a569f908"
        },
        "item": {
          "id": "4334dff6-e542-413f-b9d0-135006a7fcd0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "decfc518-fe38-40ae-a20f-1a3d8d803b51",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9013395-dbc9-4c28-86c1-d3d9991d1542",
        "cursor": {
          "ref": "6e0b689d-c37a-41a4-ac7f-a20c2543732b",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7903c8d6-38d2-4f98-acdb-47d17f69e3bc"
        },
        "item": {
          "id": "e9013395-dbc9-4c28-86c1-d3d9991d1542",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e063381a-5c8d-48db-bcea-df5bf4286e29",
          "status": "OK",
          "code": 200,
          "responseTime": 3229,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a078ff19-6549-483c-972f-c96243de4773",
        "cursor": {
          "ref": "4f6f108f-2fd9-41e7-81c4-ab14713cbbd3",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bc825d0f-d8df-4a11-aa0f-8d364b76c445"
        },
        "item": {
          "id": "a078ff19-6549-483c-972f-c96243de4773",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "75bdeea1-a5b4-4798-9c13-4dbe3dfb0a22",
          "status": "OK",
          "code": 200,
          "responseTime": 2564,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "293b5f41-7aae-4646-9294-bfefd846a6e7",
        "cursor": {
          "ref": "85e0f4aa-de1c-4125-82f0-32ba675eab7a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f4472830-4b7b-49ed-8002-a38d3fc12252"
        },
        "item": {
          "id": "293b5f41-7aae-4646-9294-bfefd846a6e7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "911805c9-0813-4cc4-8fac-47aa8c61626d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293b5f41-7aae-4646-9294-bfefd846a6e7",
        "cursor": {
          "ref": "85e0f4aa-de1c-4125-82f0-32ba675eab7a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f4472830-4b7b-49ed-8002-a38d3fc12252"
        },
        "item": {
          "id": "293b5f41-7aae-4646-9294-bfefd846a6e7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "911805c9-0813-4cc4-8fac-47aa8c61626d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2fd573-e3c9-4b58-af19-e2d573b266f2",
        "cursor": {
          "ref": "e32f437d-0ff0-4ae8-8c58-4d23291c20c5",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "bb7f5ea5-bcf8-4da6-9a4f-050e88d83467"
        },
        "item": {
          "id": "aa2fd573-e3c9-4b58-af19-e2d573b266f2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d56342e7-39f2-4ebe-b217-326800862d47",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5ebe3a-7d8d-4c73-b9f5-aeed33cad5d3",
        "cursor": {
          "ref": "5b85ffcd-1739-432f-92d4-9a2c0af00dc2",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6c174d33-f2f2-4ce1-8c66-0a2f583ad875"
        },
        "item": {
          "id": "2c5ebe3a-7d8d-4c73-b9f5-aeed33cad5d3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2b58e482-3491-4bd4-be9f-2f55cbf08d5a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}