{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "aa67ae60-695b-4240-aec6-5c0828f73b35",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a2c7da93-c4d2-43e3-adc6-c9dec61dc4c4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7f37acec-9788-478a-b609-0cc326dcb1c5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "afcf6a91-61c7-4972-afd8-2fc07bc27fa4"
                }
              }
            ]
          },
          {
            "id": "62a4bce2-590a-4ada-9d73-893e31de7cfb",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a4254262-22c4-4765-81f0-0f70bb467160",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eca2dabf-e8e0-4453-94ec-8e5ce7b5ce6b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3742ee33-7259-409b-83c0-0da1b2f2fc31",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "96f480b5-97fe-4174-ab8f-9343031a4221",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7505d78b-4898-4208-854e-5197eca7de15",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70caf6d2-4dce-445d-9ab4-4e0753399eec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f3fcb0f7-d77c-4133-8fb8-592fe200bf1f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d4f6d55e-e70a-4227-97ae-391841a29961",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec71f78f-a553-49cd-8a81-605b39a5ebf6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c99a7a3f-3357-42c9-ad37-fe176c66b126",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "51c6b6c7-8a37-4793-babe-55bafd8c6b5c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e2aed97-e452-4982-aef0-01f861c4f00c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "98ffced2-db92-4a34-af3d-b99507ccd78b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "54819ece-c884-4cd0-9891-e6c72b15b283",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cb083f18-b61b-40f5-8331-7323377b9c7e"
            }
          }
        ]
      },
      {
        "id": "e83751d8-1221-47d4-9c06-c2982be8e11a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0ae452f6-01b6-49a3-945a-9f4daedd1f83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d71f635d-080e-4ccb-ab59-0febedf949a7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2517ce98-bdc8-42e9-bdb7-72fd759626f2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9b3162-b61c-4731-b3e7-db2a68a065b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d29e9310-108e-4cc9-922d-6324a17c355a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc672688-f8be-4fd8-82de-56d7e9cfa20d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae8be8e-c223-43e4-b8c9-82f2aafdfe69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7f7090e-459c-40ca-b1b6-1565c2bc0d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da452e5-c7f2-42fd-b0cb-0825fbd7a8e0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635009df-a961-4a71-88f2-1834adb94fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edf71dda-e506-43e7-92f3-fad5f0526600"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "158911af-2b6f-4716-86b0-4fa707a48863",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4089021b-a220-4f95-9559-9e8fd12b7f20",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f634105-57a7-4d68-a4d9-ca2b49c42040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb113b63-18bd-43a4-a708-c135b9d92396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8881c302-1118-4d69-a743-2100207e57ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe07b66-8396-4708-9d6c-a76a62703c2b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8702e367-805e-4c7a-ab01-72e0eb1f60e9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "74bfc93c-866c-4c75-abff-97b90253a45a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9165c7ee-5fa5-475a-8bef-0fcff1010c1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1577f4b9-1872-45e3-92ed-0a86315db2f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "266b9ab6-084d-42a5-89e9-e3ee0a3fd33e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c8ed8e2e-adf3-4ce0-8891-06895cab8749"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f699d736-f7bc-40f7-b8bc-ab48446d476e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "db3ac7be-c3b2-4d0a-98df-a61d5864f235"
            }
          }
        ]
      },
      {
        "id": "cf852367-ec2d-49a2-befd-4be3abfc24ae",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fb6cbf9b-94f7-4c37-a209-84f2da5ad25d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db0853e8-9312-400a-b691-aef9ea82e89e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "dbcdf97f-ce71-4be9-977a-e4191c032e59",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb39b49b-e375-4f6f-a5db-c12ca5d9e983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41c242b5-e642-45d6-b57a-dd0380c67c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28f8894-1e94-4597-81bb-f9cdba959d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cdf51f80-2931-47cb-b5ec-997dd42e1a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8969bbf5-8cc2-4147-8d07-56815f0dee2c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ccd578-20c4-4b9b-b2d6-babda6f2a270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea3a48b-b82f-4373-9546-502916258df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3980e3-3621-4557-b4b6-cd407eaf4782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "572fa0f4-243f-4c2d-9f01-002fbac80995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccc8e52-ed52-4e56-91cf-8fb64d2705db",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8daa617d-3216-4230-a844-7866d2c45052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91817eb-1fd1-4d4d-a0c3-a33f44882b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25be01f1-1b44-409b-97d1-879974c19865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec9eb744-0db2-48f4-b92b-8280bb7874f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89099456-a5ba-4d30-8542-2633aaafc721",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d2f807-da78-4738-8f57-583ce9857a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9e9dc3-2586-4f7e-aa31-988f334b81a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6f718c-46fb-4806-8a66-c9775f3696e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0b1c033-7687-4bf0-b8f7-8fa9f2a20198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da80587-6fc5-46c2-9238-9f1f6d19473c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "467ca7d3-c822-4500-8e23-22abfce85309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df1e5953-87c5-48e9-b1fc-6aedba12eb46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c0dc82-f767-4025-a66b-3c24c37d563f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26442cdf-3815-4e40-a7c9-d15566a3f29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf97c3c6-5295-45b5-90ad-d8b7111d04a9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff6653b-09f0-4f70-a757-bad336b5bde6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6661ad-7aa0-4a6a-876e-f217a02531df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e05acd9-0f23-40c2-9a5d-fe59ab957fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fa534f2-fcc9-40b8-8ece-8a358d809181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b147ed8-ee44-4c11-af43-ee6656cf3366",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5d12bd-96e5-4478-822e-7a6e1fa27c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3a4216-bbac-4b21-8de5-b7992b1ec003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b15c28-25fd-4a0a-a3f9-03683975258b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2dd92718-46fa-4f20-a867-dce82d6338d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b755837-d8fc-445b-abef-95ca961771d0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9b97b9-d178-4976-b492-ce6ffbe40cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0678844b-9267-4d2e-b193-70eb9c9a4634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32272477-2cd3-470b-bfe6-2b438474500d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2994a959-ddfc-43e0-bfba-bd4c20f8ae34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d10f0d-d4a1-4ac4-8672-6cce4eb60af1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ad1688-5be3-4a52-b1c1-2a53df5e2d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c6f3ba-b249-4929-8e1d-ce0a9a33588b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657a00a9-17ac-4523-8a2c-ae708f84d255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b590c31d-2a43-405c-837e-8adb9c77f6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc360296-b099-43f6-9063-3bf12621fc3d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f71c7b9-a4c8-4373-9665-7b767e44c3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "399070ec-68cd-43f3-97b5-4010d99e3d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa93a657-24e5-46df-8e5f-1f4707d23e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cfae117-7dc6-4e9c-9186-12c077adce5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "affe21e9-8230-4eee-b2f7-db5fb9971138",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40864db6-31f3-462b-aa42-bafc84f25b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3bcb265-7081-4b3f-9c88-22cde1a673f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76f4ae7-846b-40e8-b5bc-f9edd0ad2a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79159479-5e8c-482d-a7e7-085d08613949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9590a6-519f-402d-9291-2509ae5a37a1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6148726f-bfe8-444d-ad44-e6e7da8e889c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a50bb7e-1c53-413d-a882-7cd60e4a68fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a9fb4d-e439-40e1-9ce0-ddd5035a1a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a750d84-acd6-4b27-81ce-5e2fdbcd8c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9de07bf-2966-4b04-8134-df5a9392f8cc",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd4fe5e-7422-44af-ab0a-38c0bdf31a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29f25c0-521f-4e7e-93e0-410963d5ad20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cef938-7f91-433d-b781-724f237806a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12ce37c1-fcf6-4304-bf7a-438ebc9c7e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b172209-e7d7-4149-9db3-ba2cdd3872ff",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2b5c7b-175f-41c1-aa95-780d207171e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "068e79c1-63f8-4ad5-9726-0d60505f1a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58989be1-4c31-4802-a348-5e09c6d1e548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a436d213-0f5d-4a01-b8b4-7070b31264db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85a1f4a-f993-4694-afbb-b1215c6570e0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45fad7b-8f2b-47f9-bb35-67f160c39b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567ef943-19c1-4496-8bce-b983bea04ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3b1a12-6fdb-4646-b4a3-4fafe184ec1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57b91245-bc50-4be2-9de6-b591c36b9416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433ae4c5-2960-4221-98e7-18f274a4c250",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6a10d1-127b-402e-873b-b5e6ed63f510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71127328-fff3-49bc-ac4a-ded7d6469f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71658094-8baf-4876-a0ff-613c4b2fa027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efbf4ef0-2ef3-4633-8760-76f513cb7f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4638e15b-70a8-4423-9f58-3472599ae4d7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc930459-1813-42fd-94ad-9d13cc4cc68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23a91733-2f73-4dcc-bb8b-e09ac03c5cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344aa3c7-3f21-4044-87cb-0c85dd6d3bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58e9c23e-636c-4ec7-b7e8-893a8ad3b703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025c0db8-1157-40b0-ba78-f8c564ce976c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4b2e93-94f0-45a1-b86f-02456b6263e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25921cfb-60f1-47be-a948-ab714d3e9953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c31eaa-d94f-4ca4-be80-5a4d7ec87e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2670f1f-786b-4e81-86da-96e5474e1b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25592487-ec65-4451-9eda-f92521a37aa2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "828f9939-223f-440a-b50a-1918ad8f49e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623c0763-2edf-4039-9038-7fc940ad64a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d417c8-15a3-40ac-b3e0-436c807b615c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c916bb53-0bb2-4fb3-9f11-f82f8702b0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ecd00f-72db-4301-8a2a-0dfb095deaeb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48332524-8db2-4cb9-96ea-b4fc2ce413bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d207ddd1-962d-46bc-9899-77624faac24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de7d099-26e5-4ee8-bf56-8e054abfd27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39f63d91-9c71-4d26-af5c-322724dbc599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af648e1-5dc2-4686-a9e5-b794fda8b64d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141db8d8-8536-4cd5-b4f3-34562b988107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb64fcc4-1604-4159-a90e-899201a31ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0774cf-23e7-4bae-80af-e4c708af5993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41a27827-63a1-41c6-9170-88619664a3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74db0355-bac0-449e-b6a7-644f3dd66449",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a845b4-50f8-49b8-a20b-14c0e1c78580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da8bea73-678a-4dab-8c1e-8bc96522f26b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a78182-aa29-4c57-96fb-d698cf04b1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3bdbe43-51f6-40e4-af3c-eee8946e4231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec70fe97-e1d9-4972-806f-20bcd452cf6f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9468992-3c7a-4bb2-bec4-b2e413d1c469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd8c9c7-0d04-43cd-a32b-8ff552d5083d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c957730-ac54-4a9f-bfa0-4fea44e6e8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94092a4d-a13c-4fa2-96f8-b88920e22552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290e4e91-dc5f-4828-81f5-fa4621289e8c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8305a67d-da74-42ff-9df6-053a48836110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e28b8772-d2fa-4ed0-bc13-9ec6dbe75755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e754c9f0-8a7f-4e30-a9f3-a7907b70c856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee20c613-4f88-40b6-9c01-885f3a4903d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69e8d95-3b1d-45f2-90d5-ad7eb358af52",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c10c581-1657-4c27-8109-788181afb7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f43166f-3a63-4e9f-a54c-f7a326b05ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e29541-296e-4a6c-95da-cc91c49f0181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "127beb19-89a9-43a7-b50d-85e8911ec0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d637937e-95a1-4871-a877-dbe4998880cc",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1536b1d-8e4a-4ce7-9411-826b77038627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa8ce26-61b1-4f93-aa11-94b8f7a5b3a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2032348-0048-40c2-a0c0-5b765ed9b614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1c3bb41-4df8-44fc-8699-6b1959024d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29c9c7d-f478-46e0-b045-a9c8d0749045",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ca4851-e2f4-4af1-8d9f-3b4c1fafbaa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097f5697-97a8-443b-8c76-303cbdc3bc17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f8499e-3a62-4f03-b8ba-39936d0e2726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c22785-595d-4cf2-8ae3-b66b64eac165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6b387b-46a2-4b3a-8272-c49e8676ee45",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd074123-e709-4eb6-83df-4fac5a45b6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "595e682f-c425-42e2-9b7b-9a3641295d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ff7f67-e87e-4687-bb86-3beebef277cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fe165e0-d8d2-4a67-b1ef-1bb96de954ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a879137-e1ff-4329-8374-ff9188c70b56",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4d683f-da9c-4900-8a73-d71dc9d18539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece78c0c-ec59-4b9e-b676-d4f5f3748d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926f4286-dac8-48fa-b8db-05a82f9b139b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf3218c-1570-4d79-a2ac-e816a6c9b939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70452b45-fa36-4f47-b25e-5037927af7a8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fb5653-68e4-474d-8466-19943b8fff3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9889a6f8-1eb6-4ba8-9add-8cb49be10f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f217f332-04fb-4f88-9f3d-632f629735da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "35bba6c0-9c21-4fc6-98b6-cd5b09aedf52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedffeef-6f00-47f6-a1e8-26bdadc72fc7",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ffb08d-8630-446d-bf45-99b3e62b2939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12fc236-e797-43d9-bbf4-79006b376449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca343580-dee2-403a-81cf-0f2b42ce1443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cfb83c3-42d4-48de-a40f-1388aab9db8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809f7153-c8b1-4e44-ad21-f36a39e6f8a3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c17e666-e038-4d2f-a1cd-2f15a28a6d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cdc752e-ee4e-4d41-b956-e14e429aa826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75351fc5-dcd3-45d3-9700-9fbd01f387bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cb8ab35-6e97-4704-a99b-9fd837b3221c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e476f102-ea76-4598-a8e0-0a9cccab4385",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaac9678-e667-4be3-b602-4c797baec379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76284502-d424-4080-b57b-6c5e27ba8b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75209cb8-ac3f-4d6f-8bbb-ec942686ee14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd04a8d4-c7d6-4512-81c4-ebd26736a2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ca4ee2-fcff-49c7-be8c-21dfd212bef4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fa862f-c5ab-45f9-a08b-98a6b42400eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d29b6bf-13eb-49f8-908f-20aed9decef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9290c2bf-fd63-4647-8a70-8fb498a85ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2210851a-f481-4ad6-93aa-77d380061ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439a6eb0-2569-46be-91cb-0891fe61499e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e926ba14-8cbf-4bcc-98b9-2f661d57f08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f521956b-bbbb-4055-8358-d1f3ec8f2dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484323dd-468c-4085-8f61-e84e5de98a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c701b280-1220-4a9d-951f-17e6abf2dba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81cc98e-31ce-47b2-9e7a-10f150f9f68f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbc3325-a210-4bad-acd6-16b22b2296ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8ec5dbd-4722-4802-95ed-6617bb043671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7abb8ff-f5ee-4d37-8656-84ce35873c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "999925a2-6a64-4ccd-b851-ca7e008e7e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6edae6-adf7-4e94-bac8-5cc45b813b57",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4bdc67-f78d-43ae-926b-2d61cbf6d3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8fe3c75-3ad3-403f-8877-d863103b6064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226e656a-dd05-4e43-b33d-9eeba0c58bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "db98c5fb-3b86-4c1c-881e-cd6d45e2d63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b881c72a-094d-4e02-9daa-bde8ccd35e67",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17db4a2-1b58-4809-9134-6402a375f58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1911486a-bc67-41a6-a411-3a4a9ba2c3a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53431cee-d890-4b1e-9eb6-ace27aa35b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f58c9fc-30a2-4d4d-a5fb-80dad77bb3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5803540c-0210-4144-bc24-b594599e80e3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ce579c-85d5-4fd4-be33-7d0c86befed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deda1b3e-bc95-4fbd-b500-97d51bac26c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5256387-42d4-4a35-bbf7-f371b4dec3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5062867c-37f3-403f-ab9a-7f1feeeffdc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0dea31a-d32f-46ee-85f0-447e777fc977",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca32c77-c643-4e0b-9373-ce75d5ad6655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90d5f0a-8101-46fd-930f-25a69675fa56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675afd31-cda1-4cd2-a046-4e8c57a4e3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ec5ab5-f7d0-4589-8f1f-ebed17e772db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab31613-6b75-49a4-aae3-b8ea85be2bfc",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e264c290-875f-4787-83ba-6a62d76c8dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389de54b-b937-4253-ad5c-3fc34ba31ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14c85c6-df4f-4027-a36e-41b3aa18d37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e562127-4229-4c96-994f-dd6e5fb552d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eaf128d-30f6-46d6-b136-bfa7060b620c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6904c21-8728-4dab-9f07-8026aa6ad3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9313fec-b76f-4c0b-adc2-67239af4767b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2cfece0-6334-4130-b912-a4f173ca5003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "83178c07-7996-42b8-8f79-18bb92730ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b74e20d-a385-4f45-8fff-78f8cde9a5af",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b9d83b-6f63-4fe9-a684-4baab026a58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a46deb-ace4-4353-a606-518768a44796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41ba69f-d11e-406d-9bcb-b7727fb1a15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b680abe6-98dd-4dc5-a191-f546bd09b673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fffc4cc9-a9ce-4124-b69b-221a8c5c11d7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f623d62a-f8f3-42f5-b0c3-ad4a4880cb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d51360-5f12-4494-a6f0-9e19c0b6f0d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4813e0ef-3b29-4694-9d1f-727bf7508b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "66df9eeb-341e-47e2-b525-8966e97ab66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61187192-4ff4-4217-91c8-2d9a7a28e69a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a17f96-76af-47ec-8016-5786c898b9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ad9c77-a2f0-4b3f-8518-46cdc2479671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424fc0af-8071-4c5d-8b5f-820e875a9a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1004e29a-c798-4999-8e6c-71d5312a70e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70fc03c2-28b9-41af-9619-4272dc7bc4a7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "302c603e-ec49-4fa9-8893-cb1fa077ca4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567b3884-70c5-4044-95ef-8eb5f6dae33b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9eefb4-b7b2-410f-adfa-faf1815013f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2833ddab-7848-4fc4-9e00-4e5994c0a45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82562be4-4e7f-4ae8-b2c0-10cd0c86bcbe",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d260af1-f7da-4841-a152-b8d7638e3edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58606b3b-79ed-4fb5-9bf2-460aca82ca32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7f701d-b728-485d-b083-23e268ec4ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9207af40-3087-4698-82ec-c9cedcb1170e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1c3551-542d-436e-adc1-79c8ce83de01",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "891577ea-3771-4097-abad-4938b8e156d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccbbd23e-641c-47ba-8b28-e3acefd634d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f02b06f-5b6e-4a7c-af3e-273ce21f697a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fb75515-2563-4b8e-ae49-d9fb939fa39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e87971-1dab-4187-a106-796c3073b180",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1185f0b-c788-434d-a4a7-5eb7e16e9438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a471c86-68c8-4cfa-a029-ba0774fe8f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37efe2c-bc23-4e3f-8ca4-8ef64216c802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a89dca4-dcfa-4528-a1a5-b11bb886068c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297854ab-b127-43db-b826-5c3064757cb8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ca5815-7a56-462a-8780-d2890a70b31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe37790-d865-4a24-a46e-da8db6600943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab9df92-fea8-48bb-ad47-ec5c60dccd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c87c9208-f31f-47de-ac9f-88e5a3e7e1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf18b69-a36b-4a3f-8bcb-b309cc6ab2fd",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b341210-de9d-47cf-b64e-71ef4a20d656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f7416f-f705-424f-b580-53604f1c6077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d67bf2-bc6d-452c-b2c5-28bd6cd92beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "606591af-53a2-4c3f-b867-1a477f63795a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75eb7c0b-9c13-48a5-b0d8-5645acb3523f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed3eb93-1308-40d0-a085-ccb8d588bba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8709ece-6d13-4a17-90c0-1047bf232362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5766146f-75d8-4924-b1b9-855a9acd9705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "15be2227-9914-4e5d-b43f-a1e19223fdf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba55b486-817f-40bf-bdeb-f4f8b9f882c1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7996d10f-2774-4f49-abd6-d30e6baaf7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e5997bc-d73d-4df9-8618-0fa24c286e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ffc86a-cf57-45af-a748-406810c5f742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2315043b-d8fb-4756-bd7d-719e2626458b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16beda43-0860-4ca0-b0d7-d68abc920dcf",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0286ae56-d002-4d6e-8e42-fe06b27f97d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbec4706-2f3e-4782-a3de-ab73a4a283fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800c2cff-eb0a-4f52-a261-097f8e81fb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a06e65a-5917-4f44-a491-ac361d52eebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273ff3a0-67b5-4776-b03f-a355aba0b020",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bccb81b-c107-498c-9b2a-6828cb83587f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958db351-03b5-49f4-bd74-fa756d36b890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ae5c81-c42f-4d53-969e-b6158627a464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0885c2be-a380-471e-80c6-92badeb80c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247d7842-fde1-445c-b2c3-200f147b6a44",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "defe7e30-6161-4000-a880-5721259cdb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039c14dc-ac45-4279-88d5-a01597c7a9a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f0c5eb-1718-4a19-9b10-07863fbef4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "11e54299-309d-4d43-aad2-228debf0de51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072af88f-81e8-4956-99cf-fba07a6af233",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d89614-a770-4da0-a51e-21086a44d388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360b5ee1-06d0-43e8-bd97-8825c1e87d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6171da-4cc1-4651-a8d3-ee9374917e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa64159-a899-409d-baa0-aa7e9c79a0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea9de3a-31a4-4d0b-aca1-02edb0e99b9d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ce577c-a858-42db-9ca4-27c30609c5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09190a90-a9c2-4230-a3bd-b945d22a3f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af32bf17-3b9e-4b50-b39e-10a040ca4233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f713287b-8b67-4a29-91d1-1b01188a4197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7647bd91-d530-4d69-88cf-665487dcb4eb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cdbace-f5be-49ea-8bc9-659ef9d399d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a65e1f2a-c89a-4f3c-ab1a-05c20ae3d630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f137136-12d7-4c17-b073-13a7b722b8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a13a405-e0ab-47c7-add3-ec145c3934a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cf73a3-77a2-463d-aeb9-00dc0fffb62d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfffc1b-b283-4ce7-b2fd-7d1bbc7492ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df1affb-38b6-4bb1-90a2-344254dfd0ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b79c22f-6cf5-453c-837d-16f210c3408e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "27a4ee17-0182-46a3-b019-6070798d6fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8e8007-cce6-4fc8-8b12-8286ddc2b1b4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8381fcb8-4124-42a0-80f3-acdd502369bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb3b3b48-20dc-4157-875c-11090de5a377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322f6d34-f5ea-4b5d-ab7f-0d722b7c26d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "eeba4599-433e-4ed1-ba33-6df600ef42d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311330ad-118b-4d56-8b1b-1ee2e8b58397",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a0dac7-40b1-49e1-972d-4ca04a276cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7813448-b101-4894-8260-461972c6374d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1e245b-699a-4b97-aed0-7b8960b414ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "422dbe87-f3e4-43dc-9a1a-d89d32c837ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00629410-5241-46cb-a217-ec07a1406cc9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d64b182-1b93-4fef-9f14-fbe9e4ad0e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7c80dc-7c29-489f-b03e-c0c9329d0d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ef70c9-e7b1-4f50-a37f-dc2d3b4302f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8b1141-a0cb-44b8-a620-f6869c85c49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c65c2b-6044-41c4-ba61-7bf2a620e6af",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ace8936-8421-440a-87e5-cbb62b764339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952af8b1-44fa-4bb2-8516-61b579839030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac43af7e-9ace-45a5-8222-57f172f62618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4eb6ce9-49cd-4192-8136-c5388bdf64ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c259423b-bd98-4008-ad79-128ea20ae47e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569d54c9-9b9b-4538-b010-e0b4dc512c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2427c30d-265f-474d-b2c4-df8ac1584d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0080f7de-ed75-4dcd-ad78-e045d61bb7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07a45a04-66a3-4786-921c-bce125618ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd28379f-1af0-420d-8410-3ead81614d8b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807c0f9d-09fe-4fe8-96db-80ee1df2c0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d7f2b6-8c19-4125-b55a-d5de85654a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d335b061-93ae-4fcd-87c7-304956c35a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69be228b-4f6a-44c5-a9e4-f349ed9e4c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f85ee3-01cb-4417-9a08-4d8430f14b94",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf83849-7531-489a-a7d6-b193ba9c83c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c93503-157c-4260-bf43-7b6997f3d67d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38509535-46b5-4ec1-8010-2f4f7ac5c00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "032b896e-d8b7-46a7-acbd-fd873f411a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4443f85-1063-466f-960e-1445f4869bfb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c5b3cd-34a3-418d-9094-a9f2b2734ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6972bb-b7fa-47c9-bf2c-5c749346808b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19707bc9-1fa5-488d-ad66-b947130050db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e2f08b8-04c1-4981-915d-b90122c281fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f486adca-7081-4510-a815-a15eb363e6fe",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698ddf01-931d-4f22-8889-e16deb02f8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bede5b9b-6ea0-4c9b-a97b-ccfca319a61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f61cba-0569-4bdc-89b5-0f1ae42b262b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "69859fcf-044a-4aa0-9d5e-a73cd1996973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9070bd-9384-4d4c-8235-f02cab4712ce",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53e3060-c37e-4f20-aa91-1b957fbfa830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c7dabe0-ade4-4172-806d-e9df78256147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee79ce42-af3d-4baa-9dc0-01efeb02a1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79c2ff9f-fdbc-41e9-8e30-3e7efcf43d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180f1c5e-c8fa-414f-ba9e-563d62e98b1b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7383445a-9ab3-4608-a7b9-9ace0ff0f21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "736ad84f-e990-4871-8169-33b1b980ae83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18db4989-c749-4847-a617-0939552d34a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c570f8bf-9e28-4720-a040-fb53f3dce588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75e942e-f824-4684-94e9-d00483ee344c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbb25ce-f5de-483b-92a0-5f5b5575a91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0b14e22-b560-475a-97bf-d3ed58a9fef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11fac7d-80ef-4778-98ce-6374836fac40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79429eae-3cf9-4a6f-8acf-3b38f99a3bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be169b8-aa3a-457e-b26e-09ac13b15672",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "863d24ad-1dc0-4d66-b2a9-fee5c5b23268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d62a8d0-6a6d-4ce8-a237-dd55a42b127d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2553deaa-1128-4745-8e40-85e0c9955e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "56fbddcc-16d4-4348-86cc-17a27fb528f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c39b7ba-3f8a-441c-bfd8-70bb9f06f84e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717cb9c3-9162-4002-baac-4c1bb3c710de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6978628e-2778-4543-970c-b5f8777cf1f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a418af84-e3b3-4338-98fe-21648ad78c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1cb0f6a-77e9-41a6-bc72-8df4a2c1db43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ee6183-0247-4712-a945-3b2723cac812",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6b04cc-88af-4feb-bd7c-42cfb2dbc8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a004d88f-3201-4c61-b942-b9c178438be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d4ce9d-c3f8-4119-a093-20cf5c405c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4d813a-2a8f-48a4-92a9-76060670b1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfec1857-e5a8-45c9-bd6b-5340ed436fb3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533c7901-2881-43a5-a018-3c6e0336383c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c95ca7-151d-4e7e-98f2-965c12a5a90a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e71d67-2567-448f-84f6-e2151d2e7071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d622a974-fee6-4e7b-98d3-4fa4f712507c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addcfa6b-f9f1-4c76-aab8-dd4044f6a2ac",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c97fe2-8221-4f74-998f-385519041d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4007e05b-0b05-4a8f-b58e-df7e1b35b019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7a9e9a-1e39-4c39-938f-485d99de2c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a4b8b1-9776-4aa0-90b5-085a43dcb383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a1f9b1-ff0a-48be-bc6d-18d060906d21",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4be6528-5b37-414d-b3ea-ced19b99aa05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1955b9-e181-41f3-9e5c-9b7c1e1c397e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc492d02-ca82-4b8b-bc32-ef9a7cc01fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6044ca00-0175-4581-86bd-1d695dc43865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d6f84d-080b-4280-88ee-a5cd5ba96280",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddb7232-0543-42af-9ce5-1f8d085e4ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fed4d290-a262-43ca-a8d7-f7b01c32d077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499095d4-ac55-477a-be55-74383c96a711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d14a06b3-8dda-4efd-a289-696d49a59f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61acbd2f-6bc7-4172-b22e-cea885620cdb",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd05ef9-7177-4785-8242-a24c06d18590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ce82e2-ce82-4e59-a3c3-ef502c814768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954d90e0-2f7e-4375-a417-93ae65c50bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3540d1f3-337a-4fca-848d-2b00e10ba94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e536cb0f-1d65-4deb-ac0a-f92fa25f2135",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc5ff6c-4dc9-4e58-8082-2377158b9aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03985566-06ae-42aa-99e5-9c1e6aa5a0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5022cba8-941d-42df-94bf-0c66478d6398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "651e9b32-acff-4e91-aa03-bb64e5515d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1de3197-0812-4f1d-aafd-d9b0d1f51245",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64dfe0d8-6232-4c53-a5d8-75d0f812b22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ccafb77-823c-4a6d-a9e9-b8706f2f05e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e03a890-ed5b-482c-ae98-2ab12965da04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95ba9a7a-452a-4afc-89c6-a36a1b119ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f86bc4-0feb-461e-89a0-939b7a83067f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99fcf3f9-815c-4385-985b-c1c645ef4db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6eb9cc4-00d9-4ef9-a8f8-3a647ce690c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1062b56-21ce-454b-b205-f89877f61161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a99515f7-c59b-4740-ae9c-841014b39fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d33241f-b883-46f6-b67c-ab4f03463079",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69d8046-06f2-4157-9954-cffd07ba1476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f864dc-ad16-4c8f-9147-97931d1d9c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156dfef0-e437-4476-a4f3-c4a51ee92261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45376631-d422-4820-b705-5ef8fedaaf4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b5fcab-cbab-47b0-8c3b-82a156925127",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496291ac-5a54-4edd-bc55-c72e92308ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5039d37d-a0e0-4498-8fdf-ea66f6ae32fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56dacd0-8314-4358-98db-02484855f6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "71e8038f-2754-4150-998e-a5a082266878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96aa2e52-857a-4285-a033-5e90967790f8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2601e639-dde5-4d30-bff0-f80066c4c87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd54229-16e3-40c9-b75d-2784cfab878a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de34a65d-8ed2-4577-9ff4-675bd7412236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dadf64ae-226e-4655-a8e5-3f5acd592c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693c1ea4-fb7f-414d-a212-308ab7c2ac51",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2839543-f3e0-4c44-adfc-b7de01d96a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcbbef6f-bf03-4c80-bbf4-3505fae99dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84ab710-7509-479d-a872-c80aecaf2279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "74ef6db9-ef02-4279-ad0f-731915b5dbee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2167199-6fcc-4ba4-b2d3-a9e3db4b9d2a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d484c1d-35f4-42b3-b454-be2bff437f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be66c284-90db-4e51-8dbf-6f0ed6b8f2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230432a8-9fd4-4ae9-af36-135407392b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e51b325-3af8-4d23-a431-0564fa31da7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc61ee1a-8178-4b0e-bd09-62a2ac091588",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2b9275-73e6-4b79-8e44-c58941ceec34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c086c19-61ee-40a3-96c5-0acc2cef606d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71495ba6-d2a3-484a-a51e-4cec379b5e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9dfeb1a7-b9dc-4511-8554-c832b6213e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47235705-7d22-4fad-9b70-653910657ff6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f219a7-4e86-4559-92f6-4a7470aaaf13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea74df1-9420-4253-803a-66441bc594b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c39bfb2-f43b-42ed-916e-158e9e80afb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a178e1b3-f3d2-4844-b19c-6da2429370f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edbfdd7-70d3-4151-b715-1256369f2d36",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118bc524-9f7b-4d86-add6-b85536a94a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2fb4ea-a476-4e50-ad7c-0ae61471a9a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ace2094-5898-4f9b-ac19-4f99391f0946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a8ed02a-d2e0-43d2-a91a-fba8841274eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf10b064-f2bf-4e5b-95c8-3ee7cb5347b0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d381eb-0c5a-4528-9fd3-cce7e83cf3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "20662720-283a-433f-9aad-30689ceaea7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c24b95-b2bc-4496-9ba3-7cdf2ce6a0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "66c55ba8-6321-46e2-a309-f48b84888592"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b9ae1bee-183f-495b-a579-54efa9dcc7c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "51a15b09-a340-4aac-9be4-df47a52ba062",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a748005-ccc8-477c-ae6e-c290d46d7fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6701e394-42ee-4fa1-ad36-be5e6e71d2cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62f065a-19b3-47e3-88ac-28e38578fd52",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b90bfa3f-18c5-48ec-9002-f82ada326716"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d4345b7-c969-4ea9-bc1d-77f457065fac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38b357ba-d29d-4714-a129-16b628cb8fef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c36cd33a-95f0-4bf2-92eb-ada283e12843",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02406ad8-03cf-4639-902b-2e88682d6295"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "745673db-25e8-400b-872a-c42113dfeccc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a5df4ed5-3ca9-44c0-be3a-da3f26852d86"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "778e707f-21e6-49f7-a216-e0231f4fb99a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87173006-d462-4d2c-a0da-af6e113335e1"
                }
              }
            ]
          },
          {
            "id": "4f3354fe-1f74-4f72-a8d0-3da89768503e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "18148a8c-281c-47bb-8ef5-6001fe8f7edd",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ccc70030-606a-4b0f-86c0-eeff05cce358",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d81e6fa-eb1b-4556-a8f2-200efdabfbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "47c3e2b6-511c-4179-83d7-06be86905089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca6e300-c100-4f43-a55f-77bda4761f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5405a29f-2997-46f4-90b9-deb9fa03494c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "476888a4-443c-4235-b990-018f832792c6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8df4af6-527b-4503-a9cc-99d5edacb0aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f590a38b-074b-4b09-87a0-d3092ec528c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17beda13-46e2-4743-922d-8811e304e35e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "166c6b38-8c48-4369-96c9-206db15c3278"
                    }
                  }
                ]
              },
              {
                "id": "d1843e62-3542-4412-b53c-b46d30cc52ed",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0796004-bf11-4ed9-9c26-4bcfb347ee3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "932d1bc5-a763-4efd-87f0-a1dd40fd30e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ca292ff-28ef-446b-8102-ccfd9ec21869",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5f3bccf2-9440-47cf-8bb4-bbae63245ccc"
                    }
                  }
                ]
              },
              {
                "id": "c55e7982-6d88-4cef-a6f1-33105d2654a0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4087231-18b1-4188-938b-d463573f239c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2632dd3-8bde-49c6-8035-e2fa8974833c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c543fb0-6737-45c2-9d0a-141d7cff0476",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f464083e-17f9-4561-abc6-5e5c25a567f6"
                    }
                  }
                ]
              },
              {
                "id": "e64de434-ae01-4d06-8ebd-e6323204ebdf",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b78babd-8d41-4429-8486-c0d9dbce35fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a75547b-918a-4699-a553-21167110aa38"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "caacbdcf-6886-48f0-a02f-a630ec7d5f56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5b6ab87d-e04f-4643-8cc2-2d56a0f9bdac"
                    }
                  }
                ]
              },
              {
                "id": "d91f20ab-0e03-4052-a089-2f97e08f56db",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09839f41-e6ae-403a-a2a6-b303b4ff3dba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "93cf48da-b896-4098-9248-3ac4f1d80fb4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "012c4e8a-3cbd-4fa1-8dd5-f965ee284e50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8716d476-11d4-4ac4-a906-3c19dacf86d9"
                    }
                  }
                ]
              },
              {
                "id": "9dd2d33f-ed07-4b84-b491-c98bd414d8ff",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7af89ba0-c97d-4caf-affe-cea0556b3fe8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e644ecb1-f0ab-44a7-a9fe-c8b724495492"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65ee5b8e-8e3f-43ba-833e-8134f213e687",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "25715c4a-4bfb-437c-a492-731ff597af48"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "594a200b-20b8-45b5-b6dc-ae8c7ee389de",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e3a6b038-90ac-4e17-b1d7-d037b9f18a1d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b41a412f-59cb-4a29-80cd-7806d56b0bd4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2c3c5203-bfc9-4280-a1d5-4cba91699c77"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0cffdf9-b7fc-4147-b86e-d0ec95f4b67f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ba5881d1-745f-488d-ae61-223e7301bf2a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b5343fa-ae81-4b23-83ac-84f25bc9be61",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "54c46620-f980-4474-a1cd-389628bd00cb"
            }
          }
        ]
      },
      {
        "id": "107dd469-d973-4ede-9b46-0523b15b963e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b5d7ab39-1f8f-40a1-9115-3109914dfe5c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bfe12608-2d92-4b8e-91c7-5ff97833c986",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f6260535-2d93-47a0-8682-c75aa668fe5d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73a1cf2-cb73-4b5c-ae4c-664318a1a6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf3f499-4ccb-4237-8c57-e4f4f380f2da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd3f8a6-db77-479a-ab96-f42b06268b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f93e2f43-2a79-4d4c-9b7e-92f37bd12c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0a9e75-a213-4e93-b0dc-16730a8bdae6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e6a07b-8a41-4f69-9cd6-ad59fb35eccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75bc4042-1221-4faa-b181-f57173d3572d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfb79ce-703c-4c13-8306-18883ef84d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "27b9e8bb-7e87-49b4-9ee1-349fefdb96b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f617c15-44e8-4557-83ae-4cebfac029d2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107ebb27-7410-4e44-a3ef-dbb702a67eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f3588b-9055-493b-a23b-64ac97b9d7ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc0ffb4-c2e4-42e7-be7a-512ebe5fb691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9dcfa2c-6f8f-43ab-aa22-3e83c5e75f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0711bb8-2198-4d7a-9533-cc67888153ba",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21412210-4a7e-4ee4-a004-bdad26ed6ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc7f5f2-76ba-499f-be72-0219cc692285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261422f6-1a1e-4122-922b-d8dde2ab0a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae66f02-93d8-4d50-ba7d-bd8335c14d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff06f64-325d-408c-bda1-fb5e79f488bb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac75d1c7-47a6-4bdf-a693-2e3c68faef9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281266ec-da0b-4bec-a855-01125522dda6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972aa513-7dcf-4c9c-a4e8-cbd05ffd2312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4fc4e2e-3aa0-4e08-b810-987d6cedd971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eedfc4d7-6f60-4cae-9101-5e867be8cdc0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3689be45-875e-4110-86c3-72cf1c53a88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d73193f9-4e90-4ae0-a415-a6223cb0e025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f2d595-9103-4f0f-ac54-21c9348cb4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d85239b1-fde9-4bbd-b8fd-94fc95bc910b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c258d777-efce-47af-aa71-710ac3650f75",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242fd390-058a-4f16-a497-b1d6a4ab2f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39582f4-1cff-485b-83eb-3a77e9681e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b956acf-c831-428b-92d0-f47a1b3893d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b092062-8b7e-43a1-9754-2517c00afa21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6031416a-f9c1-4ec1-a3a7-13ada95e387f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932e9445-ecee-4c1b-98e3-947be00ad0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad2aa7d-1549-4614-a96d-92680548e6da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34bdc88-cfd2-4ec6-a32e-5c730c997396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3409cc3-d468-4fa6-94de-76abcba5e49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961bba9f-33ff-4e44-af02-365e473dd1c6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c418458f-be70-4b06-92e9-36bd116667e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bce801a-351e-4d37-8dd1-3494c1a43d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dca5626-a2dd-419e-afec-d07cf6913292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a77e2be-60d2-4264-a1d4-82146425a998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6279844a-43a3-4b7e-80a4-37c2fd9bd8b2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba2e53e-dc46-4ebf-b8eb-3589015b545c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "862893d4-cb9f-4bd9-8aab-80df0d0169df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8cf0ed-2531-4cf3-9c22-64149400215f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0bd74ea-066c-4102-9a81-e2b5c95c22a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45bd262a-bef0-472d-9c59-2f0fa397d5fa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3429fa-2a3c-423b-9cc4-e545e49354bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "731bd680-b52a-450f-a87a-ceb2962f21a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e39c71-83a4-4920-b000-d13014023384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c588dd8d-78f9-4b8f-aff8-071981ede30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa039b7b-a55c-40a8-b051-d2bcb81f4a6e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3b177d-556b-4060-bbd8-938e4cf8938b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9edc63b-977f-4f9a-b2cd-3817e504a09d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390ac003-d6e4-48c0-8c96-eb10328dfe53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9091c55-90ff-4d29-92d5-ffe6cbc64928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6093b1-815c-4bf9-bd81-a361c111976c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884410a0-7fb0-42b2-b710-33f8cc0696bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "418baef7-90ab-4246-913f-d952dd1b206a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90b3cdc-6518-4c72-8d4b-bde051075d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "35a65a1e-0261-4db8-a10b-f0739689922f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a733e0f-7c22-4c83-8ec2-ee4a69d6348e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e346bc-88f3-44a2-917e-a311d6f50df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b742a18b-bfd1-4b8c-9848-311cce6f74ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8608eea-911e-4acc-989d-40b2a68d3b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0da9f40-d5cf-42fd-a5d7-48943c32b452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5fed92-d676-461f-b7ec-9acc0cd0ca2b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf72085-9cdd-46af-83bb-2c2d52f4688c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46174858-6b36-482f-aa74-63380b8ea931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a3070e-fb63-467a-aebb-dc21d24243e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "195544ee-1c00-4ce3-b8aa-7f36dc1e81f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af54544-9b19-4cae-96e7-cad880cd7941",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff0a6cd-d2cc-4a12-bfa4-b135fb8560ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011f0c78-aeef-4b71-b1c5-dfc208450e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137c21c2-10a9-4814-b10d-cc4618d756a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5bf2cc9-3564-4b34-ab80-aa0a991edc4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f558e61f-0b77-4c5f-89e2-2a8097552ba5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375a8fe2-2bd6-449a-a1ef-674f1a84b08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f82ff4-1560-4b4e-a95a-cef358dd2097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447d709e-2633-49d0-b1d9-350ac62fc98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a830fd8-a0ff-4dde-a9fd-93f4024d2ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4af18d-3cee-4961-a2e6-07d11ba47226",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53aedba4-e3a4-4840-ac0b-80efc1c02730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5fc3cc5-c67e-4cd7-8fc9-2fc1074311ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b696f7ea-f85d-4af3-aeda-f8a39496d760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "86df6060-ac3d-4bf5-ae0e-3bbdad34118d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbc772c-8888-4cb3-8a25-ca736f733d43",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5e8537-4a97-4ca5-9162-666ec5611edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fdc4b39-0626-4cb7-80a8-c50f244d605f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0dbc3c3-5bf0-49de-be58-f0180ae4bc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c028be-b116-4605-b645-a2e309c14d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79bb320d-3d9f-47e6-892f-2d7281895805",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adffeb28-5447-40ea-9599-ed28428e0770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42fce1f7-f192-4902-b1a4-f43117c1666e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6e9134-c71d-47d7-9523-3aa70e1f8876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e8ad51-aa9c-4cd8-9adb-704f207c2251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a76cda-2279-4390-92c4-7fa0fd3f1a24",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7f918c-dad3-4589-afef-0a961ecee6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb19d537-1112-4fa2-b325-aabfc857d2fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0e6098-78f0-4623-8acd-8a4fd4e56980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8be6cc8b-df04-421a-ba52-2637bfe5454a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06029178-1a82-475a-939a-c73f2701e9a9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5f358a-36db-437d-ba96-4ccb73107b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17161332-6eb6-4070-a7b0-d7a7a22d80d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00078e9-65a4-43e8-aff2-181a5264836a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6068dd-aee1-4532-9653-00d752b72f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c33d523-c56b-481a-b370-faceda6471d9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfec94e6-c96d-4f33-ae05-f3d3bb8099e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc50e22-38d5-4134-87e5-0e671351dba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b281a720-7717-4f57-a9c6-551c6e673ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf783fb-06a9-4f83-8b8d-13902bfa59bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a70490-304f-48c9-8b0f-5c4e0a4ccb5c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1affd155-5d0d-4cba-bd00-2c31a718f770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1318bd39-f036-482a-b4cf-5569448b612a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507f58e8-301d-47bb-94a7-b4671dcb5999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e802ef7-1eed-49c1-9694-4b0b2fd744fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e2b06e-5649-4425-bb71-a5a1843ae7ff",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25985d1-18a7-44ee-8ae5-570e8aec1b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc59e12-8b36-4c7e-91f8-62520e102f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050b238d-1418-4739-b357-bd1e0dd3384a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec43bbd-2863-4c77-b956-1114973a811b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ee08fd-ee87-41b1-899e-4744dc664920",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96e607b-c637-4532-a2a6-85444120ef54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de1659a2-14dd-46cf-9f5e-db585a8847de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530d6f32-488a-4405-ad3c-030c6c6c38aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f88b366-3a33-42e5-ba20-265765e31e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbea91a-cd5f-4fd4-bf97-8d99e8d8b89b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66076607-96b9-4ee5-a59e-d9365e2fede9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2c547d-3c85-424d-adbe-5d6d7ea375dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afd1777-50b2-4a0f-bb7b-b0e6044d2e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afd12405-415f-4e4b-becd-4e6749551c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2142b6-4e1a-4b46-8058-2dd4ae023e74",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa3d3e2-bdd1-46cb-9167-cef6415f8758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b7c91d-2517-4aed-944a-787adb47bd07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8042b7-4b63-425a-ac0a-11efc2281ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2309805a-a2f0-4963-8c8e-6a75ce152fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30be83c6-d997-4775-9b09-6510b230272f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e850ca-6d65-413a-b99e-145a9a97a1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5deb567f-74ce-4470-a4a4-49de6eda5905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33b34fa-75ca-4cf7-a2ea-802391d7117f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "603d4a8e-deb5-40e7-bc58-9b741243f48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6212194a-cbb0-4812-a3ce-243c7fc98142",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4346a6-b1d9-48be-a547-d618dc77c505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb549e1-b0b4-4591-b850-63b602f46db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a9c909-efb3-4296-835e-6fad8e6322e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c62a42-4833-4a2e-85eb-9ae3b18fbe65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20769f2-ce89-491b-80f9-74e0a6d67cae",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d42effc-e62a-4096-896d-447c3f6d1c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a104a8f9-d20f-4666-89ef-f0aab23faca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1389b6a5-7318-45d9-99e9-f69ff07f2ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dbadfca-3e1d-416f-9303-baa05d0112ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4235edfd-1dc6-40a1-b051-7ef2c0b1a675",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0bbfb3-7582-4bcc-9f20-13b5396c3b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e9edec-d3ed-4d06-bb08-7facfba3d7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc408e1a-3251-4ab6-ad9f-81c311987372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97580246-ae31-4ee8-88b3-422be3507c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7039f7-5667-4ac2-87ba-d6876d96cfa8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1f1fee-862f-4fcc-a3d8-70c37d745bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ad8499-8750-4f89-9a97-579046c5e7c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451dd3e5-ccda-4149-8066-7d16df1a8d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e46ec181-905c-4d52-87c4-8e962e2ed743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0347bf-2d93-43fd-b3bf-1a9612ecafe5",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba31eed2-862f-44dc-8381-1314414841c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e90f82f0-d3a7-4be1-b48b-5745f308b548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a085f650-8d57-4215-94ab-ef64c20b270e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "475cde68-d4e9-4055-a607-d30ce26506db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f00fb9c-ca80-44ce-b53c-9c7f28161140",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a3bed1-a569-4df0-9250-d51b963d4c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b842743d-a403-4869-8cba-95b4ca08ffc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c1971d-4dee-4276-a65f-91d4a8017390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e59fd4-c50f-4f67-a9b5-324d8a22137c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55d8470-558b-402a-88b0-ed99530dcf46",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76252aed-ce7e-4cb2-b714-bbbe47485d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4af278bb-65c8-42b1-9bf5-fad5871c0cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f4a0be-eb7c-40e9-8c09-057a80626ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66a72dc7-9b4d-4984-9d2f-86876cf34619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21fceeba-f05a-4b7d-99a9-c0342bfe3fbb",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98122d78-8fa6-449b-bcb0-4fd51400a89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d74ed0-180e-4991-ac8a-2a7231847046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc7e578-5062-4517-aac9-3bb7c6088848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10d8aad5-c11e-4154-af2e-39630b440567"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b632b2c8-ca6f-4456-af8a-5f3b132b2c3e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d32fd104-4619-4e81-bbc1-8fc185d6ae2f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfefb90d-4040-4e76-b0e1-ebcf4815da68",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "69397d99-dddc-4ced-bd54-f46fa29b889f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94b4a98-a500-4d9e-99a7-3dc535aaefd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2b224ce-6aa9-4004-a882-f31485c42d41"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d497785-82b2-4cb7-9202-47cbd7076f2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ace55ca-fc1d-494d-aa64-0b6c648f0868"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "15a956ec-d862-4b8f-9ab4-18f06e2930ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3a886dc-226d-4d62-bcc3-81c75e93c018"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c6799bd-76eb-4025-886c-c8a398a9f683",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0a89e174-df5f-449c-80e9-a61948b45b98"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "372bab6a-1b39-4caa-8e16-7667b49e35e8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1349f098-de10-4ba1-9ed4-e5fb5866a781"
            }
          }
        ]
      },
      {
        "id": "e911ac83-9299-40b9-b4ca-fcbc30aa4fde",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8bb48f21-049a-44cb-98e9-fc937b541c0a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "13fce622-8b93-4c93-8323-41ad958cd00e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cca4e481-bd88-4b37-87b9-5d427f193751",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4248522-bd5f-47b1-9d93-da80bb7b4935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3912714c-2e12-4164-9748-58370ee4a856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d76019a-ab9a-4bc6-a8e3-e841a0b50653",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a988e814-50e7-4a25-9ff7-09c88fa67682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87b158c-2d71-4bb9-a10a-7af3d414010c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9013fb8a-fa8e-40f1-b152-23abcc705f02",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bc277f-4019-4cc7-980c-e7db12c425ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8b5d1e-2515-4139-9986-f2dd208d7ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1ef055-8bd2-4be9-817b-debe2d14e284",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03d71b3-e196-4583-9c9c-e368943ac41d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e060e0f7-c335-4836-8c8b-a971f560c4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6903e478-4ee6-4d5e-b32b-159e6d018cfd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e11de1-fcfd-4de9-b1d1-edb377adbf2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21233598-ef70-422b-a0c4-75ea42a4e56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4460831d-abd8-45f8-839d-c63c00931279",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcf00a5-c45c-480b-882b-00cc1f7d7fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9839635b-817b-462c-9074-fc594232f01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e79ade-cb38-4c06-9982-d9ba1a0ecb49",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e480d2-d3b9-4733-871f-d4f658ca3e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46354210-c63a-4154-868f-4e209cc79658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4136aa7-849c-4f70-8cde-5c4129feb0db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4074c66f-d038-45b1-b814-3fee086c89e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15271d5-174f-4572-9a58-9a39d47188ac",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120ea7b5-75cd-4911-a797-1b34c89bcedc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6afa899e-b33c-4938-8706-6ee05bcf1d37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4945e1b4-2516-4853-aa1d-2a789cbae090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c6297c8-d723-401a-bb5e-98635a31fc3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565e420a-38cf-46da-ae2b-3ddaf636c14e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0545f98e-0f1f-4234-aec7-e2779fc14e0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d2dfb42-76f5-4fed-b656-964c3d57bac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5fc688-ae0a-4bfd-937d-4a243bec93dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbc22248-db51-4def-b839-a74877346feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea22608f-c18f-47ec-b1da-88dcc7f09e14",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33aa0523-18e7-4298-aeb7-b8192ea617ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b36c294f-856d-481d-aefc-8900668ce626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce5a0f9-feee-4950-a24c-d851f0c8fa4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebcf80ca-0221-4910-b0e8-3d06058746af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c492168-6811-48af-90ad-f3b9dc79b9db",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848648cd-a339-4008-9fc4-6199d887abe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e918b02c-a3f3-41f8-9eff-7ac8f273e96c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c448be6e-3ca5-49b8-9aba-aff39934b9fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f0d6b9-145c-4e5f-8880-1be93dd7bd99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ccd9f4c-2bb9-4b1a-8ed4-749450afc8eb",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb369e0-19d9-4cb8-a327-075346d39e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f0b5cc-8ee4-428e-a39a-623d14f5274c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7d769f-f8c8-4e43-b7d2-3073e3c3848e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58207964-9046-4346-813a-e41437b18e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15e661f-04bc-4db3-a3ae-d79895393a2e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fd791b-9f78-49bd-b423-b7ef3dc3bf22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b2128f5-f3f2-4100-adb1-f9bcd52600b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83197c7f-3474-4e82-accb-675011b79049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29dc02d2-35bf-4733-963f-6fa82f92d8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1896f16-9c86-496f-8d36-d5d07d6f40c6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4234e89-1825-4b12-a784-c19f4e7a2d09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea0c29fd-e62e-406d-95cc-779f6237fee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a59dcf-3a33-460d-9c68-7f01a34cc6b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55cff6d1-a115-44b0-a3d9-e9d4812c830b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f5131a-651e-4008-a927-c4ec9d57b85c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a3c7fb-5f72-466f-9da8-6aa9b4170b3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca56219a-8a70-4110-a034-19c33699c19d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b67afc5-3876-465e-be3d-742ca37fced3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1e5856-6212-490a-b4b2-271183aa0449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a10357-58ad-48f4-80c4-a1a47815b76e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb67f67-b999-44d7-a323-242cfc1897ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be523bb5-600e-41a0-82ec-b11c0b854eb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a88a1fc-c673-4818-a33a-3e2a6bfc0d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c491ff-4b90-4e78-99f5-681d04cddd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40b8e4b-35fe-4816-9d0c-7884e9c17de5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8246e63-6a87-4593-8a85-1f05e3d24fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e138110-d4ce-47d4-b847-59439811a5fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "387357a1-c73a-4fb4-bc17-139c5fdbc31d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201d51d4-b759-4e9a-a82b-4d65a6f768c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2d12a6-578e-4b40-aec4-c122649812fd",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203deccb-ee9e-4b6c-b35e-f79b458f2c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e7e60c-d32f-43ca-ae69-96de9ea14adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adff8e6b-7241-4421-9297-0ed13f85e291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d4cb83-4c02-4b14-bfa9-c977ca597d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75887a9-3d73-4cbf-8768-27a0572877a5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fb33b2-9995-464d-aec4-0c37149fe868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30d301c-63c8-4176-9889-087bf823a7ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6522bd6-2b6b-4bc6-9729-366ad082761f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c699931-a72f-4110-929f-113bb4139046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc6090a-af31-466b-9880-bf0e64a3fd28",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4c9079-6436-4260-9452-e4a2446a3fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "211baabb-0152-49b6-9f14-b7222664d971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0ec42c-f299-4317-bd43-d92f365e8fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a60913c3-5911-410d-bb71-dd3ae3447a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97dd1c9-fd8f-4fb9-a958-5199f2aaf57a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e5f6f5-76ff-4412-adb9-7508c4ded910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b13ae7-b3a4-4ef4-b645-c5e59f79e50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc326fdd-5b77-4cab-b7cd-5e080dfc92da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e287fa-0981-49d4-b380-44ec576f0f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4239e3d4-bb4a-4703-9c98-abc3f577cdd5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c5064c-c570-4565-bfe9-0238723c97c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca97a332-90d9-4a90-acb3-cf5e78415589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6347076-5cb1-496d-9cb9-937c6a6c4628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5317acc-cab0-4c0d-afa9-55b6b9d1ced0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a4ff92-c83a-4c18-97d2-f8f13e0e58d8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01e4497-ecb3-4dc6-b18a-e2ef73b988bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4cc099-c433-4534-8002-2d8084cf956b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d2dc95-b9c8-4f28-a4bc-571173193782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e5096d7-5c3c-4296-9fe3-dee5645c59d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47bd8ec1-6fb6-4ea2-9c51-ca293c0592be",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc1babc-6747-4706-a946-c808c6ff6b81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0c8fcd6-bcd5-426e-aeee-09a9af1a5a5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa932867-6dcc-4126-a0a3-1b9bb0842d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a243f41-54a4-4923-acb2-8f9b8b570825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac8d6d6-7a98-48c2-a82a-a8645bd95a6c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe5ab54-e6fb-499e-a709-b9c13b7e64ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26f39281-2086-41df-a45a-14618a91f873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bddd432-3971-4732-b1a7-27f2ecebb3d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb395136-c361-4170-ac95-b844aec56ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3ba3eb-ff03-42a2-a76d-c3e9acf06024",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c147236-aee5-41df-8c6f-55ee0cd8e670",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ee82ddb-1807-4fbe-9453-4826a46bb2e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce5e67a-1f40-4e26-900b-56f794e33d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "605fd262-8c91-40e9-8bf4-47421b9eea2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc5dee6-08e4-433c-8711-447f3102cb11",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd27509-4110-444c-8135-acebbeed3a75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87093b25-0690-4535-8958-97eab2135ee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4829bae-269f-406b-ab14-f7c14d76babe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa38e05-f188-485d-a8e4-5b5e48c01707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3566d4-dd02-4cbe-bd6e-d7de81aa7f2b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9ccaec-1112-4689-ba83-d0c6eab33bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b253b42-8beb-421c-b6f9-1539eb727376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2222006-1f8b-4606-bda9-bd39c3c2bc23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e7d4201-5579-4285-b793-0ff22523a0a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263458b7-ad14-416c-93e6-9650e003564d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496515bd-a1b4-41a6-817d-1be1a5afc641",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ba1d49f-2849-4c22-aae8-c001f7168ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a83003-6dee-4356-af4a-85dca6cd4393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fda4824-fc4f-4f55-b83b-a384e2f72b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2de0352-f590-4088-9644-78ca752e21f8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56797d9f-2fb9-4091-87e7-33e428b30f09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13459147-bbf1-4e2a-bbbc-e58a91dbcd2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b16658-a7ef-4173-ae9e-bf6c37dca686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8353a945-df46-4354-9acd-8500911c3e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7efd8cbf-76ef-4f57-9cac-9a6695688e61",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74232293-9d49-4ea5-a4cf-d3d7ad549ff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f40d26c-3940-4e84-8757-60e21d62c908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efef733-bbed-48b0-bcde-b25c1fc19a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d264f16d-7c95-418a-a750-a628a89fbe30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e698fe-e008-4a2d-8c0a-6b28f301768f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff911607-17e4-4927-84e2-57a13973a66f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d85c59d7-8641-4edf-ad09-2e9d1d6d76fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1917f42f-807c-4a0f-ae78-f76e76481b0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed824ad3-af69-4703-8e16-fc3f8cc854c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63cdef65-8ec3-4248-a34b-f293c66d74e6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5807444d-04a4-4532-b044-aa06c97a488d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a90f0ea-e659-47c2-8737-d3ae0d166402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db73726d-8071-4432-83a6-8abee43455e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c1f87e-e50c-42c9-b0bf-9518a06d86e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e1109a-48e6-44e9-8f3d-28f762653646",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9267cfce-843d-4351-8d3b-8cce6e9bdd39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "674b6988-2d95-4cad-8cc6-abc4dd256b1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4efa1ef-4c8a-4c71-b28a-e582f1e93a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0234d5bf-20e4-4333-a333-0cab3c89d3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea41776-0f3f-4a1e-9786-437c935ddb24",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4c9c1b-d6e3-41dd-8f44-6f8ec7a23bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e0d7cc-32e3-4a14-b29c-3511129e136e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65eeecc-f7ff-4ecb-84da-a9bb36bfc2e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e99f834-8af6-4b06-8fbb-ea22b226e50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e627fbf3-2bd6-4532-8467-2807388d3e4c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217c5938-d817-4593-ad09-0fed3869b2e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48cda7c0-d8a1-4d21-90c0-3f266a9e33fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d75180-dd6a-4f68-91ac-c51191029f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe5cb3fc-fe9a-406e-902f-c3218981bef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182946e9-1353-471d-827a-e8cf95dc2c20",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126b759f-85cb-4783-b752-3da692bb1701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d208731-2f31-40ea-ba9d-24bbf94c581a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "312f453d-3b73-4710-be20-be6ccc6fd7fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f5b0d2-fcc2-45c6-bd30-61004a13d092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6195e4f4-3b25-4a6f-94a8-5b9c458f3bf1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f62a32-850e-4d73-ab31-92a8b9637e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a14a0a3-9552-4945-9acd-96a42ea65456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "190f02b7-affd-46c5-9a79-5980f1ca2f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dcec8ac-1052-4966-85a1-3863581f6375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73c71f2-e0fb-4255-9b85-5f9cd96b459d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f418fc8-cf30-4fa4-ae2c-127a27f497ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4505fcf-8dfd-40b9-8b1c-f39a51466065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bf7591-a619-4b49-b59d-94e08de71543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7294b3-94e7-4135-9fc0-5868c1b8854c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a9dcfa-6f0c-4720-afc5-88cf21f95e05",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c35706a-30ed-482a-93f3-f67b51057723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e80bc7c-dc6d-46bb-b6de-a122d6e407b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7bc8705-8240-4c3e-b1a9-726b3ebc6356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80437f2e-6f4e-436a-afe0-9c891af7109c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd6d33d-51b6-4e15-a248-10941cfa5825",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ad60e4-4b2b-4f27-9a14-6e2e101bb0d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044b91b4-7097-4be1-b9eb-c27616c07aae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9229353-1fc2-4085-84a4-2b421b1ec69f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a123b188-56ab-4884-b4ba-a7c451dc12ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e923af0-4f20-4bb6-becf-d2dc216a27b1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0ed11c-412c-4418-a7e3-58c30f907847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d083da86-ac6b-4765-be0c-735c54ef23e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a5aea1-7db3-469c-b785-9220aab87477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad8b0c0-879d-4771-abe7-bc8b39e5f40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5aaa4c-6f22-4e93-b34f-ec6c4d280384",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c2c67c-6899-4ca3-8270-75f58567f9b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4630115d-51e4-4149-aaf5-059065ebcf57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c47b31-d271-4dfa-8906-76ca9a5abd0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5afe1722-0c00-4acb-9b95-8c12cdaad988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4f975e-6c0f-470f-97ef-e7f6d0fd6cdc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88dc2048-1573-407d-bf2c-519a7ec517e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6df5f64-7f5f-4558-a8ef-281090b66c06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0ba65c-3942-4a25-b450-93ba4b53997d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "487c7b65-0d16-41a8-8c4a-41ea3dc085b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852e5480-a8e2-414e-ae6f-4bff2b3786e8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dfd11a8-6ca2-4645-b754-7c281becf6b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "939ee0a8-e356-491a-8eb5-29729e28b46e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89387f6-798f-48a5-8135-2945c1422021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30dc84a6-3105-431e-a2b4-665d74b031a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4603f6-62d2-40b0-b20e-523789aeb7bf",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a982c7d2-a2ae-4a10-a261-f33efeb763d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da98d23c-6fc4-462d-ac98-051965099584"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "224db552-0b2d-41fb-938e-221f79507b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0859a97a-4661-44c2-b476-16238898f835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d52f1d-4f50-42e4-ada8-4a07a50845cf",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7190ffb1-c0d8-4967-b322-cfb00961b3b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d54a0df-b78a-4885-84e3-f2d956c6de67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f18d430-5ada-48f8-949a-d2e96a0d7d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9dd3c2c-94ad-4784-9c19-fda2985277f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9032db-3d9c-484a-b542-141178cb4ddb",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8776a35-f3c7-4772-aa92-211d6d109e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d9b751-75c2-4827-b3e1-030fd7fb8357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f5798c-767b-4cdb-9f7c-73ab21b42b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "987a013c-63dc-4520-91d8-4c29a158b4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb3a291-109e-4e4f-9210-689775159c70",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588670a4-a460-4b73-8614-f343f3ce8624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18da8f3-a7a2-41ad-9366-df44eac56420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2633e2-1002-40db-a739-a7d1caaf5ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19310ead-5b56-4c7b-beee-4f59bda6c02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac133838-cca1-4bbe-b494-5c635313c17f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db547f3c-c259-4b15-9f40-58e390039cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b201ab1-1df4-4d60-b9a9-bb0052969a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02eb5250-fa76-419d-b1d5-d4dbb835dc44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ac4491-0b13-4a57-89fc-0dc80cea65ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54fb35ca-c6c4-4d20-b937-2f14362f69c3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f8fea8-7497-45cb-a9d8-4900796221a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc5eac15-19f1-498e-91fe-39c5cf96a897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10699edd-0f09-439e-9a6c-7250d400c1a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d911c6da-2563-46e6-8db4-f273f20b3067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd963c19-65e3-4847-ae8f-90ab22889b05",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5bdf67-4eab-44bd-ab13-7ac234055060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9590e6-c848-4679-b437-47dff3af8659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8859554-f4aa-4ebe-ae08-ca4f43b2e40c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a238c36-9e23-41c5-a296-9ed4c0aecc56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7c4b62-6cc7-4704-acc4-543cae0e0d56",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5736ce-777c-4383-a39f-1e6445f6b0e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d2e356-5bb8-4b0e-a4d1-7422a9e04a21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5f0801-45b4-4d7b-a44b-6491d6cdf978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd7a153-03a4-4d65-b07c-5dfc96cc10dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b325b38b-688c-4d6b-8cc3-e574cf2d2cb3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51ee2a4-d09a-4b18-8268-6329eda67bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a03ff6f-ef90-4195-ab1c-5e7e537d1bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0c0e56-4151-4c42-b71d-b31f6d3c4ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf7d668-25a8-4abd-b4cf-804476b92bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834cca1a-e6ce-4b18-9a2f-ad414f3faef3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0cab1a0-025d-42bd-b4a7-9923146ff644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb84a788-af67-4033-b423-2fa68913978a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c91e58a-f970-4223-a797-5eb89f3fef32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d0be2e-b47c-4c92-a2f9-4be0d62c802b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141d4d80-d1f5-4463-9be9-45db92731384",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8dbc49-e60a-41ac-98d9-be9eae42b174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f8f841-cf18-43a7-934f-f0e1b1011017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9209fb-fd35-4c98-8538-7a67130d5de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a072f9d-6fff-4ec5-9d8a-4af650e1b3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56eae60e-ef57-40e7-8c23-ea016f7baac0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3ee310-a46b-4537-9365-ab3a09f064ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f77d15-7e58-47d6-873a-590749479515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3a0623-d8d9-4ca0-9550-8abc2cc1fb35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ceab767-6019-4382-b146-9fc3415c04b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898d96bc-be16-490a-bc21-a1b78360c8b9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b352f99-cbb2-41cc-a91e-55db27cc8650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b39c29-bc6d-46a0-bff1-d5f99998d5f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed79e749-113e-47d6-9f1a-9c508fc1ab94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a1f03b-6a4e-49ef-b7de-9c771e50d92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc83008e-50c7-4a54-b256-51e24402f1dc",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4855e5f-ed0a-44a3-9a29-72160aa81659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1772933-e9f6-46d4-bb10-13ae332af657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b946e65-a578-4b74-b535-cade20cb6a7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdfc660c-c75c-4ca1-b56c-41fd035f865e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509d229b-6290-4c97-965b-cb4ec1c9433a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262996fa-f9db-460e-b4a5-a0db47e8dcb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb1d098f-74b7-434b-835d-2ed68df25f90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c553f24-efd0-498d-bd2a-15cbaf4fb13a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "069d0ef0-8f63-4c66-b1be-e606cf084047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f980872-e607-4b5a-aea1-e8acdf1a880b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdaef3d1-823a-4b72-a643-97a3e1234847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d80a99-09a9-4e7d-a3cb-f73edcbd3976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e0f479-b457-45df-9b2b-70934bd4ca77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a36f6a5-af7c-4b38-bea3-33c114de7eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43ca7d7-b73f-4a49-9a84-095874f93f9e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b6a646-076d-4a26-8f86-840eac186891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa6a6f0-94da-4755-a37d-09931c5db692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdeaaab-9207-4d2e-a7e8-1298c7101c7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b673c5-9805-4862-966d-ca74c083265d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987d637c-c5c7-44d8-927a-8522618a4ce8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741015e9-16eb-42d1-be97-6b56120138b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6bf1a1f-8276-4d13-9919-48bdf78dc192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69cc0f9a-97c0-486d-9ce4-cbb44ef44b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93ab2322-cde7-45ef-a23b-885b6ba1e94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74be8da-7674-4520-9cf2-77349eda9bf3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42e1dfc-32d8-4859-b456-fe7c22eb9488",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "952a398e-397a-4f43-8483-4de80dd3def3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e632b0c-bcbf-48d4-b298-ad1d62079ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661ef0bb-ae87-4e8b-b923-bf8d91776fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f0194a-9ee0-41fe-8b8d-9022396b4c4e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0e1677-b685-41af-b971-44d68314d77b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34905990-5c47-4cf7-9604-82efd2aa74c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "414336f3-9719-4f19-9436-50cf9cd3c955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d0def7-467b-4dfc-b875-c365dfca8ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb184e3c-6540-424a-80a8-b1b05dfeafe9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d47ff8-b11d-49ec-aac0-c3fea9c29097",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "155d2b75-f028-4a3a-b07c-7945e9ee03ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef902410-25ae-41e7-ae01-28085219632b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c058397-22e4-4ce5-bfe3-e8945a6ff464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae919108-7703-4f61-b1d4-309ad8ef12ca",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3bf595b-3937-4729-958d-970f15492a0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb4aa0a2-a6e0-461d-8506-d4b907c5373c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63858c7-2463-4114-8bb1-e939c8b37694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bfa441e-90e7-4fff-88fa-4f699e11e13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77ca59a-8afb-4b8a-b848-1abc7f177855",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3971cdb2-91d0-4ee6-bfbe-79bdd72cb4a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bc390bd-e47a-4632-8c5f-e2c09c4aa752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec93b17a-ce79-46b3-b9f8-169de99001f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f42a2d5-ba72-4e59-9333-0d43aeed5abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8bf6ef-3306-49d9-bfff-77e4bc5648e1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb610e2-5d36-4352-be72-f99d57be3032",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3abb8f4-fe7f-4ef7-b177-f3b4c67856e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac49642-8551-49b9-ae47-631e09b72a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ed8af7-5a36-4d15-a7e8-5c8062e392ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4f2f71-cfb2-49ef-80b7-3f4f90f6507e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e796ac2e-4f60-4121-8586-62f9e4f5ea90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cebb0198-937c-40ad-bd66-0ba5b1c9d3e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "800293fc-6a29-4c78-bc4d-72529b05c320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de4a204-b5c4-437d-96af-509133fdeb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dbc1033-171f-4a80-b8e9-de3c6b3770f2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ae49eb-18e9-4af9-bf10-18bdd65bbd29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3fbc8db-ee73-4f05-8046-98575e3d3b0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11269c0-f622-47df-8d08-5f3628e66b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba84841a-7d93-4703-a135-1248ac094e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e41d024-9efe-4cc0-9bfb-900923f476c4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd63bdf-373d-4c8b-980b-3e414286073d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46256146-c033-4c02-8395-ba9fdc4a8c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "215c22d4-5e30-4a44-9217-660b567e8355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9193b98-6d48-4109-95d6-41830e4fa7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e936dce-db77-47b6-9c27-6f9a717c8340",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269df750-2926-4583-b9ed-34dd8e601d81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df56ce0b-2b1f-46ce-abc3-332ba730f3eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8457bf85-c3fb-4790-b907-35e0cf85f2cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b784a359-b364-47cb-aba5-e03a2b95da7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f97e18a-5216-4c0a-86d3-b7a7549b6a13",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af0186f-a8bf-4b91-b9c8-eabb3b9386bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "336f016f-427b-458d-8b21-dca357a29863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d873379-3c0a-4eab-b118-da452f60496a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab9675b-6e2e-4113-a2c1-ba7aff06b944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0dee642-1bb5-405b-a199-6a0376466ff0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eac6f61-11a1-44d9-8617-a8fe5578b1ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59d4525b-e386-4b0a-9880-b9acafcc83dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c0a3c9-0308-4a6c-be3f-f0059be83a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "294214c6-24bd-4062-8075-ce96d56d299b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520bee03-63ba-4331-969d-e01fbd2d74e5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf32698-5021-4723-a5a6-2a5a51208afa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c237901-c0b6-436f-84ec-f89095307587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe43a6d8-5ae4-4ca6-ad75-a31b0865eb79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec35230-a5f5-4d47-b62f-d7534f739c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5f2f0d-8075-4756-9ea5-41441ae960f2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f69dfff-4b24-40f6-a750-a2c858be0233",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85c43096-124a-42b6-9aab-8f133c52a163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ea862f-c14a-4197-a204-4316ad1fc0ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfabb8ac-4ef9-4727-bf72-334721a97bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0817f8d7-ea12-4d8d-bf0c-6f6a056a84d2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28216998-14ab-450b-891f-a7c78a9e70ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc308247-6bde-4e3b-bf84-cbcc6e032732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7f63e1-4fde-409d-8a98-0bbc62e75775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2893b810-f934-4eb3-a84f-20b91d3cb0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb29d400-0ebc-4c13-97f3-f78ebfa38b50",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec593e3-3e89-4db5-866e-5df609413b30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d802d0f4-32b8-476e-ad55-24e1bdcda240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fc4586-ddc7-4d06-8c02-ab9904ab830d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc52764d-e1b7-4c8d-898e-c44585c2731d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4356db-7ae1-4e1a-8657-7221c1317b74",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa31e9c-4998-4ddc-80bc-847cf80e8794",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b49c69e-db9a-405f-905c-272c1479b2ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d2aa29-4d7f-4691-a526-d9070b8b3113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a86cf9a-4019-45cb-bf2e-d7a83d609502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098b672b-cd6a-470d-8837-3ce1d0e1717c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d71f15-0b91-491d-b433-34e09a2df072",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bbf559d-1459-4f17-b615-b1080ae0ade5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4829d1-2f8c-4118-a587-6b38db7b381e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d6b3f8d-eed2-4662-ba59-f049603224d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c3837f-e421-4ea1-9651-5b51f4eae6cd",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012dbe56-b611-4c6d-b073-b98606ed110f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4211581-c350-4799-8ca2-861e59a30694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71bec9e1-4662-4e16-babc-281d41abdd7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd19e69-68d7-4d80-ba88-969c316a0056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7781de-c577-4ad4-a4e5-903c7d34a054",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc6d190-b7de-43e0-be40-25d751c63972",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed600b7f-3c13-409d-b5d6-7d6fa486f783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb48d27-5505-4015-9b3e-246544e0ff44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac7e8d27-3b9c-4db6-9e4e-0142c9df6d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8c1f07-dd0e-458f-9e10-f40e6c8bb494",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afd7a43-3ba2-4fe4-8054-fd1b3adefae1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4ac6ca3-0c1f-421a-bfc5-876c30353035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ac26bf-51be-41fb-b767-fd7c25afc993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb3a981-d875-4c4e-8483-06edaaf950a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03269a85-3286-48d7-8b13-7c9ba22a47e7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b4a801-de7a-4a3b-a2c4-00ca72987842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "272d06ac-b6c3-4d02-b931-bb592a2a9de2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1012f810-0df4-4e4e-866a-c8c9b26f2091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "395ae4af-ee50-44db-a346-8a7cbfbab153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f4cdaf-1cec-4be3-99f6-c1ab731a8f6a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27034ccc-3919-4861-999e-044bbf96f47f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "620b8aa5-1ee4-4e6f-b20a-590464cfa80f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f8619b-046c-47a3-8460-b58cb6839cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5774800d-99de-4c78-839b-522b2c922b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99cf4e15-b522-4603-af4b-d548e88c4ea3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47275275-ca11-4249-97f9-f0ab4ba91c2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a733313-0e5a-4733-b572-250bda0eb5d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0a520b-8adc-4c54-8841-86c8a26b9795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4023aff1-b32a-4e90-b998-fc216d2cf04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a6dcbf-b5d9-43b1-9b8f-c52d6284021c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e777dfd5-d0af-47cc-8104-ea62c0782f6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb0e7ba0-6209-493b-baec-2bfd33145051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b2bf06-3bc8-46b8-a723-201b338d12e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d5b627-aefb-409d-afa4-e68774523501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75631d6-05d8-45e2-b681-4ed472dbdffa",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9d539d-73d0-465a-b8c1-290ef0c91d57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e798ec0a-3d05-47d7-b405-93b18141269c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5872b338-ee54-4cf3-af91-3d475a87cba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5278bbb-a59f-409c-959b-cd7917c65936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78014528-af71-4d96-944e-7018b0a20565",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440463b1-0f92-4888-843e-3c5967cc8f3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a8c0c94-6cdd-498d-a13c-c412c31c75e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefac36e-31ba-4fc3-b361-e83c12b6d942",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abab5f81-5005-4dbd-8312-e9129c4b9a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a4321f-7946-4b89-a770-3ec23631dea7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af82ca76-701d-4e07-a8c2-86c0326ffd12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c67cf07b-53e1-4aa2-ae26-2b156a4ad427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d441c19-f33f-4d44-8576-69962b997094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "090a5194-e2ea-41f8-9882-e25d0b79f3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d089d3c-0811-492a-b31f-cc34b3e37b1e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab5f345-9a8f-4a58-9b34-a3a682a78d46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db44234d-6e11-4143-b4b1-f55e42ae937e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c41ad7-e626-4312-ac57-e648714fd8c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ffe914-1c72-4fd0-8f0a-a94af766257f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6bdef2-2a7b-438d-97c9-c151a3310fdb",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b54d47d-5ce9-4082-ae9b-6fde5ae83810",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a42eaac-cd6c-42cd-924b-daf3e8b940c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a610bd-22ce-403c-8e7b-37677e033c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f44c8bea-d6b3-4075-943e-7935050aa6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f454e41-d6d6-479b-8284-a7e1ee07958d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4f6bb1-6d20-4f8e-adfa-cf68d567887d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac90ef66-9082-422e-b065-247d5ce67082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a58d465-3022-4477-93f3-5df0f7bd792a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cdae9eb-6596-4b0c-8f32-99709c842687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443be3d6-61cb-4d2a-a99b-d03dd86217b6",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550e3d28-997b-41c1-975a-a7a20a02a0f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18ccb8da-b470-48ba-b270-f3e9365a7a09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab740890-446b-4f09-9f02-722dad99bb78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223b564c-4acc-437f-8ce4-41cdc2b38fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249c9859-ba1a-4a7e-990d-903a27302e1c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47bee29c-bf2c-4806-9b0e-06a4b415db43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b4e32a2-75a7-47b1-be9b-d879688dbcdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e929ea79-3ac6-4de4-806b-f75bc6a4435a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2f1282-f905-4670-abeb-3c5ccc1ff135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c9f857-a21d-4907-96ca-e9f314bba710",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3596ff-958c-4e19-b75c-c26f3ae45991",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1fc9155-3c99-4710-983d-9f90a2a36636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bddac6d-2fa9-449b-8ffa-6f7b7f8af11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef2606b9-4c5a-41b8-ab58-135f0a0468dc"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df64bef8-3dfa-4bef-9bb3-19cafc9f9b09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c664e613-bcce-40be-87ec-b780f6d9dd3f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "34a8e8d7-f09d-4e17-a1e2-6a5d3b3d4b54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b35ebd1-2d20-44dc-84ba-654ee3dcfd93"
                    }
                  }
                ]
              },
              {
                "id": "bd980350-7028-4281-8fbd-4f15faa0ebf5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ebdc681d-bbc2-453b-8b0a-959f8b839926",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e662ebf-a00b-41f1-9f6b-fbd2201f3706",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "733bdb06-9989-4c6b-8ac9-f00a3566098e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7b48af-37ad-4217-96a8-ccd7eef56b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4b85870-d147-4875-957f-175c2396838a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a2c95bf-1ea1-4a3f-8072-0b7214954d84",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ef2b9f6-fce5-4fa3-ad4b-b5f7328d8f45"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff0ab14b-eeb9-4da4-b802-31f5735a29a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b1ca05b-1266-4a3d-bf31-495e69fa8d81"
                    }
                  }
                ]
              },
              {
                "id": "85edf4fc-b00e-4793-a768-e0db6ef40f22",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ac46a197-3b52-4612-b276-d0078a781d67",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75863092-c11d-49b0-8615-ee20a249c872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f8c743b6-e159-4823-8e90-9f6d922c49b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01a1d47-dcb6-4ea2-879d-e7d959c8a63c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde7c5ee-e2c4-47a5-ac4c-23d19646c27c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8137c8c6-7b20-41f8-b130-1b2222ac3a46",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b28bf7e3-6862-411e-8e85-fce5dc4577db",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfc4d0cc-7781-4443-bfa3-4d2c2ad33e35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4fb25959-44b3-4346-be36-0cb12add22cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a24f4354-6401-43a5-8847-709c9d03aac9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aca52950-86a1-46b8-9ff9-2354dc48d521"
                    }
                  }
                ]
              },
              {
                "id": "818f8605-97c1-45f7-93a5-98c99dbbddef",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d8f0680-fe2d-4ad3-98e3-dcf8cde720f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "47887d32-0745-4b42-8471-ddbc7fa85e5d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "faa63777-c745-4fb4-b2c9-35ed4260cc99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66dd1da8-6004-468f-9af3-e430c7d3789c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bef50c39-4d4e-4531-a5ae-8e7e1d8fb60b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9cceab04-7ece-411e-9efa-7ab114b1a248"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "15e9dbc5-bfbb-4b5f-a43b-10f6ef65f10a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb0469c2-9761-4330-b073-93da4f3b084b"
            }
          }
        ]
      },
      {
        "id": "44373af8-f33a-4868-806a-1d301112ba3e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bf08bb3f-ef1d-4b7b-89f8-ab7508b3a746",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1676dee9-979d-41bb-9eb0-192a7047d843",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "736ac159-71bd-43cb-b143-4b52d374aced",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a3baba-f40f-4dee-9372-4eb0ec73cac8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "23ac6d65-aca4-40bf-b7fc-910a5dab941d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a8affc-77a1-45be-abaf-a5614ce9dcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f35f10b8-49d9-4f4e-85c6-f43d7a246299"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd99b1f7-b148-4310-8002-8b9ab6a2bbd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e5ac562-79bb-4095-b59b-8bc2f37286b5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e274ce8d-e275-44c1-bbea-a2e126609593",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af9a5781-fce2-452d-8747-abcefc8a756e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30a0c43c-9643-418b-978d-2f9b448de255",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "91ca528e-1a13-4567-bb1f-65c398789831"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9106aaa-d52c-44eb-a804-487cfaaba659",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0fc712d3-93c6-4314-856b-6c131ddd5056"
            }
          }
        ]
      },
      {
        "id": "626af88d-ab3c-4726-9776-e1d0b2957cd6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "37f03afe-9bce-41d6-a431-f2f6782efd5c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e4dd4c93-29bf-42d6-aec4-732d393094e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "93c3fe79-9dcd-4228-bc2b-08575dc56597",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556c3125-7608-4c28-b387-24fdad8b4bb4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2a7663e-cdc8-4a16-87d2-0d8e04115dd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17467289-a5c7-418b-8452-d5b48e3defbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "820df1c6-6a16-433b-a54f-0a3766f887ee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cdf24a1e-39bd-456d-9384-48d9ffea9402",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5401bf1-08ff-47fc-835d-abe0f7edec90"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9806e2d9-de98-4109-a672-81bfdba0947b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77ac6535-6d06-403d-a03b-a5a641730f6c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad4097d1-a3a2-4155-99b8-8511bca3a47a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ba9b4df8-b88f-4ae9-8b5e-9fb613537d34"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c16d6135-9c9b-4b6f-8da2-95fd9112dedb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c40c1489-3518-46c9-8d76-08ba51aed43a"
            }
          }
        ]
      },
      {
        "id": "b90e1338-9778-4de1-8146-35ce9ba4d596",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "802a3db2-90fb-449e-8c39-c3b432eca093",
            "name": "Negative Testing",
            "item": [
              {
                "id": "260bd0b9-6458-4664-8bca-5d7a355a2dce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0740192a-0dd2-4fc7-b83b-27e950606a92",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14510598-0955-4f64-8df0-6ee9f2320c7a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76430174-eb93-4fe6-b926-3a2df54a7cb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff99dac-d78e-45b6-8bb9-beaf83f7b4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a18c418-3c4c-4ae3-8a87-21a4a1cc0aae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1e87d4f-0c88-448b-a1e2-e0a5bc9d3e64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "289d37be-6c3a-40c8-98ed-f998cd7f667d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "08e57aaf-5a67-4909-9d3f-fc5727d39632",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b439826-230d-4e7b-89df-53102d060d73"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d3e9c2d-992e-4aee-aa24-2fce9d0bec69",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7ef756a2-f072-45f8-88a6-f9f676e27396"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d5e1032-0f76-4cb5-8db3-d4d54904aa34",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a2692e1-45f0-4a9d-bdee-06624aad732f"
            }
          }
        ]
      },
      {
        "id": "2a672996-6eba-43a2-8592-6300c2733576",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76db18d9-a56a-4ce8-83f0-4f9ee0e54a12",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef37eefa-4e35-44e1-be7b-96d71df76f85",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "74f528c0-99ff-48cd-ac34-74d62066f635",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c64678d-dac2-4bd8-ae1c-9a3b286bd71d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "868a5676-295c-4477-ac41-8f8242330ee3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 120.45238095238095,
      "responseMin": 4,
      "responseMax": 10193,
      "responseSd": 740.1269154050736,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727657259633,
      "completed": 1727657298497
    },
    "executions": [
      {
        "id": "a2c7da93-c4d2-43e3-adc6-c9dec61dc4c4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8a30c2bd-17f9-481d-9fa3-00e31d2543e3",
          "httpRequestId": "40a0edc1-a1c6-453c-b343-baccb3bfe199"
        },
        "item": {
          "id": "a2c7da93-c4d2-43e3-adc6-c9dec61dc4c4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c555ef0b-ea6d-4a9f-92bf-4180ba87512b",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 0
        }
      },
      {
        "id": "62a4bce2-590a-4ada-9d73-893e31de7cfb",
        "cursor": {
          "ref": "3f93e421-10b6-4074-901d-57e22df0e457",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6859bb05-9593-44f8-9505-54934aeb9214"
        },
        "item": {
          "id": "62a4bce2-590a-4ada-9d73-893e31de7cfb",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ed7da1ae-1c2c-4b8a-88fc-c5fd36de6fb7",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 0
        }
      },
      {
        "id": "7505d78b-4898-4208-854e-5197eca7de15",
        "cursor": {
          "ref": "ec75505e-984b-49a5-a0b5-4b9219ab2ae5",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8dcf3bab-05d7-45d1-82af-0d8ee0972102"
        },
        "item": {
          "id": "7505d78b-4898-4208-854e-5197eca7de15",
          "name": "did_json"
        },
        "response": {
          "id": "34e32c76-9213-4e3e-b362-6b4437ff2cb8",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 3607
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2517ce98-bdc8-42e9-bdb7-72fd759626f2",
        "cursor": {
          "ref": "1deb6c3a-2d86-4f6d-9bf8-e73cd5e43447",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c4f8c7aa-9292-4472-b72b-9c60d434770b"
        },
        "item": {
          "id": "2517ce98-bdc8-42e9-bdb7-72fd759626f2",
          "name": "did:invalid"
        },
        "response": {
          "id": "25163a6c-9a5f-47ea-a20f-70aa8aaf8113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2517ce98-bdc8-42e9-bdb7-72fd759626f2",
        "cursor": {
          "ref": "1deb6c3a-2d86-4f6d-9bf8-e73cd5e43447",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c4f8c7aa-9292-4472-b72b-9c60d434770b"
        },
        "item": {
          "id": "2517ce98-bdc8-42e9-bdb7-72fd759626f2",
          "name": "did:invalid"
        },
        "response": {
          "id": "25163a6c-9a5f-47ea-a20f-70aa8aaf8113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc672688-f8be-4fd8-82de-56d7e9cfa20d",
        "cursor": {
          "ref": "0a402381-f177-4a2e-8fca-5f3cb85329f1",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7cdf4f02-98a2-4cdc-8765-400808f8e644"
        },
        "item": {
          "id": "cc672688-f8be-4fd8-82de-56d7e9cfa20d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2f8bdc61-5a05-404a-93bc-ef8aea05a9f6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 27,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da452e5-c7f2-42fd-b0cb-0825fbd7a8e0",
        "cursor": {
          "ref": "b87ff5e9-f876-4de0-bfc6-26a54c45abc9",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "35bf5dfa-f41e-4f54-aed9-b5db73105f02"
        },
        "item": {
          "id": "6da452e5-c7f2-42fd-b0cb-0825fbd7a8e0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e3b4bcbf-3121-4026-b2e6-3beef69c1278",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4089021b-a220-4f95-9559-9e8fd12b7f20",
        "cursor": {
          "ref": "f6005d83-cb95-4f3d-8846-9d568767f392",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5e43efdd-5943-4844-97eb-dcd4d1827121"
        },
        "item": {
          "id": "4089021b-a220-4f95-9559-9e8fd12b7f20",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "724f4d98-056b-4dd5-aa64-e9372c85f11c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bfc93c-866c-4c75-abff-97b90253a45a",
        "cursor": {
          "ref": "8d022b62-4ba1-4aa9-b3f7-bd9b131c8d01",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "cda4289a-ebd5-4735-b362-4b12d2813cc8"
        },
        "item": {
          "id": "74bfc93c-866c-4c75-abff-97b90253a45a",
          "name": "identifiers"
        },
        "response": {
          "id": "3df85c35-477f-4339-bbbe-a027db266599",
          "status": "OK",
          "code": 200,
          "responseTime": 99,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcdf97f-ce71-4be9-977a-e4191c032e59",
        "cursor": {
          "ref": "b10ac1cb-2798-4aa2-8ba9-c1f08adf09bf",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "38e2857d-5db4-4ee1-92de-74cff5c9ac3f"
        },
        "item": {
          "id": "dbcdf97f-ce71-4be9-977a-e4191c032e59",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d9856c79-382a-47eb-a9a3-5fd2ad8ad97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8969bbf5-8cc2-4147-8d07-56815f0dee2c",
        "cursor": {
          "ref": "4c06d03a-3389-4739-adec-6e80f292f11c",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "40600529-5f57-4b92-a9d4-851d5c407eae"
        },
        "item": {
          "id": "8969bbf5-8cc2-4147-8d07-56815f0dee2c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "dbc7799f-2c33-4683-9d53-1b4a6c691b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccc8e52-ed52-4e56-91cf-8fb64d2705db",
        "cursor": {
          "ref": "35572e02-2833-4ec2-a56f-ece507167bd4",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "66513b28-670c-421c-b8b6-f4a933fb917c"
        },
        "item": {
          "id": "eccc8e52-ed52-4e56-91cf-8fb64d2705db",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "47878598-50c8-43d8-bfcb-dac17b20e3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89099456-a5ba-4d30-8542-2633aaafc721",
        "cursor": {
          "ref": "4b04f28f-c758-4459-b59f-440c1cf75983",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f41c187b-5895-4c71-b885-469879feec08"
        },
        "item": {
          "id": "89099456-a5ba-4d30-8542-2633aaafc721",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4f13a52d-f96f-48b7-abae-2efd67b23b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da80587-6fc5-46c2-9238-9f1f6d19473c",
        "cursor": {
          "ref": "66801293-e4c9-468c-a2cd-b66b5946270b",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0ffe6bf9-3d05-4743-bd99-65095e261624"
        },
        "item": {
          "id": "7da80587-6fc5-46c2-9238-9f1f6d19473c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "386d7202-d9c1-4f2a-96d9-37e6e8d271ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf97c3c6-5295-45b5-90ad-d8b7111d04a9",
        "cursor": {
          "ref": "a93ef506-2616-40a4-801d-c0e82914fa9c",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8faa13e3-f8c0-4c4b-beb0-3a0997e68ce7"
        },
        "item": {
          "id": "cf97c3c6-5295-45b5-90ad-d8b7111d04a9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6fa6b915-18c6-4538-9ca6-4f944fdeab2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b147ed8-ee44-4c11-af43-ee6656cf3366",
        "cursor": {
          "ref": "af399b71-882f-4618-8736-7c9a9d460784",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "489032f9-b49c-43e2-bddb-fee96496a6ab"
        },
        "item": {
          "id": "7b147ed8-ee44-4c11-af43-ee6656cf3366",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e91c7d50-f989-40cc-b98b-c29e85b92c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b755837-d8fc-445b-abef-95ca961771d0",
        "cursor": {
          "ref": "6b3b929a-d264-49b3-bd22-89c14c010070",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "224c617a-ac26-4c3d-80e6-d56f6dcb39ea"
        },
        "item": {
          "id": "8b755837-d8fc-445b-abef-95ca961771d0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ea42f077-9376-4019-920c-78b8147c35ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d10f0d-d4a1-4ac4-8672-6cce4eb60af1",
        "cursor": {
          "ref": "93025c95-1cf7-460d-81c7-59b4a3efdfb7",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "64e6859e-df17-41b3-a5a6-5550ffa133b1"
        },
        "item": {
          "id": "07d10f0d-d4a1-4ac4-8672-6cce4eb60af1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "72c1b2a7-6007-45e2-b63b-c3b536e29f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc360296-b099-43f6-9063-3bf12621fc3d",
        "cursor": {
          "ref": "6112bee8-d8b5-4162-b88e-a3997d35117e",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0380d425-993c-41fe-be4d-42bed95bb272"
        },
        "item": {
          "id": "dc360296-b099-43f6-9063-3bf12621fc3d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7aedcfd8-30a7-4dad-b12e-8d34f88fa175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "affe21e9-8230-4eee-b2f7-db5fb9971138",
        "cursor": {
          "ref": "1d31e5be-362b-41c6-bfef-84edd59f17d9",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0911c47d-4ab7-4c3a-a132-6a3b6c8a8196"
        },
        "item": {
          "id": "affe21e9-8230-4eee-b2f7-db5fb9971138",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "41f70bb0-48e3-4366-a53d-dbc588f88346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9590a6-519f-402d-9291-2509ae5a37a1",
        "cursor": {
          "ref": "2fa21ade-4eaa-4897-aed1-4faecaf8bc6a",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4c9711b6-562e-444b-85ee-0f0a0e0ed840"
        },
        "item": {
          "id": "ac9590a6-519f-402d-9291-2509ae5a37a1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5aa5517b-e5f6-43a6-9deb-801b6def5b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9de07bf-2966-4b04-8134-df5a9392f8cc",
        "cursor": {
          "ref": "ad24ac66-bd1f-444d-bb92-3c583b23b9b2",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7fdaa8c3-c511-47ff-9f75-8a3c3109cb63"
        },
        "item": {
          "id": "f9de07bf-2966-4b04-8134-df5a9392f8cc",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a493235d-fd52-43b3-b899-bab7d03cb405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b172209-e7d7-4149-9db3-ba2cdd3872ff",
        "cursor": {
          "ref": "bd1d7bb0-7cf6-4ba7-acbb-419cd2367ebc",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4ce5cadf-069a-4584-a4e1-e9cf36a25e52"
        },
        "item": {
          "id": "8b172209-e7d7-4149-9db3-ba2cdd3872ff",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "70e00b4c-ca69-414c-b218-aa0da0f94169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85a1f4a-f993-4694-afbb-b1215c6570e0",
        "cursor": {
          "ref": "b8bd7880-c0d7-4a01-ac96-522b998ebc98",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e286b4f1-4398-47e8-8777-741d706104d2"
        },
        "item": {
          "id": "e85a1f4a-f993-4694-afbb-b1215c6570e0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "dd1ae035-0931-4150-89b9-efcc9b5c7f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433ae4c5-2960-4221-98e7-18f274a4c250",
        "cursor": {
          "ref": "d314ec33-c059-4690-b42f-47cc3174a097",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0898b4cc-02af-4fe8-8671-eed2597c4dd7"
        },
        "item": {
          "id": "433ae4c5-2960-4221-98e7-18f274a4c250",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5a58d57d-f5fc-43a5-8de2-5f2ee2ccd47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4638e15b-70a8-4423-9f58-3472599ae4d7",
        "cursor": {
          "ref": "31915ef1-fb17-4c15-8db2-1b9c6c23a1d8",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2d059a71-1160-4a29-a5fb-b514860795ec"
        },
        "item": {
          "id": "4638e15b-70a8-4423-9f58-3472599ae4d7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3d8db68a-de8b-4e1e-9397-9e7c610e9cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025c0db8-1157-40b0-ba78-f8c564ce976c",
        "cursor": {
          "ref": "6477ed01-fd1f-41fa-9b81-3115e1266853",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a7f54e93-4756-4151-914a-3189e6659e27"
        },
        "item": {
          "id": "025c0db8-1157-40b0-ba78-f8c564ce976c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b6d562cb-7495-40ad-a075-b328bb46024b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 187,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25592487-ec65-4451-9eda-f92521a37aa2",
        "cursor": {
          "ref": "855dbdd1-6cb5-4e32-9f37-a3da24c6ef1a",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7f9bf6f7-099e-4f27-a3e5-b7df2928dd97"
        },
        "item": {
          "id": "25592487-ec65-4451-9eda-f92521a37aa2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0e40f306-e174-428b-8d9b-12ba85744ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ecd00f-72db-4301-8a2a-0dfb095deaeb",
        "cursor": {
          "ref": "aee61610-a962-46eb-989c-f4081b6a95ce",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4166c4f1-23bd-49b7-91a6-43e7ca5fdf5e"
        },
        "item": {
          "id": "05ecd00f-72db-4301-8a2a-0dfb095deaeb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "afa15c1d-f2bd-4a49-9e80-4b83a95738a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af648e1-5dc2-4686-a9e5-b794fda8b64d",
        "cursor": {
          "ref": "a3eb8cec-f032-4a03-96d6-3cc99e5b6b42",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1a4eb947-278a-4400-b215-35318c55a128"
        },
        "item": {
          "id": "2af648e1-5dc2-4686-a9e5-b794fda8b64d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a71b469f-4d5b-4c5f-b53f-7d98f19c97ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74db0355-bac0-449e-b6a7-644f3dd66449",
        "cursor": {
          "ref": "fdfce6be-4697-478d-be98-352b50ba1113",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "011b7e73-219c-4b31-9290-9d3eb0f1e711"
        },
        "item": {
          "id": "74db0355-bac0-449e-b6a7-644f3dd66449",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "aee86c49-8901-4b29-bd00-4da2aee62393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec70fe97-e1d9-4972-806f-20bcd452cf6f",
        "cursor": {
          "ref": "65a15716-bb83-4d51-bc0a-037f29a204df",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f74f6b8c-4d10-4e79-b3ab-a2d1a13c316d"
        },
        "item": {
          "id": "ec70fe97-e1d9-4972-806f-20bcd452cf6f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f18e5406-2f67-4826-b5aa-094d3e546484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290e4e91-dc5f-4828-81f5-fa4621289e8c",
        "cursor": {
          "ref": "2c4465c4-afac-414c-9fe2-70f1b501781b",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "879bf2d2-b59b-40e1-8d4b-5e631f3b75d1"
        },
        "item": {
          "id": "290e4e91-dc5f-4828-81f5-fa4621289e8c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6b181bde-3212-488e-8203-91937f2ddb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69e8d95-3b1d-45f2-90d5-ad7eb358af52",
        "cursor": {
          "ref": "74c59988-c626-4e19-baa3-f6892fab7ddb",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b783058b-9828-4cdd-beff-95979640dc06"
        },
        "item": {
          "id": "f69e8d95-3b1d-45f2-90d5-ad7eb358af52",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c597c702-1613-420c-8b16-9cc3b414d950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d637937e-95a1-4871-a877-dbe4998880cc",
        "cursor": {
          "ref": "038d229b-1482-44e4-b1ed-7c59f81bb8f0",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "caac10bd-766b-4d84-9227-f5e42ce9cb39"
        },
        "item": {
          "id": "d637937e-95a1-4871-a877-dbe4998880cc",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "09c215a6-e8bc-42b6-84a0-f5f68fd609dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29c9c7d-f478-46e0-b045-a9c8d0749045",
        "cursor": {
          "ref": "1a8ee519-b17a-4f01-a8f0-271a4486c467",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e0612228-78a8-4676-bb4f-d9b56e4d00ed"
        },
        "item": {
          "id": "b29c9c7d-f478-46e0-b045-a9c8d0749045",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4c5b7440-9ca3-4902-ae87-7acef0959ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6b387b-46a2-4b3a-8272-c49e8676ee45",
        "cursor": {
          "ref": "733c2caf-d09e-41ef-806c-d9a733ddcbd6",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8be1d956-21f9-47cb-a579-2dc41358e5a0"
        },
        "item": {
          "id": "6b6b387b-46a2-4b3a-8272-c49e8676ee45",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4d0ad8e3-5a18-4d06-9254-03ebff90630d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a879137-e1ff-4329-8374-ff9188c70b56",
        "cursor": {
          "ref": "159dcd48-6551-4d15-a562-49be7c716064",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d04ea753-2595-4c63-b5af-9c80f5efd0a6"
        },
        "item": {
          "id": "5a879137-e1ff-4329-8374-ff9188c70b56",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2de33f2f-0a3d-4560-aaa4-a3251caef2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70452b45-fa36-4f47-b25e-5037927af7a8",
        "cursor": {
          "ref": "a412a244-cf77-4378-8694-065076f0744c",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ad1f0900-5e6c-4e93-ae46-36a4beabb25c"
        },
        "item": {
          "id": "70452b45-fa36-4f47-b25e-5037927af7a8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a194b385-f3c9-42ad-b175-d20d56fa9c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedffeef-6f00-47f6-a1e8-26bdadc72fc7",
        "cursor": {
          "ref": "9cefe0d2-ce32-417c-8634-42d244f3e6ef",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "83c02a4a-b975-4e4e-8d77-5fda8a63050c"
        },
        "item": {
          "id": "cedffeef-6f00-47f6-a1e8-26bdadc72fc7",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ab87866a-0188-4bef-88a6-69442bee8086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809f7153-c8b1-4e44-ad21-f36a39e6f8a3",
        "cursor": {
          "ref": "b60a80df-cd3e-4452-abcd-e1c907d39298",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "23db9d93-0e48-4990-8b71-ba3165ccbb6d"
        },
        "item": {
          "id": "809f7153-c8b1-4e44-ad21-f36a39e6f8a3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "964ebe64-0451-4dd4-b582-5bf499e9a819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e476f102-ea76-4598-a8e0-0a9cccab4385",
        "cursor": {
          "ref": "08933b2b-7499-44ed-a8d1-2fd22e242e05",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f548869d-f87e-451d-80b0-03e283d8bc82"
        },
        "item": {
          "id": "e476f102-ea76-4598-a8e0-0a9cccab4385",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e28d67c3-55bd-484a-8b31-2df4228337cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ca4ee2-fcff-49c7-be8c-21dfd212bef4",
        "cursor": {
          "ref": "d6c92cda-1f0b-47c8-a37b-0743799f630a",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5e52ebe6-85ba-43c6-aced-aa554ae7145f"
        },
        "item": {
          "id": "e4ca4ee2-fcff-49c7-be8c-21dfd212bef4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4e66c9d5-d9a6-4cc3-9377-2ee9fbca656f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439a6eb0-2569-46be-91cb-0891fe61499e",
        "cursor": {
          "ref": "ba6652b3-d556-4166-95d1-49a21751c09c",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4618f08f-1e1d-4822-a54f-0a47011bbd50"
        },
        "item": {
          "id": "439a6eb0-2569-46be-91cb-0891fe61499e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ce1a5dcf-29db-4a2a-9dd5-3e1008b660fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81cc98e-31ce-47b2-9e7a-10f150f9f68f",
        "cursor": {
          "ref": "9d5a4c4d-f6f0-4acc-8f66-92f47767c3f8",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ee1c4773-f6b7-4f5b-8f2c-7151021f27e6"
        },
        "item": {
          "id": "a81cc98e-31ce-47b2-9e7a-10f150f9f68f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3a87fd4c-5728-4f1d-8a06-818ef553f6a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6edae6-adf7-4e94-bac8-5cc45b813b57",
        "cursor": {
          "ref": "99cf84db-ff6f-414a-8a03-472fc19a5f19",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "60fd7ec7-5491-4cff-98ba-e4f076e64447"
        },
        "item": {
          "id": "dd6edae6-adf7-4e94-bac8-5cc45b813b57",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "45de989d-cdb7-4498-9301-d04ce97fc55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b881c72a-094d-4e02-9daa-bde8ccd35e67",
        "cursor": {
          "ref": "cff12a96-12b8-4703-a2fa-44ba1157bdcb",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d759f33d-6742-45dd-bffb-8107ec1ee33b"
        },
        "item": {
          "id": "b881c72a-094d-4e02-9daa-bde8ccd35e67",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4857336d-fa04-4af6-8e78-031c299a2f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5803540c-0210-4144-bc24-b594599e80e3",
        "cursor": {
          "ref": "43e0e924-e39a-4731-a3eb-eae51e7804f1",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "39615527-d519-4aee-ac95-c6ac0f848aca"
        },
        "item": {
          "id": "5803540c-0210-4144-bc24-b594599e80e3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "812dd411-3e69-474a-89b6-8502e48a5ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0dea31a-d32f-46ee-85f0-447e777fc977",
        "cursor": {
          "ref": "5b556e46-ba67-40b3-88ee-1a9c707a7d5b",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "52bbe839-2d74-4b29-b1dc-cbadab1a625b"
        },
        "item": {
          "id": "f0dea31a-d32f-46ee-85f0-447e777fc977",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "aac9f44a-80fa-400c-8c50-957514c752d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab31613-6b75-49a4-aae3-b8ea85be2bfc",
        "cursor": {
          "ref": "e85c237f-68b9-43e9-adfc-949d6e092397",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e4e3713a-d315-4dc9-8f79-9a904c62a8be"
        },
        "item": {
          "id": "3ab31613-6b75-49a4-aae3-b8ea85be2bfc",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f2418f99-f57d-4a41-b3b7-2041ec10633e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eaf128d-30f6-46d6-b136-bfa7060b620c",
        "cursor": {
          "ref": "6c88462e-4cdd-4a52-8688-60411ebf2e6b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d07a13c9-4b73-44ae-8d53-b495a3fadc84"
        },
        "item": {
          "id": "8eaf128d-30f6-46d6-b136-bfa7060b620c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e972047f-f9c7-464c-8c79-2659123619fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b74e20d-a385-4f45-8fff-78f8cde9a5af",
        "cursor": {
          "ref": "fba2f713-2df4-4bfe-ba16-e395c9a9c234",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "74b98be6-4445-4204-b5f2-274c79cece27"
        },
        "item": {
          "id": "1b74e20d-a385-4f45-8fff-78f8cde9a5af",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "fd0e9d47-67ca-416e-a5fc-beb15dbdad8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffc4cc9-a9ce-4124-b69b-221a8c5c11d7",
        "cursor": {
          "ref": "2c841399-c977-474b-9fd7-958c2a67d88a",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "846c4bf6-ce0e-438f-975d-5c8b9dbf02f5"
        },
        "item": {
          "id": "fffc4cc9-a9ce-4124-b69b-221a8c5c11d7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5f3ccbe0-410f-4aab-bebc-be4a235ab2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61187192-4ff4-4217-91c8-2d9a7a28e69a",
        "cursor": {
          "ref": "2c4ddf4a-dbdf-4184-b280-20316e2b98d5",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5198ac23-fb16-4793-80a6-77bc46544388"
        },
        "item": {
          "id": "61187192-4ff4-4217-91c8-2d9a7a28e69a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2fd99308-b345-46aa-8fab-61d1fd09375d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70fc03c2-28b9-41af-9619-4272dc7bc4a7",
        "cursor": {
          "ref": "ec841d31-c120-4140-898a-e48d54eaa5d8",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b2c579f8-ecda-4650-a6d7-7335fc758405"
        },
        "item": {
          "id": "70fc03c2-28b9-41af-9619-4272dc7bc4a7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6de81b40-8824-4b76-ab74-ea9608ed51a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82562be4-4e7f-4ae8-b2c0-10cd0c86bcbe",
        "cursor": {
          "ref": "10e22e43-beef-4a84-804e-587a75ba8508",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "00a350b5-cf00-457b-b7ee-c553e7299e1a"
        },
        "item": {
          "id": "82562be4-4e7f-4ae8-b2c0-10cd0c86bcbe",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c220f36b-4118-42a2-a793-8fdffa2fc99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1c3551-542d-436e-adc1-79c8ce83de01",
        "cursor": {
          "ref": "9aa4dd48-34b0-434a-abc4-15bce221ad3a",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8c427193-70c9-4a83-a3fc-ea40e49adf24"
        },
        "item": {
          "id": "8b1c3551-542d-436e-adc1-79c8ce83de01",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7e6681d9-8131-4ab8-9c5c-0369ee6e174a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e87971-1dab-4187-a106-796c3073b180",
        "cursor": {
          "ref": "cb29a85b-55e9-4653-810b-088bcec0b964",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9ed65d9f-24ff-4585-a3e0-9d5c5722ea5a"
        },
        "item": {
          "id": "b9e87971-1dab-4187-a106-796c3073b180",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e1ceb25a-a973-4520-8e7b-b1e9d16927e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297854ab-b127-43db-b826-5c3064757cb8",
        "cursor": {
          "ref": "bcb7bd5a-7a41-4a19-ac0a-d3b6be104d7a",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a31054c0-b1c0-42e8-b60a-381da8e76139"
        },
        "item": {
          "id": "297854ab-b127-43db-b826-5c3064757cb8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a4e711cc-e276-484f-9c2c-db84adc2c392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf18b69-a36b-4a3f-8bcb-b309cc6ab2fd",
        "cursor": {
          "ref": "dbcd7c34-ce9a-46f8-81d4-f565e256e652",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "322887d5-359b-46b7-b60b-a0fb149bf9ba"
        },
        "item": {
          "id": "4cf18b69-a36b-4a3f-8bcb-b309cc6ab2fd",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "65e72696-340e-40d8-b312-486452b4a80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75eb7c0b-9c13-48a5-b0d8-5645acb3523f",
        "cursor": {
          "ref": "60c8dd48-a74a-4072-a7a5-bf2a8fb3a106",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b5c94c34-5b77-4980-ad88-d1ef647fd614"
        },
        "item": {
          "id": "75eb7c0b-9c13-48a5-b0d8-5645acb3523f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2c3bc7d9-7176-4541-8a34-6eee33be28df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba55b486-817f-40bf-bdeb-f4f8b9f882c1",
        "cursor": {
          "ref": "2104182c-da4f-4a55-b6ca-efeaa4323fa2",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1f9d2715-6e31-4058-a6bc-c812ed1cc5d3"
        },
        "item": {
          "id": "ba55b486-817f-40bf-bdeb-f4f8b9f882c1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1b4fb939-d2fb-41ca-97a2-c46f94e4c5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16beda43-0860-4ca0-b0d7-d68abc920dcf",
        "cursor": {
          "ref": "5c0e110c-a085-43df-9790-b94951fb4b1a",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "746451be-878d-4209-9b1b-3d0954136443"
        },
        "item": {
          "id": "16beda43-0860-4ca0-b0d7-d68abc920dcf",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b7c42542-9864-4ed7-93a2-f0d7c61591cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273ff3a0-67b5-4776-b03f-a355aba0b020",
        "cursor": {
          "ref": "c34494ef-babb-4760-9ccf-02147708bc63",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bd9f44d4-1426-4064-87d1-66203836a46f"
        },
        "item": {
          "id": "273ff3a0-67b5-4776-b03f-a355aba0b020",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b129c9f0-cf0c-42f3-9289-c8dab489a92b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247d7842-fde1-445c-b2c3-200f147b6a44",
        "cursor": {
          "ref": "1294bc96-ab4a-497c-b668-865b0d33fca6",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "14732ea4-f66b-412b-a10e-af1b7bcd9fb0"
        },
        "item": {
          "id": "247d7842-fde1-445c-b2c3-200f147b6a44",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "88e23213-abe2-4217-b93d-59111a7b09c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072af88f-81e8-4956-99cf-fba07a6af233",
        "cursor": {
          "ref": "e3ae62cc-dee3-4557-9a3a-23e75e15f97e",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5ba3040e-aebb-4412-91a2-5c5916c1da11"
        },
        "item": {
          "id": "072af88f-81e8-4956-99cf-fba07a6af233",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8377315e-e892-4299-903d-b7c0abdd4967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea9de3a-31a4-4d0b-aca1-02edb0e99b9d",
        "cursor": {
          "ref": "8f1f0e22-ea87-4ec8-b4f8-2b6328a28a8b",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "251d5b1e-14ce-4ec6-ab92-a586c72ca1d7"
        },
        "item": {
          "id": "bea9de3a-31a4-4d0b-aca1-02edb0e99b9d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1d1c1f64-0a92-4b25-8206-5c3a5276cca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7647bd91-d530-4d69-88cf-665487dcb4eb",
        "cursor": {
          "ref": "c23c5f0d-3cc7-428e-a39a-3e5a2fe05c16",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e3b2a2f7-01fe-4961-a21e-303787659cf2"
        },
        "item": {
          "id": "7647bd91-d530-4d69-88cf-665487dcb4eb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "aecf7ddb-ab69-40e2-885f-4f1ddda00995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cf73a3-77a2-463d-aeb9-00dc0fffb62d",
        "cursor": {
          "ref": "49e28e0d-a360-4f08-9e6e-050e10aa4efa",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ba10d469-7b74-4579-b316-ad8fe5d7a226"
        },
        "item": {
          "id": "70cf73a3-77a2-463d-aeb9-00dc0fffb62d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "42a91f49-ecba-4ec8-b3db-df50ab9afbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8e8007-cce6-4fc8-8b12-8286ddc2b1b4",
        "cursor": {
          "ref": "73e10ba3-73e2-4296-aa48-7b615656d368",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "41f89aae-2858-4abf-b6bc-f8ad7595d170"
        },
        "item": {
          "id": "2e8e8007-cce6-4fc8-8b12-8286ddc2b1b4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d451b682-5a5d-4041-a513-d714b18ba787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311330ad-118b-4d56-8b1b-1ee2e8b58397",
        "cursor": {
          "ref": "def1222e-012e-4945-a57a-6a93184342a3",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "dfa31768-ee7e-405e-8d0d-1495326d3dce"
        },
        "item": {
          "id": "311330ad-118b-4d56-8b1b-1ee2e8b58397",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9144b8a1-2ddf-4fd1-9e5d-f0f0c249cbfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00629410-5241-46cb-a217-ec07a1406cc9",
        "cursor": {
          "ref": "afac3db1-2dc4-4686-b1e2-d777c90a1471",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "dbeda930-4af7-4c8e-82f0-465769283690"
        },
        "item": {
          "id": "00629410-5241-46cb-a217-ec07a1406cc9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2f0e0c3d-c34f-4c9f-8f14-d08510428318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c65c2b-6044-41c4-ba61-7bf2a620e6af",
        "cursor": {
          "ref": "4ed935c3-3416-42dc-aa3f-4c867b848d1f",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "09c0432d-80e4-4b48-be7c-ec6f45e44e03"
        },
        "item": {
          "id": "a5c65c2b-6044-41c4-ba61-7bf2a620e6af",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d1930fac-9b59-4547-9333-0bf02b40ee47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c259423b-bd98-4008-ad79-128ea20ae47e",
        "cursor": {
          "ref": "3c81a6fe-ae97-4172-b976-5272c426415b",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b161db17-0e34-4b66-8d60-614645dd62c5"
        },
        "item": {
          "id": "c259423b-bd98-4008-ad79-128ea20ae47e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "dad683d5-5b79-4a5c-8290-a2ac9a261ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd28379f-1af0-420d-8410-3ead81614d8b",
        "cursor": {
          "ref": "8b4d396b-2a71-4d65-94ab-862e7a0c0696",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "cadfb046-79bc-41f1-b39a-c212ff5f5c64"
        },
        "item": {
          "id": "cd28379f-1af0-420d-8410-3ead81614d8b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7a4efd0a-a2a7-4abb-9ff8-75849a9ad73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f85ee3-01cb-4417-9a08-4d8430f14b94",
        "cursor": {
          "ref": "b358e233-66ff-4e3b-bc2f-7704a917a834",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "02493fe7-35b3-435e-a8db-63ad8aa0517a"
        },
        "item": {
          "id": "c7f85ee3-01cb-4417-9a08-4d8430f14b94",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "940ddfdb-7bad-47bc-a1c2-d36e755e0064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4443f85-1063-466f-960e-1445f4869bfb",
        "cursor": {
          "ref": "e070f065-1ee4-4de8-9cbb-45f029a5ff69",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bacfb8c3-3256-488f-ad23-03aeb8258077"
        },
        "item": {
          "id": "c4443f85-1063-466f-960e-1445f4869bfb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fb8f054c-cc67-43b5-abd0-906a3392a8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f486adca-7081-4510-a815-a15eb363e6fe",
        "cursor": {
          "ref": "29593126-3005-4b8f-88ef-0ce4cb7e5562",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fae617db-0ed6-47fd-a661-d0c1b92111fe"
        },
        "item": {
          "id": "f486adca-7081-4510-a815-a15eb363e6fe",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b0ab3c54-467f-4a96-acda-934a132a303d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9070bd-9384-4d4c-8235-f02cab4712ce",
        "cursor": {
          "ref": "5350b13f-5503-44ac-9f6c-9f54520b6601",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4212ad2d-a840-4af3-a2ec-f4484e8c869c"
        },
        "item": {
          "id": "9c9070bd-9384-4d4c-8235-f02cab4712ce",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3a6c3e78-ea5c-4d6a-ac4e-2efe646976ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180f1c5e-c8fa-414f-ba9e-563d62e98b1b",
        "cursor": {
          "ref": "3fb73ba4-31eb-4d73-bd86-2abcf4cf89b9",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "793c6da5-048c-4e78-b74a-382f8f298b0a"
        },
        "item": {
          "id": "180f1c5e-c8fa-414f-ba9e-563d62e98b1b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "25c36821-2633-469b-8dbd-40271c66e4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75e942e-f824-4684-94e9-d00483ee344c",
        "cursor": {
          "ref": "5ce27d2a-b510-42dc-a47f-743074d81e68",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2298890e-c2e3-4122-b0d9-ac19462c1cc7"
        },
        "item": {
          "id": "b75e942e-f824-4684-94e9-d00483ee344c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e0e893ba-0938-4c31-9b71-5a80ebb04a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be169b8-aa3a-457e-b26e-09ac13b15672",
        "cursor": {
          "ref": "de4b9389-dec2-4321-b269-915730d993ea",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a5c4459e-2a98-4e24-96b9-f0f477c331b6"
        },
        "item": {
          "id": "6be169b8-aa3a-457e-b26e-09ac13b15672",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3611c822-05f3-419f-b2ec-63dd75d3fe0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c39b7ba-3f8a-441c-bfd8-70bb9f06f84e",
        "cursor": {
          "ref": "81e44dec-7487-4f8c-98cc-d4d3effce96b",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "474ac317-6b9a-48d0-9783-a41c3542cbac"
        },
        "item": {
          "id": "7c39b7ba-3f8a-441c-bfd8-70bb9f06f84e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ffca11ed-c521-4ad4-8331-87c7f8157eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ee6183-0247-4712-a945-3b2723cac812",
        "cursor": {
          "ref": "ce6e3aa3-c0f5-4d2a-ba24-55585b35944b",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "54b3930c-e068-4de9-985e-388f0c041881"
        },
        "item": {
          "id": "f0ee6183-0247-4712-a945-3b2723cac812",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "08c6b3c0-91b8-4551-b69b-e8653d6855b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfec1857-e5a8-45c9-bd6b-5340ed436fb3",
        "cursor": {
          "ref": "fb22dc52-097a-4428-b7cb-7169f1f8a87a",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "650d78b6-08ff-4aa2-9b1a-60a743dceba8"
        },
        "item": {
          "id": "dfec1857-e5a8-45c9-bd6b-5340ed436fb3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "cb85f75f-3744-4403-b223-b6d0d21d2262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addcfa6b-f9f1-4c76-aab8-dd4044f6a2ac",
        "cursor": {
          "ref": "39a4e1eb-4903-4238-b9b1-0a82a683cfc5",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4b8dedb5-24cc-4363-a6f7-8e6ddb8e7093"
        },
        "item": {
          "id": "addcfa6b-f9f1-4c76-aab8-dd4044f6a2ac",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4885f917-c426-4866-90d4-a7766997b5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a1f9b1-ff0a-48be-bc6d-18d060906d21",
        "cursor": {
          "ref": "b6ab091f-d299-4f59-8fbd-588ec341adfc",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f8f02527-c106-458f-83ae-0f99e0ed21dc"
        },
        "item": {
          "id": "97a1f9b1-ff0a-48be-bc6d-18d060906d21",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4da6642f-2b38-41e2-834d-52d238e2e1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d6f84d-080b-4280-88ee-a5cd5ba96280",
        "cursor": {
          "ref": "4c185125-d191-4dcf-bef0-81dbc8d530e6",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "14859f8b-40a3-439a-8434-f5eb96aa6258"
        },
        "item": {
          "id": "f6d6f84d-080b-4280-88ee-a5cd5ba96280",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "949de7e9-d31f-4661-bf73-f62dae51d73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61acbd2f-6bc7-4172-b22e-cea885620cdb",
        "cursor": {
          "ref": "d393a204-a5f8-41d9-b2ec-f301eb6dbaba",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6dfac00d-b116-486c-b640-16926f1efe3c"
        },
        "item": {
          "id": "61acbd2f-6bc7-4172-b22e-cea885620cdb",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0a1f944e-5a25-43b2-890c-cc38102479e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e536cb0f-1d65-4deb-ac0a-f92fa25f2135",
        "cursor": {
          "ref": "96f4260b-5f5e-48d2-b4ae-c0701b54fcd8",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d3b4efcd-689f-4a46-a704-b92a7bd7ae6a"
        },
        "item": {
          "id": "e536cb0f-1d65-4deb-ac0a-f92fa25f2135",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2088c644-f355-4ecd-9e3d-5c4e7c49571a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1de3197-0812-4f1d-aafd-d9b0d1f51245",
        "cursor": {
          "ref": "d7947f4b-dfbc-4997-8600-a99f66e300b6",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ea951460-e491-477d-8631-2c1a5bccb3bf"
        },
        "item": {
          "id": "f1de3197-0812-4f1d-aafd-d9b0d1f51245",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d2667c43-6875-439d-87d6-0c49d123b832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f86bc4-0feb-461e-89a0-939b7a83067f",
        "cursor": {
          "ref": "8d69e095-bf62-43f1-a9c3-682c29c9fbcf",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3ed54e45-bf67-4ddc-878f-e1eaacabcf0b"
        },
        "item": {
          "id": "d4f86bc4-0feb-461e-89a0-939b7a83067f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "eb180409-312a-49c8-9ae8-47c13fcdd506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d33241f-b883-46f6-b67c-ab4f03463079",
        "cursor": {
          "ref": "62b1e151-efcc-4a7b-9803-fe364a42bf9a",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f5042bfb-53fb-47b2-ae2d-6a3cc6db9d7d"
        },
        "item": {
          "id": "2d33241f-b883-46f6-b67c-ab4f03463079",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "df634e9f-1588-4bdd-b320-e07f54eb4211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b5fcab-cbab-47b0-8c3b-82a156925127",
        "cursor": {
          "ref": "f812690f-7047-46cc-8c58-07126d06b079",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0758f8d3-fd04-4864-986d-a33d2d6a57aa"
        },
        "item": {
          "id": "44b5fcab-cbab-47b0-8c3b-82a156925127",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "83b92936-0d31-49b8-82c6-0ce50d106660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96aa2e52-857a-4285-a033-5e90967790f8",
        "cursor": {
          "ref": "62c9b6ed-f3ec-40d4-ae3e-0c77376323a3",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9fceeb00-03e4-4971-9c1c-c6434ee7514e"
        },
        "item": {
          "id": "96aa2e52-857a-4285-a033-5e90967790f8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "85a3012e-a0b0-4854-936a-2b901de1ec4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693c1ea4-fb7f-414d-a212-308ab7c2ac51",
        "cursor": {
          "ref": "45d8b166-db2c-4c6f-8c66-f2bb035fa8a7",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "bb7853ea-0cf7-4ab0-b4e0-1473aaf70795"
        },
        "item": {
          "id": "693c1ea4-fb7f-414d-a212-308ab7c2ac51",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1ae3df54-3d92-4865-8abc-fd1d893e8c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2167199-6fcc-4ba4-b2d3-a9e3db4b9d2a",
        "cursor": {
          "ref": "5fec0016-d04e-4821-b381-70beeff748f9",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f1f12f28-7ccd-471e-9d7b-37856eeda925"
        },
        "item": {
          "id": "f2167199-6fcc-4ba4-b2d3-a9e3db4b9d2a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b5bf6eab-92bc-4fa9-aa67-ca974a489859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc61ee1a-8178-4b0e-bd09-62a2ac091588",
        "cursor": {
          "ref": "1310a1ec-5a3b-4a1c-a872-97185ca2a667",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8bd7797b-d855-4bc8-9924-2398ec8d3747"
        },
        "item": {
          "id": "fc61ee1a-8178-4b0e-bd09-62a2ac091588",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ca185f99-a57e-429b-8496-b1a08bf6d8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47235705-7d22-4fad-9b70-653910657ff6",
        "cursor": {
          "ref": "610db152-e163-4bb2-9706-5d02f3560630",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0f152fa6-a993-4081-89f1-d6dac62ef1f8"
        },
        "item": {
          "id": "47235705-7d22-4fad-9b70-653910657ff6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cc74cb20-049b-4ee8-b5ae-879c28e3acf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edbfdd7-70d3-4151-b715-1256369f2d36",
        "cursor": {
          "ref": "3619dddf-f8ef-4e12-a1a0-d56483cd91f8",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "932e031e-9d5a-42a9-907a-c776a6665be5"
        },
        "item": {
          "id": "4edbfdd7-70d3-4151-b715-1256369f2d36",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b25cea6d-406d-4c01-8b5a-f5d6895f9f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf10b064-f2bf-4e5b-95c8-3ee7cb5347b0",
        "cursor": {
          "ref": "c2b69eb9-7cda-4263-832f-19bc572d2022",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "dd2c7a37-dbbb-4a6a-a9df-dd7202e43d94"
        },
        "item": {
          "id": "bf10b064-f2bf-4e5b-95c8-3ee7cb5347b0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e44b79ae-9df1-422c-a3ad-341a09a4ec31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a15b09-a340-4aac-9be4-df47a52ba062",
        "cursor": {
          "ref": "61cdff3d-9f7d-49a2-9d7c-474dd44112c0",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f22ceda6-aab9-49a1-bd55-5cf9ad727465"
        },
        "item": {
          "id": "51a15b09-a340-4aac-9be4-df47a52ba062",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "85eb2612-59bc-458b-9c8e-4217f818107a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc70030-606a-4b0f-86c0-eeff05cce358",
        "cursor": {
          "ref": "08a01027-c2e5-4339-bb54-2722b2de26aa",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d77e471b-b588-41d7-9a79-6844a88c068e"
        },
        "item": {
          "id": "ccc70030-606a-4b0f-86c0-eeff05cce358",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4ad0a108-d642-4795-af42-19b05fc10748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "476888a4-443c-4235-b990-018f832792c6",
        "cursor": {
          "ref": "bb27255c-674e-413b-bfcb-ac28afe6f219",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8538b36b-f268-49e4-b145-2e2a0a51054f"
        },
        "item": {
          "id": "476888a4-443c-4235-b990-018f832792c6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "23b32f2d-a5d2-40cf-8a3d-77050d404caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d1843e62-3542-4412-b53c-b46d30cc52ed",
        "cursor": {
          "ref": "785acfd3-4466-4477-be4a-e2d47eae22f7",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cd5201e9-8334-4cb0-8a29-7d8d3295e967"
        },
        "item": {
          "id": "d1843e62-3542-4412-b53c-b46d30cc52ed",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a26e1bd2-896d-4083-a973-876fc5e80d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c55e7982-6d88-4cef-a6f1-33105d2654a0",
        "cursor": {
          "ref": "cdb88ae3-a0e4-4048-85cc-056611a66e6b",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7d2b5a7a-be94-476e-860d-2f4fbf1fd17a"
        },
        "item": {
          "id": "c55e7982-6d88-4cef-a6f1-33105d2654a0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "991190db-5c5b-4048-a8b0-66c5938d5a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "e64de434-ae01-4d06-8ebd-e6323204ebdf",
        "cursor": {
          "ref": "44f00b5c-0ad2-4767-8dba-7401d022008e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "384227c0-e31a-4583-b617-0d5539609f3c"
        },
        "item": {
          "id": "e64de434-ae01-4d06-8ebd-e6323204ebdf",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c16cd44c-6e47-46a0-b013-2359a0aba9a3",
          "status": "Created",
          "code": 201,
          "responseTime": 10193,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91f20ab-0e03-4052-a089-2f97e08f56db",
        "cursor": {
          "ref": "2f9662a0-ef9e-4e12-97fe-a71aade7e3b6",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e378ecb2-086e-4935-a5fa-3dade34be391"
        },
        "item": {
          "id": "d91f20ab-0e03-4052-a089-2f97e08f56db",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7a8966f9-4e96-4c27-8df3-134303cb9a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "9dd2d33f-ed07-4b84-b491-c98bd414d8ff",
        "cursor": {
          "ref": "1212c18e-da8c-4550-abae-c5aae57e70c6",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "bfeb6cbc-f08b-49df-a579-9aa350c69902"
        },
        "item": {
          "id": "9dd2d33f-ed07-4b84-b491-c98bd414d8ff",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e7731966-fdb5-4315-8537-b466276a740a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "f6260535-2d93-47a0-8682-c75aa668fe5d",
        "cursor": {
          "ref": "278c3894-e4b8-404b-9226-c6a4f2772ff2",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9e4cbcd2-06cc-4aab-b132-7a7176c248bf"
        },
        "item": {
          "id": "f6260535-2d93-47a0-8682-c75aa668fe5d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "973af0b7-8c3e-4d6b-b1ac-b5d13784c595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0a9e75-a213-4e93-b0dc-16730a8bdae6",
        "cursor": {
          "ref": "0b082323-874f-4815-9ffa-bf31b40d4f58",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b6aa2afa-a101-45eb-af59-6059969a57de"
        },
        "item": {
          "id": "5c0a9e75-a213-4e93-b0dc-16730a8bdae6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b6c63e3f-4866-4f59-8b08-73ab6405d323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f617c15-44e8-4557-83ae-4cebfac029d2",
        "cursor": {
          "ref": "87a3c477-9aa2-45eb-940e-33c5eaf13980",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2c9a0c4a-2604-4979-ba8f-0d5bfb6e9cbb"
        },
        "item": {
          "id": "6f617c15-44e8-4557-83ae-4cebfac029d2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bf51acdc-1f06-4ffc-9a0f-12a06eb0f8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0711bb8-2198-4d7a-9533-cc67888153ba",
        "cursor": {
          "ref": "78fab8fd-ea1b-46d0-9377-c5367d7ece94",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9b87a609-d6ca-413d-b712-9d98e6d54d6d"
        },
        "item": {
          "id": "e0711bb8-2198-4d7a-9533-cc67888153ba",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7c2f87d0-7a1d-431e-a87a-13f45ac213b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff06f64-325d-408c-bda1-fb5e79f488bb",
        "cursor": {
          "ref": "8100203a-06cd-4ce4-ab19-caffe629900f",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "87868643-0060-4ae7-97c1-d48d831ff6d9"
        },
        "item": {
          "id": "fff06f64-325d-408c-bda1-fb5e79f488bb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "89429adf-43a7-4026-9d4e-fc7dd8e9c9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eedfc4d7-6f60-4cae-9101-5e867be8cdc0",
        "cursor": {
          "ref": "fc251915-3547-4de7-af81-4e7a25d82f1f",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "dd74d128-083d-4521-93ea-2e49cef4981c"
        },
        "item": {
          "id": "eedfc4d7-6f60-4cae-9101-5e867be8cdc0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4ba43db1-fbed-495e-b7b1-260cdf252d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c258d777-efce-47af-aa71-710ac3650f75",
        "cursor": {
          "ref": "ff3209ed-ac30-4306-80d6-18f85edf808c",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c92184cd-f0e8-4eb2-ac9c-1f6ba34e3732"
        },
        "item": {
          "id": "c258d777-efce-47af-aa71-710ac3650f75",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7d49a2c2-8f74-4762-b33d-b57b96798d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6031416a-f9c1-4ec1-a3a7-13ada95e387f",
        "cursor": {
          "ref": "ea9b7a2f-2946-4913-b78a-50ad6627203c",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3245fbdc-f791-4c27-afb4-f317292a4823"
        },
        "item": {
          "id": "6031416a-f9c1-4ec1-a3a7-13ada95e387f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b71de58b-ea28-4b0a-832e-e139b1808cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961bba9f-33ff-4e44-af02-365e473dd1c6",
        "cursor": {
          "ref": "75f0efe8-999b-47a5-842b-5706b1957c46",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a069751e-91e2-456f-b7a1-ec1fad0f8eea"
        },
        "item": {
          "id": "961bba9f-33ff-4e44-af02-365e473dd1c6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ea50b9fa-60ee-40c3-883d-51377063cd88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6279844a-43a3-4b7e-80a4-37c2fd9bd8b2",
        "cursor": {
          "ref": "41d5fd65-ea7b-462c-a938-5a801e05a940",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "656cdc2a-5842-4efd-bb89-8a98b1ca1da4"
        },
        "item": {
          "id": "6279844a-43a3-4b7e-80a4-37c2fd9bd8b2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2f3d2f4d-a136-4f6c-b53f-04cc58b08d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45bd262a-bef0-472d-9c59-2f0fa397d5fa",
        "cursor": {
          "ref": "cf8d5688-f9c6-4e1b-89ba-52e6a690b44b",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1294af3f-eec9-4726-b688-9c49f5e19aaf"
        },
        "item": {
          "id": "45bd262a-bef0-472d-9c59-2f0fa397d5fa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f04fd05d-dc09-4a16-940d-db687f79637b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa039b7b-a55c-40a8-b051-d2bcb81f4a6e",
        "cursor": {
          "ref": "7c5cb8bf-c7fb-4c6f-9024-4182cdbb9ffd",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1b4ec2f2-8248-42c8-84e0-b003362a4f6c"
        },
        "item": {
          "id": "fa039b7b-a55c-40a8-b051-d2bcb81f4a6e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "04fd4c35-02ca-4b68-bb42-623dea5e688c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6093b1-815c-4bf9-bd81-a361c111976c",
        "cursor": {
          "ref": "68f78bba-7308-4d28-b355-6efb2968edb9",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2b0d3c38-718e-4e7b-af5b-05247ee5cdb0"
        },
        "item": {
          "id": "ee6093b1-815c-4bf9-bd81-a361c111976c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d70a375a-c014-42e2-8ac8-c21999ecdbb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a733e0f-7c22-4c83-8ec2-ee4a69d6348e",
        "cursor": {
          "ref": "c9e3fbc5-4bd0-419b-b798-67c2514859e8",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9456b05c-8618-4502-a612-0f981d88e8c8"
        },
        "item": {
          "id": "8a733e0f-7c22-4c83-8ec2-ee4a69d6348e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "42c85fe0-ef78-4dd5-9110-dbea94ba3a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5fed92-d676-461f-b7ec-9acc0cd0ca2b",
        "cursor": {
          "ref": "f86e4591-ca54-4e47-a8a8-5556382e3cca",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e3e00db4-ac56-484f-bcaf-6691a65da62f"
        },
        "item": {
          "id": "0a5fed92-d676-461f-b7ec-9acc0cd0ca2b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6d92352b-089b-488b-ad33-e68abadd612d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af54544-9b19-4cae-96e7-cad880cd7941",
        "cursor": {
          "ref": "15ef3d5e-9987-4541-a2ef-f8b403c1d970",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8feb98a2-c2ae-45d0-b797-71b53550be77"
        },
        "item": {
          "id": "7af54544-9b19-4cae-96e7-cad880cd7941",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3e89f88e-3235-48cd-adfb-de335a3e1da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f558e61f-0b77-4c5f-89e2-2a8097552ba5",
        "cursor": {
          "ref": "ea0b767f-5e47-49d2-99da-9334cd28c4f9",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d368c01f-781a-440d-908e-2072357b81fb"
        },
        "item": {
          "id": "f558e61f-0b77-4c5f-89e2-2a8097552ba5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cbb3567b-dd13-4a81-85d2-3d2132eae77f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 22,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "ac4af18d-3cee-4961-a2e6-07d11ba47226",
        "cursor": {
          "ref": "88a27101-da6c-4c59-82f3-d299d44b5d0f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6ff71afb-c6a9-441c-aef9-25242e437a24"
        },
        "item": {
          "id": "ac4af18d-3cee-4961-a2e6-07d11ba47226",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fc8f8caf-f951-4c8b-ba9b-972c520b2436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbc772c-8888-4cb3-8a25-ca736f733d43",
        "cursor": {
          "ref": "5954b432-13d3-4890-bcf0-e7c99605f589",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "653c393f-8fc6-40bb-928f-489dd372f4a1"
        },
        "item": {
          "id": "2bbc772c-8888-4cb3-8a25-ca736f733d43",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "587503b7-b55c-4f8a-9cfa-db3760cfc390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79bb320d-3d9f-47e6-892f-2d7281895805",
        "cursor": {
          "ref": "a568d88e-47df-44f6-8418-e7c3a20409b2",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b09017c4-a3bf-4b43-96d9-316e5edf031a"
        },
        "item": {
          "id": "79bb320d-3d9f-47e6-892f-2d7281895805",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ca9c811c-d8f6-43f3-94f6-834a0f2fb0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a76cda-2279-4390-92c4-7fa0fd3f1a24",
        "cursor": {
          "ref": "97b06d6b-46d6-4a63-a456-61b941963c9e",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ed668bc5-421d-42f8-bde6-77f776d2904f"
        },
        "item": {
          "id": "63a76cda-2279-4390-92c4-7fa0fd3f1a24",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dd029cf5-ab4d-4850-bfcb-b502597c8fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06029178-1a82-475a-939a-c73f2701e9a9",
        "cursor": {
          "ref": "20f86636-8a0c-4cda-b678-d15e445acaae",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b60f8c73-3895-4a91-8fa2-48cb0bbc6443"
        },
        "item": {
          "id": "06029178-1a82-475a-939a-c73f2701e9a9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "745385e7-3dff-42ad-b2ad-929845cc3e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c33d523-c56b-481a-b370-faceda6471d9",
        "cursor": {
          "ref": "b2916d71-3a4e-4e64-a2ab-7b6d28ccb2d8",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "12800cb4-ceff-486f-ba2e-5230e3b90072"
        },
        "item": {
          "id": "4c33d523-c56b-481a-b370-faceda6471d9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e4540748-9a25-44e4-ba75-8d9291f1a533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a70490-304f-48c9-8b0f-5c4e0a4ccb5c",
        "cursor": {
          "ref": "f0135fcd-3ea1-46ec-b7da-8d491d0d2bec",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a26eccf3-d4ee-45c7-a981-a242cf7f1bb7"
        },
        "item": {
          "id": "b6a70490-304f-48c9-8b0f-5c4e0a4ccb5c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1acd4094-314e-44dc-b467-15319caebecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e2b06e-5649-4425-bb71-a5a1843ae7ff",
        "cursor": {
          "ref": "cb0ceec1-b4ed-4358-bb28-da044140084b",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b541344c-35b3-4900-9ec2-2292c43b864b"
        },
        "item": {
          "id": "c9e2b06e-5649-4425-bb71-a5a1843ae7ff",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7f55f38d-2cd6-4a6c-83ea-6eb89d474bac",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 53,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "40ee08fd-ee87-41b1-899e-4744dc664920",
        "cursor": {
          "ref": "113fa4a9-a1f4-4672-81e9-67b67f00176c",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3cd7ba37-e148-4bca-a929-0e676d8934eb"
        },
        "item": {
          "id": "40ee08fd-ee87-41b1-899e-4744dc664920",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ec0696c1-a0c2-4c66-8d50-adf969c2bdda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbea91a-cd5f-4fd4-bf97-8d99e8d8b89b",
        "cursor": {
          "ref": "5987c177-7a65-455f-9c1c-658746c06926",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "43b01215-a2f8-486e-a1d0-4df3919a1c31"
        },
        "item": {
          "id": "8fbea91a-cd5f-4fd4-bf97-8d99e8d8b89b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6245c449-5f84-465c-a5cd-541aecbfe339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2142b6-4e1a-4b46-8058-2dd4ae023e74",
        "cursor": {
          "ref": "885161b4-e18d-473e-9e83-3d3ac7eb1174",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "988bce08-85c7-4254-8eb0-f8d928d57d87"
        },
        "item": {
          "id": "ce2142b6-4e1a-4b46-8058-2dd4ae023e74",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c7aa7c6f-08b8-42e2-9c24-b71527d0321a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30be83c6-d997-4775-9b09-6510b230272f",
        "cursor": {
          "ref": "fb8c9855-1243-4146-bceb-55d6db5628b6",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b4a2e9f1-f5e4-4b08-9e70-496a027f60ba"
        },
        "item": {
          "id": "30be83c6-d997-4775-9b09-6510b230272f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2ea698a3-c29d-4bbd-b155-4873838f4c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6212194a-cbb0-4812-a3ce-243c7fc98142",
        "cursor": {
          "ref": "2a0d73b2-2862-4a1e-b125-0edaa3fa1cee",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "82dfc3cf-c078-4a32-8661-7c901aec0a09"
        },
        "item": {
          "id": "6212194a-cbb0-4812-a3ce-243c7fc98142",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6188fe4b-4b3e-48d4-8140-271fdce29086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20769f2-ce89-491b-80f9-74e0a6d67cae",
        "cursor": {
          "ref": "3b66d50c-0c66-443e-81bc-7b942f5a712f",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d6079694-0aa6-4923-b4db-ce7abe67d6e0"
        },
        "item": {
          "id": "e20769f2-ce89-491b-80f9-74e0a6d67cae",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8063f748-97cd-4629-8890-ec5ea8978b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4235edfd-1dc6-40a1-b051-7ef2c0b1a675",
        "cursor": {
          "ref": "93bb35dc-6959-4451-b478-806004836182",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "286fa50d-66e0-49c6-9740-154aac3bd252"
        },
        "item": {
          "id": "4235edfd-1dc6-40a1-b051-7ef2c0b1a675",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e08b2689-ea2b-4963-9061-afd9a43b1159",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 78,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "0f7039f7-5667-4ac2-87ba-d6876d96cfa8",
        "cursor": {
          "ref": "d1a44178-0347-4027-bce7-01f4f22f0650",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0980909e-0238-4ef2-a943-b8f388b42150"
        },
        "item": {
          "id": "0f7039f7-5667-4ac2-87ba-d6876d96cfa8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1d3ce73e-4510-4887-9fe7-3459417e6ebf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "7e0347bf-2d93-43fd-b3bf-1a9612ecafe5",
        "cursor": {
          "ref": "1a545a20-0fda-4d31-8e79-370603234f73",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "03c6d0fb-afe8-400d-9090-ef08ae448975"
        },
        "item": {
          "id": "7e0347bf-2d93-43fd-b3bf-1a9612ecafe5",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9f007374-3410-4eb5-b955-70bf1f82179c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "4f00fb9c-ca80-44ce-b53c-9c7f28161140",
        "cursor": {
          "ref": "8b581763-007d-4859-9fc2-b40324413492",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a3851ae0-d666-4260-b1be-e04fe2fad119"
        },
        "item": {
          "id": "4f00fb9c-ca80-44ce-b53c-9c7f28161140",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "242effed-acf2-416c-a7f6-3887041c3ba1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 50,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "e55d8470-558b-402a-88b0-ed99530dcf46",
        "cursor": {
          "ref": "3072fa77-2eab-4cd7-a319-7430320d7398",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ec4e5fe2-b88e-42eb-98d9-a1b5b4a0d36a"
        },
        "item": {
          "id": "e55d8470-558b-402a-88b0-ed99530dcf46",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3bb5093b-64ed-48d6-9851-eb321daefa66",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "21fceeba-f05a-4b7d-99a9-c0342bfe3fbb",
        "cursor": {
          "ref": "3426b034-c36e-413b-8c61-13ac8864d52d",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4773e197-04ba-4485-8c41-e164fb64ebd9"
        },
        "item": {
          "id": "21fceeba-f05a-4b7d-99a9-c0342bfe3fbb",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b729f43d-cf51-4438-8a68-eaa1b1e1c495",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 75,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "d32fd104-4619-4e81-bbc1-8fc185d6ae2f",
        "cursor": {
          "ref": "aaafad0c-8818-4071-9755-7172e7519085",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "acce426b-c2d5-4150-850b-28fc35964ba7"
        },
        "item": {
          "id": "d32fd104-4619-4e81-bbc1-8fc185d6ae2f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9f37e329-1cd2-4826-9333-0c2eee748fa9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca4e481-bd88-4b37-87b9-5d427f193751",
        "cursor": {
          "ref": "45481c61-cc72-4ffc-9357-aef21c3358d6",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ce4d2b8d-f692-4ac5-85c8-a35542e323f0"
        },
        "item": {
          "id": "cca4e481-bd88-4b37-87b9-5d427f193751",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "939acb4f-d40a-4709-a274-eaa468fb401b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d76019a-ab9a-4bc6-a8e3-e841a0b50653",
        "cursor": {
          "ref": "17fd25e7-5432-4701-86f7-9c3e45c965b8",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4d482232-ab22-4a53-ba6c-b39354559060"
        },
        "item": {
          "id": "6d76019a-ab9a-4bc6-a8e3-e841a0b50653",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "bd0dd7ce-c3a5-4a69-b0a9-31f934af1d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9013fb8a-fa8e-40f1-b152-23abcc705f02",
        "cursor": {
          "ref": "c7276940-b67f-4e01-adc2-a65708909747",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "77680228-6a3e-4834-886e-467fea37db03"
        },
        "item": {
          "id": "9013fb8a-fa8e-40f1-b152-23abcc705f02",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "374bad8f-8c73-4935-932c-58a01e01bbfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1ef055-8bd2-4be9-817b-debe2d14e284",
        "cursor": {
          "ref": "13c66291-8acc-4f67-8fff-c11dcd608f5e",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "62162269-92af-4c71-823a-486d660d34cf"
        },
        "item": {
          "id": "5c1ef055-8bd2-4be9-817b-debe2d14e284",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a88d3668-a1a5-488e-ac7e-5355ed4867a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6903e478-4ee6-4d5e-b32b-159e6d018cfd",
        "cursor": {
          "ref": "eb586650-596c-440e-aab5-d8c5a0a82f59",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9352029a-5256-408c-b113-e46f979fd510"
        },
        "item": {
          "id": "6903e478-4ee6-4d5e-b32b-159e6d018cfd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6d4f0323-749e-4e8f-b199-21b7d830a218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4460831d-abd8-45f8-839d-c63c00931279",
        "cursor": {
          "ref": "58ead63f-c5c1-4a33-82f3-875b4c2b37ef",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f039bc20-532e-4051-a00d-0d0217fa5fab"
        },
        "item": {
          "id": "4460831d-abd8-45f8-839d-c63c00931279",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "39a490f7-58f7-4131-9532-ee385a904a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e79ade-cb38-4c06-9982-d9ba1a0ecb49",
        "cursor": {
          "ref": "241dc33c-b2ad-4131-bafc-6670990a1ef8",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e0263922-b77e-43de-9d49-d83f0c0bfc3a"
        },
        "item": {
          "id": "b0e79ade-cb38-4c06-9982-d9ba1a0ecb49",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1542ed4b-6f5e-4cd6-bd8e-eaa930534058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15271d5-174f-4572-9a58-9a39d47188ac",
        "cursor": {
          "ref": "67f678f1-fa58-4f27-aaa6-b39b773cde04",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e35fdb4b-e93c-4297-bc9f-3bbcdc395ad5"
        },
        "item": {
          "id": "b15271d5-174f-4572-9a58-9a39d47188ac",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e607537d-9be2-42d2-bb67-bee8330b270d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565e420a-38cf-46da-ae2b-3ddaf636c14e",
        "cursor": {
          "ref": "52b553a3-314f-495e-97ba-9fdd8968b90c",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f9c943ba-462d-4a0d-b448-c08e32e3b4d0"
        },
        "item": {
          "id": "565e420a-38cf-46da-ae2b-3ddaf636c14e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9eaf2094-334d-45fa-a485-3c9dfa55a71a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea22608f-c18f-47ec-b1da-88dcc7f09e14",
        "cursor": {
          "ref": "17fa3e3a-0671-4555-8ef2-0d9cb9c4965e",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "33e39dd1-51d5-4667-8eb6-1e30355cac44"
        },
        "item": {
          "id": "ea22608f-c18f-47ec-b1da-88dcc7f09e14",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e4b18352-2ef3-4194-a4a7-86d46202b2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c492168-6811-48af-90ad-f3b9dc79b9db",
        "cursor": {
          "ref": "9760805d-c105-4523-b4e9-a2c4fedef323",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "175ba884-f127-4fed-846f-ccda67af51aa"
        },
        "item": {
          "id": "8c492168-6811-48af-90ad-f3b9dc79b9db",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "be7c9906-8e78-4b6e-866d-aefb0731560b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ccd9f4c-2bb9-4b1a-8ed4-749450afc8eb",
        "cursor": {
          "ref": "6a7b6afe-cda6-4f3b-bfe1-fb89d9c56987",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "385ce17c-7716-47b9-92be-b4c7eb82a2c4"
        },
        "item": {
          "id": "7ccd9f4c-2bb9-4b1a-8ed4-749450afc8eb",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0982233a-75be-49f9-8072-902d30043f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15e661f-04bc-4db3-a3ae-d79895393a2e",
        "cursor": {
          "ref": "4dbee200-3310-453a-8bda-a3b15dfa2c97",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ff91b5bb-370d-4ed9-8cf3-9a5045f65796"
        },
        "item": {
          "id": "f15e661f-04bc-4db3-a3ae-d79895393a2e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c196f5b6-124a-400a-bd51-a9aad1aa1741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1896f16-9c86-496f-8d36-d5d07d6f40c6",
        "cursor": {
          "ref": "801617fd-7cfb-4f25-99f7-b1a0f86aaac8",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2d1517e4-80f0-4e3d-825f-58cad15ca49d"
        },
        "item": {
          "id": "c1896f16-9c86-496f-8d36-d5d07d6f40c6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f348d5ed-cdae-4233-9a32-d2aa866b1886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f5131a-651e-4008-a927-c4ec9d57b85c",
        "cursor": {
          "ref": "e67ecb34-d695-41e2-aa50-42fecb43b0ce",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8685ac34-55ce-4571-beb0-dda21a85bcd8"
        },
        "item": {
          "id": "78f5131a-651e-4008-a927-c4ec9d57b85c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2e21a01a-0bed-4893-8964-8ee547914ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a10357-58ad-48f4-80c4-a1a47815b76e",
        "cursor": {
          "ref": "e72d4bd4-4c4c-4c90-9a1a-21bec2c634e5",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3eeb6721-9035-4495-bd85-1488f394a8e1"
        },
        "item": {
          "id": "97a10357-58ad-48f4-80c4-a1a47815b76e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e91dbd47-d8de-413d-a657-5d92552b042f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40b8e4b-35fe-4816-9d0c-7884e9c17de5",
        "cursor": {
          "ref": "195e866b-6aa6-4498-8e7f-e7a93dfbea90",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c0f85cf8-648f-494e-92f4-d21629d4ecd2"
        },
        "item": {
          "id": "d40b8e4b-35fe-4816-9d0c-7884e9c17de5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "626be57c-0a94-46cb-981e-ac316c184a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2d12a6-578e-4b40-aec4-c122649812fd",
        "cursor": {
          "ref": "ed6eab11-738d-4b13-a78d-dddbae9c4fea",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c23990dc-653c-4f1b-85c5-b9b6e6650444"
        },
        "item": {
          "id": "cc2d12a6-578e-4b40-aec4-c122649812fd",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cee0f42a-c01c-418f-bc12-5a28eb0eec4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75887a9-3d73-4cbf-8768-27a0572877a5",
        "cursor": {
          "ref": "71828182-7930-4b9f-8eaf-906a991c135a",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "faca96ac-0de2-4f1f-ae88-d7a9c71f9b4f"
        },
        "item": {
          "id": "f75887a9-3d73-4cbf-8768-27a0572877a5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "22ddadcb-52c5-43fe-92c5-2630a730ad35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc6090a-af31-466b-9880-bf0e64a3fd28",
        "cursor": {
          "ref": "ddbba25e-888d-4c98-9620-b8ebbc32e728",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bfabd398-15ea-46b8-8285-96afeebf7a0e"
        },
        "item": {
          "id": "0bc6090a-af31-466b-9880-bf0e64a3fd28",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "89e87c1d-bc05-4f81-b6d8-4422ffafaa93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97dd1c9-fd8f-4fb9-a958-5199f2aaf57a",
        "cursor": {
          "ref": "83f0000a-7c7e-413b-b81c-57dea0fa7bf9",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "48b6c96c-ec6a-42f6-ba64-0b82e5ef1cb4"
        },
        "item": {
          "id": "b97dd1c9-fd8f-4fb9-a958-5199f2aaf57a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b521ef04-fbca-4cc6-ac95-92a295cad235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4239e3d4-bb4a-4703-9c98-abc3f577cdd5",
        "cursor": {
          "ref": "c91b6228-0ee2-4812-8c48-66c87434b6be",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "098e7128-9573-40ec-b45b-3bb8539a68af"
        },
        "item": {
          "id": "4239e3d4-bb4a-4703-9c98-abc3f577cdd5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b9b7e68c-e38d-4caf-b673-d83540584cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a4ff92-c83a-4c18-97d2-f8f13e0e58d8",
        "cursor": {
          "ref": "2ad8b6a9-2c3b-4889-b92d-a8027d1419a1",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4b652829-85db-4a68-a3e9-9a2a6043b2ec"
        },
        "item": {
          "id": "e0a4ff92-c83a-4c18-97d2-f8f13e0e58d8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6c695df3-e14b-42da-b5c6-2b2657694578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47bd8ec1-6fb6-4ea2-9c51-ca293c0592be",
        "cursor": {
          "ref": "b7b15c27-2592-4fd7-b49a-b506f294cf74",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "bed32f0a-30f4-49f5-846d-4f6d1b9d8de4"
        },
        "item": {
          "id": "47bd8ec1-6fb6-4ea2-9c51-ca293c0592be",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2fb3dbee-2dfc-4bd9-81c8-7a3508f10560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac8d6d6-7a98-48c2-a82a-a8645bd95a6c",
        "cursor": {
          "ref": "02e8153a-1966-4521-92e0-7ec703df7dc3",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2f6d9240-f9bf-4787-bf13-6188d5f0f6fd"
        },
        "item": {
          "id": "aac8d6d6-7a98-48c2-a82a-a8645bd95a6c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "080ca472-75ce-42e1-b29f-018244285044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3ba3eb-ff03-42a2-a76d-c3e9acf06024",
        "cursor": {
          "ref": "dbd07155-f81b-43e0-9577-6cf8ab4029bb",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3c80b74a-4934-4571-b127-b784b100bb21"
        },
        "item": {
          "id": "ce3ba3eb-ff03-42a2-a76d-c3e9acf06024",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d6d2826a-bff7-43e6-a352-e6afcb586d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc5dee6-08e4-433c-8711-447f3102cb11",
        "cursor": {
          "ref": "1efe25cd-767e-4c15-87c7-cb536369f00c",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a3802d21-62ef-47d1-b36d-f208e8415536"
        },
        "item": {
          "id": "7fc5dee6-08e4-433c-8711-447f3102cb11",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "841966de-7337-4a39-8ba1-9570aea25a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3566d4-dd02-4cbe-bd6e-d7de81aa7f2b",
        "cursor": {
          "ref": "c0816b98-a008-4ade-90c9-05f846afc4a8",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6d137f50-ba19-46cb-a002-1788b47e3936"
        },
        "item": {
          "id": "3f3566d4-dd02-4cbe-bd6e-d7de81aa7f2b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "dca5525d-98e3-4ffb-8585-1262229f71b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263458b7-ad14-416c-93e6-9650e003564d",
        "cursor": {
          "ref": "c394f48e-112e-42be-b2c9-bcd3f38e7ef1",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "05f9ce7e-da46-4f97-a57f-e7ac73689ea3"
        },
        "item": {
          "id": "263458b7-ad14-416c-93e6-9650e003564d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "93778275-ea3e-4657-9ed1-43d59e16d433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2de0352-f590-4088-9644-78ca752e21f8",
        "cursor": {
          "ref": "72f2d84d-cdea-49e5-8fdb-90ae447ba418",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8fb23df0-be7b-49dd-8b99-6be1166a8d90"
        },
        "item": {
          "id": "a2de0352-f590-4088-9644-78ca752e21f8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "51d8f276-2d43-451a-869e-6362cd03b983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efd8cbf-76ef-4f57-9cac-9a6695688e61",
        "cursor": {
          "ref": "822f2095-3249-46b5-92d6-89bf8d397032",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4aa74c63-dc54-4b9e-9a5d-4208c0aa03c7"
        },
        "item": {
          "id": "7efd8cbf-76ef-4f57-9cac-9a6695688e61",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b7b734ef-0ee8-4357-918e-1a810171ee60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e698fe-e008-4a2d-8c0a-6b28f301768f",
        "cursor": {
          "ref": "4fc1d09d-8ee3-4d2c-a644-1d15588df9f3",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f870f807-0b44-4320-94dd-4eb902b571c0"
        },
        "item": {
          "id": "42e698fe-e008-4a2d-8c0a-6b28f301768f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "625e552d-1d3d-48b4-aeb5-347dc09c54a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cdef65-8ec3-4248-a34b-f293c66d74e6",
        "cursor": {
          "ref": "a9195a2c-84cb-4cca-a531-006ff0c6f3e5",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "60e4f5e2-49fa-4d3d-93f4-309749290933"
        },
        "item": {
          "id": "63cdef65-8ec3-4248-a34b-f293c66d74e6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1c1dd253-4595-46f7-ac55-eda370f9e39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e1109a-48e6-44e9-8f3d-28f762653646",
        "cursor": {
          "ref": "494f86ef-08bf-4428-9cfc-6d1bd49dc0d0",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7d5cce46-dd18-437c-8f25-30c060559cdf"
        },
        "item": {
          "id": "59e1109a-48e6-44e9-8f3d-28f762653646",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "020aab62-a769-472a-96bf-f4c99b95377c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea41776-0f3f-4a1e-9786-437c935ddb24",
        "cursor": {
          "ref": "3ab3b618-45be-4918-9168-89074e909e98",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7c381dc8-0e0b-4c43-9ac8-cfb41ab9ae33"
        },
        "item": {
          "id": "bea41776-0f3f-4a1e-9786-437c935ddb24",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bc168b48-edf6-4d8e-8bac-a13255fcf395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e627fbf3-2bd6-4532-8467-2807388d3e4c",
        "cursor": {
          "ref": "53572e27-779d-4157-ab72-a8d49c6fe63b",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f8f9aeb5-376a-4341-90af-31ba39baa7aa"
        },
        "item": {
          "id": "e627fbf3-2bd6-4532-8467-2807388d3e4c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "200e5db3-f774-4ddc-a48c-7d00e4190105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182946e9-1353-471d-827a-e8cf95dc2c20",
        "cursor": {
          "ref": "aeac3fe1-aa2b-4614-a3f7-494d887580d1",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2fc8b822-e093-4b59-9f6a-e9fe53502539"
        },
        "item": {
          "id": "182946e9-1353-471d-827a-e8cf95dc2c20",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a28271c5-97ed-4e56-86e9-bab5b2bdb795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6195e4f4-3b25-4a6f-94a8-5b9c458f3bf1",
        "cursor": {
          "ref": "42d084ee-6392-45d1-a457-56cfe4368608",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "cf15d190-3edc-4869-8878-b282e30406c1"
        },
        "item": {
          "id": "6195e4f4-3b25-4a6f-94a8-5b9c458f3bf1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "65b8fcff-d81e-495b-bd4e-dca84ea3ba79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73c71f2-e0fb-4255-9b85-5f9cd96b459d",
        "cursor": {
          "ref": "b54e55fb-ff5b-4215-9c6a-cb70570a9578",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5b7bfcb0-35e6-4994-a982-abbbc0d7c705"
        },
        "item": {
          "id": "a73c71f2-e0fb-4255-9b85-5f9cd96b459d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a55f4e0b-755d-46e5-b135-81554fa6ffe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a9dcfa-6f0c-4720-afc5-88cf21f95e05",
        "cursor": {
          "ref": "129243d9-6958-4b0d-b442-f40161ed9039",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a5bb0e37-8022-488c-beb6-077560e4e52c"
        },
        "item": {
          "id": "01a9dcfa-6f0c-4720-afc5-88cf21f95e05",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1209b4b6-eed0-446c-8db2-57a0d5402cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd6d33d-51b6-4e15-a248-10941cfa5825",
        "cursor": {
          "ref": "bd900727-5794-4ef6-a179-652c5e0fc2d7",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d7abb798-dd1d-44b7-8060-204b873cd25b"
        },
        "item": {
          "id": "8fd6d33d-51b6-4e15-a248-10941cfa5825",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "735cd839-73c2-49b8-8fc4-065d2a31db20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e923af0-4f20-4bb6-becf-d2dc216a27b1",
        "cursor": {
          "ref": "6788f979-907d-40c0-af6f-8c45081f0f0b",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "03bda5e6-bb6d-4f72-80b4-3f4b67f39c50"
        },
        "item": {
          "id": "0e923af0-4f20-4bb6-becf-d2dc216a27b1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "31ee22f5-ce17-4ea2-b019-7686c4cbf732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5aaa4c-6f22-4e93-b34f-ec6c4d280384",
        "cursor": {
          "ref": "a9343cd1-a375-48b8-9dab-7c582aa20116",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4899f1d4-60a2-4af7-84d1-51e429acfac8"
        },
        "item": {
          "id": "8c5aaa4c-6f22-4e93-b34f-ec6c4d280384",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a412fbc4-3d0c-42d6-b366-209268525a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4f975e-6c0f-470f-97ef-e7f6d0fd6cdc",
        "cursor": {
          "ref": "ecdb2fda-5023-43fc-834e-eefefd6dfa5e",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3b400aff-6d5a-4c71-b0b0-17b77631b74a"
        },
        "item": {
          "id": "3f4f975e-6c0f-470f-97ef-e7f6d0fd6cdc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4e8edaaf-ecff-47f1-9629-3e880bd27267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852e5480-a8e2-414e-ae6f-4bff2b3786e8",
        "cursor": {
          "ref": "39c05873-c26b-441b-8b41-86df8016b6af",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7283329c-c6aa-4030-b6bf-99e150d3d7fc"
        },
        "item": {
          "id": "852e5480-a8e2-414e-ae6f-4bff2b3786e8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4d2398a7-0cef-4abd-8df7-47603eef678f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4603f6-62d2-40b0-b20e-523789aeb7bf",
        "cursor": {
          "ref": "dd7adb22-f9f5-4e53-a569-d2e9ffe67d32",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2d73c4fd-deff-48b2-a70e-044ce2705e42"
        },
        "item": {
          "id": "5c4603f6-62d2-40b0-b20e-523789aeb7bf",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9b1f9f95-297b-4563-bc7e-21010868b032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d52f1d-4f50-42e4-ada8-4a07a50845cf",
        "cursor": {
          "ref": "9d6cf2ab-1138-4fc0-8f08-12a6b9374c41",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1ce49147-9da2-418f-b06e-8a5d2c20b335"
        },
        "item": {
          "id": "a9d52f1d-4f50-42e4-ada8-4a07a50845cf",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "aba194d2-12b3-414e-b795-a71869ceddfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9032db-3d9c-484a-b542-141178cb4ddb",
        "cursor": {
          "ref": "817dccfa-b0a3-4d5b-bb18-0dd7f4191309",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "91a12ff8-23b3-4b2f-80f4-fe7ec335a12a"
        },
        "item": {
          "id": "2b9032db-3d9c-484a-b542-141178cb4ddb",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "227b0360-f7e2-4587-9017-a764ed152ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb3a291-109e-4e4f-9210-689775159c70",
        "cursor": {
          "ref": "feb3c95c-4be6-4403-bf81-a39b34221c4e",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1fc29a7f-f1aa-4e61-92ba-a4ef4e7ec646"
        },
        "item": {
          "id": "3fb3a291-109e-4e4f-9210-689775159c70",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1f9e20ea-2f77-4e39-ada9-a77f2c13374e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac133838-cca1-4bbe-b494-5c635313c17f",
        "cursor": {
          "ref": "e884510e-03f9-4b81-b02d-28d64758bdf8",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ce803dec-b09e-4711-a970-305823d64caf"
        },
        "item": {
          "id": "ac133838-cca1-4bbe-b494-5c635313c17f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "14ead71d-dea5-4d7e-887f-47a5e21cad3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54fb35ca-c6c4-4d20-b937-2f14362f69c3",
        "cursor": {
          "ref": "40b3d0e7-9a8f-4744-8cd5-bd2aca3c160b",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0f30e197-806b-4092-93f7-be6b4020589f"
        },
        "item": {
          "id": "54fb35ca-c6c4-4d20-b937-2f14362f69c3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e408cd79-7950-4010-8229-641c36222046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd963c19-65e3-4847-ae8f-90ab22889b05",
        "cursor": {
          "ref": "f7e1ced7-8556-4203-8418-cc5a403a39b9",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "444b519a-ee1f-4a80-b9d6-3bba6b0d8b88"
        },
        "item": {
          "id": "fd963c19-65e3-4847-ae8f-90ab22889b05",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f47dada2-6e06-40b2-95ad-1294aece0099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7c4b62-6cc7-4704-acc4-543cae0e0d56",
        "cursor": {
          "ref": "d9dbfefc-0aac-49a6-826d-d6617fdcc8aa",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cf7b7e84-1a6b-4478-8f20-c71a15a6fae3"
        },
        "item": {
          "id": "6d7c4b62-6cc7-4704-acc4-543cae0e0d56",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "82de7773-2250-4969-a4cc-a5e049d9946a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b325b38b-688c-4d6b-8cc3-e574cf2d2cb3",
        "cursor": {
          "ref": "d59b429b-207a-44f9-bb63-401e5f5fc605",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9be2cdc9-f1d4-43b1-a3fe-0275c3e045f7"
        },
        "item": {
          "id": "b325b38b-688c-4d6b-8cc3-e574cf2d2cb3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "efb72c90-3401-4088-8faf-e429ca937fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834cca1a-e6ce-4b18-9a2f-ad414f3faef3",
        "cursor": {
          "ref": "585b0eb3-cc52-4226-8595-e8226122d98b",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a4f928e7-3522-4fbc-9147-2ade9b065889"
        },
        "item": {
          "id": "834cca1a-e6ce-4b18-9a2f-ad414f3faef3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "804bcf0f-3503-45b4-94a2-05483553c700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141d4d80-d1f5-4463-9be9-45db92731384",
        "cursor": {
          "ref": "8f95fdb3-f9bc-464b-9ab4-cb8449e45c30",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8a2300e6-50a2-44fb-a0b9-d81a310a9766"
        },
        "item": {
          "id": "141d4d80-d1f5-4463-9be9-45db92731384",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "10f39ef0-8409-431f-89da-ce2a950a66a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56eae60e-ef57-40e7-8c23-ea016f7baac0",
        "cursor": {
          "ref": "7d940f6f-fb53-440a-b707-c87b612f965e",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d02a0ed3-4bb9-4fba-ba0b-f131ea5639f6"
        },
        "item": {
          "id": "56eae60e-ef57-40e7-8c23-ea016f7baac0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a1724359-a0f1-4b6e-8993-8f05a6565b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898d96bc-be16-490a-bc21-a1b78360c8b9",
        "cursor": {
          "ref": "6f39e707-00d3-40d4-88a6-8cf708df275d",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b22f5f85-5a64-4dfb-bef0-a13677b677a5"
        },
        "item": {
          "id": "898d96bc-be16-490a-bc21-a1b78360c8b9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a9045c86-0d26-442a-a714-053b56683ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc83008e-50c7-4a54-b256-51e24402f1dc",
        "cursor": {
          "ref": "d2a365ce-e932-492b-93fa-43b419ec0ea1",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6d645850-2208-4371-9275-1247e2dc3bdf"
        },
        "item": {
          "id": "fc83008e-50c7-4a54-b256-51e24402f1dc",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a3640daf-0257-429b-a4e2-547bab1f451f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509d229b-6290-4c97-965b-cb4ec1c9433a",
        "cursor": {
          "ref": "952b75ae-73a2-49ca-8e4b-3670b94d395a",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "62e0691a-ae1f-4444-9306-f39d9771f3a2"
        },
        "item": {
          "id": "509d229b-6290-4c97-965b-cb4ec1c9433a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ef10ed67-edf5-420f-ac04-a74c5f4a23b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f980872-e607-4b5a-aea1-e8acdf1a880b",
        "cursor": {
          "ref": "4091d244-11bb-4de1-b27b-dbeea0f4f5a4",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "97854d7f-21e1-4024-b6b8-e27f1686b0aa"
        },
        "item": {
          "id": "4f980872-e607-4b5a-aea1-e8acdf1a880b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a7e8c8d2-3b02-4bd7-9888-f603768cfde6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43ca7d7-b73f-4a49-9a84-095874f93f9e",
        "cursor": {
          "ref": "a08a7f02-a35a-4dd6-8534-d7a4e775f4c5",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "47312622-f402-4225-adf9-479ac46dde99"
        },
        "item": {
          "id": "a43ca7d7-b73f-4a49-9a84-095874f93f9e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b1a21bf0-9986-47bf-ad90-06f82b8d1c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987d637c-c5c7-44d8-927a-8522618a4ce8",
        "cursor": {
          "ref": "9871bd0b-a405-44ae-bae9-f40d4785f8e4",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "751bc09f-a63b-41ac-b6e6-97bd3728cc0b"
        },
        "item": {
          "id": "987d637c-c5c7-44d8-927a-8522618a4ce8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8f8e031b-6b7c-45b7-b33a-809757380fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74be8da-7674-4520-9cf2-77349eda9bf3",
        "cursor": {
          "ref": "5fd65703-d442-40e2-a666-af7199a849c1",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "858dd9f1-e765-4ba5-9dd6-336fc77578d1"
        },
        "item": {
          "id": "c74be8da-7674-4520-9cf2-77349eda9bf3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2708eb07-a653-47ac-8209-a61798bb9c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f0194a-9ee0-41fe-8b8d-9022396b4c4e",
        "cursor": {
          "ref": "61738ccd-db46-4780-ab32-deb0601bdc6f",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4252dcd4-cd94-4b18-8d5a-60b32abf5767"
        },
        "item": {
          "id": "79f0194a-9ee0-41fe-8b8d-9022396b4c4e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a9280601-6f48-401c-a18a-6cd1bfee67c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb184e3c-6540-424a-80a8-b1b05dfeafe9",
        "cursor": {
          "ref": "007f86c0-40ba-4acf-96fb-4cc601cc5285",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "93795674-6a56-49f4-8827-6d1fd8ec0186"
        },
        "item": {
          "id": "cb184e3c-6540-424a-80a8-b1b05dfeafe9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f83a885b-32c6-4889-8c0a-c91ac84f2b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae919108-7703-4f61-b1d4-309ad8ef12ca",
        "cursor": {
          "ref": "3a62729d-16a2-4717-bee6-bb79ce72ffa5",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "19342396-208c-4796-8b8a-9425d140ba5a"
        },
        "item": {
          "id": "ae919108-7703-4f61-b1d4-309ad8ef12ca",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a1bc85c6-f32c-4fd9-8cc1-9596520874e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77ca59a-8afb-4b8a-b848-1abc7f177855",
        "cursor": {
          "ref": "824c64a6-fded-4d9e-a836-8e46d4b16961",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f12e1bd2-a8ee-4227-9a1b-fc45547a7788"
        },
        "item": {
          "id": "f77ca59a-8afb-4b8a-b848-1abc7f177855",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "28716bcb-993d-47c1-aa57-4db91530d700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8bf6ef-3306-49d9-bfff-77e4bc5648e1",
        "cursor": {
          "ref": "908e4288-6205-4149-9f7f-755954911037",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "cce60152-65a7-42f6-9986-5ef4b512248b"
        },
        "item": {
          "id": "1a8bf6ef-3306-49d9-bfff-77e4bc5648e1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3ae67413-9ab6-4be0-b27f-1a652c2ffa88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4f2f71-cfb2-49ef-80b7-3f4f90f6507e",
        "cursor": {
          "ref": "4a3ea52d-2573-4c37-95db-14f88c66348b",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "66b5e7f5-0722-4cdb-8adf-51527e698df8"
        },
        "item": {
          "id": "bf4f2f71-cfb2-49ef-80b7-3f4f90f6507e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "842e0e57-79a0-423e-818a-a3ca12ade8e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dbc1033-171f-4a80-b8e9-de3c6b3770f2",
        "cursor": {
          "ref": "7c2bdffd-6d5c-4253-b62a-64708ad765e4",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "605c59a4-d2be-4742-ab7f-3d78ddd8313c"
        },
        "item": {
          "id": "6dbc1033-171f-4a80-b8e9-de3c6b3770f2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "02b24966-8888-4d44-94c6-c854484b2eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e41d024-9efe-4cc0-9bfb-900923f476c4",
        "cursor": {
          "ref": "f2d5f71b-ac45-4910-b304-887e96bf51eb",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "be496dea-17dc-42c8-aaf5-38654f71254f"
        },
        "item": {
          "id": "7e41d024-9efe-4cc0-9bfb-900923f476c4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "764f0cef-1e9d-4041-bd6e-3590a25c36fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e936dce-db77-47b6-9c27-6f9a717c8340",
        "cursor": {
          "ref": "1dab8016-ed0f-4b38-81c5-88e0adf19993",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e911ffb9-c826-4d4a-8da9-99a000fe0991"
        },
        "item": {
          "id": "2e936dce-db77-47b6-9c27-6f9a717c8340",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "50f367c8-7f22-4512-8ad2-0cda2e948505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f97e18a-5216-4c0a-86d3-b7a7549b6a13",
        "cursor": {
          "ref": "7564912f-a699-4ff0-a8f3-012b461e923a",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a29ab696-ef03-4846-b0f2-4b6dcd113dad"
        },
        "item": {
          "id": "4f97e18a-5216-4c0a-86d3-b7a7549b6a13",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "81b387d8-58da-40a3-8a7b-83cfbb86b55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0dee642-1bb5-405b-a199-6a0376466ff0",
        "cursor": {
          "ref": "6a4f944d-2597-4c54-b4e7-6e21beee4897",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e34e74ae-5f50-4982-8008-697701296105"
        },
        "item": {
          "id": "e0dee642-1bb5-405b-a199-6a0376466ff0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f9f74aa2-6916-4e06-b322-144ad8f4cf79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520bee03-63ba-4331-969d-e01fbd2d74e5",
        "cursor": {
          "ref": "d74e2268-806f-4558-9c20-89ecb6c203f4",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8b45c710-deb7-4aef-9018-351d07851b69"
        },
        "item": {
          "id": "520bee03-63ba-4331-969d-e01fbd2d74e5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3ea5afb3-c7cf-4d32-bb30-3eb2eff3363b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5f2f0d-8075-4756-9ea5-41441ae960f2",
        "cursor": {
          "ref": "97b35b74-c1b8-444a-b72a-0e97472cd8da",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a9a37c48-dba7-4478-949e-5c69c1e173d1"
        },
        "item": {
          "id": "0b5f2f0d-8075-4756-9ea5-41441ae960f2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a1bb5bb8-c053-4a3d-8e1a-bab647f80cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0817f8d7-ea12-4d8d-bf0c-6f6a056a84d2",
        "cursor": {
          "ref": "8ee94962-592b-45c1-9ee9-4b80e8eefb31",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0f47c390-3c92-47f4-80d8-522aa269b958"
        },
        "item": {
          "id": "0817f8d7-ea12-4d8d-bf0c-6f6a056a84d2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6f2bb6ce-3ef9-41cd-90fd-951ac952fdaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb29d400-0ebc-4c13-97f3-f78ebfa38b50",
        "cursor": {
          "ref": "f0a80fe3-25c7-4c8f-8713-1a6dc022acbc",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9fc725d7-2c18-4ac0-b1b4-f7b62bc9841d"
        },
        "item": {
          "id": "eb29d400-0ebc-4c13-97f3-f78ebfa38b50",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "47b50c15-d0cc-4f0d-bfeb-3d70622b30f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4356db-7ae1-4e1a-8657-7221c1317b74",
        "cursor": {
          "ref": "9940f1dd-aac2-4df0-8f42-7030ade96127",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9789f0eb-75c1-41a0-abfd-6b8529281994"
        },
        "item": {
          "id": "aa4356db-7ae1-4e1a-8657-7221c1317b74",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "18efac34-1d63-40d1-ad0f-57d4b6375ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098b672b-cd6a-470d-8837-3ce1d0e1717c",
        "cursor": {
          "ref": "aecea7dc-38ad-4b8e-ab55-6782e975073d",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3d58aae3-ca6b-42d2-8012-a2e229f907a8"
        },
        "item": {
          "id": "098b672b-cd6a-470d-8837-3ce1d0e1717c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9b29f60d-180f-4634-bd91-46b9cbc7a6d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c3837f-e421-4ea1-9651-5b51f4eae6cd",
        "cursor": {
          "ref": "275571aa-31fa-48ed-9531-cd0532f1d9b3",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bd0f1d81-6d86-4175-9125-f65351b3e41f"
        },
        "item": {
          "id": "b1c3837f-e421-4ea1-9651-5b51f4eae6cd",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7e8fd55c-7387-4532-80f6-1d84efdb5590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7781de-c577-4ad4-a4e5-903c7d34a054",
        "cursor": {
          "ref": "2a8a7029-9bc4-4c40-aa9b-72a04d581c09",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ec4a134d-e1d4-4987-8272-ba87edfabd03"
        },
        "item": {
          "id": "7d7781de-c577-4ad4-a4e5-903c7d34a054",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e3ab52d3-802d-4bda-91cd-b128aea9bfde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8c1f07-dd0e-458f-9e10-f40e6c8bb494",
        "cursor": {
          "ref": "24d452a3-09d9-456b-8885-636f5fa6137b",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "dda78e01-84da-46c3-bee1-a045a4883d77"
        },
        "item": {
          "id": "1f8c1f07-dd0e-458f-9e10-f40e6c8bb494",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ca5c7f5a-cc1f-4dd4-9647-78c60614ecda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03269a85-3286-48d7-8b13-7c9ba22a47e7",
        "cursor": {
          "ref": "4cca26f1-3094-4673-aa28-77baa0881bc6",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d1079cd7-43f6-4b31-a2cb-3db0298b0353"
        },
        "item": {
          "id": "03269a85-3286-48d7-8b13-7c9ba22a47e7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3cca16e1-2cfb-4ba9-bc3e-d86650987912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f4cdaf-1cec-4be3-99f6-c1ab731a8f6a",
        "cursor": {
          "ref": "dc31e827-d78e-45f8-8dda-00edee894315",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d5d8eca4-f0a4-484d-9bdc-57d65e60ef0d"
        },
        "item": {
          "id": "78f4cdaf-1cec-4be3-99f6-c1ab731a8f6a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a097517e-cbde-4805-937d-19a89cbb0a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99cf4e15-b522-4603-af4b-d548e88c4ea3",
        "cursor": {
          "ref": "5da00329-4188-4d5e-a518-deda0da2429b",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "047cc3e6-68fa-44c2-a9bf-6c7a9d92fc6e"
        },
        "item": {
          "id": "99cf4e15-b522-4603-af4b-d548e88c4ea3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "399d11b7-da99-4daf-a3ed-6be43a293249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a6dcbf-b5d9-43b1-9b8f-c52d6284021c",
        "cursor": {
          "ref": "ca47cb1e-5195-4841-a946-a5111d6fcdff",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6c8e6223-742c-42c6-973b-5cef0284c2ee"
        },
        "item": {
          "id": "e9a6dcbf-b5d9-43b1-9b8f-c52d6284021c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9a3469a5-d59a-4bfd-870d-b66d1b4913cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75631d6-05d8-45e2-b681-4ed472dbdffa",
        "cursor": {
          "ref": "94a73fc3-7280-4557-aa3a-241eb5971cd2",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "71af5b79-5b3b-44f2-b005-d6029d6ac20d"
        },
        "item": {
          "id": "f75631d6-05d8-45e2-b681-4ed472dbdffa",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "849b4788-fa9e-48f6-9846-58ebaf28b44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78014528-af71-4d96-944e-7018b0a20565",
        "cursor": {
          "ref": "e2568dd2-a8bb-4773-a023-32ecfaf1ec89",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c777e3fe-ac40-4dcd-bedc-8a534663e5e7"
        },
        "item": {
          "id": "78014528-af71-4d96-944e-7018b0a20565",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "01e7905d-cac0-4fd6-99c8-54cf27220e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a4321f-7946-4b89-a770-3ec23631dea7",
        "cursor": {
          "ref": "ba3392b7-2cc2-4659-aeb2-f424f8e75516",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c4ce26d9-8e22-475b-8225-c23477bab409"
        },
        "item": {
          "id": "a1a4321f-7946-4b89-a770-3ec23631dea7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a46a44ce-0736-4c5f-894b-06abfbce6e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d089d3c-0811-492a-b31f-cc34b3e37b1e",
        "cursor": {
          "ref": "9c93e765-8164-42c2-bb09-67ef6ac6fd65",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a707d45c-c62a-4044-b40c-f2098646da84"
        },
        "item": {
          "id": "4d089d3c-0811-492a-b31f-cc34b3e37b1e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e2718c10-ae66-46be-92b8-33008e880a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6bdef2-2a7b-438d-97c9-c151a3310fdb",
        "cursor": {
          "ref": "8faaf08d-f125-498b-8e34-0cbfbe2da841",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "da7f94db-2931-4a43-a750-c7812f5cbfd4"
        },
        "item": {
          "id": "7a6bdef2-2a7b-438d-97c9-c151a3310fdb",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f100c039-72ea-4ade-b38a-f6c36d0a925d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f454e41-d6d6-479b-8284-a7e1ee07958d",
        "cursor": {
          "ref": "02831f4e-f906-4788-87dc-25c91c59b127",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a3b637e6-5303-4313-8c43-dbc54d59a5a2"
        },
        "item": {
          "id": "6f454e41-d6d6-479b-8284-a7e1ee07958d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2c3abe63-d887-40b3-aedf-20fe05781928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443be3d6-61cb-4d2a-a99b-d03dd86217b6",
        "cursor": {
          "ref": "00e98f5b-40b6-4e87-82db-a534ec3cf11a",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ea75ec1b-632e-4707-b9ca-6d697be15926"
        },
        "item": {
          "id": "443be3d6-61cb-4d2a-a99b-d03dd86217b6",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a158ccac-7eae-43d5-ba4d-555cab3cd203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249c9859-ba1a-4a7e-990d-903a27302e1c",
        "cursor": {
          "ref": "0d4ef332-23c5-4e76-b6e4-fb2e5dc676d7",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f9d91108-cbf7-4a02-a306-bd7811c562ea"
        },
        "item": {
          "id": "249c9859-ba1a-4a7e-990d-903a27302e1c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "28718c16-05c9-44e4-9d44-6bc7582cfe9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c9f857-a21d-4907-96ca-e9f314bba710",
        "cursor": {
          "ref": "c8cc105f-2593-4f1b-b609-8caf7d523f44",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "261fd3c8-dc71-4ce3-a3a8-4567500216c8"
        },
        "item": {
          "id": "91c9f857-a21d-4907-96ca-e9f314bba710",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5e2050e9-7837-43cb-abaf-7498ce79317a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdc681d-bbc2-453b-8b0a-959f8b839926",
        "cursor": {
          "ref": "0c17381c-4542-4a88-9b0e-888456b4bbeb",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "facc55a0-588d-4369-9d33-dd2386b50447"
        },
        "item": {
          "id": "ebdc681d-bbc2-453b-8b0a-959f8b839926",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e985ad35-1c68-491a-9b55-f1fb58c254d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac46a197-3b52-4612-b276-d0078a781d67",
        "cursor": {
          "ref": "90050f49-a2d9-451a-8ac5-1861bc79eba4",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0193bf39-689f-40ca-9482-b5a852fd38ac"
        },
        "item": {
          "id": "ac46a197-3b52-4612-b276-d0078a781d67",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9015d7c5-0400-46fc-9fa0-d804b771403a",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28bf7e3-6862-411e-8e85-fce5dc4577db",
        "cursor": {
          "ref": "b128fb77-a8a3-444e-80a3-190867eadba4",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d2bdb2f1-2cee-4c43-953d-651187432b3a"
        },
        "item": {
          "id": "b28bf7e3-6862-411e-8e85-fce5dc4577db",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c0611f14-3d8b-4cac-80d9-edf1ca583d34",
          "status": "OK",
          "code": 200,
          "responseTime": 4311,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "818f8605-97c1-45f7-93a5-98c99dbbddef",
        "cursor": {
          "ref": "c29eb22f-6b47-4cbe-b617-60bbb56550e9",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0339666b-d5e9-4b24-a0e4-9bac681830db"
        },
        "item": {
          "id": "818f8605-97c1-45f7-93a5-98c99dbbddef",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "200ccf73-bd1a-41dc-b407-a2ad8b180f14",
          "status": "OK",
          "code": 200,
          "responseTime": 3957,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "736ac159-71bd-43cb-b143-4b52d374aced",
        "cursor": {
          "ref": "a57b7c57-247e-447d-8a4c-e3295b8c1520",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2ee9eab1-4c18-4c37-a31b-c8e3daf73d94"
        },
        "item": {
          "id": "736ac159-71bd-43cb-b143-4b52d374aced",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c1af345b-e9d3-492a-ba3d-51780418e119",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736ac159-71bd-43cb-b143-4b52d374aced",
        "cursor": {
          "ref": "a57b7c57-247e-447d-8a4c-e3295b8c1520",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2ee9eab1-4c18-4c37-a31b-c8e3daf73d94"
        },
        "item": {
          "id": "736ac159-71bd-43cb-b143-4b52d374aced",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c1af345b-e9d3-492a-ba3d-51780418e119",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c3fe79-9dcd-4228-bc2b-08575dc56597",
        "cursor": {
          "ref": "61d75457-2c4e-4496-b2d1-707efd4cd97a",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9dbff674-a8f8-4dd1-b832-8dbd2f2128eb"
        },
        "item": {
          "id": "93c3fe79-9dcd-4228-bc2b-08575dc56597",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8022d808-c8c6-41a3-8001-40a0a082388f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0740192a-0dd2-4fc7-b83b-27e950606a92",
        "cursor": {
          "ref": "7437d7e0-9925-4021-bbf7-fd49788d88aa",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4fbfcb86-905b-4c67-bd39-5efbfa3e1c0d"
        },
        "item": {
          "id": "0740192a-0dd2-4fc7-b83b-27e950606a92",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "baf3f725-1884-4010-9fbb-bdc724be529a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}