{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d81919aa-0176-40f4-b10b-3fa1c104d95d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "619cba0b-6dcc-4551-90f8-ffbae68070ab",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "484922ad-4045-47d6-a678-e054f8eca7b7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ce38d697-92e8-4e55-922a-45192b658224"
                }
              }
            ]
          },
          {
            "id": "e82ddc2d-4b3f-475c-93a4-753f2c7bb791",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9fd8f76b-8779-4dcd-a73c-314ec4317b94",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f9d6495e-2854-4abf-8932-432161fcdd6b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "03e787b3-9b7e-407f-932c-b00b610d37db",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "68747548-f32e-4184-a96e-16c158be7609",
            "name": "Positive Testing",
            "item": [
              {
                "id": "06367c36-3fe4-4ab3-adfa-49cbd38bb549",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9f0df5e-e6dc-4a3d-b152-30ff4a10f866",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4684b59c-8d83-4fde-be70-ec1d0a055b6c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "837b1b13-043b-4dd2-9c30-2d62c7cc0669",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "de32e51b-0f0f-4d98-a4c5-2bacdbd5a786"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5358889c-c82b-47ba-a048-a18128f33a5b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e68e8c8c-8df8-4685-a1ff-8a95a5be12b8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a3f1340-773d-4d73-9ee0-118a21094a78",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "19e8a127-4b55-4dba-b653-14d5c66443c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da7d215b-196d-42c1-a50b-f88e3e28edd9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f42c1eb-7da0-4866-a452-e9c3414b1b16"
            }
          }
        ]
      },
      {
        "id": "a5c97937-dfe3-48b2-abc9-0fa95ccd0908",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b7375c41-f37f-4fcd-a72a-4cb5e27230d2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "080fc9f5-ddac-494c-a3f7-4b667352d90c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d824167f-9aae-4082-a313-9a9a8f2b53fa",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ede1efc-10fc-4de6-8ade-6e06896a0e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6792cc9-ae5b-4ad8-81f1-4ad3fc17cf19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eaa990c-df52-455b-b945-965465eb1b82",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f478306d-06a6-44e9-a3c5-9f4ccae58c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36bb800b-f59c-4d23-9bc4-823cc74ac4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a11e8e5-525d-46a6-ac0b-c1c79dd0c108",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec1647e-8a3f-4f1b-a356-654bd8c28f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f319ae3-295c-4e32-a743-bed2800555b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ccd670eb-495e-4c9a-8e5f-526bf8ea4514",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "66f12ed9-0ec1-4b02-aa32-fb60bbaaddda",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0937f91f-14bf-4376-9ce6-aa4b6da7b89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c621b2cc-6df7-437a-8b85-12796333198a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3838a2-f9d1-4d85-8694-3fee9fc508f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cad6a5b-285e-4b07-a9e6-da89fe736656"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7a8d6027-df96-4992-9edb-e1461f0641bb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2177663d-bdaa-40a4-83b9-51f681d6d12d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e354204f-dacf-4b31-82e6-e33e14001967",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4b6ea136-8aad-475e-ada4-3e1747bf63a5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "900d81fc-9bea-42a5-b651-044212ada6ef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c4e4c898-8cd5-404e-9f03-e9f1df858e7d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bfb6ffd0-60f4-4309-aa7f-64afdfd331f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0360523c-3745-4ce7-af31-f4b0436499ee"
            }
          }
        ]
      },
      {
        "id": "c5f26bd2-188d-4dd1-8c38-beb4cb99e703",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "937be15c-c89f-4702-bb92-8e9d118a60d3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01bc3287-f24d-4f17-b91f-60f8efdcf0bc",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4a141777-1504-4c21-89fe-02a1f6c672af",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7750ace-c366-4d86-9ad8-fa5e83987c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ba23e6-692d-4226-9252-658d221d58ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714d46db-a7a2-4216-9cf1-417bf140b1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb8e7624-779d-430d-9182-def7d4c0cca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1b745c-b66e-4454-bb93-028350471071",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47371d7c-bd72-4274-913d-c45d0c470ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c95276-79c9-49fa-a12c-1cf90f578d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1f86c7-5459-4624-9622-8e4483ea9e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85185f34-0bfb-4a32-abe8-537ffb3617a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9759a9b1-f1d5-408e-9251-cb0d8a3f0aaa",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "106cd282-1cab-4f3b-bcbd-5ae4da43b205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d996a4-42b6-416b-902a-0f72e9752c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c08cff-0180-4865-ba42-1286739e7a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12f73e99-920d-458b-88cb-04f695923c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96fdd8c-0a5a-408c-91f7-1cc34f0a6f28",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a79c20b-b802-4e17-a109-1638bfe220f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b17424b-68ea-4e89-a5b1-a0729e4032f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6017ce65-b37a-4711-a773-3ab6b003b528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d6fe0fd-34fb-4d46-8f15-f6c1b2fccd4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f117653c-9784-4fd6-ba32-06d49f92320d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22073c3-898e-4dad-bea0-8754b9da731d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102e6873-7cd1-4984-adcb-36c852edcefc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5a1732-2901-4124-ad59-be08c758ee7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d91b916-7354-44c5-af1f-5793e8f95174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d55290-6272-4f03-ba85-ce0dc67f421b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f542707b-27e2-455f-97cf-5ac13e4a77fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7712275e-8a62-4258-8181-e6133d80efdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb66a26-89de-4d8c-97d5-aed27dc85337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ef3a287-55a4-40ed-9e27-9369d22c0791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e52301-f832-4b11-adb0-2eab0cab76cf",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3752dc5d-192a-4967-b1d1-c482a8b9a193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f064f58-a1bf-4164-88c3-2c82fbec67ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab35c04e-e47b-4e58-823f-881a723acd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60e682f6-61cf-4e9c-a67f-1d5e2d5c7b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35617937-ddb4-465f-921c-ba144f773b3c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab684cd-3575-425a-baa0-0a55f3688246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8095944a-b43c-45c7-bbfd-cabc70e697a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9a7606-878d-489c-95ed-9b84ddaced2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f38a02b-1ff6-4110-8494-7840ad67e6cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fcece13-e9b6-43be-8859-9b8949306ad7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bbe83b-459d-48da-9408-1102c1b6167b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60697650-c7ad-4db4-b9e9-eaf635f3c5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a269dc-25f9-4eef-9789-e64ee79b7780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1dc51009-dfaa-4a2f-bf6e-18f72711f5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665a2a3c-0088-4da2-b07a-6ed0586dea45",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13054cc8-da4a-4cc4-8aff-050092a6ea34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07140282-6c29-43e3-9358-6efc8aef40fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14e19e6-501b-4fa9-9e40-34cea8e86819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27696bc6-967f-4ed4-baeb-e694bb909ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6196e70-8b96-4bab-a3d1-cb5c4d135aa0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efefde0-0ca4-4a63-a8b6-0dfffaef2e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a92c5f7-f8bb-4f1b-be8c-93211690cc60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ee22fd-895a-49ca-bdff-e7a9562f1826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce28e4ab-b667-4b23-a6dd-d90bd6f7b94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbf0813-1818-4a50-8622-0f031e0e1dc4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7166a09-bf5e-4fbb-8e65-af69f96a480d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f2f3802-87c4-4d93-9e90-7b7aba004e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4237181d-27b2-4e8a-b6ff-ea2084896789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "beff7f4f-c5f1-46ac-a76c-d8d4d3ef403d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83692c7-64eb-4512-b633-4b0dc8995f61",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84ccf50-6f28-4896-8991-b10eee7c2508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14896296-8c04-46f2-915d-349edb2b3e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af6b585-b869-43b6-8b82-0a131bd6e60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03fca2f5-e0e8-46fc-9a6e-9870c54d0505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294df11e-0d0b-40ea-b573-a441c5543d56",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35fc96e-c725-4b0a-a92e-bce7b75cc08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e23098b-79fe-41ef-8c01-58d3b1f33398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642f5825-f9e6-4c46-8354-643507370359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff2733d7-b2e7-4ada-9f26-c86ab399fdb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04252909-769d-43c5-97d1-596a6c361d5f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37faec2-0c14-4844-8f62-0f6304fc24ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c206de5b-7a14-411f-b672-6b1b1373faed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f700e83-a5dd-46db-a882-6ef1c5e38384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e7c0c39-d1fc-454b-8440-0e36ba8c1fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2406a048-2346-4e1f-9103-b34b0a27a0b9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69501d7-72d7-4440-8e3d-9a0935901875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d95526-9a26-4559-a3b4-9ba9af4899b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38de4e2e-3cf3-4504-b0df-2dee3a1d9fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bad99aa6-36e7-48c6-8434-e7483adf0c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4537244-9020-484c-be21-98bfb9bd283c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1a956a-01fd-401f-b26f-9fcd541545dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8b578e-a8a1-4c08-a8ae-6f3cd26a2ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c90743-e880-4d49-b6c0-fb03e847291e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82fa8820-ecc0-4a2f-81bc-91f8d3da4fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe148da-87cd-46a3-adc9-b06acf81213d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a18515-b077-4e59-8857-5edd0054b359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccdf1c33-bfe2-43d4-9b24-31672c9c3387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e650476e-c66c-42fa-b187-04d834a84a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f6b9639-7fdd-4a22-8711-388493018243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c45c1c-33d3-4103-84d2-95de4d8cb631",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104cdc16-f3d8-4663-9160-3039290c6119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c571de99-bdcd-4ce7-a57a-1f11090fc214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81bf6b0-787d-4f25-a40c-a4bf3a3e91f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f20bb3d-97a0-4f2a-892d-06647ed32080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73adb3d-1ae6-48df-83eb-840bc361823b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68351125-4eed-4b82-b790-88aaeeabe14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b72b95b-b66b-4233-bb3f-9075c0758e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab879663-6acd-424d-b793-6b446005b1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bef8292e-06d1-415b-b04b-aadcd4a56145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ea93a0-b243-47c5-855f-ce601e0d088d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed0854f-3356-4959-974f-526cee60f5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ccf9e0b-9946-434c-9e4f-15c70ab4644a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70ddac5-1cdc-4425-b51c-b363f24f3e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab783178-0d13-466b-b4ee-1c20060686ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fc6bf7-446d-478d-860b-fbcb2213518a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b68e52-67d9-4098-9853-6555600db8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c200388-3c64-4588-a949-1237610004c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c48fe14-b51d-4783-b133-de87b1451cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "27ac167b-7239-47e6-9680-6819bb3b19e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f097b3-4d62-4350-88a2-0729a5a11bff",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3666fb3-77e4-471c-8c9c-8d586e61b55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff3d6f4-bc76-4e7f-bfe1-65c5db4a5bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66112a62-6067-4bc1-aa07-c2f14d79b160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "62b49bef-0693-419e-a4b8-7a8af7295248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1815b3-5233-4170-b070-9f6d80860fa0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae9835e-bb0b-46f7-aa65-5ef0e6bbc441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cedc24f-6799-4ad0-90ea-9a0f6e1a6f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da8fcf8-bb29-47f7-bad1-f5e3fee99375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0803cd9-c6ce-4145-9573-89f801bea622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1da441-65b3-4709-9e0f-045b51364c57",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e12350-1656-4281-88d9-cbb9e435c49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6855061-c809-435b-9628-8e691e59add4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c669914-dcf9-4fc8-9b16-de40345097e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "025704d7-5e13-4817-868a-9993e831aab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f85582f-1c8b-43e0-9429-9f1f16e2e0d4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e4b46c-6764-4cb8-a742-f8831a5821cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9fc0ea-92ce-4aa9-b079-6c04706d6e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7110e8a0-d790-4456-aab6-185dd7e0a23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e637464f-d371-4438-bed3-c8be1efd2383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b743bf3e-d6b2-403f-ad0b-cd9f19f1da7b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b541c0-10fd-4371-8497-1c512e12b218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa06b4d-08ec-4689-ba81-58de222031f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3fd52e-bb50-4598-8b77-8dc91bc4a3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b27f0d2-833d-4fdd-8faa-3dee2347f768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4dcb296-da44-4a7f-abd4-d949f841a386",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87083277-5a64-4d13-a54e-cd873d14a6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9648bf7b-42af-4b75-b4eb-617766e539da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3c37f4-d379-40ee-bb30-30cf5e95f179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1124c36-9f4f-4de3-8e49-f52a2a0651a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6332d529-73dc-49dc-8461-6cc07e8f387d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0a802c-edd8-477d-8b2d-64e6404b00a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2bc665-fb94-44f0-84e8-9eb3086b5795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ea46af-7592-490b-abfe-ef6082c51324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "decb5d61-698f-4f35-8c3c-e1df094117d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0772ed86-a55f-498c-8891-ca54ecd8850d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca073ea2-753b-4d39-90d7-ac6c98e337cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd3174c-4cbb-4349-8e41-3727b8112780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253bd813-8311-4cf7-9193-32f4534b0ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "21df4728-ae38-47e3-8a09-1b759b64e4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0aae9d6-1986-4a29-b2d6-b745a903085f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae7f5d4-2cb3-4eca-8cd7-d69779d83530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dcd0d5a-f669-4e14-963d-cbaa484139fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e5a1b4-58a8-46fb-b7e0-8a37472e27e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "39c4b60a-47ff-4c70-af39-67d8dd0d8ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f542d867-c391-4b1f-9986-a54762dcbe23",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3d5531-d669-4d18-8fda-362cf29ba392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06318dee-6ae2-4d73-ab1e-cc8222b6b2c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ede3e4-63db-4fda-a2f2-4e1bcf7a1127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dce3a7a6-89d1-450e-a46f-69084b69def5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5a2e71-1154-4a9d-b6d0-e1060f71592f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1c066e-c725-4adf-995e-aefefac66894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350beddc-4da1-417d-88a3-4d876bfd5524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b460caac-644b-47dc-b0c5-47411ba9b839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c5f05b-889b-4ab9-8df0-f6c60de1b8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184542ba-ed05-4d5b-9219-2b27905139c3",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753556ca-d289-47f4-906b-a27aedff131f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467821ef-414f-44fd-82ea-eff93448401b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618d1fea-fe2d-4c68-94b4-b9353f02bfb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd6f525e-2153-431b-8eb5-bf9dc99a22dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802752da-6b47-422e-a0ca-aa4d9052d1d9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6121d0-a375-43aa-9957-4978fc635516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27984ac7-dd55-426e-a2d8-afbca99143e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ec5a86-5bdb-4145-835a-4bcab59d520b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "31d35a8c-5a06-4bd9-a450-69729f7514d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fbcba85-129f-4fb7-85c9-5b7df07c1d2c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cfe343-e732-4b6e-afd5-1987cad1b2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5caf30fa-d842-416f-af3f-f039784e1caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62da409-00dc-40b3-85ff-49fd8b2c6583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d82c5fa6-201b-4f81-9b66-ffe02b4b9069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145e803e-7d82-423a-8bc0-582cad1428ab",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff61ba1-d584-4dc9-901b-6b5311548bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aad6093-d6dd-464e-892c-48358ebb71d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65f7c3e-765b-4b6f-91a8-e740b10a0217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b80e401-4dfa-4f9e-8e24-ad255552f702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc9a6d9-cd96-4bd7-8a36-46c1aa5d1573",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed8c8bc-3003-4c4d-8cc7-df20fdfe7aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde4aa7e-7e4f-4c3a-89ee-156de1e8027c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c934d1-c4d6-4592-a6d7-8cd2877c426e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f41ab2de-0763-4700-85ab-9c7b6e7931bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e3b106-a803-4c72-b69b-383238853940",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a906db6b-33eb-452b-a9f1-64ee35cda333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e49b7f-84db-49a6-900c-f9e58f59e155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6be07fc-364e-46b3-bd79-c510d1a30d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebacc4a3-c04c-47f9-90a6-8bef1d623692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029698cc-2864-48aa-80c5-8c0e1a5efc23",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107c5cec-9350-4773-b14a-b817a86e7c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff048fc8-42f9-4820-af61-1dbffda121b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c718198-eb6e-4efe-9890-15f0d0fb6341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f57e5ab-8229-4a90-9b56-ff08692d0971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42078754-3462-4944-bacd-5a052dfa29f9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea032978-8255-4b4c-856f-6b3c6e7ed6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "077f3835-5b44-4e86-b33e-039551d647a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7737cea-fc27-4d4f-8638-dd08c8a47d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "221bc7bb-21db-4ba6-acd8-0b4a087c08a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c75a24-e118-4e1b-8586-d8a334805e32",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26be1029-f9d1-4199-b126-68d55135860e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea754d3-8a91-4307-84c7-341f568f20b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011831cb-0306-4f97-9d85-fb5cecb07e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1508d32b-0bd8-4add-9382-8323bde047cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eae0a7c-506f-4e3f-8a25-990974046cba",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e78421b-423b-4640-b21f-80b6f38a37e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "008d9750-fab3-4bc2-8bd5-62978fbe5a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be42dc4-5068-4b88-9df7-81c1f15064dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "952e67f3-1fbf-4036-ba64-b962f9942d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b61dbd4-4603-4f3b-9175-7c8fdd87e94e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f1bc65-78fa-43b2-a6f4-c2d0ba4cb3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd72c09-5dcc-4375-945b-dffd80a4f5e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ccccab-5af1-4425-b0fa-ccc3d8d07cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "35727253-7b67-4efd-a1a1-0bd4e7b9135f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c74041-3dd3-41ff-b2ed-11c41c08602b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96d773f-a35f-493d-9122-53b62c4e2d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "298b68c5-c0bd-4931-8373-0fff87123cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc46ec42-da36-4ef6-8045-041d2ab7c5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c30fc9a-751f-4474-94f3-8d1c899bce5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f55c4b-97d4-4041-99e8-ef9203108fd0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92577414-c9d6-4fc8-bc13-647b3922af6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e4d59e1-ab4c-4ae4-8ec7-c7006d4d75f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9ba157-df49-4221-9195-468ee9d4390b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b1f3956-c605-420a-a507-f3915c053fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6ad23f-eeaa-48ef-ad74-f7d157c0a891",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ab41e8-b699-4eaf-8a72-2db3fc0bc960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46edf5e7-a55a-4212-ae36-ef8f1d8c63e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8354f4c0-7a0f-4251-ade4-1167ace0dba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60534d85-1415-4699-8e3f-bedc0535c5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2496a3-0946-48d8-a01f-47207e19147a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa64f98-7892-4c0e-bcee-b9ce98034841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "987724ac-f1c5-451c-85aa-b7fe6e32d3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790c5e45-f7ef-4c84-a000-78d1a8275e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cde85a11-8343-4e35-a516-9585e2ad6e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745dc246-242a-42d6-9d09-1c2f9656583c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58610704-0951-4038-b079-b03261564ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38cd14c-a6ce-4692-94ee-e82f92ca5f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a206ed-9c6a-4603-b5c5-20c7eea18110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4af9fefa-a3f0-4b0f-b9dc-afba2f6ac046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6e3d05-fa02-4e41-ba32-fbb8b6f71bfd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8204fe54-6906-447f-9a85-1082f4ee7050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88976072-f01f-4de2-8364-797ccc7dd88e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876a12d1-4c14-4073-93f9-cb5b31090da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a84c64a7-254d-43a5-9fbd-6fc7bc24430b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa61e18-0453-43a1-84d4-73b0359af931",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f090c13b-7c42-4191-9cec-cee5ad386b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48421aa7-1d4b-4f8a-97f8-fbda56870dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21289281-cccb-498e-90db-6c8953148598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dfa3903-370e-4382-872e-2f5fcd4c45cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da077e29-0ca2-4c55-97a2-5f1af3a42155",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f43a27-6842-4595-a86e-6bc43d03a07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f06a6e-f6e6-4e9f-9833-a289b75d66f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1aaa835-9365-4d68-8c27-6641f9afd24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "50a1dd09-2d31-4138-bafc-02380f017dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7e4c74-2e99-41af-90ee-699f2670c9c9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb06c38-db0b-4982-a657-068c1ca27162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48542679-15df-4b8b-9270-2bd97b26f900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2e381d-b6c6-4fb9-a352-e755e1f362b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e2b3841-0e7c-4df7-b169-1fc90658172e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea69863-6530-4073-b597-b57ef5d7186c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ed4091-64ff-4ba7-a677-807c8830e6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ab5f13-5629-4bf8-9275-381ea818186e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78684332-3712-4f7a-a629-81c40927947b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c98f4e8d-9ca6-4dfb-bef2-464d417bbf2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e36d88b-bc7a-4508-b54b-5a356f6e5835",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e7faed-5634-4a84-8e9a-90bde42952e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1882ec01-f5fa-4776-8b65-d0157c4dee07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4498661b-d18d-4749-82c2-54a1931229f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b401418-5ace-442a-b11b-37d61cf28ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2edfedce-91cf-4e14-aa9c-ffdc9f9332d5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cba12a8-2302-446f-9566-5bd92c1e5561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb7bd77-cf3c-45c3-851a-4d3b4ca7db6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6b473e-6d2e-4ce1-8a72-7481572d7aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ae3f723b-dca1-4841-8532-562c44d4d2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53cc5901-a1c2-49d8-b55c-108c4b3dbd7f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edb9170-c2e8-43d4-a7f5-50287ae98452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8216904c-2ba3-4ac6-973f-b4b18bfebb24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b3dfbd-0d87-4445-afdd-fe615c542576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "80b63468-5e3c-43ae-9bb3-22d12f26832e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4915bad-d7b4-4f47-99e0-e8a4ae734fe7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4217c84f-a18f-412b-a432-a2b304d7f6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be0dd50-4300-4c1e-893b-6eec5ded07fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c0c5c6-eaab-4209-8896-11e5ac8a52ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0a98bb5-6239-401a-a9a2-789eced0dfbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04db1ed-7736-44a9-9b4d-5f3307c631ff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea83bcb-301d-4b4f-b7cc-f7d35e0981f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "786914cb-4e1e-4c5c-905b-f136ab384da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0f6fbd-7888-4e7c-a16d-681dea2b3768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "10225b6b-80a6-4755-9948-145155f67ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fb4fd8-0e05-4f27-839a-82b6c53f969d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3554e1f6-c00e-498f-9d13-b036b18d084d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a6e3fe3-b2fc-44b4-b027-e3045c574097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c9f2eb-b5af-4218-b4b2-daa020d037aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d844e7c-ac70-45ed-8297-80c4f0c06b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaee0119-d546-4b30-8f7b-943da534fe11",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cf32fe-5704-40e9-8919-4e59415362e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9285244b-c033-4cb5-978b-66227ac52dbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573a2865-3ab5-45b0-be8f-728eb2d8e39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "39f49794-5db0-41c8-bc32-e73fad0323e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a0c399-eaa0-4ae3-b270-1a0298f6cd73",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abc6804-64ba-4ebc-a501-1027e1f6cf8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce63922-12f0-400d-a46c-95c082cb64fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10549eab-8f34-4dcc-8295-befd5e172dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f3feaf9-a3e5-4232-b262-b0c44f6ee3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d9c62c-08cb-4040-94c2-840eca8c08ad",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0071ee-cb12-454f-a638-de7c69b499a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab93f0cc-6058-47b4-b5f0-cf88a7614ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f3b415-8cd0-4cd7-b218-0329b091dd76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "958eb640-2d11-40cb-8898-1cd738c0a679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38e2569-0eb6-4521-a4ff-ca74b9fd7b92",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4c4c4a-46c8-4bab-9934-e1aeb4b659ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b37b1b-91cb-45e1-aceb-db89c14b403e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8c1e49-4998-445a-a7af-e2fb968e2a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "888b42ab-a88e-4db9-b38f-a21e7b687e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6dd3e06-8e6d-4742-8b30-1cc3f14b7ba3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60a955a-8ec4-4181-8f99-896c7975bc4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be64e36-d4a6-4a2c-94af-cc998947d6c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d4589b-107a-4a72-99c0-be5e4266b749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88c36dd9-9193-4da1-bd62-544eedd805f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807e0cbe-4e42-4248-b6ba-968548e03474",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "597cdd50-54c3-4a05-b7ad-389ac712cbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c4d4a4a-30c3-40ad-9c59-6279773ea43c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07be9943-2c16-4bba-924a-b831dcecbee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33e11e77-11b5-43d7-afc7-02672d4fcaa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58058f32-2fa8-483c-a40e-ef492aff3c17",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42bbf7bd-0757-4ca5-aa20-e5b778f1289a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a412e0a2-eef1-4ada-af88-7322bf89d9cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0072b5f-a023-4dff-8605-05e8611d4c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4da79f09-61e8-4b52-bdbc-3401659ba77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3407fe-11c0-446e-a6ad-0ff279829e3e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdce0106-dc87-41a3-9b0f-feb6056ff320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87984f60-8efd-45ef-b3f0-b13400e776aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c17f6e-75fe-4759-ae11-ecc27c86ffbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8521b75-20a6-4cbf-90a9-d6a52c14eb40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9188db-df84-445b-b5f5-46f8e3a7095d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f905325-76f3-44e6-a76a-f12d67a021ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e725ea6f-a922-4b8b-9307-3be02feaeb78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdaab03f-aa6d-4c6a-82f2-5052aa2b9be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "659ac18f-7b51-40ce-9090-123818cf4cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238a6b77-8885-41a3-a355-1733cfaa6b71",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3987caa5-5480-42c2-9ba2-bc704db3a886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b38c614-fc92-43e8-b8ba-818076918cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ebce3e-33e4-4452-979e-cee801abd7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d1c6237-4858-4393-925f-10fdfb2a3ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d178c8b5-83c7-4dd6-a6ae-1ed3e6a60dd5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3160c0-8a1e-4d53-85a6-45df43ba99e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b5dbac-ba71-4d91-a8db-33543ed4897e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b92a0c-51fd-4898-ba0b-b3c3103ddeb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9caf399d-5965-4e1a-b1cf-9bb59b4f8a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5ccd55-641e-46eb-8a30-742c8808cf82",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d35a04-3d34-437f-8c60-5151038b6d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64305b74-bdcb-4a4d-a31a-0b4af991b174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954c7236-f0c2-453d-8cd5-555e9fcfef21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8abc2a1-4f45-4284-ab9d-f38227ef1e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c7429f-9859-4630-bb6b-6660ef041de9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d039d67-7cfd-4ea7-b5b5-ae1824c88f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600dc3a0-fae2-401b-b1a0-74005b6dab97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0437bf8-b578-4afc-a0bd-d25af006fa94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0a1da70-99d6-406f-a570-301487688b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16a7637-ad4c-4170-a427-b164343884da",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d14ff40-c5fe-4f26-93f0-f39792895230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1faee2ce-f5bf-4c0b-b646-7d2db65f563f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1f73de-6913-4592-bf2c-1400b17d41ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f653459a-3094-4fa4-b8d7-53f6a5f00c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b966ce69-c643-4d94-b632-be67a10dd614",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1d0e2e-02fa-49e4-b4ae-adae291052fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26f443a2-6c0c-4681-9c1d-7edc2bef3d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c269f33a-e251-4bc5-b28d-dbbc9fed11fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d04dad0-dbcc-4e08-9aec-98cc1e6dcd90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca827f2-7f2e-4ba1-8be9-6976c16c7f43",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d529617-2f92-4f2d-8db9-099291fd7972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b41a0419-3480-4bb8-b5a2-0fbf3e9bfa2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053cfb91-a7e7-4e9c-9d4d-1d7e02ce5a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0318af24-6555-46cb-8c0b-f3d45731e18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1bd3e0-cd99-41bf-9f93-209f4aaf3795",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64444e6-cdfc-40fd-beb9-5e352693aefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb693ef9-4bee-4cdd-bca1-a1f460a4c79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee96dc82-c3b2-46ad-ae77-5052603904ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d65e40bd-3e9e-42bd-9be7-875305a09d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c1c544-11d5-4d96-b4b7-9fbca68a416e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbd3fdb-0af3-4d65-9dce-26a456f10af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2422c65d-9948-409b-982e-95f110a37adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c675f8a0-54f6-48aa-a24f-e6bf3d854288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee7430ac-86e3-42e7-84f9-f1dc15e0f850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7cb35b-aade-45b4-8a95-52dfa98981ba",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2f7022-f265-4969-8a68-b2bad9f888d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2893eae4-0e66-4660-9da1-f751185b5f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b398b82-6806-4441-bc9e-174d046d1e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "28536a0b-f2c7-4b79-9c04-952fbccafd27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d433ff-f105-4efe-923f-a97c180083ac",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4aed08-7807-41ee-87e9-e8222c5fbf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc4638a-19d7-435e-8c83-2a9250b76b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72002bf0-582e-44e2-af77-c78abae2533e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "39f36c1c-9580-4984-9e15-1b213e11ac5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60f9d2b-9f6f-4188-9f5a-8ffbea44a195",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270b1d6d-ab26-4499-817c-aee3f9be3eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce8978b3-8d3b-4303-b6f1-d7dedbdadb37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83858faa-80cc-4889-9acf-5e235df87929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0d1b45-f4d6-4967-90be-8c1aaa6e0e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8aa26f3-d64b-41f0-a7c0-005aa8cea995",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456125ac-b312-418d-afac-d7fe8b86b463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4fcdf94-07bf-4f70-ade3-d4086f79ca5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137077b3-3e07-4bdd-81c8-a32a1c8cedc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47a2cd39-5b0a-4436-8cec-770880da1759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861e10cf-6413-4d6b-8c49-87a874b46f24",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebad095-5e89-47d7-a3ee-b25e26a219df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd986336-fff7-49a8-97ce-77166134a4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2447ddbc-20de-487d-942d-d6c2431aef21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "994f6e0f-bc0c-46cb-b348-08fac6cf56d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c157c7d3-6016-435f-ad02-724a90c4d3a1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553c4bee-4603-4d4c-a767-3013f12f9447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737a8878-a3e9-4a7c-8b51-821b15e9abec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d695778-6232-4196-865f-92caaffc8419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f54c2f3c-51a7-4326-b22a-4139f9a005ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b884fded-5ee2-44cc-aef9-23b0feca9c81",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab5eeaf-d0c6-4e87-8cd2-1b162e894144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c0e4a7-8ffd-4c40-a3ae-1069f79287ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98f7d9d-0955-4428-87b5-72d566daf97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "abea67b6-8597-41d7-93cf-64b83dda4189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c48cb8-fc8e-4125-a009-b35866484b16",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b367237e-0bd9-48b8-acc8-79c0b94160fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75237b01-f721-4c5a-9432-0d583c75d8b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30483e05-24b2-4bed-b6b7-38262e0640ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "682827cf-4427-4a00-91a9-c930abcf4019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de846ce4-ed25-4f45-83c4-d8913e6e46f9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54caa875-44e0-4f98-ad87-4e0cc3afb1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39038136-b16f-4a45-9b76-783c75782fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a749c7a4-5711-44ba-915c-600b1dde859e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b478a3f2-2f7b-4b12-a8d7-e4a7301b7a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27fc17c-da48-496e-8156-b0b8112acc0b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f04382d-2437-416b-a0c4-e04b852fa69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c656f4c0-fe22-472f-bca5-9b96464b24e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f6d84d-45a7-49be-92bc-2309a831748d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "735748eb-76e5-412f-9298-bd0add8bfc5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ec30b7-94cb-4f6b-86ff-784a79d34457",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d291e5-6713-4cf9-82fc-97171b05ba1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4655d597-0342-42bc-80e6-cb64a5172413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c995474d-573a-4926-a37c-7ce3da7e682c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a9199fa-4d5b-498b-9616-0f192638efa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93890af4-d978-484e-9a8d-a4c8e9031c63",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637786cc-e020-45b0-9b57-3aa10093df23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55aea566-83da-4594-9fe5-9682e924462f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2c6479-beb4-49eb-add7-e1b069b9ae1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc9b8dc-6df6-444a-b516-7cc2aec1f5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5faa450a-e92c-46ab-8c2c-a3fe64c60daf",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e570247b-b064-4e02-a345-28aba698a286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce93fe3-6290-465b-9516-9b560a244f4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383d6441-fe90-4ff5-a94b-674079a6e75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b20884b0-1e69-4dee-9d71-5df32224c9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8736e52c-b9d7-4318-b484-cf39837b84f9",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2925d557-1a3e-401d-b6b8-0bf6b79a9541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4798c5f9-2db4-43ff-b0ac-ed9bebd47ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e40b4e-e0b4-4c4a-8690-a179d4b8f48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b5220cf-4f43-4a92-93ae-c14f1ac5de24"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2cc493e8-90ab-46a2-acc0-32987683626f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1507913c-3a8f-487b-a8fe-3af9e28cc07a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df9a5fc-6ed1-4abb-887d-c23feb0c05da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f94fe6e5-5445-44ca-b2c2-b15ce80c5c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2dd580-1c3e-4f53-a367-7bc79e3f0b21",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ad95783-4b89-496e-bba6-73715723ee57"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64d7f002-e9af-46ff-a2c8-408f3414d6e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d755bf87-18c6-475e-aca1-406efd6e0547"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e76ddd67-a52d-42a8-bd80-f7a1b2d7b7fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4e7907e-4135-4629-94db-974d1670cf2b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5ebbb16e-b64b-45c3-a9c5-e5da344212e9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "434fa29f-4356-4218-9e87-e4989c46c2af"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0f61e2a1-1d60-41ab-9a03-c6498f2395ed",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e900df04-b14b-4124-a2b5-c7437a99a294"
                }
              }
            ]
          },
          {
            "id": "7dc1d94b-425f-41b4-8175-f79e8685db5b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "004e7055-e42f-4076-ac07-005fc884bbfa",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "158c82d4-a5a9-4e8b-a56c-1eeea29b7b4f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f865675-259e-4e9d-9e70-2b7ca6796821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7588811d-dc0c-475f-b770-1e46d5105d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fcd885-41d4-43cd-a276-ae6936188756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "847675ba-c00f-4769-a801-b8edfaec344d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c00e88f4-3496-44c8-bae0-995b7dd0e6eb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a207c1e-ca74-4f93-a29b-c164af8a78a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc03f50d-da15-4d70-b49e-035efe875bb8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4167a449-974e-4085-ba57-c120af045333",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6337e966-c069-4655-a2de-18f3ea656c7b"
                    }
                  }
                ]
              },
              {
                "id": "a820c9af-a5b0-41c6-ba95-a5ea1c628409",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6694bcc-b65a-444c-8ef5-190f9657a05d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35cd91ea-9a9d-4c83-9c3d-78f1fec36bb3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66c989ee-01fe-4892-a614-03e60154887c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bdf4271e-f333-4b5b-a8e0-dba44c506587"
                    }
                  }
                ]
              },
              {
                "id": "ec84f87c-2a33-4157-8573-a1e90e410ddc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87835832-f719-4a70-9e80-f634343878f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "756baf70-5100-4532-80d8-e1d5e601a90a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61def1d6-50be-435c-a299-9cf88eb33034",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "24be7e2a-adb5-4059-9dd7-8b755c5de0d7"
                    }
                  }
                ]
              },
              {
                "id": "308d752b-be9a-49f4-9966-d426f1a44fa8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f26ed245-8579-4ae0-a775-b758b83c598e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df491887-76d4-4e5b-b7a8-2d23140c27ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcecb4fb-61f8-4c0c-9b8c-61edd5d103aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d57d1d8f-999a-453f-865f-835ba182be0f"
                    }
                  }
                ]
              },
              {
                "id": "c329408c-398c-48ad-8955-da0d42b91476",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e68d505-6bbd-4b6c-9860-45606b148a23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "02d4f8e2-9ed7-45d8-9c23-375ba4b0a7dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cba7ba27-d13a-4359-a890-6bcf5aafbd85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "223dbe1a-61b0-439a-a79c-4824bb3c0b90"
                    }
                  }
                ]
              },
              {
                "id": "80a7db3c-b6a3-4e6b-bef8-f00b22587d8d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af2b5b69-5c2e-4668-a8c0-52e6945870cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92b12ec0-87cc-4789-bd42-413fd2ed1f67"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be7b750c-45fd-4384-9947-b3591a867013",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "91b1b3b6-a8b6-4cbd-95ed-9541122cacb7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba2e17bf-cdad-4670-8ff2-0004a08e2a5a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db5ed541-4c13-4ba5-a9fe-ee3a44185f01"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a5bd2ba5-6142-4876-9b9a-b6a848981698",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b7ff5da8-2bab-456f-8a3f-b5ef7ee85a3c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77aba84e-988e-4afb-b2fd-d76604de1d93",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "006acd5b-108f-4d12-a4be-5febac4a01c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1814c29a-5e67-4cd6-991c-b02dfeb7fda2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56704f37-c823-4086-970f-6dd372c081bc"
            }
          }
        ]
      },
      {
        "id": "085f8b41-a02f-4a22-97ce-b3b950d1ef7e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9d84acb8-43a8-491e-973c-9231d268b490",
            "name": "Negative Testing",
            "item": [
              {
                "id": "59f97a05-928a-45d9-afa7-7dbbe642cd7e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "73b75d15-9ccc-49ff-8d86-a94bccb8d7e2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d46c9bd-0315-4f44-a335-e6c84d885c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88fc90af-7ac8-46c8-9922-0c2b6154826d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c706c7e-ed66-4db9-bf13-51e93bd67597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "bce271b8-6604-4f91-abd8-f70c90b79d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f24630-fb79-409d-a3f5-4c3226a1982a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a682d0ed-87c5-43ad-b7ad-5941f3eeaa55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3cec0d-3255-4b1e-8897-acc1aa343653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa29371-016d-4dcb-9af8-1067dbeac1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6664c66-04a1-4bc3-8b9a-bd0ee5e4574b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4878f0ed-8cd1-4e96-b751-b0e384f7c0a8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7dfedf-f1b5-465b-a414-ee44c877ef0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8125ed-5c2b-43a8-b48c-0bde8a3227a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f5e43b-a265-4ccc-8870-e0589040bac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44ab39e6-a2c3-48b7-adca-056c175919f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d13fc07-2f61-4596-8297-5cc197f474e3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6483a4c-43a9-4035-a332-6feae5d3b855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa8f594b-c3c6-40cd-84d8-010f9194a513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6327429-2c9b-43c7-acbc-ddd0b0139bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b61b0dd-c14e-4087-8f9e-80e2b06c6f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b44a50e-b236-456e-9669-c430c74996d2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c1dbfa-69a0-4136-8458-18e0ec346821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac42ca8-e4b1-4475-b809-b5f396a42497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a380ad-7e1f-4e76-b83c-1acbb2de33bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "627ef5ac-0350-436a-b082-0d45499f9ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0f8f08-1560-4889-991b-b21efc896d64",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd98cfc4-e854-4390-b802-96d7a546da79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2257fb-6100-41be-8116-f1b1df8339fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e940633c-44cc-4113-97a4-26f0e5bcd745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75ac0a60-8ab2-4759-af63-a7d44e02069b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f063ba-c67e-457b-87a1-07792cde1917",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4026778-3c28-4995-b72a-9513cda43c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be6d994f-4835-46fb-a4f2-e1f4e48dac72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be23e294-b4dd-4122-bfd9-4cf5d1577d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b9b076e-9aeb-43be-9cf4-a599e0b3c440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433c2631-1d32-471c-a412-59499f3b9eb5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc844524-d680-475b-8cfd-34b0206a5d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52df722-d3aa-46aa-bf97-6d747d3bde0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66b8a77-6390-4706-8e8c-ae5d17ff0322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b4ca8c2-367e-4157-9f61-e60b028155ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b6662d-abfa-403b-9619-fc5d50689816",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2041c7a6-5675-4f44-b323-7b47f851a088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c43f2e2-a13f-43a2-b98c-4cbd01d590b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3796724-5c19-4575-acb8-95e65f445406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "265894dc-fc67-47f8-a7df-941c1e1ed008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e636a7-16a2-4624-bda9-96a8ecf6acc1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad67ac3c-d302-49ae-8f14-ad1552fa47f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85942f7d-9ca5-4038-a240-7a1e24081a12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65deef44-d504-4af5-8156-469616641861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd28a9ef-2070-4ea7-8ed5-e6a7ceb3e45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3328d6f6-f115-4b4a-bde7-726b7bd1488e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1b8e2e-7560-4d6c-946c-11ccc936ff5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e297fd3-149d-4795-bd60-9cc5062fd065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbb79f7-906e-4054-b80a-fefcf97287d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7fbf76b5-e20a-4f74-a29e-ca75ee184ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab1c1d9-259e-4613-95d9-cdb42f54979c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243ca4df-ecc2-44b7-bd2f-54e253fb8aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a49bb0-ca3c-4f02-99df-6ed68a6d5cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351384f2-7f3b-4271-a6c8-afa525ae6466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6245c6e8-ae31-4680-b266-c7999fc34d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ddaaf9-c611-4511-9c40-72a33fd827b6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9820821-8783-45b5-94f5-7e4526f6685a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae0bcbc-2fb6-4aad-b573-510a51500ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33a8ccd-563b-4c54-a770-8136f17cab51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa09cc07-6fc7-4a7a-8a7f-dea836369a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382bca78-afac-42ec-b892-2dc2ba1f126d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0a5591-91c9-4dae-bba0-3261c914ebe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00464385-e76e-4707-b520-1e2239c127e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744a7599-1bc7-48c7-8ce1-610472173d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc67e9b-9224-469a-9e91-1747c3ee54bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48aaa466-9116-47bc-b315-e1942677f3e4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f983b5b-71d3-47a6-a6e4-e880c6c6147c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b549a995-3e20-40dc-9073-6e0cca01b38f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a00135e-9567-4fdb-af82-2e103c40fe43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f50470a0-5b74-45fe-b12c-965801725dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7274555-483f-453e-9255-ef7f5eaf7fb1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c0ac64-d866-4a55-9539-7284e19445f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6400c8e1-952a-4ad5-94a5-b07d99dbff88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a932b642-6d8f-41bb-a28d-4914ffb08164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa6fc5f8-6533-4304-bdf7-c607a806cb77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2fe30b-7f07-4f47-af09-3d36db57b665",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e26d7c-cf00-43f8-9501-7b6c0c9b8b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d2f5bd-4c6e-4bdc-b84f-b3f3b92e360b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecfae81-10f0-466f-a552-9fdb7bffea68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "88d20fc1-52d3-4fed-9721-f6ff244d9b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ecb457c-0419-426b-820c-77237271e373",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dacacf6c-0b3b-4455-94da-6678fc8be5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9831644e-6a09-4dc4-8b0f-30097bc3e096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1090d463-c89c-42a5-a245-3bccbdca370e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc671c5-9175-4fe9-8cd6-ca308970343d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4171b07-c8ec-4be5-94d2-f8bb93665d8e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3f7c3e-ea99-4006-8e3c-45fef45bdc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a95e0f-9c55-4386-a7e7-e5b71b3160ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb94e8a-94ac-4ed2-800c-1e1f0382737b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b29e80b-2389-4140-83e0-5be4df0d5d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7f3457-924f-4b61-868f-aeb59c8629a4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa6146d-b7c0-46a0-8656-8c57d5014627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07272ef6-0406-42e1-a097-cbc0f8d2f0b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11b2e96-177e-4f9b-85f6-0bbb15a802f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fef3e4fa-9946-4c6a-8b86-28fb76f7d652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e185e3-fa4b-452d-a0a8-4ba44f848c5a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da9cbf5-80c5-41fe-866d-55ae0789b7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02e15b39-4036-4cb9-80a9-877f09bb392e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c786f7-7224-470f-b2ad-b296fe626ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f50fcfa5-f25e-443d-ad0b-9dea38f04ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45551bc4-270e-401d-a315-5ac19d85e069",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7044a8-53f8-4eee-b648-a3bcad06fe0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85cab66f-e8c9-4462-ad64-5ba4a4a5d31c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1960f861-677b-4a76-9eeb-d7bb6dd243d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "491c5837-38b6-41c3-8baa-0986ebc75652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ed17df-40d3-409a-a66a-b08d883c6fd1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f2a32e-93d9-42d9-8157-ec59ef0be633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58244c1f-d47b-4165-a307-72b6528d70f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df0cae4-6e2e-403e-a0f5-7ee8707c0384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6cff31f-9814-4586-819c-af47c1ef0eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb2501d-997e-4a7a-ac4d-ef2a81ecc555",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41ee7f9-4a6c-42f0-adc1-d1f7d139af54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e1382b1-da92-4946-a310-d27ba561793c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac43c35b-30be-4422-a82c-cada61b9b06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef06bc8e-3f96-4c0e-99c0-9f6114be54f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a182df72-08a4-49f4-9161-1f0a55cde5c3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f65db35-b5e8-42d7-a338-697c7c17d6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06683e95-4b20-4e62-8d09-2f784cb0e9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da1c1b6-41f3-468d-936e-fe3c488867ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab0bf9b5-210a-4ada-82da-a47d42169ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c1728a-fad4-4776-9085-65ec16573457",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132c2ac9-becd-4f00-ab23-dfacb77b2948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb4073f-f07e-4449-8d2d-a65a06d2ecd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed990ba6-b3c3-4ee9-8349-41edecfb2cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f58dc46-c6f8-4945-897e-4e60d3fddcd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3dbb9ce-8f2e-4d20-b85b-20ed0ecd8f70",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d3c1f1-9c53-44a9-81b5-1f07896fd7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48fb9573-4f22-48a8-8f01-758987637cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4320fb7d-9d58-4057-b2fa-a2ffcf4a8966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2c6150-81bf-4eb2-a6f0-4bcc937d35c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b154831-cd0e-4062-9d15-73fa5565fb89",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab9cfea-ba10-440c-a50a-59ed21653a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07aa1a05-e4a8-4b80-aa3d-ab751ea5c4be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28c6cce-11fa-4d0a-bbea-99d057e3fed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1210fb1a-48e7-4504-a5e8-3ff2cc3c6a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf41fc7c-baad-4352-9d7a-d3b0b6ea82d5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8469cfac-60e4-42ea-a577-d1eadfed43fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb0c932-4c20-430e-a300-2137aa1eee8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3384ba-68c1-484c-bfff-b40a9feb3c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a7bdfd6-780b-4bbe-a7cb-3ac405a59e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad65da7d-3777-4277-a48a-bd6f3d5b90e7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac24f6e5-73eb-4480-8d89-f86d1005fb60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b207d61-ac6a-470c-9144-c9a69e8f4472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23aec5ef-1ed1-4827-b7f8-b3083d200f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91a86606-9084-4df6-9ddc-53552ba8fd90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c9642f-e084-4942-ae07-dfeac6ca11db",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91a323b-3faf-4f02-840b-be7753abd667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de1c143-f658-4a2f-b089-d2059a4e20fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5abc2a-b3fc-48a8-8585-c35eeef192cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b63314ef-49fe-4b1f-9002-c8f15d29479e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9499817d-d914-4a15-910a-5d3b6f6a6ac3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed707f0-c94f-4a30-9f82-b4942a6b9da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "841917d6-acce-4430-bbd6-8aab4e83ec25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1bb8e1-2f15-4f80-a224-a8c41885c43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a690a34b-18ff-43fa-8bc9-b7b940a0d6d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cf3e4b26-1bad-4757-ad8f-8bc1e327476b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db0c3bfa-ca05-4324-8f65-8348664906aa",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae361f1-cd3b-4fb6-b747-407912b636c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "44645425-2435-476b-9d0f-5c77d2cedc17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb575e5-b2bf-428a-b9af-c4bf7f594903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3084cdf4-2e9e-451e-aebd-2b5a9542ad48"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "958fe9cd-23cf-491c-b450-f9c09cc19a2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "688212c7-a298-45bd-af3f-2956ca941d81"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "71e6e4af-28eb-4613-b5df-1950e2164961",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8ef8e97-d5ca-47da-8fee-a38b9dc852dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a4ff031-30e3-4d6b-8fda-29e961d27987",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a2fd6942-6cc5-4052-ba05-eb03958f50cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4db0071b-1ce7-4f8d-8f90-bcf70b4d9aba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "847c6ab8-e4d6-49cd-984e-221fb137306e"
            }
          }
        ]
      },
      {
        "id": "2da4a1b5-3169-4a8f-8b23-a1bb2cd08371",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "7c1909c6-fdb9-4dde-9dcd-6d3a1f83c0e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f62a459f-73dc-44f1-8edb-b75c6042fa49",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5d965f7d-169d-476a-af79-3b308817f543",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7901a6df-b87d-4e44-b5f0-dac0e151056e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd056a1-fe28-4ddd-9031-b0fb268cf9f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d207151-b5dd-47d4-bb70-90cfb0cd1bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0661426-8036-414b-8740-00d731dea791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744e18d4-394c-4acf-9fa0-7b795545fcbd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1406f3-e36c-44e1-8784-d550058ef651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d715001-a376-46ff-9e2b-10bdec7f7ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3a7a89-ea29-4e91-bde1-fb0aeef94ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "abc6343e-6668-442a-872e-55eaffeeac59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1c1968-d4f8-4ed5-9115-b46e3a0049cc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ff30c6-efd4-4f6d-89f9-2270d21e85d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c91f74-513b-4a09-88bc-ac4696b203ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7d34bb-59f0-44d5-8b49-38967b45093f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "983451e2-de23-4183-ae68-249f3793adca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7e9f09-0059-4de3-8416-e862d0adf4c3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e70b634-b385-4359-8b48-aefa16b8e5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96fc4c6-01a5-4ad5-9076-c565d0fc8dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58988a6e-0c87-440d-b171-97ab28400b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6dd157-7609-43cf-ae1a-ae5d58e65841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0706d546-7e20-49e2-a4a7-126f8d0bd947",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f96e354-faf7-4a5c-96fe-ba4e0f82c58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b927a9-2ff1-4e93-ac48-fdec2765e237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024ec66d-16f6-4e11-9d98-1ef714c4bc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94d2b6fd-17d3-41c5-82ee-081bc76845f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9725d41-95a5-469b-b840-bcd3d174785d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3035587-361b-4930-b187-a69a41b8de05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f3f3c19-af57-4c5e-8249-fea4f76d1e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5646bf-d238-4cc4-a62d-fc875f8f3cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4062306-373b-4b5d-bf39-cde782a81216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6619b7-e53a-4a1c-ae39-918efa71a0a0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c4cfc5-0550-4681-9be8-7e91127c6bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e92e0e-9bf3-42dc-baa2-dedde0d6686a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0d24a4-1263-4bc2-a72d-7d8da79ddbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "98daa40e-5a14-4873-bdf6-4bd0cc455f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04899726-8908-46ee-a550-107b2af89d32",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecb1c83-106f-4bf0-900d-a2cf6e92f18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6bbbaf6-bed4-4250-b011-d0cb18e5349b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b64f9ba-2e2c-4e63-9de9-28faf50cc20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "50360b64-090b-46bc-8d17-7a100d9f3b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6d4b71-99e3-4093-8169-ab69f77f3a62",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8e6d9c-e413-48ac-b943-40f39cbf29ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d482cfc3-fe8e-464d-bfdd-68df7444a857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da96c79-c63d-436b-aaa4-e770c9584437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f85ca3d3-a766-4338-b695-8e67eeb2f780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97de2977-0949-4519-946f-26d8ca326c6f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e802328-309f-4265-8607-a68366fd1264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "947063eb-38d7-4281-a706-5d705e5fb4af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45c7d38-6cfe-4d92-9e32-33480f8f7fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "165fd639-440c-415a-8283-d89e6ec07b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3d76a6-d5a2-452c-8196-9ab8c352cf7b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c88077-57a7-445e-94c1-53f2762845bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ba17b3-f5c4-428d-8e83-0edbc2164021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee99101c-3ee4-4acf-9422-3a77239f9aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "64fb8e23-5acc-49e7-9bcc-865007a1a6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ce2902-7c86-4bcf-b0a1-3ee1d01a7c9d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73eb2dbe-5e3a-4441-89d6-4f1af50c94c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3094efa-ccf6-49cd-86ac-57e209a26739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6fad61-78e7-4894-b249-35edff3f615f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d83fa8-8c53-497a-839b-1e5a0054e133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a558d18c-80e8-48df-b2cb-a73b14fe9e74",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c12002-6522-4b07-8a91-cf12227329cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6780a882-bf9a-42ac-bdde-46555f64a5f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63eff7f9-3be6-4f4a-86c4-4357c24c9be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaec10b4-0ccd-4214-94d8-0a67c444516a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60926a45-4670-4683-9a32-a885cbf54d72",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3df828a-4828-4fb1-83af-3fb6158c1df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab8c1e9-f1b3-4349-9f35-fab722959633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee029a2-7923-4cd3-b1e9-63943c8d43a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fe6058f-f436-45c3-9e30-296565bb5211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528ed5cf-1e1b-4d1f-b265-883a5a12757e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76870874-c6c0-498b-8366-bcb5c053e15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51f6ca2-8902-4e32-a417-89f4944e800f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91a8cf1-f13e-4309-867b-ebc0b1135cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a89bcb90-dd64-4383-814a-5023c76cd482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed5f903-98a3-48cf-863b-426060b6f944",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f07797-32e9-4616-a77f-e86722f4995c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5402f49-6c67-4e6b-acc5-a0a291b9f3c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a2b9fc-1b7f-4bd6-96ee-488538e1dea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a73dc4cf-a323-4f0c-a5e1-60c305d4d38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf6929f-ce04-481a-a2b9-ec3e7bbb6168",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bac4db-4d7d-45ab-9da0-fb2c01854837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77ea5ec-e40f-4b26-bae4-00e5ed7145c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a7050d-0f02-4faf-bb8f-74d883e5a227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d014dbb2-9fc5-4a02-aab3-bdde1414d136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2cf8b0-fb8f-4008-9ec4-f4b47a9bfbfb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20ac2b3-4d63-4498-8d11-af035349bf83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb5e22ba-96eb-4949-ac52-e6f1c01ffdfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c71e3a2-aed0-4e2c-bf19-69ec018b95c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a35f4e2-51a8-4707-99e3-739238912527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b058170f-57fb-46b4-a695-18180c475552",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c155c120-2a07-4c24-84e3-a7c1098cc18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ec4a83-793c-4dff-8603-4875e0f7d1a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94203e43-afdf-4283-ab10-30c115d7a4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3dd5fec-54b6-4976-bfb7-730e62d25bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201783cf-c1df-4285-a70c-8b621b19c501",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a9c99a-9f5e-4aae-a43a-1c0030f7d3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79cd34e-ad72-48a3-b069-5d9d5a176a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75325f71-e6d4-4823-b457-80a884ac4b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "191e7f83-c219-428d-b9ca-e4c8df1797c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5998b5e-3994-4dac-a55f-909d43e78375",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2f323a-5f20-4fcc-a458-978d4b075cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a2e223-097a-4651-a88f-4d0329f39b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c617e8-c4dd-4fbf-8c55-21a2eb418f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6179817-5a08-4264-beff-1eb7f8ac68b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7134239e-aa88-4d42-808a-f291315f3a61",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4dc7ca5-91ec-415b-96aa-1e59bc1add13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "495eb63f-2ce8-4b12-841f-466873616d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "becc8fc0-6e2a-448b-847e-644a5171b05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33958bda-b8e7-4eb8-a6df-b9cd89e01b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc7e3c4-b3dc-4be0-8347-9e4ebca26662",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e760354d-ec14-4f66-ad94-2c06cf1b3944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2a6505-37a4-4c05-a963-6d92428f2671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f3d6a7-53b3-4d99-af38-3fc7339254f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d9fab8b-00d3-4e38-970c-aadd3e2d87fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f27b49-2879-4b40-bd50-561c5a96d55b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22bfb1f8-293f-4d77-9ae6-44d74db03af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a76bd6f-027b-4d94-94d6-b5ba79a96a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400b79fb-2397-49a3-bf92-4e0db93b6f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fee3ad2b-9d40-4b6b-8941-54b3d7424669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563a6d8d-5847-4e25-82ba-c017d831fd20",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c93ab5-a6f0-449a-a7a8-1e2727113c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f8d4cd0-e0af-4cfa-b0ec-b2281c9f6e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303044c3-88f2-4bb0-8e96-1b4c1306cdbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8eb91b85-4fe8-4e90-88b7-2566498c41dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa4654d-35ba-43b0-9294-c4ed1e7796b8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5863d58c-dac6-44df-9a61-2110e2fc1c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c7bf21b-adfe-434f-b6c9-6e6d3c456eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3776142e-6ac9-4ffd-998d-56cb0c527799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68df4de1-543e-401d-a9d9-dcb044eb64dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b6dd3c-9422-401e-912c-79513ae837cd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffa1077-bf5d-42a4-802a-9179d3ef82cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a332993-2609-40c0-ad0a-b4da12d9906c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c32581-9226-4aae-a82b-c69f49be824f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef286c6-7609-4662-916d-a2ca47aefa15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d29284-2fc1-454c-9bb6-173ed570c08f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62c605b-fab1-462c-b0e6-b0627f878f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f1fba6f-7817-4ce8-a44e-22db9e65ba98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f257dc-b775-43bb-b6c2-7790978b543d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e391c9d-1ad8-4a7f-b6de-02b3d10a1087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d356de3-9a00-4dc3-93bb-373eef332166",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3cedd3-6aa8-470d-834c-453f6ee18e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590cddf7-3896-468e-a1e1-8da900d58d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67b3718-2bf9-44c3-872c-76149d36c5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d13914e5-230c-4041-ae58-5eb45ef4d795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05932aed-a870-4bb3-a089-e70601b99fc4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c23b1e7-1398-493d-8e80-1d929a21a355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a43b4d7-b5d3-476d-a653-4ea8f13fc93a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d939a9f-0eea-4d0a-abce-5a85583a5860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eed0df2-e166-4e47-8a11-fb0d0141434b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd57fe1-d6db-4f86-b282-8e266183a3c5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abdf39d-b205-462a-bdbd-b5e8355ad15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219312df-53e6-47dc-9b69-8dba64fdd022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38407479-105d-43df-8e74-f38049d84528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3eee9736-bc88-4bcb-b476-386ee3f4d7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1feb9d-2266-479d-a54d-91d56676eeec",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2b7255-fe42-4f52-9163-3be6e5540d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f0e1c0-0e92-46ce-bf02-265103ab9dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1a52a2-b666-464a-816f-6cf8e027d90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e0f8b56-5704-4f6e-8198-68784c85eade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f9eb17-a6bf-49f2-888a-53112b61a334",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f8ce2d-2590-4807-ae91-3c84b0c52b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e7c3ed2-02a4-416c-ad57-3a355cfa147a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18cafef-db1a-4913-ae87-28d4e75e4676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc38f7e1-6ddb-414c-a297-a67764d0299e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d65bf47-edc8-4bbd-b54f-a72097162e38",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785ce771-9cd3-4098-a1ca-2f1a563d17f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f1500c-b6c4-4a95-988e-6758dc37c712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a89b963-8b8b-4a20-b9ad-374163110fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8efc00-5707-4e8f-a4ea-852eb81488b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e592e72-419c-4363-82ca-9be0c6f90d2e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42d2654-47aa-4019-843c-58557af28132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fdc4d36-31a3-496e-9f16-8fc9d0b0b692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6901497-07e5-4fbc-8847-21503d6d5110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17c3a9dd-685b-4181-9f40-63c85b85b0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e9da42-9aad-4a75-a1d6-1c85108109b5",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12de4d7-de1d-42eb-b5ee-111dc53f0cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c86867b-eb84-4bb6-bb2a-dd406d6a9983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b86836-ee71-454d-8947-a05cf0dc1075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a37eb0-f458-4a70-ac71-904621725bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2eed7fd-f86e-48c8-ab4c-76022941313b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0e580c-0edb-44f7-bfdd-bb3b5f284569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd06125-5398-41ac-9b4e-3cfae482afb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846ee8ff-6927-424b-9229-255a84b11f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "375b6d76-6255-4204-b221-3b24777df496"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c7e32165-cbfe-451f-96df-342218b85909",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d03e326e-8f80-4971-80e8-2e41bdb901ce",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4d96aa-04ce-4d5f-9138-c26a9c7486bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1769acae-ff2e-41c3-94d2-cad2feb0a1c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4941e463-1eff-4db5-ab9e-a6f682365afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3417136-ff48-48e5-a42f-b541e2f21ddf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae5c480b-1429-4c1c-a25d-016df13dce77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3997e3e-24d7-4e23-91b9-a8081a48fb58"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "124703b9-1fa7-4163-9add-f8f029c0f19d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcc1d8f9-87ee-4e16-ba66-ab47b5f78854"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de29ff87-7bb4-4298-a5ed-8e0a1963c349",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c8095045-d47c-4464-8ae3-191421b60975"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8570657-12c8-4181-a7d5-b58efa609f34",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "97382462-e179-4c50-b940-b9b786612521"
            }
          }
        ]
      },
      {
        "id": "5fad2d7a-d92e-4197-884f-8c08ead8411b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "141860fd-efa3-4691-9acd-1aa299342a12",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f90cda8a-4e64-4551-b497-81837e53770f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a360e60b-ab4d-4e4b-9ea7-d335258b7d56",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1c1ae7-0e22-425c-a9db-3bb906deb4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd6430e-3fb8-479d-a631-1c4f41cc919e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675828bf-1014-4b02-bdc4-b4ba913e2c53",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b12316b-0c8b-4b4c-9dd2-f747eeb49536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9eb73a9-7199-4831-b6a7-78c0b51625d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b43084e-83cb-4e4b-9219-2c02ffb21aeb",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56882b89-42dd-44b8-9ff2-63143d4fb3cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ac2575-64ba-4799-bf51-87d8fc4f3091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c75068-8b28-4a3a-8ae4-56ef6a73fa59",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe07a95-b486-4062-9661-88c41f4e92b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165a69d6-5694-4c5b-a390-49b19ec4162d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3b39ff-aaee-4dc9-aa29-4ccdfea652fb",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf5b8ba-b0cf-4b78-8b83-fa528e7fe3af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925ea416-4de6-4cf0-b17a-e3232132ae19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c1885b-9e1a-43ba-b853-8e17dd75ae7a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d07f556-ed4a-4cb0-b4f8-5b96206de1fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66350461-db87-4415-a7e1-cc5fe7513814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ddf8201-1015-4080-b297-fc072cd13cbe",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b569fe70-ab14-46c3-af37-1e6bd6f5085b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "748a4a08-3131-4e89-beba-afcde016b14c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f9db5c-9911-4ec3-adb3-90948ca95b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5574ced5-91ed-4b64-9c9a-f57add7d7a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cfe18ec-aed0-4eb1-8376-a12075571777",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6568eb9d-48de-41fc-bd62-746e06d2c921",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cce25c5-c2a4-4415-8bdd-fae1054f065b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01115cc-5aa6-4585-8ca5-094d4797cdfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdcb4a28-76b0-42e2-a9e8-4400d80a43e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28dc13c-c41d-4c8d-8ed9-2d2727695a3d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6196d465-9de9-4957-be85-cdd1a92902f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "673c441c-acd6-4c7c-b284-e4837afabe40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84b3742-44f9-436b-91c2-99f6702bc288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1774269-bf73-4f17-87a5-d1b11cc25ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51503b64-e9b7-4a4d-bd4f-377d86219dcc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781a59e6-9018-4688-afba-ea036c0b0b3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d80ced2-9b20-4df4-99fe-82e329094bc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a49b420-9f3e-4dd1-9e0d-344cf53974c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802da6de-404c-4a8b-b4b4-6abbd9dc58fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c878cdea-a747-4639-b8ea-d40d69da5552",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7d0e01-047b-4038-bc8b-e104fcff1171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b54022d-eec6-41f9-a4f7-883d5477bd65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bca378d-d35c-44d6-aa0b-64ecb956aa4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fad1f48-33e5-4525-807d-f67fdfb414c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2cfd5b8-9605-48b2-a11a-beb0b8230a81",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a0a5df-8c09-4e67-ae66-160d650a2a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "775c6e9c-5456-49b3-8fa6-87301cff7817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd1d942-ffa0-463b-b2a5-1cff7ec71aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87907c24-84b8-4002-85bb-d1faba51c7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1682079a-4337-4616-a04a-849b590e7d48",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dcc2686-7765-433d-ba6a-cf3d12ccaa85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41e4a2c8-80a4-4ced-9cee-bd0689c51adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcac80d-d23d-45f6-96de-62a2c27c9e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644176a2-c6d7-4146-8baa-86daf99a98fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e153f5-8180-4f7e-a3fa-3a9835b857eb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8a6597-6743-4bbc-9bd4-2ac0b2e58533",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "769a5a37-2c8a-4dff-8e04-cfe5dd2e1ca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f54786-293d-4a83-9070-7e27ebaf9572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "388fea81-4849-48b8-926a-44a1f536eeb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c28512f-6d1a-43c4-9be3-8a90b7c9590b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc015092-69f7-427b-b650-0c04cad3e1b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bf3899d-fccc-4f7d-ae22-ea06adabea87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39b2eb5-7d92-465d-b515-0d89a3e32bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2703b8e1-7735-483e-ad72-74fab1c02cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ce5896-d935-450c-b1ce-2870d677b1d9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab06495-c7b6-4e89-a809-4c724a4d5bd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0410e112-c91e-4e91-9d6f-1ea64fb43af2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8080ea0b-b07b-49d1-b8bd-86e92d3ba9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d027335-87d7-496b-97bc-96ac36fff943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf21db7-1a37-4d83-956f-b86a1735acfc",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40964728-4c56-469a-b2ae-f762ffc30f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c477914b-6781-4512-b563-f4579311f5fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf9ec28-2d07-49ae-9fec-97e692639525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d568f6a9-26fc-49ba-b3aa-630d7386f6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c15b590-dfda-4f34-a7aa-439acd6650be",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93854c7-600c-4313-9c27-68eb2ac8b528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22d92bc-0e88-48ca-a2df-0fb52947a24e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "077f7bdc-67f8-4f6c-a089-b8562e80b0fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6cd5b5-945b-406f-8be5-f3896bf1cbcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f6ce09-fa9b-4143-af3e-3fba70071d8f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d45229-0ae6-422f-a41e-3b6b6ac9bc49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa613e89-a5cf-408e-ac50-ce96936e57f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f889e1f-88c9-4956-a49e-3c65471d120e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34fc6247-8468-4155-9a72-a4d3c8d06f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3c2755-7cad-40d9-95b8-bacaf8dfcdd2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a1c605-7796-406a-a869-dd2ad007e2f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9058d35-2073-4635-9430-fdadc4b4c840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c05ca6e-ff10-4b86-9e7f-f26b3a093d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea21f16-b8a6-46b2-aa31-f766b86b03ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161a3255-e359-4c88-91af-e9bfc74b937b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc63351-d903-4499-a66e-d06c3cf3431d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e8331dc-745f-4755-86be-218f8b2e4929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "313bf865-75a7-48da-9a52-ae40a74374d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40d11f16-caa7-449a-bd78-d11fe57503b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae012c74-3b97-49e2-8dc1-efbb0e26c793",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00a888f-4217-4204-b96c-4f2d47620f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30ed730-f433-40c6-ad4b-dca1af826d00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d3f7d5-9730-42d4-a1fd-9afcae443a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "072d0a54-4af4-46f9-97db-110078af90a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b6c9e6-2901-4561-ae5d-cb5389e10feb",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a762b1-2a89-41f5-8ac5-7200d7278621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7118687a-a4d6-4643-94ff-339703149e58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10025365-5f92-495d-809a-ffb70aab1254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9301d221-5089-4ca4-9447-0c44d2824d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8332255f-773f-4f3d-ba98-36a5bde8bcda",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192a8d4f-e4a9-4a91-ae02-38637d19ce2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf786d36-9706-4006-8230-b6cc46a708f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f3e745-daae-48b5-afd5-4bdd7d0fac5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f920af-5660-48cc-a4bb-031e5e47bd64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ef38dd-e313-4c8b-9a63-68536be89778",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c30ba8-347e-4070-969a-a1151e732623",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "157dff0a-6f3f-4040-8cf8-afee0798612d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ac2e8c-bfda-4f70-a4df-e0ee28bcff80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a7eda72-69fe-496e-95c2-ff7099227d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0eceab-814f-4b56-81e3-afb8f0d50a2c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3094a17-ee56-4a18-a995-82726f9e432d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f27d382a-4e59-409c-825f-863a215fbebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5c8cb4-48ac-49ce-92af-a42f78833ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ac848b-49c9-43d5-aa34-488cb51bbde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b5abc6-e18b-4b73-a45b-5c59e1bfa5b3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7c32c0-d7e9-436c-b252-3719c9adbe23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aee74a0d-6ae9-4a29-8e7c-496b4cd25ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd92ec2-ec15-435e-aac1-8ba59221abec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09fe0323-d285-4415-a49c-1fd1182a7acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d078ba-2831-4920-9e43-4e0e03ff345b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b00393e-811e-44f2-8c7d-f87e95cb981f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34bef49b-a596-4971-b5d5-91dc3aac5717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55875cc-ee46-499b-919a-f1707ba3b33f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "508202fd-d427-46fc-b413-901758558cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870dec91-7e60-45e4-a2b6-10f521b429b2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145ca3c1-eb4c-4eb5-b2a1-fb4f2e7312b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cda14263-d8e5-4e42-8ad7-838cccf3aea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cfc9a5-f57c-45d9-8c3d-23594d81fa3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acffb1ef-bf96-4cfc-9e9c-4c99e1fa8adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4414e23a-cc4c-4608-92f7-adcf412a0969",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb6f173-0857-46a6-be18-306ce6e93a1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32dc97b9-1902-40d2-80b4-f68c669a7dc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f6422e-70f4-4031-aa7c-3676041401bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d043a588-3a59-413c-9c47-7e60232e66e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbac61b3-084d-4f96-ab6d-425e9b09a8be",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8683b6-cf25-4d90-bc60-f32192a0aed0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bdbc6e7-cc56-4072-a334-2c7a0a06eb59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f0c4a1-9ec2-40df-832f-7674758dc655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e45ea9-3d4e-42e1-a1d8-94b074389e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f10a1cd-e038-4e9d-befd-74fdcb1dce24",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8404a05-aefb-450e-8eaf-fe9b35a6faf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a282eb82-332f-4cca-af56-a4d56e17968b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72403247-7a3f-44ce-9351-60800ea82ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab374e41-ff9c-4a39-9da1-050647c06b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c110270c-cadd-4958-b044-4c8ec366ec3c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce91c15-34e8-4065-b30e-841f126c9dbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7591a61a-c4f6-4e58-be56-4762d55bd714"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77817e60-50e5-47e4-9693-7a096756557b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95725c2d-2c10-43b4-99a8-b13f04f1bb3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d884d6c7-5ef1-4099-8ba3-8b7fc8906369",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5fbbc8-eb10-40ed-b005-037cfbdb92ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16c0789d-373b-4e54-b617-32840eed8a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66392738-0d89-4ea2-a1c1-5d8d501266b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47696ed-b589-4338-9a9a-8ffc99f8992c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5522c6-3e28-4398-bf24-a36fbe8749df",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136b9990-8706-4a79-8112-11dd9bb98588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9be72ac-1457-47ab-9178-c668f8c1e31a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b816dfa-c2c9-4878-9789-76ea91b90bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337233f7-20f1-40e3-aee6-a73885ef3a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde0965c-89ad-4966-bc63-0d9c54cc320f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476ad620-c84c-421b-a2e1-fe6609a37d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16523765-59c6-42d4-9bf4-4bbf1a457864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "195059d8-6e2a-4949-8922-ee5017dd568e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e09e22d7-c568-4281-9426-d9ec9efa9f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7493d462-726b-428d-8f16-29d935cb78b7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409096ba-baba-4311-a9ae-28a026bc9723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008d4459-381f-4c7a-9e3c-3799dbbf0d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afde14b-e41c-467a-b17f-0c4cd89da6a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee69441-ba85-48ad-89e4-d2b297feda64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d79892a-75a4-4623-a1f4-4b22d6f12735",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2e7dd9-f183-4545-9735-132d3b7d41e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1044093-00b1-4608-b9ae-0325248ac384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d38eeb8-619f-4ad1-985d-f1ad84230f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cffc7c84-7042-48ce-a76f-7713c1cbaa63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd58dd0-8123-4051-ad70-8a8cde29cbe0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36a6179-b21c-4338-ae2f-8264ddaf3e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76aaf53-953d-4394-bc2b-22b1bbb26d13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da368b7f-cbf5-4bd8-8db1-120b59fc6cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a8c4d5-d9cd-434d-8004-a8c248021258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8711c68-7840-4f0f-928a-ea2c0eabe7dd",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7b3e25-97b8-40fb-9a7e-ff466068d062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e042644d-b997-47db-9e0e-2144ab0007a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6522ad43-8c4f-48b3-90e6-262da8c3f548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad511dbe-e213-4f8a-86c5-6d6fb6de2ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b7b9f5-b941-40e0-a7c6-51abe90e6411",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20688d17-63af-4543-96d8-5ef643f88536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48dc8ba6-69a0-49fd-b1ce-b966f6443611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf57e967-7591-4df9-957a-676a4315c3f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db2d574d-77fc-457a-94c5-58c6fc6b26eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f36ce3-ec12-4007-877c-d9f830b24871",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09741f56-18e1-4959-9865-2a6c039e1875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a02600ca-fae2-428f-94cb-9fd3836004a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a7e012-9377-4ee7-97fc-0203c2f8f3da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3facb77-8d5c-48b8-9086-10c47aa35250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd75d846-e8ed-4088-858b-7fd506e5465e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003cde31-998e-46f2-869f-f19cd0f9b920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab580c2-56e0-4bb6-bdbc-dd7d20593834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba831e1b-085f-433e-a2fc-7e62dd2836b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b37f204e-0fb0-41c3-bea5-f1a7cdf400a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edf893a-7f1e-4e23-9328-f150f11df9a3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9019b2b8-460a-42e7-897a-3045e15eeb11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db076f8-0d7e-4b36-ac4f-3d092c4cb291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86178d96-fbc4-4800-a2cb-835b39012c63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d9469a-5f47-4ec7-9547-64f569dae56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903f9905-fb33-4205-9579-a2427aed9617",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e01da09-d454-4733-b9aa-62c620be04cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c39ba1-5c6e-41dc-b535-1425b37c991f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea74fde-5f44-4693-8e8f-7ff80081cc9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45814ab-724c-4eef-ad53-eea8463a4040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa0e27b-d502-4521-88bb-2a09dd60575f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a60afeb-bc17-46a4-a979-15c852e12c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f9e7e6-7d22-4b46-bfc8-9519b41cdaa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a93d814-a22d-4b4a-bfce-1bea2eecae1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "909e93e2-d237-41dd-b6b1-edfe7a2c77b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f2af55-0b32-4c2d-a2dc-510c7ee2b574",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847ba749-de41-421b-9d1b-bf96be36bd16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e1b7d9-52a9-44d4-a2a8-4113bbf45039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "680c5363-c97b-4324-b377-9639661f47cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c41274f3-38ce-4adc-8620-93d998dbe874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80891681-4985-4f39-9b26-e9d51bee7dfe",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d82e93c-fbfa-4846-922a-c8742e8a9c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f11ff36d-e597-4a4f-8cdf-6eca3ffff295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f9eedb-6cc1-4cb3-8552-31994d410488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17175ce4-5376-4f1e-ac9a-0da7ef590aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc4922a-6118-4c6e-a01c-8a185c960ad4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c740c62e-39be-4287-bee1-c9faa88e185f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381b1876-46a7-4cda-86f3-2052302e1839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4bd703-fec4-4109-90d2-8d8b5587a184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9dc2214-f95c-4216-8c39-4d872d041c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8693d665-a7fb-476a-9668-879f7e2af12e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832aecf9-7b62-4ce6-bb9f-99a10007cc91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4984365e-04d0-41d5-aeae-b6fd904e307c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c87643-048e-4485-8db1-20d5ef6e1df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ea2cc1-ba84-45cb-8390-0dc18fc71067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8c0923-ac3c-435f-8d78-b3056fd1f801",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76185b3-8a5c-4a47-94f7-9b6a26fc1013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c40ad8-7399-41f2-8eac-947f522cae4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23cbd318-b87c-4e99-9f85-ab41c09e85fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee2fc16-4cbd-4988-a4f6-f31486f3d4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b3ed44-b9f9-49ab-a57b-2293375874a1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221151dc-97b1-4566-a1f0-25d21e7daa53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adbe7324-9ebd-427d-a677-8ecca466d5ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8042aeb-181e-4eef-a063-e0fc0861aa18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae80aab5-5229-45d2-90e3-bb743f08eb20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d70392-f35e-41f0-8d91-6e99eb3c1b50",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d02b89-5da3-44e7-a397-3a06afa9b094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a0ab38-8834-4ba1-a862-e83ff96a097f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef74b6e0-c445-4072-bdf9-16ac0f411525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e51c1e2-90e1-427d-bbba-6876c5a4cc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1007e70e-9a33-42ad-b2d2-81f3f5eff291",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf94e21b-de60-4a53-842c-631b9c7f2e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29109c25-f75b-47c4-9798-0458ef295ea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3e141f-5d50-4d5a-89e2-f5a9399dfe48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3023046a-5acb-4277-981d-5495fa0deeeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c0917c-dd10-493b-b927-354668110b68",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6844990-8a11-4515-9a6d-8a1ff33e34c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "026fff69-52cb-4dad-995a-337db4bcdf4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2ef8a6-e2a2-47b7-9911-278951b027d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd9d077-9655-45eb-a4f7-c2eeda6fcbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b99624-2b64-4648-a7ac-89f3fdbff6e2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2eb1ad9-01a2-4e20-901e-3ba147966ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72bfac7-0b65-48d2-9849-5e885671675f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee06097c-dbf2-4301-b630-121fa6bfc953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74513235-fbce-4cc9-8498-c4e28143d1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd8e74f-4555-4f2f-ad50-9d33a1f92808",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433db836-6de0-4890-9ca7-f4f3f274abe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc7061e-558a-4c0c-bd3c-f98787f79bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b0a036-9c4e-42d3-bf1f-7b41a98078b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687be115-013a-441f-ab4f-bc9cd56e6244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267e3d8b-ce65-448c-ae4e-0fb864115d12",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d0e219-76d2-4edf-85c6-59a586d97e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d52444-649e-4736-9858-cd2827dd0099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ade0903-6098-4784-ba08-0006e703539a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce763c1c-86b0-4a0b-8952-45baa762457e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8562fa-2542-4a9f-9e57-ed4e8dec4918",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14ba237-3834-4932-a532-0b9c5f20a102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8bfd3d-056b-4018-bbfd-4971748fe4e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31857e5-e147-4b8f-b562-6d8ff27dc205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919faad1-537d-4035-b497-e638fcffbcf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8024b3-d0c7-4421-9800-f13db56b4f01",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1970045-8ca5-4d0c-aed7-7e8bcd2c615e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "779f0b94-9d9a-4208-b303-e7d5fb90c203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "460af10c-7429-4447-8b45-32b1d5ea57c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c93b94-cdac-4c1d-ae5a-e52b31d3178d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9519f6aa-85f8-4bea-a040-629c82b88fb5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669c4049-4e24-4c0c-95f7-16594c9d724d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94fd60fd-6d1d-4a4d-ab80-64111353b373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5f3080-a12e-4d86-9147-fa22978b285a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9144068-2257-4605-b646-c3a6c033c3bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d38791-ed84-4376-a54c-8c22756fb429",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74602479-92d4-4673-801a-b2f1919f9622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db60e91-255c-453c-a263-3c6ecbdf4efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b449832d-6bf7-4612-b112-0bf43c268e15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b57f58e-4463-4a23-b8f1-619ef1c2364f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb271dc-5d0a-46ed-99f8-6f8480971369",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a72fa9b-8019-4e57-beee-05ffc5976384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17120879-5e6f-478b-b037-5d0d4e42795b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83be3307-65e4-4b30-89c2-75bd7488a3ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0daa20af-002e-40a1-a1d8-7e910a8cdaf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e77820-14be-49d2-9d92-b218a6d7fd19",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40941b09-cca5-424f-9a55-08d88919badc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ca9616d-18d9-402a-8f44-4249b5865a8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a904d194-a57a-42d3-a469-72de5ba3a1ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf5a20d-e5c6-4e53-8e1c-616819d237a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7145e2-899c-472f-a5e2-31a643dffd8e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22431f2c-48bd-4388-b2c3-5149575e8148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e63ac5be-28b8-471c-88f9-f405cc2954d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0a0cc5-0f88-48ef-9c13-c29b0f2e1b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd96f7b-f672-46a4-8092-dbbbf7d6e011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142d85f2-2ac0-4671-b1e3-89e1a8ae7a14",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc985dc-fde3-4ff1-a656-ea298098f155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acc07b1f-118c-4e73-bd36-6c2055c52940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7a6029-2f2d-40ee-81e9-54e41c4844bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5309c368-bbe1-4af7-94c4-5003ba2ea4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2593b8-4475-494e-9c66-2a730dfa56da",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b030757d-5e19-4dba-a1c8-ec6c509cbfc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "907f7b77-1ddf-4f37-998a-b8409d8fcbf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "926f7c76-490d-464e-b5a8-d561f0361e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "570e7cee-d16e-4bf2-8204-202eaeb41aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6abfc3-9f55-4970-b662-26f69ff5f6cd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110319a2-6cdf-48a0-9818-301dab1bba63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d79f9e8a-2024-429d-abc3-b9678f75e4e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09ed814-2f36-4962-b30d-010f5ec6a241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbef7472-d2f5-4c7a-9b4b-9b3275c347cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae43be8-ac21-415e-903c-08864f611917",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141cd077-0edf-4156-ad78-0144986777e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da56246a-d7da-43ef-8d91-8603925de3d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b4e9e4-087e-481c-bdc9-10257a9a5e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23deed5-9a1a-4ed1-bc6a-e2d7f792f1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924b13fd-ccbf-462f-a396-17ce686ca173",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecbcf83-6107-4a45-b4df-902f6a366c19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0abd39be-132e-4125-abaa-107d662bca9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59f6c7b-8aac-4320-8592-c7f1943c4d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "283fafa1-28eb-48a9-ad92-645bc4596b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adddd922-a8d9-4f49-86c2-4714db9915c6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5daed099-2f05-4ad2-8004-da9375e01df4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3c4bb4e-94de-4996-805b-cc08e6db8e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db322d26-080e-4a8c-9027-24ca9b1b2db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b458f67-702d-4130-99d1-604fc8ac2953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1b3c6d-8248-45e8-b8da-66b25aad6056",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b788fc-2fc5-467a-93b9-254ee5e6cdd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1f0b08c-7883-4031-aa79-7620af5c407e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa4002e-cb3a-473a-b2ab-8b80d7cd2a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a131cd-e444-4d34-a767-769d8003274b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b014860-6768-4913-8f37-f015ce983750",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872baa7a-1490-4fe2-8cd2-9f13e70ed93d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "254e8965-b0ce-4666-9ab1-54fd5f85cf13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "595b0f27-3943-4f3d-94bd-cda168453fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f897e7a-0168-41f6-bfb5-7b571c99dbc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57411ae2-a32a-4bfe-bcea-98d2b8f5d1eb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165f5d68-9db1-4037-b1e4-2142c0d05df3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3795e47e-babf-4306-8000-a64889a5f9c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c54ed13-3de6-498c-b8fd-8031b873769f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9577b16-3246-4769-adc0-1f7d3b910559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38627867-197e-4bc5-9820-b5c317449496",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef10445-8cb7-4374-b531-81e9e6bd9e4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb8d00b6-f85e-4ad5-b371-be7dae87df47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a03e172-0582-4cd2-bda7-a46e8456f7db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca0f280f-44db-4112-8f3a-a31f00c14e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec48bfe1-3dbe-4765-bb09-9eb121c43901",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b890342-2c98-49c2-a38e-069ed345b567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55528e88-1344-49c4-8a61-7fd84cbae5a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4e70dc-9ca1-4e2f-a0d7-c5109ec9ea6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b6d0bd6-4d55-4a14-b07e-4f9e3d26f4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ac63fc-2665-4da7-aafa-6dd48d8582bf",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7247dbd-0e31-459d-b190-6f1682c6dea8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eca07242-88c7-439f-962d-779129932fca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe2e684-b29e-44cb-a27f-69a787626afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39dd65b1-6b60-47e2-9b65-8094c73b5b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72252d2b-2318-43cb-bf61-0930364fd8e6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a009f8-0c1e-45db-934e-5f88e7f3fb12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47932111-e452-4ce4-98a8-c8dd99312b50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91da54ac-c7f9-4ef3-9a1d-08e61caa56a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45de6204-782d-471b-86da-d35f87b5fd84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa4287a-db02-4433-8719-3c8f6bdc58c7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70da91fa-c9a3-42b8-afcc-04166f531552",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44d592aa-2a7e-4be8-96da-6d9269a6ae54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e649ea-8acf-4306-8202-292e91eaf8b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82850ad7-1b22-4dfb-9f33-b5abbecf2f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd28119-77f9-48af-b1ac-210d4b503aff",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af803bf-0410-4a49-b831-b0ec267e83cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb00764c-985b-4d31-abc8-873af54d1c3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ad23c2-19e9-4394-b088-b7ad62d7f335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d207339a-9366-44fd-a047-a767f8ec1679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96a4cc7-057f-4d20-a32a-d47b8121c007",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98e9fac-a0dd-4c30-8e7c-16128695e891",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48a43e47-130d-44b2-b0c3-4ff570651305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd15fb84-e04f-4741-bd83-6f5bd5174aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc777822-36dd-4916-8186-72ed4cdee6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3a838b-4d21-4176-83d8-180b93b7f266",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ab4390-b46e-4100-90d9-74e6ae19f47d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de890577-2241-4b15-9a64-8a21e1a49eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f0a7e8-a4f9-4dce-9148-3eb87fda63da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eede0e97-9078-49a7-907b-7f812475633e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501f4d65-db02-4904-9182-a19e2bc68930",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70510e7-cd14-4cd5-99d1-44dc871c0d45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "914c682f-9bd4-419e-af03-8e4d5608530e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bccfd8-62e0-41af-8a9e-a2f5f673f238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "239bbe3c-8b7b-4466-82ff-e81a20559ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f7c85a-466e-4cd0-92a5-8c8f0fd4beb4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7247bd-a9e7-4f46-8c96-3c16c8d64e5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b956f70-a8ac-4dc4-a5a4-d53f756e6db4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42ef7c6-408a-499d-a70e-0b364e5a1df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76a70f8b-4c6a-433b-bb7a-840af22ad02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476f847a-b99e-4201-914b-8dad419820bc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faceaba0-c466-4769-851b-fc39fa97e3d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4556b8e-c946-4ff9-81bd-bce4395faf73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8b6697-7864-4fb8-971a-efdb1ed8cc8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a06f56-a8ae-4c33-a65f-ab28c6b736fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37fd1d5-9a23-4dc0-a1ef-08c7930f3277",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d685250e-cee9-4e59-908b-ee934466f5bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29ca5690-cc1e-4cdb-9a6b-dcd9ecc1e033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7570c7-0dbf-468e-a68f-41ce9237fef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db30cff-da8c-466e-87dc-55c3dba2c808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44dbb2c2-927f-40f3-9be3-140d435ce33f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32acf90b-a26b-462e-a1da-36b178c4fdba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d326db04-3e2d-4499-b159-8ab2fde88ad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab180f61-5e7e-409d-a60f-5d1c2d7ca85d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cecdc716-e7c2-4511-a373-9cd9b3db64e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90807db-8daa-4f60-a229-be735bc1eb7a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5309ef-7ed8-4ccf-86cb-4a2db84c746f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6a78fc5-ddf4-47af-8984-5ee91969f34f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f154e4-c923-48a2-a0bc-9feefd868299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d51d11-9307-4eb7-b6bf-6900f9ac3228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2dfa1c-86af-4477-8e42-36581f7a160e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a23467b-3e30-4f3b-8931-6bc32953f431",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ca0f75a-c51c-4d65-a58e-1fa9ad2ac016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51008110-3358-41f1-94ef-089666ff50c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fddcc93-ef9c-47e3-b629-bc009b77eb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23140fb5-af2b-48aa-97c1-216230538980",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5f74ba-2eeb-4601-bc44-34433a016131",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d801f8ee-908d-4a13-a1ef-e2b1dda85559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cc5d09-517c-46b1-a073-7935079b25d1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca279ca-660f-46ab-9ee7-3ca37838ced2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0e312f-88a9-48fd-90fe-b8cfce0c058e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc195e6-2598-4b5a-8db8-04cfb6c8d66c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7acd65ec-a666-49ec-bf9d-b889909f41d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4bbd96-a942-4f45-9858-6e04073f3734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff556ff-5d49-42a8-9dff-3a0f9353c293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bac9d0-8a35-4995-8afe-d2496e3cac73",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1665a031-01dc-4c78-8483-6737d608e6be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40a99b5d-48d0-46ed-bc26-1b608f9ba1d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "289ada85-57a8-4810-847f-401258724d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "907060e8-8a47-45f1-b123-c70efe3f848a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe44a8d-6bd5-4dac-9d15-a08edd205bd2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e469450-f961-40c8-b708-c6b9b9ab327d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41234994-3a0b-44a4-8d3f-902de3cc14d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1250b0-4a3a-4644-8c7e-cbe48ea7fd91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9123ff42-14eb-4f91-961f-d47b5ff713e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76921fc3-0049-4c23-a9b8-c5ebc9a08e57",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c519974-7f91-46b1-8221-1711afaee57a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "225aca2e-9f35-4964-96e1-4f805191cad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10bb9a9b-8b4b-4f3d-9c61-6829a4cdda37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b2c193c-c23c-4a0d-9cc7-6bf62c73d939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705813dc-2f74-440d-9d59-25bbd9a640b1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99915e5a-1188-4607-8aca-1d93366b9e48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b148a7b5-9e74-4beb-a390-33777448e1ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0620ea1d-679b-40ee-9042-ea65051d0c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f00fb22-86a2-4651-bc2f-a127fcdca41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30181e1e-d55d-47b9-9e06-996730982859",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8048b9-b156-4542-9c66-a2ea1b8b8f00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b9837c2-1f21-4ff9-9c65-8bcec588e0fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ad4852-d09d-4319-9d3d-b8fbdd8349aa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b6758e-abd7-411c-9cc8-9144bb4ab4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5497b6-aca6-40d3-8473-30dedb561c10",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2bc87b3-d5a5-45cb-833b-de349c2ea859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "202252f4-fe91-4735-9ad2-7fba7a90b1d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef1221e-fc43-4952-8f2a-76ea23f2fe8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c25b4dc9-0795-4a86-a7e9-258b393057ac"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "213e7eab-c882-4bc4-9e60-d9a049c1226a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a5bdd64-8071-4093-a87c-72d0d36c7c05"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35ad1387-2f9d-4132-8fbd-309cdb4f56d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ad5f929-a0e2-4373-b9c1-bd33d444d3a1"
                    }
                  }
                ]
              },
              {
                "id": "60f1a20b-4047-4ef3-a23e-b0da9cda174e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "45ac223e-bc3f-4287-bd73-d192ecec897c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd43e8d4-4168-4867-bfc6-1ca2f2d5cea3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e867780b-1a76-4312-9437-c32777449bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4f66c1-590f-4211-8c0e-a6b4bad2e359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56252454-19ab-46aa-9942-6e4c5d8697ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d367e472-cd15-4024-b8e1-3575db389812",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "015f20ea-5fb3-4dea-bc7c-4257615105d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddda250e-73c8-4428-86dc-1960fb1f9765",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "988a972a-618e-4114-ab81-e0359c24c708"
                    }
                  }
                ]
              },
              {
                "id": "f1faa45a-923a-4614-b1c7-e48750ca8fb3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6bb8ec5b-0a47-46a9-9479-3a771587f0b6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2891e80-18a8-49c4-a970-24b6b2cddb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "36462bf7-6fe9-4fa4-9c85-6a3203c1ca93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbc5de6-abb1-42ce-84d0-6e9f8b218513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83422e2b-590e-4123-b648-70f8a7850762"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ea928c1d-eecd-491b-9766-d632147922d4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9fee2278-e7a9-48b1-b7ee-7504da6d770e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e7cbc7e-9be2-4b79-9408-46af273b7cb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3d6bff91-2465-4050-90ae-c654471f273d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0b06cb3-d941-4946-85b2-0dc5424e3b5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1a2c501-96d1-4155-a0da-8ebac6386aa8"
                    }
                  }
                ]
              },
              {
                "id": "411caa91-5dac-43f1-901e-5aaa0b7f526d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b8ea071-9833-445e-b64f-d3e70eb56fdc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1dbcdbc3-2c06-4694-99df-d4471cdc15ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77a376b6-9703-4a7c-85b7-ba15e0af5eca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d08a3bf-02e4-4dfc-b3cf-2d395fbd6c3e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca84a28e-5f76-459a-9931-849145d85c50",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b443e5b9-1579-4296-8b28-e05a9f8f9252"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72acacda-a630-4065-b27d-6a6edafea52b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49411cab-5366-45ef-ad40-4d5cd90f2dbc"
            }
          }
        ]
      },
      {
        "id": "6ed0dcc1-ec5d-4376-88ec-21021d8ca725",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2d567ead-964d-4713-9661-3cb5262f3147",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98ad1b4b-2cf2-4351-98bd-ea84d666639a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "035af4a8-5f5e-49de-a2d2-71746bc105ce",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147da77e-0f93-4123-9aef-8d257e153392",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2dddac64-439a-47b1-b232-277fdf7bdfe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1cd975-4b5b-4271-a39e-2321f5ba86b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c89ab7e-e9d0-4f4a-9ddf-ec125fa7a046"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a26ba66-202a-4635-89aa-1eac12d01e6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04c190ba-ed9d-484f-aa77-2f0e4ffe5c2e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0039984-3912-45f0-9feb-078f8c996f53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36a10151-9c1d-4c18-9f34-1d3f2c947920"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a0ec06f-8c67-45b6-a054-c5ebe6b2ce0b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "33bdaac6-c36f-497f-8b28-3f17a598af3a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f08f8564-7610-47a2-86f5-ea239f449366",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0974b91e-d8be-4ef1-bc69-f9fadea49e33"
            }
          }
        ]
      },
      {
        "id": "3d13d9dd-88cb-4186-8d29-1d1987e696f3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "27f902ee-d3c4-4d1d-8084-1a5db1339873",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6fc809f5-9a30-4a47-9f85-d9e828736ec1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "463da169-665d-4387-84ce-1aa4b1075f60",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a967c654-03a2-43af-9ece-8f46075c0d55",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e248b392-0ea0-4206-883b-b0f3a2d51f76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b70be6-1d51-4342-8233-e8d82888ddde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2b6eee6-e25f-444e-af5c-fb4ec9f8ba50"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bd813b5-63c3-4b3f-abd6-fdb230ed02f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5c726df-a791-4050-b677-d0ea705253f9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "acf4c463-b6f0-45b3-a37c-1ade89daf24e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b27963a8-0c6c-45ae-bb8a-8bcde5ea0b97"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25630922-6997-414a-a585-e5d84b933500",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c1fee254-7344-473c-aca4-81f88b1d3bfd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce62f6e6-6021-4ef4-a000-f77eb7502397",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1819e1ba-a74c-453e-a559-1422d48f894c"
            }
          }
        ]
      },
      {
        "id": "4d0d7965-b2cf-4a95-867e-94bc1efd638a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "17c0e479-2fff-432a-b1fe-0bcb98b58012",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d21530e-8a4e-4136-bee3-20029189be51",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "71c89f07-ee2d-4f68-9312-8c190945f696",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522300f3-270c-4a73-9492-6eb4bab39f05",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcba0d4e-9cb6-4e0c-b6a3-b56323ea791e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02baf21-3bbf-4785-96a1-eac41e54b08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45d2da5d-7469-4552-ad09-abe8e9181e8c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff4c549e-c7ed-41d8-a3c8-311208c47e4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "994771dd-eafe-4b69-a095-a95f44008533"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52dfac9d-2a6d-476d-ba6a-70b33b2d6fb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14b3b41f-0fbc-4101-a2f9-efa978295746"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1332112b-c99a-45a4-8541-48b1489b27a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "80d8abe6-342f-4335-a1e9-7a7a6ee5bd16"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1907d57-b4a7-45f8-a361-1aff4357f82c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fbe23a83-9b1d-42f4-8bde-0e180bdcebaa"
            }
          }
        ]
      },
      {
        "id": "19a6c346-6bfc-418f-9c76-58733aa5bdfc",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e52a484f-8411-4758-968c-13cdea34c47d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ee8709f-44df-4904-9374-581ae8f36a68",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "39ae1348-9934-4665-a85a-130487be08df",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "626f6711-332f-4c89-b581-6756ceab92ab",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fed8b424-e339-4786-8e21-954d017b2612",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 249.53684210526316,
      "responseMin": 15,
      "responseMax": 9226,
      "responseSd": 1154.410454632781,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699058014811,
      "completed": 1699058100212
    },
    "executions": [
      {
        "id": "619cba0b-6dcc-4551-90f8-ffbae68070ab",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "21f49db5-538e-4723-b113-cac6946a72a9",
          "httpRequestId": "97e87f30-a01d-4097-893f-a0c0777518e3"
        },
        "item": {
          "id": "619cba0b-6dcc-4551-90f8-ffbae68070ab",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "803ea283-91f8-434a-b230-53ce36f98fed",
          "status": "OK",
          "code": 200,
          "responseTime": 98,
          "responseSize": 0
        }
      },
      {
        "id": "e82ddc2d-4b3f-475c-93a4-753f2c7bb791",
        "cursor": {
          "ref": "ce64a2f4-b5f4-4f70-8bc5-208ea25543af",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d993473f-4b76-48d8-b141-cf8ba0fef267"
        },
        "item": {
          "id": "e82ddc2d-4b3f-475c-93a4-753f2c7bb791",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "67ef640d-a5e1-4ce5-861a-aaf5abcab728",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "06367c36-3fe4-4ab3-adfa-49cbd38bb549",
        "cursor": {
          "ref": "a8fc0ef7-712d-46a6-bfaf-518a8471e1f5",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6d7a49bc-1a97-4c85-9473-6ccfb54c1d43"
        },
        "item": {
          "id": "06367c36-3fe4-4ab3-adfa-49cbd38bb549",
          "name": "did_json"
        },
        "response": {
          "id": "d05d35d9-8deb-4075-a360-aaf292072e54",
          "status": "OK",
          "code": 200,
          "responseTime": 1392,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d824167f-9aae-4082-a313-9a9a8f2b53fa",
        "cursor": {
          "ref": "fd99f810-8502-41c2-983b-ca2823129501",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8a0554ba-b7d3-4a1a-8c36-0935a776df12"
        },
        "item": {
          "id": "d824167f-9aae-4082-a313-9a9a8f2b53fa",
          "name": "did:invalid"
        },
        "response": {
          "id": "42b7e780-587d-49a2-b878-bc6f0b92a157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d824167f-9aae-4082-a313-9a9a8f2b53fa",
        "cursor": {
          "ref": "fd99f810-8502-41c2-983b-ca2823129501",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8a0554ba-b7d3-4a1a-8c36-0935a776df12"
        },
        "item": {
          "id": "d824167f-9aae-4082-a313-9a9a8f2b53fa",
          "name": "did:invalid"
        },
        "response": {
          "id": "42b7e780-587d-49a2-b878-bc6f0b92a157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eaa990c-df52-455b-b945-965465eb1b82",
        "cursor": {
          "ref": "9be73e4d-675c-41ec-a680-273c258db4f1",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c534b2c4-067c-41ca-aa68-6d3668ed11e6"
        },
        "item": {
          "id": "5eaa990c-df52-455b-b945-965465eb1b82",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1e5f811b-b721-4409-8cb3-f582330d393e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 159,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a11e8e5-525d-46a6-ac0b-c1c79dd0c108",
        "cursor": {
          "ref": "48ad2b66-626c-41e4-8e36-f893148e316b",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "61d5eee5-f431-4cc2-8897-0f6c19e161a1"
        },
        "item": {
          "id": "0a11e8e5-525d-46a6-ac0b-c1c79dd0c108",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "82fda3af-21c2-4cc1-92f3-333958b0bfc0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 59,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f12ed9-0ec1-4b02-aa32-fb60bbaaddda",
        "cursor": {
          "ref": "d58a72d7-6687-4c47-9fe5-a7be70201180",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1d10192d-c803-4cc1-a48e-5f409470f53d"
        },
        "item": {
          "id": "66f12ed9-0ec1-4b02-aa32-fb60bbaaddda",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "00b0c6f2-6f53-496d-bd85-c4e00435f32e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2177663d-bdaa-40a4-83b9-51f681d6d12d",
        "cursor": {
          "ref": "4ce6d5c4-d587-4f49-8415-f1265b616102",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "fe825a56-faeb-46a7-b54f-5fd3ca2ff455"
        },
        "item": {
          "id": "2177663d-bdaa-40a4-83b9-51f681d6d12d",
          "name": "identifiers"
        },
        "response": {
          "id": "e84f3940-37cf-46f0-9573-3a3b6ab1c7cc",
          "status": "OK",
          "code": 200,
          "responseTime": 1288,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a141777-1504-4c21-89fe-02a1f6c672af",
        "cursor": {
          "ref": "63bf7d93-2a1a-4962-998b-f2c7f9164598",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6294dda7-ed7d-4b7b-9441-8de755f26397"
        },
        "item": {
          "id": "4a141777-1504-4c21-89fe-02a1f6c672af",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e7607ae4-df30-4cd2-87c3-c23a124c2583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1b745c-b66e-4454-bb93-028350471071",
        "cursor": {
          "ref": "b3abdc26-37a1-4206-9aa7-eb9f6ca51712",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "50be26e0-2136-4980-9588-e0c8ae7807dc"
        },
        "item": {
          "id": "9d1b745c-b66e-4454-bb93-028350471071",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "87cd1267-8049-4970-b746-e97c273cb6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9759a9b1-f1d5-408e-9251-cb0d8a3f0aaa",
        "cursor": {
          "ref": "7ffa2a5e-3a11-4d07-bae0-011138898f2a",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4e97863e-fbad-4776-9adc-d7b12db38877"
        },
        "item": {
          "id": "9759a9b1-f1d5-408e-9251-cb0d8a3f0aaa",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "11889973-e359-47a7-b68c-0defb33fbb37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96fdd8c-0a5a-408c-91f7-1cc34f0a6f28",
        "cursor": {
          "ref": "bd968b1d-d5e4-4935-9b5b-ef2228184063",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "dba18c38-164b-4e82-ac78-88ef2f415040"
        },
        "item": {
          "id": "e96fdd8c-0a5a-408c-91f7-1cc34f0a6f28",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f64a5be6-7e25-48ea-8d27-5dc1985f79e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f117653c-9784-4fd6-ba32-06d49f92320d",
        "cursor": {
          "ref": "44c040e4-aecd-4466-ba2d-3fdee1009678",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6206f2de-18bf-4259-aea8-3d3f323f2ada"
        },
        "item": {
          "id": "f117653c-9784-4fd6-ba32-06d49f92320d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "abd50b58-7cdb-44c5-a37e-75cd1d21fd93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d55290-6272-4f03-ba85-ce0dc67f421b",
        "cursor": {
          "ref": "39c4affd-3e15-4b97-9b91-e6365cbf5818",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c761fd6b-115c-4391-9116-731173b64782"
        },
        "item": {
          "id": "57d55290-6272-4f03-ba85-ce0dc67f421b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2701257f-453c-4832-b7ba-609fd041384a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e52301-f832-4b11-adb0-2eab0cab76cf",
        "cursor": {
          "ref": "18e27d27-b30d-4098-99c4-3081bcc57cf0",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bcaf5b14-c6ed-438e-aec2-fc7cd62f050f"
        },
        "item": {
          "id": "d7e52301-f832-4b11-adb0-2eab0cab76cf",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4ba6198a-4725-4421-86d3-f94db8eab46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35617937-ddb4-465f-921c-ba144f773b3c",
        "cursor": {
          "ref": "b505310d-876e-4087-8893-ba81fc8438fa",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "81fbb545-8690-4096-8445-0be0d8a3a61c"
        },
        "item": {
          "id": "35617937-ddb4-465f-921c-ba144f773b3c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8b044b98-f7b9-47b7-9d7c-d013ad8ac495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fcece13-e9b6-43be-8859-9b8949306ad7",
        "cursor": {
          "ref": "b9fd7434-73e5-42fb-abd0-95f27d6111c3",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2790e9ab-1a70-488d-b004-d3cebca7534d"
        },
        "item": {
          "id": "3fcece13-e9b6-43be-8859-9b8949306ad7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "98958c1b-513f-447e-8f20-89fb28a2e63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665a2a3c-0088-4da2-b07a-6ed0586dea45",
        "cursor": {
          "ref": "98c3af00-e9cc-43c3-9a66-93837df3c2f0",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "442946ce-74fa-4883-8153-427a1b8e0426"
        },
        "item": {
          "id": "665a2a3c-0088-4da2-b07a-6ed0586dea45",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "aca98e20-e945-4f2e-9362-8ef3d3423085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6196e70-8b96-4bab-a3d1-cb5c4d135aa0",
        "cursor": {
          "ref": "00592484-a74f-4fcc-aabf-4dafdbbca1fb",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "746ad16b-770e-4ec1-9854-9f86b3ee8599"
        },
        "item": {
          "id": "b6196e70-8b96-4bab-a3d1-cb5c4d135aa0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "593a808e-c239-43ff-a5d7-45622de0431f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbf0813-1818-4a50-8622-0f031e0e1dc4",
        "cursor": {
          "ref": "21fc607e-b398-44b5-bacd-da24b09a0ffb",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "14b27bec-b467-4fcb-997e-76716a4f1e4e"
        },
        "item": {
          "id": "5cbf0813-1818-4a50-8622-0f031e0e1dc4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "69925a34-8fc8-42a3-9594-ff0e55ba0465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83692c7-64eb-4512-b633-4b0dc8995f61",
        "cursor": {
          "ref": "6a2c18ff-6917-447d-8bc9-ce3f163def99",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a0c5b0d4-f6bb-4e0b-9686-e3beea529312"
        },
        "item": {
          "id": "d83692c7-64eb-4512-b633-4b0dc8995f61",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "dadbcf65-1a13-40ca-b5b5-7330d8f7cc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294df11e-0d0b-40ea-b573-a441c5543d56",
        "cursor": {
          "ref": "c797b0cd-4425-4a22-830f-e99ba1fb0994",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e7c9a28e-08da-4434-903e-82b0e60ec6b0"
        },
        "item": {
          "id": "294df11e-0d0b-40ea-b573-a441c5543d56",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f35c796c-3f4b-4245-8f39-51ceab322aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04252909-769d-43c5-97d1-596a6c361d5f",
        "cursor": {
          "ref": "b7241e86-9d79-4db8-8ade-6068edd39745",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ff413a17-0ca4-4679-a177-c4e0189eff48"
        },
        "item": {
          "id": "04252909-769d-43c5-97d1-596a6c361d5f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fb9895d8-82a9-4459-bfa0-7dd8cbd77c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2406a048-2346-4e1f-9103-b34b0a27a0b9",
        "cursor": {
          "ref": "e870d302-b519-4209-84ab-9fef04235913",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "629e0c4c-cb40-42c9-b3ef-9feb1f2d6b63"
        },
        "item": {
          "id": "2406a048-2346-4e1f-9103-b34b0a27a0b9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1a327793-c64e-4f9c-8aa3-12d4bf9f2552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4537244-9020-484c-be21-98bfb9bd283c",
        "cursor": {
          "ref": "66f6b5cf-25d0-49d9-a117-800c58fbbf29",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c0a0c439-3219-432d-b062-2661d1a4a1b4"
        },
        "item": {
          "id": "a4537244-9020-484c-be21-98bfb9bd283c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "443f2800-c513-4fb3-9a5f-e2c9e16753f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe148da-87cd-46a3-adc9-b06acf81213d",
        "cursor": {
          "ref": "fed58b0b-4f41-4e81-97b2-9c5bdfb31db6",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "88c58b82-83fa-47a1-93d4-59f6c9407b53"
        },
        "item": {
          "id": "3fe148da-87cd-46a3-adc9-b06acf81213d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2b9ae280-f1ca-46f5-8fd1-bf3a77d090dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c45c1c-33d3-4103-84d2-95de4d8cb631",
        "cursor": {
          "ref": "289f2be8-4d10-4662-b7ec-5fbcf98b3183",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "032730f4-a601-4bff-af77-c5c6e3a66a5d"
        },
        "item": {
          "id": "60c45c1c-33d3-4103-84d2-95de4d8cb631",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "289169ac-d8de-4a60-900a-fd0a66965ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73adb3d-1ae6-48df-83eb-840bc361823b",
        "cursor": {
          "ref": "0fab95b3-2ccd-4707-8f29-f1d402785629",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5422df64-3f2b-4fd7-b709-02935a3ebfaf"
        },
        "item": {
          "id": "b73adb3d-1ae6-48df-83eb-840bc361823b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d2ef322f-70f1-4a82-a61d-c1da600c772a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ea93a0-b243-47c5-855f-ce601e0d088d",
        "cursor": {
          "ref": "5d8b4622-0bbe-4893-a7db-856b72dd0f44",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9535c0fa-1054-4bc7-8b08-a21865136ad4"
        },
        "item": {
          "id": "08ea93a0-b243-47c5-855f-ce601e0d088d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a0fd0e1e-38ad-44d8-851d-bf02e4ea8652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fc6bf7-446d-478d-860b-fbcb2213518a",
        "cursor": {
          "ref": "d578bfef-af30-4706-86f3-71cdf04974ef",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6d786214-6d62-4a8e-bccd-31bbb8a4d1b4"
        },
        "item": {
          "id": "97fc6bf7-446d-478d-860b-fbcb2213518a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4b363064-cc9d-4025-97c0-0a6921d59c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f097b3-4d62-4350-88a2-0729a5a11bff",
        "cursor": {
          "ref": "07d54f06-bcc4-40c9-b785-ec82ccfd89bd",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c56eaa0e-f185-4f40-9585-6ad2a7b3fbe0"
        },
        "item": {
          "id": "92f097b3-4d62-4350-88a2-0729a5a11bff",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1b94f575-b924-415a-997e-0aeae077b37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1815b3-5233-4170-b070-9f6d80860fa0",
        "cursor": {
          "ref": "5fe7ee1b-6ecc-4346-b8a4-4de7782518dc",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "fc6a11f8-b465-4da6-a557-def2898717cc"
        },
        "item": {
          "id": "3f1815b3-5233-4170-b070-9f6d80860fa0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "339cb846-b812-460f-b265-fd2b2d45b9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1da441-65b3-4709-9e0f-045b51364c57",
        "cursor": {
          "ref": "741a7621-e5f1-426d-af0d-43e1c2d80dc0",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c6da2971-1c68-4fe8-a568-48f994370069"
        },
        "item": {
          "id": "7e1da441-65b3-4709-9e0f-045b51364c57",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "24056690-6806-4e67-a52c-ab26b639008f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f85582f-1c8b-43e0-9429-9f1f16e2e0d4",
        "cursor": {
          "ref": "d9d288a8-530a-4f98-ba15-7b1a2895e60c",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a168415d-07aa-4daa-ac91-4d240cd57a3a"
        },
        "item": {
          "id": "3f85582f-1c8b-43e0-9429-9f1f16e2e0d4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f3b68318-6182-4d73-b3d1-8b5dcd295c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b743bf3e-d6b2-403f-ad0b-cd9f19f1da7b",
        "cursor": {
          "ref": "e8b1a73a-7c1b-4ba8-8403-930ef69f71d6",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2b80add9-27f6-4c82-ad2b-cecc744ad8be"
        },
        "item": {
          "id": "b743bf3e-d6b2-403f-ad0b-cd9f19f1da7b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "affc06d9-023d-4c9c-ae3e-845333c746d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4dcb296-da44-4a7f-abd4-d949f841a386",
        "cursor": {
          "ref": "debfa6e9-0587-42a7-bc1f-a928d2ae9e83",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e8b44b95-937a-4e3b-b0d9-3407bf4c46dd"
        },
        "item": {
          "id": "f4dcb296-da44-4a7f-abd4-d949f841a386",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "27f7d8c8-b6a5-43ad-9a27-9a52018919f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6332d529-73dc-49dc-8461-6cc07e8f387d",
        "cursor": {
          "ref": "5616c027-d268-4094-9a16-0b3d9eee0692",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e70208ba-256e-4b6d-8b02-8e317b49b9b2"
        },
        "item": {
          "id": "6332d529-73dc-49dc-8461-6cc07e8f387d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "764a5cf9-fd9f-413e-976b-db14dcafb5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0772ed86-a55f-498c-8891-ca54ecd8850d",
        "cursor": {
          "ref": "a76b7034-30b0-47bd-96d1-f9e3a07de052",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "34670309-9ae1-4ec6-bc6b-610c38ea83fb"
        },
        "item": {
          "id": "0772ed86-a55f-498c-8891-ca54ecd8850d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "841b3ee6-1dcf-4ed0-8a68-03eae9e09b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0aae9d6-1986-4a29-b2d6-b745a903085f",
        "cursor": {
          "ref": "5130f1b7-960d-4212-8736-361d1c0f3784",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "565b738d-73b1-488f-b90a-ab15436471b9"
        },
        "item": {
          "id": "c0aae9d6-1986-4a29-b2d6-b745a903085f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9475e576-38ae-49b3-9875-38f0e8b70bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f542d867-c391-4b1f-9986-a54762dcbe23",
        "cursor": {
          "ref": "9e703f0e-bd59-4a96-bbbc-27fb57dfe915",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "edbfc5a2-c2a9-415e-8098-0f3e128eff5c"
        },
        "item": {
          "id": "f542d867-c391-4b1f-9986-a54762dcbe23",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7251769e-9b87-430c-a40b-5d70632763b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5a2e71-1154-4a9d-b6d0-e1060f71592f",
        "cursor": {
          "ref": "233ffa64-6cfe-49da-a022-a7a2f88a508b",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a031aba7-5df9-4a25-9113-6ec6e8919808"
        },
        "item": {
          "id": "ea5a2e71-1154-4a9d-b6d0-e1060f71592f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1423b672-17a1-47cc-9482-22c229d726ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184542ba-ed05-4d5b-9219-2b27905139c3",
        "cursor": {
          "ref": "b9dfcace-9baf-4b04-8738-b788e68aa4c4",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8faf6443-16a3-40bc-a5d0-364866d6ffed"
        },
        "item": {
          "id": "184542ba-ed05-4d5b-9219-2b27905139c3",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "de21f38b-cc4e-4e09-9615-5f1185f89b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802752da-6b47-422e-a0ca-aa4d9052d1d9",
        "cursor": {
          "ref": "65520698-6ea3-43d3-b339-f50194ebd7f4",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "03ebe272-2c0c-421a-9819-de6999e60e6a"
        },
        "item": {
          "id": "802752da-6b47-422e-a0ca-aa4d9052d1d9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d0da57c8-06be-4e96-b08d-c413fe8e7616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fbcba85-129f-4fb7-85c9-5b7df07c1d2c",
        "cursor": {
          "ref": "a0072a99-5f73-4563-a7f8-8388d68a7cfc",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ecb29a1c-0f88-4829-8092-45cf0b1807d6"
        },
        "item": {
          "id": "3fbcba85-129f-4fb7-85c9-5b7df07c1d2c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "85800246-a5fb-4246-8572-64202119a00b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1501,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145e803e-7d82-423a-8bc0-582cad1428ab",
        "cursor": {
          "ref": "9c4bdb7b-ed71-43e5-8ced-c13d5a56b297",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4e155e36-3f83-42a2-945d-bc0376fda54e"
        },
        "item": {
          "id": "145e803e-7d82-423a-8bc0-582cad1428ab",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "25646aea-3921-4f62-b791-358efef98357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc9a6d9-cd96-4bd7-8a36-46c1aa5d1573",
        "cursor": {
          "ref": "63bb5d08-f42c-470f-a1b1-f327546f4674",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4840da83-e4e5-42a8-8ebc-0c288df3ef42"
        },
        "item": {
          "id": "8fc9a6d9-cd96-4bd7-8a36-46c1aa5d1573",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9ecee242-b0e5-415e-9462-1290088d7613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e3b106-a803-4c72-b69b-383238853940",
        "cursor": {
          "ref": "01fcb79a-95c2-4017-a033-7433488e06ab",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "850e1af3-758d-40a6-9244-5711216f4ed0"
        },
        "item": {
          "id": "a5e3b106-a803-4c72-b69b-383238853940",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "14baacef-4609-40d8-95cf-0bd8a5588f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029698cc-2864-48aa-80c5-8c0e1a5efc23",
        "cursor": {
          "ref": "40ab62b1-9045-4968-aef1-84a0e9f454fd",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "72d1a3d9-f5b3-417c-aa1d-caec5b9f8903"
        },
        "item": {
          "id": "029698cc-2864-48aa-80c5-8c0e1a5efc23",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d37fd091-5a18-4e26-9ba4-70aa2edf1992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42078754-3462-4944-bacd-5a052dfa29f9",
        "cursor": {
          "ref": "05a2bd1d-fea4-41d7-9d83-aff78c1f82a3",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3df93668-21d9-4966-9790-db0ea6b24cac"
        },
        "item": {
          "id": "42078754-3462-4944-bacd-5a052dfa29f9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "24180620-5242-42c5-bfa8-41747168a59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c75a24-e118-4e1b-8586-d8a334805e32",
        "cursor": {
          "ref": "a48d20bf-92c5-4bcf-b35c-0b4012fc6a9f",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d9ebacfd-1145-4486-bdd3-8ca36b21c44b"
        },
        "item": {
          "id": "c8c75a24-e118-4e1b-8586-d8a334805e32",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5b1e45d6-9d96-472a-9477-c0c3920f705d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eae0a7c-506f-4e3f-8a25-990974046cba",
        "cursor": {
          "ref": "1317fa4e-80b4-419c-a279-f3709ebe5efc",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6e0034ce-e7a8-420d-ae67-6d4e84eb2a5e"
        },
        "item": {
          "id": "7eae0a7c-506f-4e3f-8a25-990974046cba",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "80cf5438-2c4a-4dde-81e8-8ba66231dc76",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1504,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b61dbd4-4603-4f3b-9175-7c8fdd87e94e",
        "cursor": {
          "ref": "d891c672-e36f-41c5-b13b-09802dfcf16d",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "497b8642-7e27-4ffc-b988-9ec76682bea3"
        },
        "item": {
          "id": "3b61dbd4-4603-4f3b-9175-7c8fdd87e94e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c57e5ba3-c3ac-4d6d-824a-e43e8db88359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c74041-3dd3-41ff-b2ed-11c41c08602b",
        "cursor": {
          "ref": "6a7c8aba-6e42-44fe-b3be-05278a713a21",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6c927217-5fa5-4fdf-b778-0cba2f6c5554"
        },
        "item": {
          "id": "f6c74041-3dd3-41ff-b2ed-11c41c08602b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b36ff8c6-3042-465b-a946-a554731b47fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f55c4b-97d4-4041-99e8-ef9203108fd0",
        "cursor": {
          "ref": "d72d7b34-6261-48f8-b7f7-ed744254cf40",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d0007d2e-c235-4254-8705-0b27e3265ad4"
        },
        "item": {
          "id": "59f55c4b-97d4-4041-99e8-ef9203108fd0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1370de3b-f20d-4420-a3bd-2b205c9bd438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6ad23f-eeaa-48ef-ad74-f7d157c0a891",
        "cursor": {
          "ref": "6c9627d5-b30f-4c38-b5dc-2d2ef558e243",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "cdc2e069-6d06-4f46-9540-484db13ba52c"
        },
        "item": {
          "id": "0a6ad23f-eeaa-48ef-ad74-f7d157c0a891",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7a2f04a5-17d1-44ea-8f03-5c66a13b2325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2496a3-0946-48d8-a01f-47207e19147a",
        "cursor": {
          "ref": "171b0d09-5793-4bb5-8825-110408a0d082",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "60ee6c05-9d8a-4dd0-b4ed-ba2e86f4b535"
        },
        "item": {
          "id": "2e2496a3-0946-48d8-a01f-47207e19147a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "21425259-37bc-4934-b37e-26cfb7ddd8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745dc246-242a-42d6-9d09-1c2f9656583c",
        "cursor": {
          "ref": "d7d024a8-88dc-4a7e-b1fc-eafd1e82abf8",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5c20f0d3-0aa0-41eb-941e-f81da4529c89"
        },
        "item": {
          "id": "745dc246-242a-42d6-9d09-1c2f9656583c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "02c06a89-04ea-4b27-b4cd-cf64a1495f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6e3d05-fa02-4e41-ba32-fbb8b6f71bfd",
        "cursor": {
          "ref": "fd04eb97-2937-4807-b42b-475b4d59d45d",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "90bd8ed0-8f90-4bc5-ab35-c2ac530e178b"
        },
        "item": {
          "id": "5e6e3d05-fa02-4e41-ba32-fbb8b6f71bfd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1560357e-58d1-4eba-8cdc-7b4f9b099d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa61e18-0453-43a1-84d4-73b0359af931",
        "cursor": {
          "ref": "360fa677-5c03-4b72-869e-5c699f113660",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "886447b1-36d0-4c2d-b4fc-6d7a98f475d2"
        },
        "item": {
          "id": "daa61e18-0453-43a1-84d4-73b0359af931",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ec373200-2ca3-48b5-ae4f-2cf83e61ce0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da077e29-0ca2-4c55-97a2-5f1af3a42155",
        "cursor": {
          "ref": "01662b1a-1d67-44aa-80d0-e4a73ceb5589",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ef0f3c66-17c3-460c-af76-5d4e08bc3dcf"
        },
        "item": {
          "id": "da077e29-0ca2-4c55-97a2-5f1af3a42155",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ea959fb2-88fd-4b02-9a6f-aed125db9cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7e4c74-2e99-41af-90ee-699f2670c9c9",
        "cursor": {
          "ref": "aeda70b6-d048-4e67-89ae-148dc6c4d6d5",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "53731e5a-3f5b-4285-987a-576753274d49"
        },
        "item": {
          "id": "df7e4c74-2e99-41af-90ee-699f2670c9c9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "718b6c7a-8d5b-4957-8cd3-9d41be98ef19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea69863-6530-4073-b597-b57ef5d7186c",
        "cursor": {
          "ref": "6ef591b7-92cd-4cd2-89e9-f1c3bc92b4d1",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "15c82121-23a2-4191-afa1-5cfebde1bee9"
        },
        "item": {
          "id": "6ea69863-6530-4073-b597-b57ef5d7186c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ea4e081d-471e-4a2c-a98a-8111d5671ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e36d88b-bc7a-4508-b54b-5a356f6e5835",
        "cursor": {
          "ref": "2d997e56-c087-4c34-a99c-558f1d13aec8",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2314032c-0e4b-44a6-8c77-557a8e6739be"
        },
        "item": {
          "id": "5e36d88b-bc7a-4508-b54b-5a356f6e5835",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "317621da-8fef-4123-a8c7-81eba5ab77c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edfedce-91cf-4e14-aa9c-ffdc9f9332d5",
        "cursor": {
          "ref": "7292fd66-f7fd-49dc-ade3-a50100e5ab43",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ab26720f-4909-4f18-9027-221fabe4e8c3"
        },
        "item": {
          "id": "2edfedce-91cf-4e14-aa9c-ffdc9f9332d5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4a7719df-1cbc-4b10-b962-b21efa5af876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cc5901-a1c2-49d8-b55c-108c4b3dbd7f",
        "cursor": {
          "ref": "b558e680-a8c9-49b0-9e89-4c169ed6e12d",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "73c58453-ed06-47d2-bebd-4aff874707cc"
        },
        "item": {
          "id": "53cc5901-a1c2-49d8-b55c-108c4b3dbd7f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "29f98a2e-2d19-48a3-a553-f641ef272009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4915bad-d7b4-4f47-99e0-e8a4ae734fe7",
        "cursor": {
          "ref": "7c6a7d74-de70-4d7c-a4ef-2451edf496c0",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cd7a66fb-c124-49a3-a3ca-afae64ec2e74"
        },
        "item": {
          "id": "f4915bad-d7b4-4f47-99e0-e8a4ae734fe7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3063c994-3ca9-4dd7-9d4b-29fdf2f062dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04db1ed-7736-44a9-9b4d-5f3307c631ff",
        "cursor": {
          "ref": "8aef7832-0ee9-426e-af14-6b9e57c04cae",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "72405f9f-f525-46ad-b6f1-39a88e207263"
        },
        "item": {
          "id": "a04db1ed-7736-44a9-9b4d-5f3307c631ff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "92ec155a-9330-4836-98c7-58b354eaa4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fb4fd8-0e05-4f27-839a-82b6c53f969d",
        "cursor": {
          "ref": "d5572898-0470-49f5-8a7a-e9724ef555b3",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "eada83c9-8942-4bd1-8a51-c24bec03ba3c"
        },
        "item": {
          "id": "77fb4fd8-0e05-4f27-839a-82b6c53f969d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8efbe3a5-21a6-4ef3-90d7-d39ed17369dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaee0119-d546-4b30-8f7b-943da534fe11",
        "cursor": {
          "ref": "d5618118-0992-4646-b437-3ded6d1eddb8",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "de0a5b1a-038a-42a3-a7a1-cd817bd81673"
        },
        "item": {
          "id": "aaee0119-d546-4b30-8f7b-943da534fe11",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "15f93f0e-15c6-4d35-a844-79888f57b822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a0c399-eaa0-4ae3-b270-1a0298f6cd73",
        "cursor": {
          "ref": "39dab255-4f99-486e-8a0b-273e2a0f38f7",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2dd99683-3b5c-482e-b47c-3f2bb4bdd0a3"
        },
        "item": {
          "id": "c4a0c399-eaa0-4ae3-b270-1a0298f6cd73",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b5f27fe3-1512-4960-aceb-4c02e2f14d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d9c62c-08cb-4040-94c2-840eca8c08ad",
        "cursor": {
          "ref": "e76df0c3-1888-47ee-b6e2-8bd8bd0fe4d5",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1c0001ad-3729-4daa-a249-487cf56aeffa"
        },
        "item": {
          "id": "44d9c62c-08cb-4040-94c2-840eca8c08ad",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "686ae298-46be-496f-8e2e-2a5a21c59a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38e2569-0eb6-4521-a4ff-ca74b9fd7b92",
        "cursor": {
          "ref": "66b82247-8b0a-4afa-bfdb-b9d0118caecf",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c98196fa-daaf-4ee1-9744-57a115f7e139"
        },
        "item": {
          "id": "e38e2569-0eb6-4521-a4ff-ca74b9fd7b92",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e0946cd4-b05b-49be-b666-fd7fc40c67f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6dd3e06-8e6d-4742-8b30-1cc3f14b7ba3",
        "cursor": {
          "ref": "37a7fdac-5958-4595-b426-ea14dcf76ed6",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "71175102-2cc0-4707-a8bb-1b95c7e78612"
        },
        "item": {
          "id": "b6dd3e06-8e6d-4742-8b30-1cc3f14b7ba3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "604ab9ec-59ae-4e5e-aa35-11b32e199d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807e0cbe-4e42-4248-b6ba-968548e03474",
        "cursor": {
          "ref": "82eb35da-d3b6-4dc6-9024-41b32dc2925e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "133c020e-90a6-4cb7-88f9-e4df8d0890cc"
        },
        "item": {
          "id": "807e0cbe-4e42-4248-b6ba-968548e03474",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fa3fc4ff-9b6b-4d3b-bc0c-6531100498cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58058f32-2fa8-483c-a40e-ef492aff3c17",
        "cursor": {
          "ref": "103376b5-4824-4226-a826-85cf87d35e79",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2b21c3e8-8532-4890-b5cc-7cd318098230"
        },
        "item": {
          "id": "58058f32-2fa8-483c-a40e-ef492aff3c17",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "002c9ba5-7d93-47ef-ba6d-4aeda940deb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3407fe-11c0-446e-a6ad-0ff279829e3e",
        "cursor": {
          "ref": "3fde386b-0e49-4121-bca6-4b3069aaaea4",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "25dd69db-4355-43fd-b80e-a6c027944281"
        },
        "item": {
          "id": "cd3407fe-11c0-446e-a6ad-0ff279829e3e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a861f006-4cea-418f-8bb1-45e4ca3d4151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9188db-df84-445b-b5f5-46f8e3a7095d",
        "cursor": {
          "ref": "f92a9bdd-c86e-4e3b-a05a-f6ab57471ee6",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fc44bcab-c41d-4ef7-9c57-2a1a7135de90"
        },
        "item": {
          "id": "bb9188db-df84-445b-b5f5-46f8e3a7095d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cbee9ea2-7dac-4bf1-aadc-bcd42295fa02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238a6b77-8885-41a3-a355-1733cfaa6b71",
        "cursor": {
          "ref": "d06c8992-860d-4321-975c-9e6d13b04f40",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b6876145-9428-484c-9aea-5d3e96c2bb6a"
        },
        "item": {
          "id": "238a6b77-8885-41a3-a355-1733cfaa6b71",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bf82629b-18d5-438f-b7c9-df7b9fff40e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d178c8b5-83c7-4dd6-a6ae-1ed3e6a60dd5",
        "cursor": {
          "ref": "dab2adaf-658c-4564-bb67-456e9c47fe27",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5e90a5ae-fce7-4dc6-aec0-d22b6b130e74"
        },
        "item": {
          "id": "d178c8b5-83c7-4dd6-a6ae-1ed3e6a60dd5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "989e549d-18dc-4f9c-800d-ee50e145cd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5ccd55-641e-46eb-8a30-742c8808cf82",
        "cursor": {
          "ref": "38dfad4f-f008-464c-9bf5-eef13f51e263",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6aaee033-1b90-45a7-90e5-cf2b88bb3ac4"
        },
        "item": {
          "id": "0f5ccd55-641e-46eb-8a30-742c8808cf82",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a5ad9e1a-5fea-44fe-827c-a10f82b9477a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c7429f-9859-4630-bb6b-6660ef041de9",
        "cursor": {
          "ref": "b74cc9f2-8525-4a01-bcb6-25292ef75368",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3878649c-1bc0-4d51-9f71-3dfc92e136ae"
        },
        "item": {
          "id": "d1c7429f-9859-4630-bb6b-6660ef041de9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3d78d3e6-e457-4ac6-b881-b98a1d607d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16a7637-ad4c-4170-a427-b164343884da",
        "cursor": {
          "ref": "1429820e-6218-416a-bb83-95706f681737",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "de9cb5db-ad65-45da-a84c-c40dbe13242e"
        },
        "item": {
          "id": "c16a7637-ad4c-4170-a427-b164343884da",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fae24ead-71b3-4488-8dc1-22cc1c0d6c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b966ce69-c643-4d94-b632-be67a10dd614",
        "cursor": {
          "ref": "d4958e8e-ca69-49b5-9415-7a6ec2718451",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2cfff898-6b07-4c10-b4b7-5322ebbc0428"
        },
        "item": {
          "id": "b966ce69-c643-4d94-b632-be67a10dd614",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f4456946-d4da-4eaf-b925-a502b765b7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca827f2-7f2e-4ba1-8be9-6976c16c7f43",
        "cursor": {
          "ref": "250ab5f9-bc44-44b2-8b2b-98ff4b03f43f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a6812a1c-db81-4717-8602-597b49983e11"
        },
        "item": {
          "id": "eca827f2-7f2e-4ba1-8be9-6976c16c7f43",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "77892d5a-68b0-4b26-9a7f-d1d16ddfeb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1bd3e0-cd99-41bf-9f93-209f4aaf3795",
        "cursor": {
          "ref": "158ee3ff-fd56-4687-95de-b6c837949e2a",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e47640fb-d8d7-4217-9dcf-a02ff9830738"
        },
        "item": {
          "id": "ea1bd3e0-cd99-41bf-9f93-209f4aaf3795",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "461dba4c-a5da-475d-9e5b-8ab73231777d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c1c544-11d5-4d96-b4b7-9fbca68a416e",
        "cursor": {
          "ref": "0591515c-f3c2-4b9c-8103-d5e5e6cb6dc0",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "64047fa2-82ec-4c66-a51e-0a9ccf629751"
        },
        "item": {
          "id": "59c1c544-11d5-4d96-b4b7-9fbca68a416e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "df4a5383-d563-4fa8-be7f-c5dcc9004497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7cb35b-aade-45b4-8a95-52dfa98981ba",
        "cursor": {
          "ref": "cb3787c8-9c3f-4f44-b9c6-1a6649752ac6",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "270efb99-e13c-437b-a4fa-fcaca58cc2dd"
        },
        "item": {
          "id": "ee7cb35b-aade-45b4-8a95-52dfa98981ba",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "cdd21c2b-c3de-47ba-b50a-bde29b85187e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d433ff-f105-4efe-923f-a97c180083ac",
        "cursor": {
          "ref": "aac94073-1ffb-42ed-9887-d3a554c4ec5f",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6eac077d-055e-4fef-addc-d8c4db0fa4d8"
        },
        "item": {
          "id": "f5d433ff-f105-4efe-923f-a97c180083ac",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c79817d2-2054-46ab-ac31-5d768f02eb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60f9d2b-9f6f-4188-9f5a-8ffbea44a195",
        "cursor": {
          "ref": "6d63e687-de0d-417c-98ca-070b5d69f257",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c1814440-a83f-4293-addc-2b96d35e84aa"
        },
        "item": {
          "id": "e60f9d2b-9f6f-4188-9f5a-8ffbea44a195",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b8224e57-6c0b-419c-b9cd-3a493c57905f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8aa26f3-d64b-41f0-a7c0-005aa8cea995",
        "cursor": {
          "ref": "11efe814-5fbf-49f4-94e4-3646c7dbb1d5",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3113c638-6575-4860-9341-7aa804fe06b2"
        },
        "item": {
          "id": "c8aa26f3-d64b-41f0-a7c0-005aa8cea995",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e8228b6c-a911-49a1-a93b-609c7b3f183b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861e10cf-6413-4d6b-8c49-87a874b46f24",
        "cursor": {
          "ref": "cba2acaf-87d0-4ce3-9636-4e2b107a4e7f",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ad2ebb93-a20a-4c64-8c63-30c5935c896a"
        },
        "item": {
          "id": "861e10cf-6413-4d6b-8c49-87a874b46f24",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7cd46df1-fb29-4bec-b555-22414d8dd51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c157c7d3-6016-435f-ad02-724a90c4d3a1",
        "cursor": {
          "ref": "8e748e7b-f05d-4f5f-bbc1-c1be7f6df705",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "32b745b8-1912-499e-8f5f-ba48769f549d"
        },
        "item": {
          "id": "c157c7d3-6016-435f-ad02-724a90c4d3a1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "abc746cf-b5d7-4b62-94ab-14645c324487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b884fded-5ee2-44cc-aef9-23b0feca9c81",
        "cursor": {
          "ref": "86012fd4-2cec-4596-9eb1-f09323d4a86c",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "df18ce14-57d1-4f08-bfc0-e443573b269f"
        },
        "item": {
          "id": "b884fded-5ee2-44cc-aef9-23b0feca9c81",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b16c23f5-c10f-46f3-a177-b5af60d22279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c48cb8-fc8e-4125-a009-b35866484b16",
        "cursor": {
          "ref": "84a376bf-3438-4e2b-adb5-07b7282134aa",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3dae6c00-0ec0-44c2-a682-9eb500c0502c"
        },
        "item": {
          "id": "b0c48cb8-fc8e-4125-a009-b35866484b16",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8eff96b0-538f-4f06-b13e-1130c854a1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de846ce4-ed25-4f45-83c4-d8913e6e46f9",
        "cursor": {
          "ref": "11c86a96-af74-4d70-99a0-2049d8cec4fa",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5c49867d-30ee-468a-a888-56152753a8c9"
        },
        "item": {
          "id": "de846ce4-ed25-4f45-83c4-d8913e6e46f9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "cb851eba-e1ce-44b1-8608-d827f826601a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27fc17c-da48-496e-8156-b0b8112acc0b",
        "cursor": {
          "ref": "59935535-bfeb-41ea-9bf3-3d1ec413a5e3",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "81f870b6-06f1-4c15-8c74-ea78c0207fe2"
        },
        "item": {
          "id": "e27fc17c-da48-496e-8156-b0b8112acc0b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c5d7d8ad-08dc-4cca-a11d-3c9392d2c47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ec30b7-94cb-4f6b-86ff-784a79d34457",
        "cursor": {
          "ref": "8daa27f1-d255-4fa6-9e8b-2b779f94a022",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "53912d89-fff8-446b-9891-5935d7bba38a"
        },
        "item": {
          "id": "d4ec30b7-94cb-4f6b-86ff-784a79d34457",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b1797b43-8f29-4128-915a-f75c62a600b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93890af4-d978-484e-9a8d-a4c8e9031c63",
        "cursor": {
          "ref": "97919b87-94a7-499b-9f7b-54125f9d7640",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "cba3ce93-ba06-424c-9e82-cf4a54daf4fb"
        },
        "item": {
          "id": "93890af4-d978-484e-9a8d-a4c8e9031c63",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a1f0b351-6e0c-4da3-afd3-609684aa1989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5faa450a-e92c-46ab-8c2c-a3fe64c60daf",
        "cursor": {
          "ref": "1f1931f6-be38-4694-a008-463b5a779702",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0d95fd31-2551-492b-8baa-65aedae226b0"
        },
        "item": {
          "id": "5faa450a-e92c-46ab-8c2c-a3fe64c60daf",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "afc5a30e-9d55-4089-97bb-583c24ae1e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8736e52c-b9d7-4318-b484-cf39837b84f9",
        "cursor": {
          "ref": "d555c9bb-3e6d-4614-b2df-72181613af1b",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "08b79f80-b999-47a1-8d70-ad9ae9f680ae"
        },
        "item": {
          "id": "8736e52c-b9d7-4318-b484-cf39837b84f9",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "49214b5a-aa6a-42fa-a41b-42ea3251153f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1507913c-3a8f-487b-a8fe-3af9e28cc07a",
        "cursor": {
          "ref": "ae0cc829-43a1-48a2-8907-008ce6080e65",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "41320abc-3007-4d70-be2b-da89ca4ef5c4"
        },
        "item": {
          "id": "1507913c-3a8f-487b-a8fe-3af9e28cc07a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "de0cac09-6505-486d-886e-f35af7d3b865",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158c82d4-a5a9-4e8b-a56c-1eeea29b7b4f",
        "cursor": {
          "ref": "8c4ca804-4a9e-45e9-9756-5425a1993eb4",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7c652c78-732a-4d2a-98cd-0ee3d6769681"
        },
        "item": {
          "id": "158c82d4-a5a9-4e8b-a56c-1eeea29b7b4f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "aa87413d-ce43-468d-b6d0-f9201b2cf5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c00e88f4-3496-44c8-bae0-995b7dd0e6eb",
        "cursor": {
          "ref": "b1f7188a-d9b7-44da-bc20-75e124a3f74c",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3c8eb6ce-d947-4711-ad93-7aa348d0012e"
        },
        "item": {
          "id": "c00e88f4-3496-44c8-bae0-995b7dd0e6eb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a785a6df-f710-4af5-84f2-9d872b2e4913",
          "status": "Created",
          "code": 201,
          "responseTime": 9226,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "a820c9af-a5b0-41c6-ba95-a5ea1c628409",
        "cursor": {
          "ref": "3b11d19b-8503-4fe7-a63d-a24d7393fc3d",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d6920df4-8810-4c98-92a3-618d1b011ad4"
        },
        "item": {
          "id": "a820c9af-a5b0-41c6-ba95-a5ea1c628409",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0efa2812-f542-49d1-ad28-5e5bc6e3a9e3",
          "status": "Created",
          "code": 201,
          "responseTime": 8557,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec84f87c-2a33-4157-8573-a1e90e410ddc",
        "cursor": {
          "ref": "6546bf96-fa31-43a5-8141-552069df9fba",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f150d6c6-7a1e-472d-adea-02568149c7ab"
        },
        "item": {
          "id": "ec84f87c-2a33-4157-8573-a1e90e410ddc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "63c44c65-a522-4ba0-b127-8f8e83fecf0a",
          "status": "Created",
          "code": 201,
          "responseTime": 8291,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "308d752b-be9a-49f4-9966-d426f1a44fa8",
        "cursor": {
          "ref": "91c68f23-5de1-4ef0-aed8-87d8b09c5bb8",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "472c2354-4633-4a2a-af9f-8ec8e6ecd055"
        },
        "item": {
          "id": "308d752b-be9a-49f4-9966-d426f1a44fa8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0cad380f-87b4-445c-abf8-6d3a32b9b39c",
          "status": "Created",
          "code": 201,
          "responseTime": 8580,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c329408c-398c-48ad-8955-da0d42b91476",
        "cursor": {
          "ref": "d085818a-297b-4f49-9431-13af41ab3183",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "76487297-c2c7-4c98-824d-42c6de286a96"
        },
        "item": {
          "id": "c329408c-398c-48ad-8955-da0d42b91476",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f59fe389-0782-4d34-b648-180b4e324ace",
          "status": "Created",
          "code": 201,
          "responseTime": 8981,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a7db3c-b6a3-4e6b-bef8-f00b22587d8d",
        "cursor": {
          "ref": "a4120369-b20a-484f-afb2-f46744454377",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "99af2564-930d-4748-a75b-cc3785d5251e"
        },
        "item": {
          "id": "80a7db3c-b6a3-4e6b-bef8-f00b22587d8d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5090af39-4797-4084-a0e0-c54383bb241f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "73b75d15-9ccc-49ff-8d86-a94bccb8d7e2",
        "cursor": {
          "ref": "70c2a510-dba5-4262-bb1a-c9ac2117cadd",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "815844c5-c319-44b7-b216-3375700d80e6"
        },
        "item": {
          "id": "73b75d15-9ccc-49ff-8d86-a94bccb8d7e2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "59ba7f27-cafa-49fd-8ea2-9c9b86055234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f24630-fb79-409d-a3f5-4c3226a1982a",
        "cursor": {
          "ref": "ab6b963a-a8a2-4043-a4d0-9d86c9ee54eb",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "24bf6bce-2ba2-4d4c-a350-4cf3f3eea305"
        },
        "item": {
          "id": "c8f24630-fb79-409d-a3f5-4c3226a1982a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8a1d9e01-3a4e-4eeb-b971-01d68b77c768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4878f0ed-8cd1-4e96-b751-b0e384f7c0a8",
        "cursor": {
          "ref": "7c3fcf87-4f46-4ad0-a31e-9a47913aeefd",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c564ae11-95cb-4f9a-89c9-e3a56974944d"
        },
        "item": {
          "id": "4878f0ed-8cd1-4e96-b751-b0e384f7c0a8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c95ba61d-9523-4e87-827d-7e3ebe7f45d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d13fc07-2f61-4596-8297-5cc197f474e3",
        "cursor": {
          "ref": "2c3e0b95-29a0-4dd0-9c72-cab4835dcd49",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e9f4da7c-4b1e-4d51-90bf-bb068d38ec82"
        },
        "item": {
          "id": "7d13fc07-2f61-4596-8297-5cc197f474e3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c29a27f9-7a41-42b2-9aa8-c4b3c97c7a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b44a50e-b236-456e-9669-c430c74996d2",
        "cursor": {
          "ref": "9f60188c-26f1-4b06-9e6a-cfb43bde68bd",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1a62308e-ee2f-400a-ad29-0ca6acfdca53"
        },
        "item": {
          "id": "1b44a50e-b236-456e-9669-c430c74996d2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "408982a3-d411-4a1a-9b94-7c693cdeaf48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0f8f08-1560-4889-991b-b21efc896d64",
        "cursor": {
          "ref": "3337c4d2-624d-4831-bc18-6f273c337ea0",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b2b92b2e-c0ea-411a-8efb-059d2e8267c0"
        },
        "item": {
          "id": "cd0f8f08-1560-4889-991b-b21efc896d64",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fcdfe768-f7eb-40e1-9f32-b2f6fa4ce238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f063ba-c67e-457b-87a1-07792cde1917",
        "cursor": {
          "ref": "dc243bc3-8531-42de-8fe6-2f743f9bc842",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2f1c2a13-42e5-4bcd-963b-31eb090627ac"
        },
        "item": {
          "id": "f0f063ba-c67e-457b-87a1-07792cde1917",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3964abd0-7b24-46d4-93cc-aa0427fdde56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433c2631-1d32-471c-a412-59499f3b9eb5",
        "cursor": {
          "ref": "e1b25d72-f89e-4f92-aec1-0c2e445f1637",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "351ec8c5-346b-45c4-a624-ff087d07709c"
        },
        "item": {
          "id": "433c2631-1d32-471c-a412-59499f3b9eb5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "98897045-4683-49a9-8943-7f38fdcdf2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b6662d-abfa-403b-9619-fc5d50689816",
        "cursor": {
          "ref": "18861c4d-5fa4-49d2-bc81-3eef124ba365",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d86440b8-9d58-47b7-bfa4-19641b7abd39"
        },
        "item": {
          "id": "02b6662d-abfa-403b-9619-fc5d50689816",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0277a1fd-6b0f-4800-a4ea-35799ab4908b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e636a7-16a2-4624-bda9-96a8ecf6acc1",
        "cursor": {
          "ref": "7b44be1a-d7ee-4e89-8cb3-f71fa7a233b0",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "efad06fd-25ba-42bc-8cc2-520eeb435383"
        },
        "item": {
          "id": "06e636a7-16a2-4624-bda9-96a8ecf6acc1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fb6f05a8-d5cb-4b46-bc9e-95f166d860b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3328d6f6-f115-4b4a-bde7-726b7bd1488e",
        "cursor": {
          "ref": "d908a0f0-4a9e-4ed8-a5cd-c032bee53a8f",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f51b8d4a-1122-4703-b682-b04a9322b174"
        },
        "item": {
          "id": "3328d6f6-f115-4b4a-bde7-726b7bd1488e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "69563e5b-b1c5-4b4f-b5b4-919cc4718df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab1c1d9-259e-4613-95d9-cdb42f54979c",
        "cursor": {
          "ref": "2a480beb-9891-4e3e-bbf3-fc98ed495939",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a4f7d774-8e13-4da6-bc85-07c7f62504c2"
        },
        "item": {
          "id": "0ab1c1d9-259e-4613-95d9-cdb42f54979c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f97b6cfc-a995-48a9-ad37-aad2489606f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ddaaf9-c611-4511-9c40-72a33fd827b6",
        "cursor": {
          "ref": "a9baaf41-6199-4dc8-abc5-b6fb7c2860dc",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9bb0c809-b875-4fe6-a62a-2cbd19a08964"
        },
        "item": {
          "id": "96ddaaf9-c611-4511-9c40-72a33fd827b6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d5909cc3-2cb7-4ae0-851f-4e408bbc665c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382bca78-afac-42ec-b892-2dc2ba1f126d",
        "cursor": {
          "ref": "075953b0-091b-4e83-86ac-94f1ce67dafe",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "29a484b5-02c0-4a16-af2f-5d41d20ec169"
        },
        "item": {
          "id": "382bca78-afac-42ec-b892-2dc2ba1f126d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9889f33e-5b6c-4cd8-8c0b-95fea1150e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48aaa466-9116-47bc-b315-e1942677f3e4",
        "cursor": {
          "ref": "9ddbdea5-0fc6-43c7-b36e-e2cea9b0eda0",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d97cbddf-c822-4e41-a7fb-e680b6c1d880"
        },
        "item": {
          "id": "48aaa466-9116-47bc-b315-e1942677f3e4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f8137423-a842-4b54-ba2b-310f9e589830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7274555-483f-453e-9255-ef7f5eaf7fb1",
        "cursor": {
          "ref": "c55a64fd-22ab-4b02-93be-3f6246cdd7ac",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "612aa3f9-8c15-4291-af1c-e2f35921bb09"
        },
        "item": {
          "id": "c7274555-483f-453e-9255-ef7f5eaf7fb1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "981fb0af-4420-401d-85b1-e91ee1172847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2fe30b-7f07-4f47-af09-3d36db57b665",
        "cursor": {
          "ref": "73c33770-d48f-403e-837d-d342674b6752",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e8cfd292-6b01-4a77-b440-4def07970ff2"
        },
        "item": {
          "id": "1f2fe30b-7f07-4f47-af09-3d36db57b665",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9d3651f1-c695-4442-bf9b-e0dd915266d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ecb457c-0419-426b-820c-77237271e373",
        "cursor": {
          "ref": "b8e4474f-469a-468b-b23c-b5c49882f5a7",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "419e5f3d-0d5e-4a24-8e8b-d9e3949453be"
        },
        "item": {
          "id": "6ecb457c-0419-426b-820c-77237271e373",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ef94583f-84b9-480d-a172-6207238f5b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4171b07-c8ec-4be5-94d2-f8bb93665d8e",
        "cursor": {
          "ref": "e4d02de4-beba-43a9-b9a6-99fdb7882e20",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "76062e84-6b59-4df3-9018-1461cabdc34d"
        },
        "item": {
          "id": "b4171b07-c8ec-4be5-94d2-f8bb93665d8e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "993d59e8-f9ab-45ca-8fcb-601ca672ea5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7f3457-924f-4b61-868f-aeb59c8629a4",
        "cursor": {
          "ref": "6c102a88-9af7-4db8-85ed-8e2dd178d0a8",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2d7aba84-af89-4bf1-a182-c561f401e8f4"
        },
        "item": {
          "id": "4e7f3457-924f-4b61-868f-aeb59c8629a4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7b951dcb-2361-4c5a-abca-ba8afb9506da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e185e3-fa4b-452d-a0a8-4ba44f848c5a",
        "cursor": {
          "ref": "7199208f-fde8-4a1d-bfb5-bf7a1683132d",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7083b628-3ba5-4ff4-8d82-892a6b736587"
        },
        "item": {
          "id": "c2e185e3-fa4b-452d-a0a8-4ba44f848c5a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dd734685-3168-4abe-9ac2-a998159b167b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45551bc4-270e-401d-a315-5ac19d85e069",
        "cursor": {
          "ref": "1a9194a3-cd69-4e01-b138-1d8190da711d",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8839e960-17e5-4a05-928c-1a0e14b2b238"
        },
        "item": {
          "id": "45551bc4-270e-401d-a315-5ac19d85e069",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d3ba839f-2bb4-443a-bea0-1084f05d39b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ed17df-40d3-409a-a66a-b08d883c6fd1",
        "cursor": {
          "ref": "7208f4a6-10fc-4b14-874c-337bc43315a4",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "308b2a2e-1134-4484-8d70-235d95387b62"
        },
        "item": {
          "id": "e5ed17df-40d3-409a-a66a-b08d883c6fd1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "43fbb1bd-345c-475b-8c10-dc711c66a40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb2501d-997e-4a7a-ac4d-ef2a81ecc555",
        "cursor": {
          "ref": "a187e5cc-08b5-4dee-a7fc-0d1fc16b3b78",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "874c6848-6982-4f08-8259-c04c84fa1848"
        },
        "item": {
          "id": "bdb2501d-997e-4a7a-ac4d-ef2a81ecc555",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b099a9df-b27a-4f70-9b4a-f753156af2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a182df72-08a4-49f4-9161-1f0a55cde5c3",
        "cursor": {
          "ref": "df4f07bc-ab59-4b42-906c-234d9a66aef8",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "499bb0ec-88e4-4140-98cd-a1bfe45b7645"
        },
        "item": {
          "id": "a182df72-08a4-49f4-9161-1f0a55cde5c3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5d13278d-f5d2-48e7-b582-8de526c8f528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c1728a-fad4-4776-9085-65ec16573457",
        "cursor": {
          "ref": "5d580e50-bdfe-4ff3-b2a0-7a6e2f6ddb39",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e12f2c68-8afc-4b93-b970-a4574249fe37"
        },
        "item": {
          "id": "c5c1728a-fad4-4776-9085-65ec16573457",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "42b34562-430f-416e-b7de-798aa1110704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3dbb9ce-8f2e-4d20-b85b-20ed0ecd8f70",
        "cursor": {
          "ref": "d4311598-7b43-4141-9551-dd319b704028",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "43be8fc0-2d62-412f-88fe-3e8ba761fbe5"
        },
        "item": {
          "id": "c3dbb9ce-8f2e-4d20-b85b-20ed0ecd8f70",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c8002114-7f71-49aa-850b-06d44de4cbe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b154831-cd0e-4062-9d15-73fa5565fb89",
        "cursor": {
          "ref": "d328784d-c43f-46a1-b985-3f36dca19b7e",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "618d330d-2bab-4b9f-8c58-160da5e5d74b"
        },
        "item": {
          "id": "9b154831-cd0e-4062-9d15-73fa5565fb89",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "85b5608b-6076-42fc-a8a3-655bf302f791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf41fc7c-baad-4352-9d7a-d3b0b6ea82d5",
        "cursor": {
          "ref": "4aa5edfc-78b3-4f30-a5d4-26fed73a411d",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5441b1db-a898-4b30-8efa-24d018fe5375"
        },
        "item": {
          "id": "cf41fc7c-baad-4352-9d7a-d3b0b6ea82d5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2ffe5d45-ccb1-44b2-bdcc-b3684081c5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad65da7d-3777-4277-a48a-bd6f3d5b90e7",
        "cursor": {
          "ref": "16df9211-e083-4e97-b8ee-e1509ac88f87",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "090aaafa-141f-4c03-bdbf-4c238678bf0f"
        },
        "item": {
          "id": "ad65da7d-3777-4277-a48a-bd6f3d5b90e7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "89381200-a13b-412f-942b-40da3c20e886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c9642f-e084-4942-ae07-dfeac6ca11db",
        "cursor": {
          "ref": "2f9f2fd9-c8bb-4a01-a0e1-ceb31f6ff3b2",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "aac92edd-c844-4cae-a03a-2e130a69d389"
        },
        "item": {
          "id": "68c9642f-e084-4942-ae07-dfeac6ca11db",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4793b141-e225-480d-84da-d4fdb3e749dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9499817d-d914-4a15-910a-5d3b6f6a6ac3",
        "cursor": {
          "ref": "b355097d-5666-45e3-adc8-756c4854d59c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fc6b1cef-5863-4197-96ae-4a504a1692bf"
        },
        "item": {
          "id": "9499817d-d914-4a15-910a-5d3b6f6a6ac3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b63b564c-fa04-4917-8b02-062e9c14b858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0c3bfa-ca05-4324-8f65-8348664906aa",
        "cursor": {
          "ref": "88f7d703-9861-4af9-8f85-04b0e2b29d87",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "43121072-0847-4ad7-838e-7a45c1abe34b"
        },
        "item": {
          "id": "db0c3bfa-ca05-4324-8f65-8348664906aa",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "361575cb-a534-4984-8cb4-9fbe3c942f89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d965f7d-169d-476a-af79-3b308817f543",
        "cursor": {
          "ref": "205f3e3e-d2a1-4988-9586-4e8cc8d5fa39",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7c912fd9-fc47-4ed8-ae6c-52dcaf716e03"
        },
        "item": {
          "id": "5d965f7d-169d-476a-af79-3b308817f543",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7c98de04-f33d-42e2-8bdf-3a5ab45e2c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744e18d4-394c-4acf-9fa0-7b795545fcbd",
        "cursor": {
          "ref": "b8f687c5-e5de-41f3-acbb-cbf1c0c16b3e",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e6688a28-dcf2-4bf4-bdc3-17ce6463bda7"
        },
        "item": {
          "id": "744e18d4-394c-4acf-9fa0-7b795545fcbd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d8e5664c-a0c2-4716-a05a-75ba3fa3fe4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1c1968-d4f8-4ed5-9115-b46e3a0049cc",
        "cursor": {
          "ref": "350b29b0-6e26-496e-b51b-f3dfc1dc08d3",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e0b6b295-ee10-4d01-a684-abe8f9987c03"
        },
        "item": {
          "id": "9f1c1968-d4f8-4ed5-9115-b46e3a0049cc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d4b5e4c0-366f-411f-99ca-f399b9df4203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7e9f09-0059-4de3-8416-e862d0adf4c3",
        "cursor": {
          "ref": "05d845c0-75a7-4caa-9ea1-7d429585d6c3",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4000f782-6604-4755-8694-ce39cb5ae583"
        },
        "item": {
          "id": "bb7e9f09-0059-4de3-8416-e862d0adf4c3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fdc3a299-67ea-4b32-8fb5-02e74d17d7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0706d546-7e20-49e2-a4a7-126f8d0bd947",
        "cursor": {
          "ref": "5feb69e5-511e-44d0-85de-3f900e65c3d2",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "76a8a21e-fd2d-443c-9971-d4c6d68e5bc3"
        },
        "item": {
          "id": "0706d546-7e20-49e2-a4a7-126f8d0bd947",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "31fa35fd-c966-4dee-8713-80cb480057c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9725d41-95a5-469b-b840-bcd3d174785d",
        "cursor": {
          "ref": "9224b9bf-f9b2-44d4-a96f-5fe96c130687",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "126a279e-d7c4-4cb7-91d7-e8230aab21b0"
        },
        "item": {
          "id": "e9725d41-95a5-469b-b840-bcd3d174785d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b45ca5f9-4c9e-437a-85ce-a30e8146337b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6619b7-e53a-4a1c-ae39-918efa71a0a0",
        "cursor": {
          "ref": "4412a6f4-e27a-4449-9235-5ce965d805b4",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e0f8f3a9-fdce-4a96-8560-4267f1784471"
        },
        "item": {
          "id": "9c6619b7-e53a-4a1c-ae39-918efa71a0a0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "07e3999f-1ceb-419e-860d-d45ea7b71f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04899726-8908-46ee-a550-107b2af89d32",
        "cursor": {
          "ref": "2c376b71-9c09-443d-a8fa-3f781f71db54",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "729d851b-a6a2-4ccf-8e9e-c58cd9c4e3a1"
        },
        "item": {
          "id": "04899726-8908-46ee-a550-107b2af89d32",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7b08fdcf-c230-419b-b7d6-a5137cee527e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6d4b71-99e3-4093-8169-ab69f77f3a62",
        "cursor": {
          "ref": "92c6c9e1-7cdf-4cd3-8dac-601cf468ae88",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5bf0dc63-0922-4861-a845-80e715392b65"
        },
        "item": {
          "id": "9a6d4b71-99e3-4093-8169-ab69f77f3a62",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "db7ccf73-aa82-43db-bc7b-20d52e69f244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97de2977-0949-4519-946f-26d8ca326c6f",
        "cursor": {
          "ref": "e4f6dfcc-efec-4871-94a1-2827610a2a40",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ef4e1d1d-e0e4-47c6-9501-b074ae593fe0"
        },
        "item": {
          "id": "97de2977-0949-4519-946f-26d8ca326c6f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e9ca1ec9-9c49-409a-91d6-ab6dd009c052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3d76a6-d5a2-452c-8196-9ab8c352cf7b",
        "cursor": {
          "ref": "a8ac2612-49a4-49c5-b8da-ff0db3c10cf7",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8cf0987d-a8d6-4031-aaf3-5269dd0caa73"
        },
        "item": {
          "id": "ea3d76a6-d5a2-452c-8196-9ab8c352cf7b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e33eacd5-f93d-4681-b802-fe68b96afb13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ce2902-7c86-4bcf-b0a1-3ee1d01a7c9d",
        "cursor": {
          "ref": "78f08d5f-adb8-4846-92d3-17d8455c0869",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "df3d22e6-941a-4528-8e18-9c49d85f48a1"
        },
        "item": {
          "id": "29ce2902-7c86-4bcf-b0a1-3ee1d01a7c9d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fdef8503-69b6-4b04-b461-f14fb618977c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a558d18c-80e8-48df-b2cb-a73b14fe9e74",
        "cursor": {
          "ref": "05bf5f2b-a60e-4aa2-8348-c06ac90091ef",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c5a03ae5-474e-4d02-aed3-5704401e6def"
        },
        "item": {
          "id": "a558d18c-80e8-48df-b2cb-a73b14fe9e74",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "08daa36e-44a7-4481-9959-40d78e657eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60926a45-4670-4683-9a32-a885cbf54d72",
        "cursor": {
          "ref": "5a3c64ad-e14e-4d6a-ab99-319c1327c2f4",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8c2c30fd-0d4d-4292-a157-51d5b5335145"
        },
        "item": {
          "id": "60926a45-4670-4683-9a32-a885cbf54d72",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d6a56606-ce36-4d6f-a575-e9ac5a25b5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528ed5cf-1e1b-4d1f-b265-883a5a12757e",
        "cursor": {
          "ref": "259db3c3-316d-4a2e-95db-10b73fd2e866",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3f22a235-0918-4afd-8232-ed3fbb9a2901"
        },
        "item": {
          "id": "528ed5cf-1e1b-4d1f-b265-883a5a12757e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d0153f6d-9d2b-45e5-b401-c8bb8522d136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed5f903-98a3-48cf-863b-426060b6f944",
        "cursor": {
          "ref": "781adca8-a075-4570-9275-49ead61f9717",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "724ff256-4d42-4897-9f2b-f61b2465f348"
        },
        "item": {
          "id": "bed5f903-98a3-48cf-863b-426060b6f944",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "66644040-32f2-4222-9889-4c620527b981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf6929f-ce04-481a-a2b9-ec3e7bbb6168",
        "cursor": {
          "ref": "fa2a8fbb-c259-4577-b4a7-cd4d286c6f28",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b5e99b45-6f2d-47d6-a350-8a3ca88e7d09"
        },
        "item": {
          "id": "ebf6929f-ce04-481a-a2b9-ec3e7bbb6168",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "478c1e7a-40df-4761-9ed6-91eae99231c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2cf8b0-fb8f-4008-9ec4-f4b47a9bfbfb",
        "cursor": {
          "ref": "e7d24f61-3920-429c-ae81-f2c578da83eb",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ae826ffb-bd23-4822-a9b8-43364f14f12d"
        },
        "item": {
          "id": "0a2cf8b0-fb8f-4008-9ec4-f4b47a9bfbfb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "256816ae-9cc9-40dd-9490-e9ae526c7715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b058170f-57fb-46b4-a695-18180c475552",
        "cursor": {
          "ref": "90930cf6-c48e-4ec0-9a67-f2f553692d63",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "26378b92-2e03-4c64-aa82-86a9ede89629"
        },
        "item": {
          "id": "b058170f-57fb-46b4-a695-18180c475552",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5efcb90c-64a6-4af8-8796-6dc28fcbe540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201783cf-c1df-4285-a70c-8b621b19c501",
        "cursor": {
          "ref": "2730e99e-c6b7-4c4d-8251-ae4bb021f406",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b05eff12-87f5-45a1-81d3-9ee3b28fa71c"
        },
        "item": {
          "id": "201783cf-c1df-4285-a70c-8b621b19c501",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "673bb0c8-aa22-47a7-bc99-d09f736bc2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5998b5e-3994-4dac-a55f-909d43e78375",
        "cursor": {
          "ref": "3cf21b58-e382-4e29-9635-d9c7aa927611",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d96ff118-c584-4a3b-a02d-bbd5eb87ae1a"
        },
        "item": {
          "id": "a5998b5e-3994-4dac-a55f-909d43e78375",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "20f68d5f-0533-4b6a-bd32-8ae21adab0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7134239e-aa88-4d42-808a-f291315f3a61",
        "cursor": {
          "ref": "f5d9ad45-36f5-4d78-8868-05c115850aa2",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "917abc2f-5dca-4813-a6e8-e5784a0d1201"
        },
        "item": {
          "id": "7134239e-aa88-4d42-808a-f291315f3a61",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cc2ca262-9676-41e8-b6c5-acc1df0b2ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc7e3c4-b3dc-4be0-8347-9e4ebca26662",
        "cursor": {
          "ref": "7f7b3334-d0e3-4b67-9060-26d44b1248f0",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "22712be8-5403-4aba-b44a-43f334bc09ac"
        },
        "item": {
          "id": "acc7e3c4-b3dc-4be0-8347-9e4ebca26662",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ac8cbc86-e9b0-4da8-9d76-c6aab6aa84d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f27b49-2879-4b40-bd50-561c5a96d55b",
        "cursor": {
          "ref": "ed6d6b3e-6b65-4a2c-beeb-1db18cd3cf8b",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "98f82888-221e-4d65-865f-b7beb94244ab"
        },
        "item": {
          "id": "67f27b49-2879-4b40-bd50-561c5a96d55b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "be187656-5736-41bd-a1e0-ad1767be93c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563a6d8d-5847-4e25-82ba-c017d831fd20",
        "cursor": {
          "ref": "085efe0c-54d4-422d-a31e-ace89ba73465",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a7f37354-669c-4a94-aef8-50f2df0bdf4c"
        },
        "item": {
          "id": "563a6d8d-5847-4e25-82ba-c017d831fd20",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "36b94064-7c64-48c6-8ca6-a362116c9d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa4654d-35ba-43b0-9294-c4ed1e7796b8",
        "cursor": {
          "ref": "769ac525-2797-4dd9-a84e-3c1e9aca9f5a",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c7cf5dbf-84ef-49c4-8868-44e6a7ec976c"
        },
        "item": {
          "id": "0aa4654d-35ba-43b0-9294-c4ed1e7796b8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e1b8e757-e45c-4c50-8cb7-a2847a49430c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b6dd3c-9422-401e-912c-79513ae837cd",
        "cursor": {
          "ref": "1839037c-293b-46a5-ae9e-f37eff0c37fa",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "784e2f19-05ea-4460-80b2-70c5042f926f"
        },
        "item": {
          "id": "51b6dd3c-9422-401e-912c-79513ae837cd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fd849920-27c5-4f94-af20-22bde84cf38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d29284-2fc1-454c-9bb6-173ed570c08f",
        "cursor": {
          "ref": "30875ab9-770a-4e63-9406-67e35edc8fe9",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "bedeca51-ceb1-4c58-91ba-a1be705181cc"
        },
        "item": {
          "id": "f3d29284-2fc1-454c-9bb6-173ed570c08f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a5a1d690-e967-40f6-8f50-71b671344e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d356de3-9a00-4dc3-93bb-373eef332166",
        "cursor": {
          "ref": "3bd426e3-eaea-48da-b3f9-3693db85c146",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e1dd39e2-12e3-4177-88c1-ce9df462c4d7"
        },
        "item": {
          "id": "4d356de3-9a00-4dc3-93bb-373eef332166",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "17fa05e2-c497-4e25-a6ad-6690c513f2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05932aed-a870-4bb3-a089-e70601b99fc4",
        "cursor": {
          "ref": "0af31012-aaa5-49b9-bebe-b2678affe5c5",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b4d12fab-11ca-43e5-ad56-c69d22113746"
        },
        "item": {
          "id": "05932aed-a870-4bb3-a089-e70601b99fc4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b0e61719-d6e6-4769-95ec-582a2d6152ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd57fe1-d6db-4f86-b282-8e266183a3c5",
        "cursor": {
          "ref": "e845b21e-be59-48f9-a13e-cac6ccb4e980",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6d1b26d7-5723-4424-a2f5-ecb04fc2e463"
        },
        "item": {
          "id": "5cd57fe1-d6db-4f86-b282-8e266183a3c5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8a768bf6-000e-407f-85e3-184c6c646b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1feb9d-2266-479d-a54d-91d56676eeec",
        "cursor": {
          "ref": "77cfcc2a-18b3-4aa9-9b88-b007167480bd",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a13a56f0-c92d-4e2a-b924-b56e5046ed98"
        },
        "item": {
          "id": "4f1feb9d-2266-479d-a54d-91d56676eeec",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "72669306-5c13-40be-af39-9d413e2e6ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f9eb17-a6bf-49f2-888a-53112b61a334",
        "cursor": {
          "ref": "3b46fce5-4837-4597-9f74-4edc4b62aac1",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a0b56486-afc8-4183-8029-cdfa2266f6a0"
        },
        "item": {
          "id": "86f9eb17-a6bf-49f2-888a-53112b61a334",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "82a86acd-9206-4498-b3a7-e1b618aacf4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d65bf47-edc8-4bbd-b54f-a72097162e38",
        "cursor": {
          "ref": "b28f7a03-d13b-45a2-8a3e-2b7db345c49f",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8581b7e0-57d0-43b5-9bc3-df8e16d8becc"
        },
        "item": {
          "id": "4d65bf47-edc8-4bbd-b54f-a72097162e38",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "92caf838-16b0-4bbf-9cda-a683413cef4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e592e72-419c-4363-82ca-9be0c6f90d2e",
        "cursor": {
          "ref": "3721d15d-9667-44b4-a6c6-176111fde2e6",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "eab3f06d-5a6b-45dd-9532-bf81e126d265"
        },
        "item": {
          "id": "5e592e72-419c-4363-82ca-9be0c6f90d2e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "41cba6b7-e747-42ff-888e-cc587ea7cb37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e9da42-9aad-4a75-a1d6-1c85108109b5",
        "cursor": {
          "ref": "eb491772-1048-4931-84b1-86328e7c5d5c",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "414bf82d-3a8c-4120-8945-0ba559831a87"
        },
        "item": {
          "id": "54e9da42-9aad-4a75-a1d6-1c85108109b5",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2bf50ac7-33b3-4fb6-a853-fe75b228717e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2eed7fd-f86e-48c8-ab4c-76022941313b",
        "cursor": {
          "ref": "490c26ae-72e5-4066-9b02-2d4653cdfabb",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a306ded0-6879-4df2-8905-802a3537af79"
        },
        "item": {
          "id": "e2eed7fd-f86e-48c8-ab4c-76022941313b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e262a4a9-d75e-46cf-b682-ccda94c24a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03e326e-8f80-4971-80e8-2e41bdb901ce",
        "cursor": {
          "ref": "79768a0d-16f6-4b40-be15-03069c85761d",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "380a8134-df01-4917-8ff2-dbcae394085e"
        },
        "item": {
          "id": "d03e326e-8f80-4971-80e8-2e41bdb901ce",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "16526290-b3e6-4805-ad86-59f161e4ee7f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a360e60b-ab4d-4e4b-9ea7-d335258b7d56",
        "cursor": {
          "ref": "cb6351c1-d916-4291-a52f-076b41aa8c62",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c0606474-b848-42bd-9d88-e1d1c83a6823"
        },
        "item": {
          "id": "a360e60b-ab4d-4e4b-9ea7-d335258b7d56",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fba532ce-dd09-4cbe-bf17-c4d34a37585b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675828bf-1014-4b02-bdc4-b4ba913e2c53",
        "cursor": {
          "ref": "0f6b8ba4-c27f-457d-b57e-e1031d3dccf6",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7af76003-1633-490a-8adb-f8fdba476fa4"
        },
        "item": {
          "id": "675828bf-1014-4b02-bdc4-b4ba913e2c53",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5db8d487-faec-4885-b35d-9ad0eb924923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b43084e-83cb-4e4b-9219-2c02ffb21aeb",
        "cursor": {
          "ref": "1765aacb-8784-43eb-96cf-3df47cb9b780",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b2540e4b-94c8-4566-890e-0a8bd962f5ae"
        },
        "item": {
          "id": "8b43084e-83cb-4e4b-9219-2c02ffb21aeb",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a441e9d1-a666-4f38-b9fb-97eaba624a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c75068-8b28-4a3a-8ae4-56ef6a73fa59",
        "cursor": {
          "ref": "0fd8d270-e2ab-4a2e-b0a2-29b23ac6f360",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "db3b35a6-14dc-4fac-9134-dab8344ce0f7"
        },
        "item": {
          "id": "37c75068-8b28-4a3a-8ae4-56ef6a73fa59",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cff3ddc7-93a7-4b5b-bde0-f3a37347023b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3b39ff-aaee-4dc9-aa29-4ccdfea652fb",
        "cursor": {
          "ref": "f1a19544-5e86-47d8-92a6-1cda74f3f4c8",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1158c220-b3bc-4e26-8081-8445e0879094"
        },
        "item": {
          "id": "5c3b39ff-aaee-4dc9-aa29-4ccdfea652fb",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5dbdb540-62fc-45d2-a30e-62d0a212e43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c1885b-9e1a-43ba-b853-8e17dd75ae7a",
        "cursor": {
          "ref": "ed6a38f0-b157-425a-a6f6-ec68aaad8aef",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fa0dfd30-f6fc-4a12-b22b-c123f2516450"
        },
        "item": {
          "id": "96c1885b-9e1a-43ba-b853-8e17dd75ae7a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "66f6ae22-5f7f-402b-8a87-b673405e9c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddf8201-1015-4080-b297-fc072cd13cbe",
        "cursor": {
          "ref": "e1863f8d-a110-4c34-af2c-9ca833523c15",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "53f57eb4-838b-40b4-bc52-3928011306ee"
        },
        "item": {
          "id": "0ddf8201-1015-4080-b297-fc072cd13cbe",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "546cea01-30fa-416a-a998-7d3925d0f7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cfe18ec-aed0-4eb1-8376-a12075571777",
        "cursor": {
          "ref": "68e84af2-6437-4bc0-bf0a-09303f395013",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "dffdc14a-9ac3-472f-9de9-7c1fec9b4a58"
        },
        "item": {
          "id": "6cfe18ec-aed0-4eb1-8376-a12075571777",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a057a9f6-7246-4afb-be9d-912f44812a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28dc13c-c41d-4c8d-8ed9-2d2727695a3d",
        "cursor": {
          "ref": "931422c9-16b7-4692-8796-d04ee2aac620",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c51e1289-53e6-41bf-a096-131560877f33"
        },
        "item": {
          "id": "d28dc13c-c41d-4c8d-8ed9-2d2727695a3d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "762df995-1674-4c1a-a4df-c3f87d34f353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51503b64-e9b7-4a4d-bd4f-377d86219dcc",
        "cursor": {
          "ref": "ba2d13d9-a929-4096-8c70-3b3ba2ded07c",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0f458d57-cd6c-433a-bd9a-fb3df6ca52cd"
        },
        "item": {
          "id": "51503b64-e9b7-4a4d-bd4f-377d86219dcc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0b5cc4cc-f54d-4c6d-9587-e99a2b319371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c878cdea-a747-4639-b8ea-d40d69da5552",
        "cursor": {
          "ref": "558f8563-e04d-4064-857f-ec86ef6f2b73",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5480f73a-abdf-486d-9a32-ed8f61827de2"
        },
        "item": {
          "id": "c878cdea-a747-4639-b8ea-d40d69da5552",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "23bac575-a3eb-445a-8c56-84cbb0cb43b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2cfd5b8-9605-48b2-a11a-beb0b8230a81",
        "cursor": {
          "ref": "4e6ccc31-794b-4b9b-ba20-5270b6397418",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "48995587-f65d-4df3-90c5-4ea65f4b7044"
        },
        "item": {
          "id": "d2cfd5b8-9605-48b2-a11a-beb0b8230a81",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ddbc455d-a1bd-4d54-93de-658e8a476786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1682079a-4337-4616-a04a-849b590e7d48",
        "cursor": {
          "ref": "9ac28c77-7266-40b2-85bf-faeac233c490",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cb77177f-81df-472a-9093-f9d16a6a6dff"
        },
        "item": {
          "id": "1682079a-4337-4616-a04a-849b590e7d48",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ac48e04d-b645-41bc-ae35-b62b7aca9a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e153f5-8180-4f7e-a3fa-3a9835b857eb",
        "cursor": {
          "ref": "1db3b849-98b5-428a-bd82-2532f7a8c48b",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d66a43a5-a2c9-4225-8385-ba1b9a4443cd"
        },
        "item": {
          "id": "28e153f5-8180-4f7e-a3fa-3a9835b857eb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "47d9991e-1be3-4ac1-b87f-2e90a4f4574e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c28512f-6d1a-43c4-9be3-8a90b7c9590b",
        "cursor": {
          "ref": "5bee9afc-4563-488b-8fd8-49cc02357ff1",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "63a96b5c-7cbf-4c62-84b0-a7c36f21984e"
        },
        "item": {
          "id": "7c28512f-6d1a-43c4-9be3-8a90b7c9590b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8bb56c38-020e-4bfb-930d-3065463f695f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ce5896-d935-450c-b1ce-2870d677b1d9",
        "cursor": {
          "ref": "6e36a43f-e777-4b37-9073-da225eefcdaf",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6714c206-1bd9-4438-9fbe-7df50e01be36"
        },
        "item": {
          "id": "74ce5896-d935-450c-b1ce-2870d677b1d9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e1ddadc7-6388-4440-8b24-2dbb0cf3dc7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf21db7-1a37-4d83-956f-b86a1735acfc",
        "cursor": {
          "ref": "715f6c14-f8df-42a1-a3ae-19b4d9c6f42e",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2c029857-dc6c-4e13-a337-263b8609bca6"
        },
        "item": {
          "id": "3bf21db7-1a37-4d83-956f-b86a1735acfc",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4e6cd063-ef77-479f-b0a5-822cdf7bad50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c15b590-dfda-4f34-a7aa-439acd6650be",
        "cursor": {
          "ref": "6f7dc5c2-6c12-4188-9d73-b20b5a96669d",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f4708a43-2997-45eb-a3bf-3b30a81116a6"
        },
        "item": {
          "id": "9c15b590-dfda-4f34-a7aa-439acd6650be",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "97bcdf49-55f4-4828-84e3-d33229a164ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f6ce09-fa9b-4143-af3e-3fba70071d8f",
        "cursor": {
          "ref": "0e375db2-2afd-4536-a68d-f0879ec8a900",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f894b825-525e-4d1c-b10f-ba087238ff0b"
        },
        "item": {
          "id": "67f6ce09-fa9b-4143-af3e-3fba70071d8f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7e3aff66-3412-41f8-ba8a-5c4825aeedbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3c2755-7cad-40d9-95b8-bacaf8dfcdd2",
        "cursor": {
          "ref": "d188adbc-1253-4a2f-8a6a-95021eb9ffdd",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5646a2bc-cfb4-484b-be88-b5f7e5eac402"
        },
        "item": {
          "id": "0b3c2755-7cad-40d9-95b8-bacaf8dfcdd2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f16c86fd-751b-481a-9bbe-15a01a87d187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161a3255-e359-4c88-91af-e9bfc74b937b",
        "cursor": {
          "ref": "0bdec721-ccf0-4c81-a075-956d4f35d1f0",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "67bd5182-5169-4665-8c20-325702d696a7"
        },
        "item": {
          "id": "161a3255-e359-4c88-91af-e9bfc74b937b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b83e5c05-22ed-4898-baa1-46607d0dc554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae012c74-3b97-49e2-8dc1-efbb0e26c793",
        "cursor": {
          "ref": "baea2e1c-1edc-43d2-a32f-b40473c1a6e3",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0ccbde5d-cab1-4cab-9635-d3098e36ece9"
        },
        "item": {
          "id": "ae012c74-3b97-49e2-8dc1-efbb0e26c793",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ea006745-fabe-4e2e-b403-6e7a3decad53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b6c9e6-2901-4561-ae5d-cb5389e10feb",
        "cursor": {
          "ref": "7de5832e-5f54-46a7-8ca8-89ec8f7c550a",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "35cd6747-0579-4586-92e2-44c86dc3ce2f"
        },
        "item": {
          "id": "02b6c9e6-2901-4561-ae5d-cb5389e10feb",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d00d6e76-32f4-45e9-8e0d-24dfe9dd35e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8332255f-773f-4f3d-ba98-36a5bde8bcda",
        "cursor": {
          "ref": "8879d8e5-c83f-408d-9ee9-a559688a58b4",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "985f4d59-23c3-4289-a23b-850a67320bd8"
        },
        "item": {
          "id": "8332255f-773f-4f3d-ba98-36a5bde8bcda",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5e221f6f-0a1e-4e47-812a-a6d9aa369a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ef38dd-e313-4c8b-9a63-68536be89778",
        "cursor": {
          "ref": "561a9885-068d-493d-9584-0e6d1b7c1b32",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6680e978-b8e0-4e2d-a256-b92f9962a940"
        },
        "item": {
          "id": "98ef38dd-e313-4c8b-9a63-68536be89778",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c6a6108c-c033-4b40-aa65-58f4b7748679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0eceab-814f-4b56-81e3-afb8f0d50a2c",
        "cursor": {
          "ref": "a85c407d-da83-4bb8-8306-ada6ec8763e3",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c31640ce-3632-44ed-ba3d-b943cd6f3e6e"
        },
        "item": {
          "id": "3f0eceab-814f-4b56-81e3-afb8f0d50a2c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6dd5c052-606c-4bb6-903e-5ef0fcc41d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b5abc6-e18b-4b73-a45b-5c59e1bfa5b3",
        "cursor": {
          "ref": "5c7dc6c1-e363-4bad-8d78-b7fc3234281b",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "78ecae17-e748-4637-9d23-b8d7cbbc7891"
        },
        "item": {
          "id": "c2b5abc6-e18b-4b73-a45b-5c59e1bfa5b3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e50e45cd-1b75-44e6-a345-8c5f34a16919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d078ba-2831-4920-9e43-4e0e03ff345b",
        "cursor": {
          "ref": "c2c5f94a-fcf2-4a3e-9052-382578030306",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ca3b6953-97aa-4567-a2b3-a75c86a2f9d6"
        },
        "item": {
          "id": "42d078ba-2831-4920-9e43-4e0e03ff345b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fc5639b0-7f0b-4f81-a242-eaf980155591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870dec91-7e60-45e4-a2b6-10f521b429b2",
        "cursor": {
          "ref": "b0830885-c4c2-4224-82e4-ae69df28e2fd",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "55b4a185-6419-43a1-98c1-52841c4130e6"
        },
        "item": {
          "id": "870dec91-7e60-45e4-a2b6-10f521b429b2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c8d3eebf-dee5-4889-be61-0517c10bcd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4414e23a-cc4c-4608-92f7-adcf412a0969",
        "cursor": {
          "ref": "e58b7cbb-33e4-4456-a044-c874199fc263",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c581f13d-f825-489f-93f4-648daa7c7c5c"
        },
        "item": {
          "id": "4414e23a-cc4c-4608-92f7-adcf412a0969",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4ece6d39-2d23-4913-8272-18f93b2cdbeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbac61b3-084d-4f96-ab6d-425e9b09a8be",
        "cursor": {
          "ref": "48a4fbf6-50a5-421c-b803-a57322b7344a",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0c51e5c2-d4eb-4be9-826b-8ff480d713a2"
        },
        "item": {
          "id": "dbac61b3-084d-4f96-ab6d-425e9b09a8be",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "883eded7-e8be-4902-86ec-9c60107967d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f10a1cd-e038-4e9d-befd-74fdcb1dce24",
        "cursor": {
          "ref": "f100f6a9-cc35-45e6-a8cd-d90eb80fe95d",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9f84c8af-28eb-49f3-95cb-309e3b159bbd"
        },
        "item": {
          "id": "2f10a1cd-e038-4e9d-befd-74fdcb1dce24",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "194f8548-d445-46ee-82a5-c6f00d51695d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c110270c-cadd-4958-b044-4c8ec366ec3c",
        "cursor": {
          "ref": "343d098c-cc10-4c8b-87be-0a80bf698794",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "78946cce-7a92-40f0-b0f3-e694a4787f5b"
        },
        "item": {
          "id": "c110270c-cadd-4958-b044-4c8ec366ec3c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e0743243-bec2-4c8b-9364-a97b2ba855ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d884d6c7-5ef1-4099-8ba3-8b7fc8906369",
        "cursor": {
          "ref": "296bd1ee-f2e4-4af2-b638-af603819eb4f",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6aebc968-473d-46fc-af98-4745751b3c14"
        },
        "item": {
          "id": "d884d6c7-5ef1-4099-8ba3-8b7fc8906369",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "931526a4-1861-400d-b41f-a7800de2b472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5522c6-3e28-4398-bf24-a36fbe8749df",
        "cursor": {
          "ref": "621ccdd9-a2ea-4ee6-beb9-a6b7171126d4",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "bf252020-937b-4450-a398-cdfec78de2cc"
        },
        "item": {
          "id": "ef5522c6-3e28-4398-bf24-a36fbe8749df",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5f28c48d-d335-4b62-a1f9-63a9707e1ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde0965c-89ad-4966-bc63-0d9c54cc320f",
        "cursor": {
          "ref": "7aced4fc-184f-475e-944e-5d8d53399db3",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "524d2baf-903b-4fce-b15d-07405f6ac793"
        },
        "item": {
          "id": "bde0965c-89ad-4966-bc63-0d9c54cc320f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "489a6b50-6651-4d47-94ea-8c9c5a3a4be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7493d462-726b-428d-8f16-29d935cb78b7",
        "cursor": {
          "ref": "6375ca58-2847-49c4-b06b-b0b4ba085c15",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "600c82ac-3846-40b1-a6c8-0d05267aee75"
        },
        "item": {
          "id": "7493d462-726b-428d-8f16-29d935cb78b7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9b681035-fe94-4290-936c-5b0bc619fb57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d79892a-75a4-4623-a1f4-4b22d6f12735",
        "cursor": {
          "ref": "c0cb37b5-760a-461b-8ac3-ab72277de769",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "90283437-4b3b-4b98-941a-3db3e0ff494c"
        },
        "item": {
          "id": "4d79892a-75a4-4623-a1f4-4b22d6f12735",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e94d4a9c-3293-42b9-8d74-84a70ebdb9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd58dd0-8123-4051-ad70-8a8cde29cbe0",
        "cursor": {
          "ref": "4f166d6b-ed44-4f30-a294-1a1c07df3b53",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ff05bba0-22d6-4895-b617-4779737eee85"
        },
        "item": {
          "id": "9fd58dd0-8123-4051-ad70-8a8cde29cbe0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b659d7a6-1c1d-4812-a0d5-227b1c6c2b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8711c68-7840-4f0f-928a-ea2c0eabe7dd",
        "cursor": {
          "ref": "81e4a0d4-4af5-467b-ad3f-4f54c40c8a66",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1852b7df-fc28-4490-950c-0c4f834029d6"
        },
        "item": {
          "id": "f8711c68-7840-4f0f-928a-ea2c0eabe7dd",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "01ff2de3-0e41-4d14-8f4b-cfeec418325d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b7b9f5-b941-40e0-a7c6-51abe90e6411",
        "cursor": {
          "ref": "fc24ef2d-481b-432a-b31f-89ce53097767",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "17e9c0f2-7868-4f6c-86d8-25e6f4600c9d"
        },
        "item": {
          "id": "b7b7b9f5-b941-40e0-a7c6-51abe90e6411",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2216d7ee-0536-4ff9-b7ab-00f3e6d5350f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f36ce3-ec12-4007-877c-d9f830b24871",
        "cursor": {
          "ref": "054b7664-2b41-4dc3-8f31-3dd0db875f39",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "332f1b1f-7f29-4036-b83b-09ce782bccd6"
        },
        "item": {
          "id": "c5f36ce3-ec12-4007-877c-d9f830b24871",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1d57bd20-6ed8-4748-bdaf-a7a5708e1e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd75d846-e8ed-4088-858b-7fd506e5465e",
        "cursor": {
          "ref": "27231740-a53b-4994-9ae7-dd84f624a62a",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e37e48cf-5fbe-401b-9dea-1444779cdfd0"
        },
        "item": {
          "id": "bd75d846-e8ed-4088-858b-7fd506e5465e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "daa640c1-ab30-4918-a2c3-4634c61f1699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edf893a-7f1e-4e23-9328-f150f11df9a3",
        "cursor": {
          "ref": "7858fb06-fa66-49bb-b76e-55a87e04bcf2",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "06036387-5203-4510-8fbc-c0baf0a01b0e"
        },
        "item": {
          "id": "4edf893a-7f1e-4e23-9328-f150f11df9a3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "45db2aec-598c-4988-bb68-5512d3ee8f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903f9905-fb33-4205-9579-a2427aed9617",
        "cursor": {
          "ref": "db350376-d303-475e-8a9f-98e967be26db",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "57090149-4e27-4abf-8cbf-acfafe2a83c1"
        },
        "item": {
          "id": "903f9905-fb33-4205-9579-a2427aed9617",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2c16fec8-9582-40f2-8d6c-3adcb72ac8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa0e27b-d502-4521-88bb-2a09dd60575f",
        "cursor": {
          "ref": "d86d07f8-1b02-44aa-94e5-7a0d39fc2f90",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0a906c6e-9f07-40dd-a21b-466f58aa0228"
        },
        "item": {
          "id": "0aa0e27b-d502-4521-88bb-2a09dd60575f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4a1a1c01-ab91-4cc5-a300-56299cb2b5fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f2af55-0b32-4c2d-a2dc-510c7ee2b574",
        "cursor": {
          "ref": "4ad63baa-7482-4456-87fa-e4d474c7b56f",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "25e0ac29-d5b2-4b8b-955f-60db98851cf0"
        },
        "item": {
          "id": "e3f2af55-0b32-4c2d-a2dc-510c7ee2b574",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b91c4059-2ddb-4b4c-a06a-0263dab32082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80891681-4985-4f39-9b26-e9d51bee7dfe",
        "cursor": {
          "ref": "f7a062fc-1aed-487a-b4e3-249298817cac",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e1ce625f-0b2c-4083-ae89-9a25ccdfb8f4"
        },
        "item": {
          "id": "80891681-4985-4f39-9b26-e9d51bee7dfe",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f3997f34-b62c-45bb-bff9-1ec7947f9faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc4922a-6118-4c6e-a01c-8a185c960ad4",
        "cursor": {
          "ref": "1c7468e3-b6e3-4474-8834-5016c871c1be",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "943e320a-9ad7-4769-8876-b87271de45d6"
        },
        "item": {
          "id": "8bc4922a-6118-4c6e-a01c-8a185c960ad4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a51e8855-dd62-4df7-8535-64bb74c0a29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8693d665-a7fb-476a-9668-879f7e2af12e",
        "cursor": {
          "ref": "4dc57a25-6af7-4a16-bff7-209612643686",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "dabe2a0e-8aff-45d8-9407-eef671a8322d"
        },
        "item": {
          "id": "8693d665-a7fb-476a-9668-879f7e2af12e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0c2a646c-76c1-4ada-af3f-127c0796cdb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8c0923-ac3c-435f-8d78-b3056fd1f801",
        "cursor": {
          "ref": "6e164e0e-97e1-4c26-9ce0-ec7aa88142ed",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4ddc9ebc-911c-4794-b7dc-38225ce02335"
        },
        "item": {
          "id": "5d8c0923-ac3c-435f-8d78-b3056fd1f801",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "81e86d5a-0629-4578-ad8b-78a181292c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b3ed44-b9f9-49ab-a57b-2293375874a1",
        "cursor": {
          "ref": "9da326c2-9087-4347-928b-bc91f6b09fd2",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "199cf9a7-e492-4be9-84d6-d0df085fe33e"
        },
        "item": {
          "id": "04b3ed44-b9f9-49ab-a57b-2293375874a1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "08fd5f54-5376-493c-b91a-5dd641ab8381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d70392-f35e-41f0-8d91-6e99eb3c1b50",
        "cursor": {
          "ref": "eab3584d-fbc3-4cca-b5a7-f34587f7be28",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3a56abff-8028-4b7e-ab5a-aa00186ea1f8"
        },
        "item": {
          "id": "97d70392-f35e-41f0-8d91-6e99eb3c1b50",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "22aaaa79-60db-4712-b9ad-ad82a9f6e8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1007e70e-9a33-42ad-b2d2-81f3f5eff291",
        "cursor": {
          "ref": "e85a3ed9-d8a2-42f1-b4e0-1b42348a2bde",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2e90cf54-3f6a-49da-b296-5807e5d514e5"
        },
        "item": {
          "id": "1007e70e-9a33-42ad-b2d2-81f3f5eff291",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "42685f0b-f57a-40a9-bc6e-3fb4101a0be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c0917c-dd10-493b-b927-354668110b68",
        "cursor": {
          "ref": "74076b47-d20e-4f09-904a-044a6399e503",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9c079cb7-5fb4-47d2-b153-76f493ba2af8"
        },
        "item": {
          "id": "22c0917c-dd10-493b-b927-354668110b68",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ce7ddec4-a14a-42a5-8bbc-2c1e4ace7b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b99624-2b64-4648-a7ac-89f3fdbff6e2",
        "cursor": {
          "ref": "0411a351-e2ea-46e2-b5c7-3790cea446fe",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1410e7e7-8149-46f3-a82a-387a814bb173"
        },
        "item": {
          "id": "e8b99624-2b64-4648-a7ac-89f3fdbff6e2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "dbcfc430-c71c-485e-8557-e94b53afee4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd8e74f-4555-4f2f-ad50-9d33a1f92808",
        "cursor": {
          "ref": "5fb390e0-7c51-4ccb-b5de-0d48f9d73df1",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0928b644-b50e-42e3-b94c-0881d87d65dc"
        },
        "item": {
          "id": "8bd8e74f-4555-4f2f-ad50-9d33a1f92808",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1a95714a-fcac-4bad-9fff-5cc60f7f79e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267e3d8b-ce65-448c-ae4e-0fb864115d12",
        "cursor": {
          "ref": "c7996df5-5cf6-43b7-b07f-c0851315a7f5",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "da8ddc87-2d4d-4373-a0d6-910ffc40e06b"
        },
        "item": {
          "id": "267e3d8b-ce65-448c-ae4e-0fb864115d12",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ad2e8884-edc1-46b7-abc2-6e214e5c3b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8562fa-2542-4a9f-9e57-ed4e8dec4918",
        "cursor": {
          "ref": "21f10cc7-a9bf-4b26-ad5b-807ecedcceda",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b6383aaa-4a7c-42c8-9326-aa6a784d4122"
        },
        "item": {
          "id": "6d8562fa-2542-4a9f-9e57-ed4e8dec4918",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b05fc7f0-a942-4b0c-966d-9d78c2f1bb3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8024b3-d0c7-4421-9800-f13db56b4f01",
        "cursor": {
          "ref": "e8e984d2-34f3-4f72-b293-80ac66671e3e",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a4d73a80-177c-457b-a77a-8c297d1e3de0"
        },
        "item": {
          "id": "cc8024b3-d0c7-4421-9800-f13db56b4f01",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "85a150a9-e6c5-474d-8a6b-81b9d21368a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9519f6aa-85f8-4bea-a040-629c82b88fb5",
        "cursor": {
          "ref": "5c1bb15c-c715-4134-ae50-30781c300d62",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4620e305-b3c5-4c1b-ad75-b72e35f85a15"
        },
        "item": {
          "id": "9519f6aa-85f8-4bea-a040-629c82b88fb5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "51f25a45-b364-4891-b008-b85d5f18f748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d38791-ed84-4376-a54c-8c22756fb429",
        "cursor": {
          "ref": "738424c9-b9e1-42ed-9d89-744bedc6f151",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f154bd64-cdff-4b7b-ad7a-e979459dfcf5"
        },
        "item": {
          "id": "46d38791-ed84-4376-a54c-8c22756fb429",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "92deed7f-8003-46db-9f2a-5577470e2594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb271dc-5d0a-46ed-99f8-6f8480971369",
        "cursor": {
          "ref": "f7a34c87-fa0d-4fdf-b122-1397e06cd776",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "03142a33-8b42-4067-9b40-76cd1f67f200"
        },
        "item": {
          "id": "1fb271dc-5d0a-46ed-99f8-6f8480971369",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8fba4c64-6203-4878-b6bb-72370ab19b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e77820-14be-49d2-9d92-b218a6d7fd19",
        "cursor": {
          "ref": "af3238e5-54f2-4ed3-b5fc-3cfbf326bbe1",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "70e1e4e5-f9a1-492a-a26c-54ebdb70cf32"
        },
        "item": {
          "id": "90e77820-14be-49d2-9d92-b218a6d7fd19",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f8a41f18-f84b-4a7f-bfe6-d248c02ef53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7145e2-899c-472f-a5e2-31a643dffd8e",
        "cursor": {
          "ref": "5b4e9a12-04a3-4dbe-9cc9-bd146e573133",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1f11d850-27b7-4338-8785-1d624c107870"
        },
        "item": {
          "id": "ef7145e2-899c-472f-a5e2-31a643dffd8e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2fcb95fc-f036-42f3-a05f-eadd0b40e4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142d85f2-2ac0-4671-b1e3-89e1a8ae7a14",
        "cursor": {
          "ref": "2cd4a4ee-6cf9-4cd5-896a-f45846da58d7",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4d775300-b496-4da3-9937-4173efb61484"
        },
        "item": {
          "id": "142d85f2-2ac0-4671-b1e3-89e1a8ae7a14",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b8f7459f-2afd-495a-9b4d-f6c313d02bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2593b8-4475-494e-9c66-2a730dfa56da",
        "cursor": {
          "ref": "329edbb2-d89d-4ab3-a3e0-bf05d9bc34be",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9c09aab1-eca0-46ba-a7d8-34fed99cb1fc"
        },
        "item": {
          "id": "bb2593b8-4475-494e-9c66-2a730dfa56da",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ab161187-9ffa-4b6d-86c0-97e04962f441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6abfc3-9f55-4970-b662-26f69ff5f6cd",
        "cursor": {
          "ref": "8918ee0e-aae9-4b7b-a9c8-635662b87df0",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "76ddf2a6-0c76-4c93-a28a-6cb715a9ae48"
        },
        "item": {
          "id": "fa6abfc3-9f55-4970-b662-26f69ff5f6cd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e14beaa0-0f15-4ac8-9a4b-cc5e9acb37d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae43be8-ac21-415e-903c-08864f611917",
        "cursor": {
          "ref": "62e8bc23-63d6-41dd-9a46-8f62ffd6f4f5",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e98647ca-e699-47d6-9ef3-ce39ac3a38e9"
        },
        "item": {
          "id": "fae43be8-ac21-415e-903c-08864f611917",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e829299c-2210-4f1b-b899-b0f4a32ed3d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924b13fd-ccbf-462f-a396-17ce686ca173",
        "cursor": {
          "ref": "9a012f4e-09b0-4faf-8941-d5ad9198aac9",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "16325505-f7c2-4ab7-af47-da438a4e0f0b"
        },
        "item": {
          "id": "924b13fd-ccbf-462f-a396-17ce686ca173",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bacc429b-e454-45e3-b530-646827d6ba84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adddd922-a8d9-4f49-86c2-4714db9915c6",
        "cursor": {
          "ref": "0e611f25-fd3c-4b63-9819-6dc6a7beb35c",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7e4e0ee1-a475-4504-b6ac-bc0c0024258f"
        },
        "item": {
          "id": "adddd922-a8d9-4f49-86c2-4714db9915c6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "848342fb-82cf-4b39-b695-4a2b5044a6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1b3c6d-8248-45e8-b8da-66b25aad6056",
        "cursor": {
          "ref": "c2680ba1-c3f3-4f94-a0c7-1dc1aaf7f749",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "09341f22-0ede-4cd4-b3ad-b10c53d326e1"
        },
        "item": {
          "id": "4e1b3c6d-8248-45e8-b8da-66b25aad6056",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "93480eb2-aba0-4460-bd9b-4e7ebd9cecb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b014860-6768-4913-8f37-f015ce983750",
        "cursor": {
          "ref": "6002edae-1102-4075-9158-e0ddfe5d00e4",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "58541585-fd53-4535-bb72-8b2885b93956"
        },
        "item": {
          "id": "8b014860-6768-4913-8f37-f015ce983750",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "31bc47ca-a83b-40f5-827c-e92703d399e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57411ae2-a32a-4bfe-bcea-98d2b8f5d1eb",
        "cursor": {
          "ref": "9426ff56-7877-4ef0-946a-90b5c75d9821",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d36aeac4-b924-4b88-ac13-2ea1460fc1ea"
        },
        "item": {
          "id": "57411ae2-a32a-4bfe-bcea-98d2b8f5d1eb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9927c7e7-296b-4d6b-8bb6-919d4b08624f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38627867-197e-4bc5-9820-b5c317449496",
        "cursor": {
          "ref": "e2735ad6-05f3-4823-a6f7-6baa13fd106b",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e7a8acbc-2582-4182-b8ff-08100c2a4e19"
        },
        "item": {
          "id": "38627867-197e-4bc5-9820-b5c317449496",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ec5e1a42-b349-4034-ab09-50d247646909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec48bfe1-3dbe-4765-bb09-9eb121c43901",
        "cursor": {
          "ref": "8ba76534-5568-4084-94de-e1d7b797ae71",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "00fc25c6-312b-4158-bafa-09322a778494"
        },
        "item": {
          "id": "ec48bfe1-3dbe-4765-bb09-9eb121c43901",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ebe5d60a-e62f-4464-b154-c448ac70e9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ac63fc-2665-4da7-aafa-6dd48d8582bf",
        "cursor": {
          "ref": "b8023be3-a660-40d5-803f-469e94454dbe",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f8af23bd-8ed8-4dc9-bdd6-fa581de8b2d9"
        },
        "item": {
          "id": "d2ac63fc-2665-4da7-aafa-6dd48d8582bf",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "098c3b58-0e99-4413-b01a-f124d15650e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72252d2b-2318-43cb-bf61-0930364fd8e6",
        "cursor": {
          "ref": "f436af9f-2edc-45cf-89d6-d6e7a4576ada",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b2428f38-6e13-4407-b393-5a82e54adc54"
        },
        "item": {
          "id": "72252d2b-2318-43cb-bf61-0930364fd8e6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "24757cb4-179c-4f74-842f-9bd470244421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa4287a-db02-4433-8719-3c8f6bdc58c7",
        "cursor": {
          "ref": "ff6d1540-d82b-41d1-b066-f9ed1e5fc8e2",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "8782a063-4497-403b-ac23-d1f47317e77f"
        },
        "item": {
          "id": "8aa4287a-db02-4433-8719-3c8f6bdc58c7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1651fdb0-079a-47cc-a2f8-61be97eecdfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd28119-77f9-48af-b1ac-210d4b503aff",
        "cursor": {
          "ref": "5a87bf31-3d71-4fc2-a021-b363ff5628f1",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "54a4fddb-4367-4a95-a8a3-6dccda0f3b7a"
        },
        "item": {
          "id": "2cd28119-77f9-48af-b1ac-210d4b503aff",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "687073a6-914c-4278-82d3-70f31a63d47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96a4cc7-057f-4d20-a32a-d47b8121c007",
        "cursor": {
          "ref": "e527b9eb-614a-4d94-8b34-d34c91e8ebdc",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "5bb46e04-199f-4885-911b-4406d0a2cd05"
        },
        "item": {
          "id": "e96a4cc7-057f-4d20-a32a-d47b8121c007",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c5fdea9b-b211-4491-8531-a71de5df6452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3a838b-4d21-4176-83d8-180b93b7f266",
        "cursor": {
          "ref": "ff75f9a5-4cdc-4227-abf4-85f9729e4372",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7acf268c-d705-426b-8591-d1466e171f03"
        },
        "item": {
          "id": "4f3a838b-4d21-4176-83d8-180b93b7f266",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e36361a7-0f41-4327-ba29-8f2ad2ce574f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501f4d65-db02-4904-9182-a19e2bc68930",
        "cursor": {
          "ref": "92f02c4d-fab3-496d-873e-e36f47837b8c",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8ef4f497-eb44-47db-bd87-2c2eaada82eb"
        },
        "item": {
          "id": "501f4d65-db02-4904-9182-a19e2bc68930",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4f60bfee-a059-40f9-886f-3c1bb0e8a3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f7c85a-466e-4cd0-92a5-8c8f0fd4beb4",
        "cursor": {
          "ref": "1441d9f0-becb-4f90-9c9b-569dd156cff3",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d9505219-d468-4f11-a772-8a726a024c2e"
        },
        "item": {
          "id": "62f7c85a-466e-4cd0-92a5-8c8f0fd4beb4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6abdfb09-77ab-43c9-b50e-8e73c4cae2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476f847a-b99e-4201-914b-8dad419820bc",
        "cursor": {
          "ref": "010511df-188b-453f-a7be-de6204f9f1f5",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "16b32c55-86bd-43e8-ad8d-e19fa7c2da41"
        },
        "item": {
          "id": "476f847a-b99e-4201-914b-8dad419820bc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0ca59ece-4c1c-44e4-bc29-8440ebf0f9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37fd1d5-9a23-4dc0-a1ef-08c7930f3277",
        "cursor": {
          "ref": "cd30f406-d7ce-4df5-9d64-01d0ec4ac631",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "37d7608c-bba1-436a-b3dd-9e04c95f4dcc"
        },
        "item": {
          "id": "d37fd1d5-9a23-4dc0-a1ef-08c7930f3277",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "87222f0d-0da7-483a-ba97-d0828896aeab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44dbb2c2-927f-40f3-9be3-140d435ce33f",
        "cursor": {
          "ref": "65d3c8d6-d1b5-4ed7-a5f1-6a8b2c90caf4",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "29770c3a-fca6-41c9-b01f-bb309f37a3b2"
        },
        "item": {
          "id": "44dbb2c2-927f-40f3-9be3-140d435ce33f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "cce17c31-aa0f-4231-9266-554dab562333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90807db-8daa-4f60-a229-be735bc1eb7a",
        "cursor": {
          "ref": "bc2f4387-65e1-487a-ac09-ac00c0fbdcb5",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "83c618ba-0973-4ee8-884e-d1d72bac9537"
        },
        "item": {
          "id": "f90807db-8daa-4f60-a229-be735bc1eb7a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "bd4d3f3b-63d5-4dd4-84df-aaebef1e0cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2dfa1c-86af-4477-8e42-36581f7a160e",
        "cursor": {
          "ref": "9c239944-000a-408a-820a-c13c2efa8ef3",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c3ee3e2c-dc17-4c5f-8c6f-f8aabe66df3d"
        },
        "item": {
          "id": "ed2dfa1c-86af-4477-8e42-36581f7a160e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c06c4388-5cb9-4736-817f-0fe983c333c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23140fb5-af2b-48aa-97c1-216230538980",
        "cursor": {
          "ref": "51f3cac1-b877-4a15-aff0-fe987e904a77",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "3749e474-aeca-40d4-86c4-fbbc10284e68"
        },
        "item": {
          "id": "23140fb5-af2b-48aa-97c1-216230538980",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1f28ff10-d230-4630-9fcf-eac0833bb4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0e312f-88a9-48fd-90fe-b8cfce0c058e",
        "cursor": {
          "ref": "33d8ef6c-a5a0-4de5-b908-997991a4442c",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "07268e1f-c3c1-45a8-93bf-001d830108ea"
        },
        "item": {
          "id": "dc0e312f-88a9-48fd-90fe-b8cfce0c058e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9fde7b74-06f5-4be5-841a-6044269fcdbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bac9d0-8a35-4995-8afe-d2496e3cac73",
        "cursor": {
          "ref": "f954bc50-7aee-457b-bc0c-a62a3ac5c43a",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e1defb1b-936f-4144-8169-a50f1db0029d"
        },
        "item": {
          "id": "78bac9d0-8a35-4995-8afe-d2496e3cac73",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "60689d5a-278f-4f3a-89ab-e6ac0451554d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe44a8d-6bd5-4dac-9d15-a08edd205bd2",
        "cursor": {
          "ref": "b2dd4e10-2185-4a30-aeee-54a11a88edd3",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "3683e151-5a26-4802-b145-75af4e933807"
        },
        "item": {
          "id": "7fe44a8d-6bd5-4dac-9d15-a08edd205bd2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5b44e2d0-9c6c-4b32-810d-3d104575fcdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76921fc3-0049-4c23-a9b8-c5ebc9a08e57",
        "cursor": {
          "ref": "ae4d7157-6376-4e89-bf05-a8475f5f6417",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "30a2c1c6-992c-44c9-9caf-d2f0e10076dc"
        },
        "item": {
          "id": "76921fc3-0049-4c23-a9b8-c5ebc9a08e57",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ffc7b4d6-c8d8-458b-807a-8118eda3f12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705813dc-2f74-440d-9d59-25bbd9a640b1",
        "cursor": {
          "ref": "4d510a40-7a1b-4bb0-a083-da5d5f5c88d7",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "f29f91d0-fecc-495c-93b3-707b5c7f853e"
        },
        "item": {
          "id": "705813dc-2f74-440d-9d59-25bbd9a640b1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5804c6d9-dd24-4b67-8161-74cdbed472c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30181e1e-d55d-47b9-9e06-996730982859",
        "cursor": {
          "ref": "cf3d4c7f-19a3-4317-a059-114ed88f78fd",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "6700b2c7-4e88-4f2b-a0f6-6ab33f8c1b4e"
        },
        "item": {
          "id": "30181e1e-d55d-47b9-9e06-996730982859",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "dc2f032a-d972-4d09-b050-c432d2df1c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5497b6-aca6-40d3-8473-30dedb561c10",
        "cursor": {
          "ref": "84cafa4b-ed89-4de0-add4-80a87be7b9c2",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "223f79b8-af34-4661-b5f5-c588cec9dd0f"
        },
        "item": {
          "id": "0d5497b6-aca6-40d3-8473-30dedb561c10",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "beb7356d-813e-4232-9f69-56dbf2d66784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ac223e-bc3f-4287-bd73-d192ecec897c",
        "cursor": {
          "ref": "025cfbc0-b727-4fec-8683-a23354e3607c",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c9b8c1cb-0f51-4ba3-8c42-40c03c293056"
        },
        "item": {
          "id": "45ac223e-bc3f-4287-bd73-d192ecec897c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2b4cb878-8f82-4832-914a-0f9a4ab62ca8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb8ec5b-0a47-46a9-9479-3a771587f0b6",
        "cursor": {
          "ref": "5aa039ef-41a9-4ec8-984f-3c797aa451e8",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d29f210e-476f-4a39-8477-cbfad02fce6c"
        },
        "item": {
          "id": "6bb8ec5b-0a47-46a9-9479-3a771587f0b6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "97265809-ca16-45dc-bb5c-0a7055019d1a",
          "status": "OK",
          "code": 200,
          "responseTime": 115,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fee2278-e7a9-48b1-b7ee-7504da6d770e",
        "cursor": {
          "ref": "4ab8c491-e26a-4ee2-9059-33b65fbe1b16",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ddfd29ab-06d6-41fd-8ed3-b2a9e9c8c4f9"
        },
        "item": {
          "id": "9fee2278-e7a9-48b1-b7ee-7504da6d770e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0b9b05dc-1dbc-4109-942d-b1fd2ad494f8",
          "status": "OK",
          "code": 200,
          "responseTime": 1690,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "411caa91-5dac-43f1-901e-5aaa0b7f526d",
        "cursor": {
          "ref": "d9167934-1ca1-4bac-b15e-a748e36ed1e6",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d9e33bf2-10b2-44d7-817e-3f1ea5b6493f"
        },
        "item": {
          "id": "411caa91-5dac-43f1-901e-5aaa0b7f526d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "29d5d931-da1f-4c24-a294-0b5cd2c7877d",
          "status": "OK",
          "code": 200,
          "responseTime": 1489,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "035af4a8-5f5e-49de-a2d2-71746bc105ce",
        "cursor": {
          "ref": "6f9527f4-5f62-43b1-bcda-16d5f9a327f7",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "253e2cbe-fd66-4694-90e5-0bc911259e9b"
        },
        "item": {
          "id": "035af4a8-5f5e-49de-a2d2-71746bc105ce",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e5008613-b856-46b9-89ab-46b176041bfc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035af4a8-5f5e-49de-a2d2-71746bc105ce",
        "cursor": {
          "ref": "6f9527f4-5f62-43b1-bcda-16d5f9a327f7",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "253e2cbe-fd66-4694-90e5-0bc911259e9b"
        },
        "item": {
          "id": "035af4a8-5f5e-49de-a2d2-71746bc105ce",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e5008613-b856-46b9-89ab-46b176041bfc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463da169-665d-4387-84ce-1aa4b1075f60",
        "cursor": {
          "ref": "944a1cd7-f54d-4b5b-a9a0-7f63d3dee0c2",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c630f476-1d38-4778-8731-97e6c9aba65a"
        },
        "item": {
          "id": "463da169-665d-4387-84ce-1aa4b1075f60",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "cd1be636-1dda-4f88-be14-d0d6d722a249",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c89f07-ee2d-4f68-9312-8c190945f696",
        "cursor": {
          "ref": "5fa3e087-4d93-40d4-9873-9bb2f0a330a4",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "da3a279e-38f9-4236-8550-c46291d11b52"
        },
        "item": {
          "id": "71c89f07-ee2d-4f68-9312-8c190945f696",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3b256658-f300-4ef2-b89e-b9b31522690e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}